<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170727 16:35:35.578" generator="Robot 3.0.2 (Python 2.7.8 on win32)">
<suite source="F:\logs and reports\账户中心" id="s1" name="账户中心">
<suite source="F:\logs and reports\账户中心\艾佳币" id="s1-s1" name="艾佳币">
<suite source="F:\logs and reports\账户中心\艾佳币\艾佳币充值.txt" id="s1-s1-s1" name="艾佳币充值">
<test id="s1-s1-s1-t1" name="输入未有的user_id和正确的amount参数">
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>123456785</arg>
<arg>1</arg>
<arg>2</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170727 16:35:36.183" level="INFO">${args11} = 123456785</msg>
<status status="PASS" endtime="20170727 16:35:36.184" starttime="20170727 16:35:36.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170727 16:35:36.187" level="INFO">${args22} = 1</msg>
<status status="PASS" endtime="20170727 16:35:36.188" starttime="20170727 16:35:36.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170727 16:35:36.190" level="INFO">${args33} = 2</msg>
<status status="PASS" endtime="20170727 16:35:36.191" starttime="20170727 16:35:36.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170727 16:35:36.195" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170727 16:35:36.196" starttime="20170727 16:35:36.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170727 16:35:36.200" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</msg>
<status status="PASS" endtime="20170727 16:35:36.201" starttime="20170727 16:35:36.198"></status>
</kw>
<status status="PASS" endtime="20170727 16:35:36.202" starttime="20170727 16:35:36.177"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170727 16:35:36.230" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170727 16:35:36.245" starttime="20170727 16:35:36.206"></status>
</kw>
<status status="PASS" endtime="20170727 16:35:36.246" starttime="20170727 16:35:36.205"></status>
</kw>
<status status="PASS" endtime="20170727 16:35:36.248" starttime="20170727 16:35:36.204"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id ='${args11}'</arg>
</arguments>
<assign>
<var>${no_user_id}</var>
</assign>
<msg timestamp="20170727 16:35:36.250" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id ='123456785' </msg>
<msg timestamp="20170727 16:35:36.259" level="INFO">${no_user_id} = ()</msg>
<status status="PASS" endtime="20170727 16:35:36.260" starttime="20170727 16:35:36.249"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${no_user_id}</arg>
</arguments>
<msg timestamp="20170727 16:35:36.263" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170727 16:35:36.264" starttime="20170727 16:35:36.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>此user_id不存在</arg>
</arguments>
<msg timestamp="20170727 16:35:36.267" level="INFO">此user_id不存在</msg>
<status status="PASS" endtime="20170727 16:35:36.267" starttime="20170727 16:35:36.265"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170727 16:35:36.270" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</msg>
<status status="PASS" endtime="20170727 16:35:36.271" starttime="20170727 16:35:36.269"></status>
</kw>
<kw name="Data" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data_no_user_id}</var>
</assign>
<msg timestamp="20170727 16:35:36.405" level="INFO">${data_no_user_id} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170727 16:35:36.407" starttime="20170727 16:35:36.272"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data_no_user_id.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170727 16:35:36.418" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 16:35:36.420" starttime="20170727 16:35:36.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170727 16:35:36.424" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170727 16:35:36.426" starttime="20170727 16:35:36.422"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data_no_user_id.text}</arg>
</arguments>
<assign>
<var>${toJson1}</var>
</assign>
<msg timestamp="20170727 16:35:36.432" level="INFO">To JSON using : content={"data":{"orderNum":"32102151361501143502"},"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170727 16:35:36.434" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170727 16:35:36.436" level="INFO">${toJson1} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': {u'orderNum': u'32102151361501143502'}, u'success': True}</msg>
<status status="PASS" endtime="20170727 16:35:36.437" starttime="20170727 16:35:36.429"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson1['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170727 16:35:36.441" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 16:35:36.443" starttime="20170727 16:35:36.439"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson1['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170727 16:35:36.449" starttime="20170727 16:35:36.446"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${toJson1['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${no_user_id_orderNum}</var>
</assign>
<msg timestamp="20170727 16:35:36.453" level="INFO">${no_user_id_orderNum} = 32102151361501143502</msg>
<status status="PASS" endtime="20170727 16:35:36.454" starttime="20170727 16:35:36.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170727 16:35:36.456" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170727 16:35:36.457" starttime="20170727 16:35:36.456"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id ='${args11}'</arg>
</arguments>
<assign>
<var>${no_user_id_after}</var>
</assign>
<msg timestamp="20170727 16:35:36.461" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id ='123456785' </msg>
<msg timestamp="20170727 16:35:36.525" level="INFO">${no_user_id_after} = ((10287, '32102151361501143501', 123456785, 6245, 1, 2, 0, datetime.datetime(2017, 7, 27, 16, 36, 40), datetime.datetime(2017, 7, 27, 16, 36, 40)),)</msg>
<status status="PASS" endtime="20170727 16:35:36.526" starttime="20170727 16:35:36.458"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${no_user_id_after}</arg>
</arguments>
<msg timestamp="20170727 16:35:36.529" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170727 16:35:36.530" starttime="20170727 16:35:36.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>调用艾佳币充值接口自动生成boss的账号</arg>
</arguments>
<msg timestamp="20170727 16:35:36.533" level="INFO">调用艾佳币充值接口自动生成boss的账号</msg>
<status status="PASS" endtime="20170727 16:35:36.534" starttime="20170727 16:35:36.532"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${no_user_id_after[0][3]}</arg>
</arguments>
<assign>
<var>${no_user_id_account_id}</var>
</assign>
<msg timestamp="20170727 16:35:36.536" level="INFO">${no_user_id_account_id} = 6245</msg>
<status status="PASS" endtime="20170727 16:35:36.538" starttime="20170727 16:35:36.535"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_open_record where user_id ='${args11}'</arg>
</arguments>
<msg timestamp="20170727 16:35:36.541" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_open_record where user_id ='123456785' </msg>
<status status="PASS" endtime="20170727 16:35:36.623" starttime="20170727 16:35:36.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>已删除该账号！</arg>
</arguments>
<msg timestamp="20170727 16:35:36.626" level="INFO">已删除该账号！</msg>
<status status="PASS" endtime="20170727 16:35:36.627" starttime="20170727 16:35:36.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_unilateral_bill</arg>
</arguments>
<msg timestamp="20170727 16:35:36.629" level="INFO">现在开始校验表account_unilateral_bill</msg>
<status status="PASS" endtime="20170727 16:35:36.630" starttime="20170727 16:35:36.628"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time_no}</var>
</assign>
<msg timestamp="20170727 16:35:36.634" level="INFO">${current_time_no} = 2017-07-27 16:35:36.634</msg>
<status status="PASS" endtime="20170727 16:35:36.635" starttime="20170727 16:35:36.632"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_no}</arg>
<arg>15 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_301}</var>
</assign>
<msg timestamp="20170727 16:35:36.643" level="INFO">${current_time_before_301} = 2017-07-27 16:35:21.634</msg>
<status status="PASS" endtime="20170727 16:35:36.644" starttime="20170727 16:35:36.637"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_no}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_302}</var>
</assign>
<msg timestamp="20170727 16:35:36.646" level="INFO">${current_time_after_302} = 2017-07-27 16:36:41.634</msg>
<status status="PASS" endtime="20170727 16:35:36.648" starttime="20170727 16:35:36.645"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${no_user_id_account_id}'and update_time between' ${current_time_before_301}' and '${current_time_after_302}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170727 16:35:36.651" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6245'and update_time between' 2017-07-27 16:35:21.634' and '2017-07-27 16:36:41.634' </msg>
<msg timestamp="20170727 16:35:36.659" level="INFO">${user_id} = ((5858, '32102151361501143506', 123456785, 6245, '32102151361501143503', 1, 7, 3, Decimal('1.00'), None, datetime.datetime(2017, 7, 27, 16, 36, 40), datetime.datetime(2017, 7, 27, 16, 36, 40), 0),)</msg>
<status status="PASS" endtime="20170727 16:35:36.660" starttime="20170727 16:35:36.650"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170727 16:35:36.662" level="INFO">Length is 20</msg>
<msg timestamp="20170727 16:35:36.664" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170727 16:35:36.665" starttime="20170727 16:35:36.661"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170727 16:35:36.668" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 16:35:36.668" starttime="20170727 16:35:36.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170727 16:35:36.671" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170727 16:35:36.672" starttime="20170727 16:35:36.670"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170727 16:35:36.674" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 16:35:36.675" starttime="20170727 16:35:36.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170727 16:35:36.679" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170727 16:35:36.680" starttime="20170727 16:35:36.676"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170727 16:35:36.684" level="INFO">Length is 20</msg>
<msg timestamp="20170727 16:35:36.685" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170727 16:35:36.686" starttime="20170727 16:35:36.683"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170727 16:35:36.688" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 16:35:36.688" starttime="20170727 16:35:36.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170727 16:35:36.690" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170727 16:35:36.691" starttime="20170727 16:35:36.690"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170727 16:35:36.694" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 16:35:36.696" starttime="20170727 16:35:36.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170727 16:35:36.700" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170727 16:35:36.702" starttime="20170727 16:35:36.698"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>7</arg>
</arguments>
<msg timestamp="20170727 16:35:36.707" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 16:35:36.708" starttime="20170727 16:35:36.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170727 16:35:36.710" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170727 16:35:36.711" starttime="20170727 16:35:36.709"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20170727 16:35:36.714" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 16:35:36.716" starttime="20170727 16:35:36.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170727 16:35:36.718" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170727 16:35:36.718" starttime="20170727 16:35:36.717"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170727 16:35:36.721" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 16:35:36.722" starttime="20170727 16:35:36.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170727 16:35:36.724" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170727 16:35:36.725" starttime="20170727 16:35:36.723"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${user_id[0][10]}</arg>
<arg>${user_id[0][11]}</arg>
</arguments>
<status status="PASS" endtime="20170727 16:35:36.729" starttime="20170727 16:35:36.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170727 16:35:36.733" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170727 16:35:36.733" starttime="20170727 16:35:36.731"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170727 16:35:36.736" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 16:35:36.737" starttime="20170727 16:35:36.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170727 16:35:36.741" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170727 16:35:36.742" starttime="20170727 16:35:36.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170727 16:35:36.744" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170727 16:35:36.745" starttime="20170727 16:35:36.743"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_unilateral}</var>
</assign>
<msg timestamp="20170727 16:35:36.748" level="INFO">${user_id[0][0]_unilateral} = 5858</msg>
<status status="PASS" endtime="20170727 16:35:36.749" starttime="20170727 16:35:36.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_unilateral}</arg>
</arguments>
<msg timestamp="20170727 16:35:36.751" level="INFO">${user_id[0][0]_unilateral} = 5858</msg>
<status status="PASS" endtime="20170727 16:35:36.752" starttime="20170727 16:35:36.750"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]_unilateral}'</arg>
</arguments>
<msg timestamp="20170727 16:35:36.754" level="INFO">Executing : Execute SQL String  |  delete from account_unilateral_bill where id ='5858' </msg>
<status status="PASS" endtime="20170727 16:35:36.797" starttime="20170727 16:35:36.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170727 16:35:36.800" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170727 16:35:36.801" starttime="20170727 16:35:36.799"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time_nouser}</var>
</assign>
<msg timestamp="20170727 16:35:36.803" level="INFO">${current_time_nouser} = 2017-07-27 16:35:36.803</msg>
<status status="PASS" endtime="20170727 16:35:36.804" starttime="20170727 16:35:36.802"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_nouser}</arg>
<arg>15 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_3011}</var>
</assign>
<msg timestamp="20170727 16:35:36.806" level="INFO">${current_time_before_3011} = 2017-07-27 16:35:21.803</msg>
<status status="PASS" endtime="20170727 16:35:36.807" starttime="20170727 16:35:36.805"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_nouser}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_3022}</var>
</assign>
<msg timestamp="20170727 16:35:36.810" level="INFO">${current_time_after_3022} = 2017-07-27 16:36:41.803</msg>
<status status="PASS" endtime="20170727 16:35:36.811" starttime="20170727 16:35:36.808"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where account_id ='${no_user_id_account_id}' and update_time between' ${current_time_before_3011}' and '${current_time_after_3022}'</arg>
</arguments>
<assign>
<var>${user_id_no}</var>
</assign>
<msg timestamp="20170727 16:35:36.814" level="INFO">Executing : Query  |  select * from ajb_account_transaction where account_id ='6245' and update_time between' 2017-07-27 16:35:21.803' and '2017-07-27 16:36:41.803' </msg>
<msg timestamp="20170727 16:35:36.825" level="INFO">${user_id_no} = ((88889086, '32102151361501143502', 123456785, 6245, 1, '32102151361501143502', '20170727163637ZFK050919', Decimal('1.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 27, 16, 36, 40), datetime.datetime(20...</msg>
<status status="PASS" endtime="20170727 16:35:36.826" starttime="20170727 16:35:36.813"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id_no[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170727 16:35:36.829" level="INFO">Length is 20</msg>
<msg timestamp="20170727 16:35:36.831" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170727 16:35:36.832" starttime="20170727 16:35:36.828"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170727 16:35:36.834" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 16:35:36.835" starttime="20170727 16:35:36.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170727 16:35:36.838" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170727 16:35:36.839" starttime="20170727 16:35:36.837"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][2]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170727 16:35:36.842" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 16:35:36.843" starttime="20170727 16:35:36.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170727 16:35:36.845" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170727 16:35:36.845" starttime="20170727 16:35:36.844"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][4]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170727 16:35:36.849" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 16:35:36.850" starttime="20170727 16:35:36.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no的值正确</arg>
</arguments>
<msg timestamp="20170727 16:35:36.853" level="INFO">channel_no的值正确</msg>
<status status="PASS" endtime="20170727 16:35:36.854" starttime="20170727 16:35:36.852"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][5]}</arg>
<arg>${no_user_id_orderNum}</arg>
</arguments>
<msg timestamp="20170727 16:35:36.856" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 16:35:36.857" starttime="20170727 16:35:36.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170727 16:35:36.859" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170727 16:35:36.859" starttime="20170727 16:35:36.858"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id_no[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170727 16:35:36.862" level="INFO">${pay_no_after} = 20170727163637ZFK050919</msg>
<status status="PASS" endtime="20170727 16:35:36.863" starttime="20170727 16:35:36.860"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170727 16:35:36.865" level="INFO">Length is 23</msg>
<msg timestamp="20170727 16:35:36.865" level="INFO">${pay_no_after_length} = 23</msg>
<status status="PASS" endtime="20170727 16:35:36.866" starttime="20170727 16:35:36.864"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>23</arg>
</arguments>
<msg timestamp="20170727 16:35:36.868" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 16:35:36.870" starttime="20170727 16:35:36.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170727 16:35:36.873" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170727 16:35:36.874" starttime="20170727 16:35:36.871"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][7]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170727 16:35:36.876" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 16:35:36.877" starttime="20170727 16:35:36.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170727 16:35:36.879" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170727 16:35:36.880" starttime="20170727 16:35:36.878"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170727 16:35:36.884" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 16:35:36.885" starttime="20170727 16:35:36.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170727 16:35:36.888" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170727 16:35:36.888" starttime="20170727 16:35:36.887"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][9]}</arg>
<arg>7</arg>
</arguments>
<msg timestamp="20170727 16:35:36.891" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 16:35:36.891" starttime="20170727 16:35:36.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170727 16:35:36.893" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170727 16:35:36.894" starttime="20170727 16:35:36.892"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170727 16:35:36.896" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 16:35:36.898" starttime="20170727 16:35:36.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170727 16:35:36.902" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170727 16:35:36.902" starttime="20170727 16:35:36.900"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170727 16:35:36.905" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 16:35:36.906" starttime="20170727 16:35:36.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170727 16:35:36.908" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170727 16:35:36.908" starttime="20170727 16:35:36.907"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${user_id_no[0][12]}</arg>
<arg>${user_id_no[0][13]}</arg>
</arguments>
<status status="PASS" endtime="20170727 16:35:36.912" starttime="20170727 16:35:36.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170727 16:35:36.916" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170727 16:35:36.917" starttime="20170727 16:35:36.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170727 16:35:36.919" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170727 16:35:36.920" starttime="20170727 16:35:36.918"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id_no[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170727 16:35:36.922" level="INFO">${user_id[0][0]_transaction} = 88889086</msg>
<status status="PASS" endtime="20170727 16:35:36.923" starttime="20170727 16:35:36.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170727 16:35:36.925" level="INFO">${user_id[0][0]_transaction} = 88889086</msg>
<status status="PASS" endtime="20170727 16:35:36.925" starttime="20170727 16:35:36.924"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id_no[0][0]}'</arg>
</arguments>
<msg timestamp="20170727 16:35:36.929" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88889086' </msg>
<status status="PASS" endtime="20170727 16:35:37.004" starttime="20170727 16:35:36.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_amount</arg>
</arguments>
<msg timestamp="20170727 16:35:37.010" level="INFO">现在开始校验表account_amount</msg>
<status status="PASS" endtime="20170727 16:35:37.012" starttime="20170727 16:35:37.007"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${no_user_id_account_id}'</arg>
</arguments>
<assign>
<var>${user_id_t}</var>
</assign>
<msg timestamp="20170727 16:35:37.017" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6245' </msg>
<msg timestamp="20170727 16:35:37.028" level="INFO">${user_id_t} = ((12559, 6245, Decimal('1.00'), Decimal('1.00'), Decimal('0.00'), datetime.datetime(2017, 7, 27, 16, 36, 40), datetime.datetime(2017, 7, 27, 16, 36, 40), 0),)</msg>
<status status="PASS" endtime="20170727 16:35:37.030" starttime="20170727 16:35:37.014"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][2]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170727 16:35:37.035" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 16:35:37.037" starttime="20170727 16:35:37.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170727 16:35:37.042" level="INFO">total_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170727 16:35:37.043" starttime="20170727 16:35:37.039"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][3]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170727 16:35:37.048" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 16:35:37.050" starttime="20170727 16:35:37.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170727 16:35:37.055" level="INFO">balance_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170727 16:35:37.057" starttime="20170727 16:35:37.053"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][4]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170727 16:35:37.062" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 16:35:37.064" starttime="20170727 16:35:37.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170727 16:35:37.068" level="INFO">frozen_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170727 16:35:37.070" starttime="20170727 16:35:37.066"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170727 16:35:37.075" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 16:35:37.077" starttime="20170727 16:35:37.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170727 16:35:37.082" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170727 16:35:37.083" starttime="20170727 16:35:37.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount校验成功！</arg>
</arguments>
<msg timestamp="20170727 16:35:37.089" level="INFO">表account_amount校验成功！</msg>
<status status="PASS" endtime="20170727 16:35:37.090" starttime="20170727 16:35:37.086"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_amount where account_id ='${no_user_id_account_id}'</arg>
</arguments>
<msg timestamp="20170727 16:35:37.095" level="INFO">Executing : Execute SQL String  |  delete from account_amount where account_id ='6245' </msg>
<status status="PASS" endtime="20170727 16:35:37.146" starttime="20170727 16:35:37.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>输入未有的user_id和正确的amount参数，会直接生成boss账户，然后表里的数据都入库成功！</arg>
</arguments>
<msg timestamp="20170727 16:35:37.150" level="INFO">输入未有的user_id和正确的amount参数，会直接生成boss账户，然后表里的数据都入库成功！</msg>
<status status="PASS" endtime="20170727 16:35:37.152" starttime="20170727 16:35:37.148"></status>
</kw>
<status status="PASS" endtime="20170727 16:35:37.153" critical="yes" starttime="20170727 16:35:36.174"></status>
</test>
<status status="PASS" endtime="20170727 16:35:37.157" starttime="20170727 16:35:35.878"></status>
</suite>
<status status="PASS" endtime="20170727 16:35:37.167" starttime="20170727 16:35:35.871"></status>
</suite>
<status status="PASS" endtime="20170727 16:35:37.174" starttime="20170727 16:35:35.630"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="账户中心" pass="1">账户中心</stat>
<stat fail="0" id="s1-s1" name="艾佳币" pass="1">账户中心.艾佳币</stat>
<stat fail="0" id="s1-s1-s1" name="艾佳币充值" pass="1">账户中心.艾佳币.艾佳币充值</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
