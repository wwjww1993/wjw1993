<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170803 17:08:04.295" generator="Robot 3.0.2 (Python 2.7.8 on win32)">
<suite source="F:\logs and reports\账户中心" id="s1" name="账户中心">
<suite source="F:\logs and reports\账户中心\艾佳币" id="s1-s1" name="艾佳币">
<suite source="F:\logs and reports\账户中心\艾佳币\艾佳币充值.txt" id="s1-s1-s1" name="艾佳币充值">
<test id="s1-s1-s1-t1" name="艾佳币账户未过期，全品家订单交款赠送艾佳币，延长三个月">
<kw name="参数配置" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170803 17:08:04.901" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170803 17:08:04.989" starttime="20170803 17:08:04.878"></status>
</kw>
<status status="PASS" endtime="20170803 17:08:04.992" starttime="20170803 17:08:04.876"></status>
</kw>
<kw name="输入拥有不同类型账户的用户user_id" library="myResource">
<arguments>
<arg>10000</arg>
<arg>10000</arg>
<arg>123456781</arg>
<arg>http://192.168.1.31:10003</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_user_account_id}</arg>
</arguments>
<msg timestamp="20170803 17:08:05.000" level="INFO">${boss_user_account_id} = 10000</msg>
<status status="PASS" endtime="20170803 17:08:05.002" starttime="20170803 17:08:04.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_user_account_id}</arg>
</arguments>
<msg timestamp="20170803 17:08:05.006" level="INFO">${app_user_account_id} = 10000</msg>
<status status="PASS" endtime="20170803 17:08:05.008" starttime="20170803 17:08:05.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${no_user_account_id}</arg>
</arguments>
<msg timestamp="20170803 17:08:05.013" level="INFO">${no_user_account_id} = 123456781</msg>
<status status="PASS" endtime="20170803 17:08:05.013" starttime="20170803 17:08:05.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${environment}</arg>
</arguments>
<msg timestamp="20170803 17:08:05.015" level="INFO">${environment} = http://192.168.1.31:10003</msg>
<status status="PASS" endtime="20170803 17:08:05.016" starttime="20170803 17:08:05.014"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${boss_user_account_id}' and channel_no=1</arg>
</arguments>
<assign>
<var>${boss_channel_no1}</var>
</assign>
<msg timestamp="20170803 17:08:05.018" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='10000' and channel_no=1 </msg>
<msg timestamp="20170803 17:08:05.079" level="INFO">${boss_channel_no1} = ((17757, '32102151361501753586', 10000, 100005, 1, 2, 0, datetime.datetime(2017, 8, 3, 16, 53, 36), datetime.datetime(2017, 8, 3, 16, 53, 36)),)</msg>
<status status="PASS" endtime="20170803 17:08:05.080" starttime="20170803 17:08:05.017"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${boss_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${boss_channel_no}</var>
</assign>
<msg timestamp="20170803 17:08:05.081" level="INFO">${boss_channel_no} = 100005</msg>
<status status="PASS" endtime="20170803 17:08:05.082" starttime="20170803 17:08:05.081"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${app_user_account_id}' and channel_no=2</arg>
</arguments>
<assign>
<var>${app_channel_no1}</var>
</assign>
<msg timestamp="20170803 17:08:05.083" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='10000' and channel_no=2 </msg>
<msg timestamp="20170803 17:08:05.125" level="INFO">${app_channel_no1} = ((17756, '32102151361501753580', 10000, 100004, 2, 2, 0, datetime.datetime(2017, 8, 3, 16, 53, 24), datetime.datetime(2017, 8, 3, 16, 53, 24)),)</msg>
<status status="PASS" endtime="20170803 17:08:05.125" starttime="20170803 17:08:05.082"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${app_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${app_channel_no}</var>
</assign>
<msg timestamp="20170803 17:08:05.127" level="INFO">${app_channel_no} = 100004</msg>
<status status="PASS" endtime="20170803 17:08:05.127" starttime="20170803 17:08:05.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_channel_no}</arg>
</arguments>
<msg timestamp="20170803 17:08:05.129" level="INFO">${boss_channel_no} = 100005</msg>
<status status="PASS" endtime="20170803 17:08:05.129" starttime="20170803 17:08:05.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_channel_no}</arg>
</arguments>
<msg timestamp="20170803 17:08:05.131" level="INFO">${app_channel_no} = 100004</msg>
<status status="PASS" endtime="20170803 17:08:05.131" starttime="20170803 17:08:05.130"></status>
</kw>
<status status="PASS" endtime="20170803 17:08:05.131" starttime="20170803 17:08:04.994"></status>
</kw>
<status status="PASS" endtime="20170803 17:08:05.132" starttime="20170803 17:08:04.875"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170803 17:08:05.134" level="INFO">${current_time} = 2017-08-03 17:08:05.134</msg>
<status status="PASS" endtime="20170803 17:08:05.135" starttime="20170803 17:08:05.133"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>1 days</arg>
</arguments>
<assign>
<var>${after_time}</var>
</assign>
<msg timestamp="20170803 17:08:05.141" level="INFO">${after_time} = 2017-08-04 17:08:05.134</msg>
<status status="PASS" endtime="20170803 17:08:05.142" starttime="20170803 17:08:05.136"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>10 days</arg>
</arguments>
<assign>
<var>${account_begin_time}</var>
</assign>
<msg timestamp="20170803 17:08:05.144" level="INFO">${account_begin_time} = 2017-07-24 17:08:05.134</msg>
<status status="PASS" endtime="20170803 17:08:05.145" starttime="20170803 17:08:05.143"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id="${boss_user_account_id}"</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170803 17:08:05.148" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id="10000" </msg>
<msg timestamp="20170803 17:08:05.172" level="INFO">${id} = ((17756, '32102151361501753580', 10000, 100004, 2, 2, 0, datetime.datetime(2017, 8, 3, 16, 53, 24), datetime.datetime(2017, 8, 3, 16, 53, 24)), (17757, '32102151361501753586', 10000, 100005, 1, 2, 0, ...</msg>
<status status="PASS" endtime="20170803 17:08:05.172" starttime="20170803 17:08:05.147"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_base where user_id="${boss_user_account_id}"</arg>
</arguments>
<msg timestamp="20170803 17:08:05.175" level="INFO">Executing : Execute SQL String  |  delete from account_base where user_id="10000" </msg>
<status status="PASS" endtime="20170803 17:08:05.230" starttime="20170803 17:08:05.173"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into account_base(id,user_id,role_type,account_type,account_status,account_begin_time,account_end_time,add_time,update_time,del_flag) values("${id[0][0]}","${boss_user_account_id}","1","2","2","${account_begin_time}","${after_time}","${account_begin_time}","${account_begin_time}","0");</arg>
</arguments>
<msg timestamp="20170803 17:08:05.232" level="INFO">Executing : Execute SQL String  |  insert into account_base(id,user_id,role_type,account_type,account_status,account_begin_time,account_end_time,add_time,update_time,del_flag) values("17756","10000","1","2","2","2017-07-24 17:08:05.134","2017-08-04 17:08:05.134","2017-07-24 17:08:05.134","2017-07-24 17:08:05.134","0"); </msg>
<status status="PASS" endtime="20170803 17:08:05.367" starttime="20170803 17:08:05.231"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into account_base(id,user_id,role_type,account_type,account_status,account_begin_time,account_end_time,add_time,update_time,del_flag) values("${id[1][0]","${boss_user_account_id}","1","1","2","${account_begin_time}","${after_time}","${account_begin_time}","${account_begin_time}","0");</arg>
</arguments>
<msg timestamp="20170803 17:08:05.373" level="FAIL">Invalid variable name '${id[1][0]","10000","1","1","2","2017-07-24 17:08:05.134","2017-08-04 17:08:05.134","2017-07-24 17:08:05.134","${account_begin_time}'.</msg>
<status status="FAIL" endtime="20170803 17:08:05.373" starttime="20170803 17:08:05.369"></status>
</kw>
<status status="FAIL" endtime="20170803 17:08:05.375" critical="yes" starttime="20170803 17:08:04.870">Invalid variable name '${id[1][0]","10000","1","1","2","2017-07-24 17:08:05.134","2017-08-04 17:08:05.134","2017-07-24 17:08:05.134","${account_begin_time}'.</status>
</test>
<status status="FAIL" endtime="20170803 17:08:05.377" starttime="20170803 17:08:04.516"></status>
</suite>
<status status="FAIL" endtime="20170803 17:08:05.387" starttime="20170803 17:08:04.512"></status>
</suite>
<status status="FAIL" endtime="20170803 17:08:05.393" starttime="20170803 17:08:04.325"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="0">Critical Tests</stat>
<stat fail="1" pass="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="1" id="s1" name="账户中心" pass="0">账户中心</stat>
<stat fail="1" id="s1-s1" name="艾佳币" pass="0">账户中心.艾佳币</stat>
<stat fail="1" id="s1-s1-s1" name="艾佳币充值" pass="0">账户中心.艾佳币.艾佳币充值</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
