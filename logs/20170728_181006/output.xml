<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170728 18:10:38.992" generator="Robot 3.0.2 (Python 2.7.8 on win32)">
<suite source="F:\logs and reports\账户中心" id="s1" name="账户中心">
<suite source="F:\logs and reports\账户中心\艾佳币" id="s1-s1" name="艾佳币">
<suite source="F:\logs and reports\账户中心\艾佳币\艾佳币回收冻结.txt" id="s1-s1-s1" name="艾佳币回收冻结">
<test id="s1-s1-s1-t1" name="输入木有的user_id和正确的amount参数">
<kw name="参数配置" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 18:10:39.541" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 18:10:39.550" starttime="20170728 18:10:39.515"></status>
</kw>
<status status="PASS" endtime="20170728 18:10:39.551" starttime="20170728 18:10:39.513"></status>
</kw>
<kw name="输入拥有不同类型账户的用户user_id" library="myResource">
<arguments>
<arg>100000</arg>
<arg>100000</arg>
<arg>123456781</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_user_account_id}</arg>
</arguments>
<msg timestamp="20170728 18:10:39.554" level="INFO">${boss_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170728 18:10:39.555" starttime="20170728 18:10:39.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_user_account_id}</arg>
</arguments>
<msg timestamp="20170728 18:10:39.556" level="INFO">${app_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170728 18:10:39.557" starttime="20170728 18:10:39.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${no_user_account_id}</arg>
</arguments>
<msg timestamp="20170728 18:10:39.559" level="INFO">${no_user_account_id} = 123456781</msg>
<status status="PASS" endtime="20170728 18:10:39.559" starttime="20170728 18:10:39.558"></status>
</kw>
<status status="PASS" endtime="20170728 18:10:39.560" starttime="20170728 18:10:39.552"></status>
</kw>
<status status="PASS" endtime="20170728 18:10:39.561" starttime="20170728 18:10:39.511"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>12345671</arg>
<arg>1</arg>
<arg>2</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 18:10:39.564" level="INFO">${args11} = 12345671</msg>
<status status="PASS" endtime="20170728 18:10:39.565" starttime="20170728 18:10:39.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 18:10:39.568" level="INFO">${args22} = 1</msg>
<status status="PASS" endtime="20170728 18:10:39.568" starttime="20170728 18:10:39.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 18:10:39.570" level="INFO">${args33} = 2</msg>
<status status="PASS" endtime="20170728 18:10:39.571" starttime="20170728 18:10:39.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 18:10:39.573" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 18:10:39.574" starttime="20170728 18:10:39.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 18:10:39.576" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</msg>
<status status="PASS" endtime="20170728 18:10:39.577" starttime="20170728 18:10:39.575"></status>
</kw>
<status status="PASS" endtime="20170728 18:10:39.578" starttime="20170728 18:10:39.561"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id ='${args11}'</arg>
</arguments>
<assign>
<var>${no_user_id}</var>
</assign>
<msg timestamp="20170728 18:10:39.580" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id ='12345671' </msg>
<msg timestamp="20170728 18:10:39.593" level="INFO">${no_user_id} = ()</msg>
<status status="PASS" endtime="20170728 18:10:39.593" starttime="20170728 18:10:39.579"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${no_user_id}</arg>
</arguments>
<msg timestamp="20170728 18:10:39.595" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170728 18:10:39.596" starttime="20170728 18:10:39.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>此user_id不存在</arg>
</arguments>
<msg timestamp="20170728 18:10:39.597" level="INFO">此user_id不存在</msg>
<status status="PASS" endtime="20170728 18:10:39.598" starttime="20170728 18:10:39.597"></status>
</kw>
<kw name="Data" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data_no_user_id}</var>
</assign>
<msg timestamp="20170728 18:10:39.616" level="INFO">${data_no_user_id} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 18:10:39.617" starttime="20170728 18:10:39.599"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data_no_user_id.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 18:10:39.619" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:10:39.620" starttime="20170728 18:10:39.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 18:10:39.621" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 18:10:39.622" starttime="20170728 18:10:39.620"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data_no_user_id.text}</arg>
</arguments>
<assign>
<var>${toJson1}</var>
</assign>
<msg timestamp="20170728 18:10:39.624" level="INFO">To JSON using : content={"data":{"orderNum":null},"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 18:10:39.624" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 18:10:39.625" level="INFO">${toJson1} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': {u'orderNum': None}, u'success': True}</msg>
<status status="PASS" endtime="20170728 18:10:39.626" starttime="20170728 18:10:39.623"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson1['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 18:10:39.629" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:10:39.629" starttime="20170728 18:10:39.627"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson1['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 18:10:39.631" starttime="20170728 18:10:39.630"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${toJson1['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${no_user_id_orderNum}</var>
</assign>
<msg timestamp="20170728 18:10:39.633" level="INFO">${no_user_id_orderNum} = None</msg>
<status status="PASS" endtime="20170728 18:10:39.635" starttime="20170728 18:10:39.632"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${no_user_id_orderNum}</arg>
</arguments>
<assign>
<var>${no_user_id_orderNum_length}</var>
</assign>
<msg timestamp="20170728 18:10:39.638" level="INFO">${no_user_id_orderNum_length} = None</msg>
<status status="PASS" endtime="20170728 18:10:39.639" starttime="20170728 18:10:39.637"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${no_user_id_orderNum_length}</arg>
<arg>None</arg>
</arguments>
<status status="PASS" endtime="20170728 18:10:39.641" starttime="20170728 18:10:39.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 18:10:39.643" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 18:10:39.643" starttime="20170728 18:10:39.642"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id ='${args11}'</arg>
</arguments>
<assign>
<var>${no_user_id_after}</var>
</assign>
<msg timestamp="20170728 18:10:39.645" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id ='12345671' </msg>
<msg timestamp="20170728 18:10:39.660" level="INFO">${no_user_id_after} = ()</msg>
<status status="PASS" endtime="20170728 18:10:39.660" starttime="20170728 18:10:39.644"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${no_user_id_after}</arg>
</arguments>
<msg timestamp="20170728 18:10:39.662" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170728 18:10:39.663" starttime="20170728 18:10:39.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>此用户不存在，调用接口也不能创建账户</arg>
</arguments>
<msg timestamp="20170728 18:10:39.664" level="INFO">此用户不存在，调用接口也不能创建账户</msg>
<status status="PASS" endtime="20170728 18:10:39.665" starttime="20170728 18:10:39.663"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time_no}</var>
</assign>
<msg timestamp="20170728 18:10:39.666" level="INFO">${current_time_no} = 2017-07-28 18:10:39.666</msg>
<status status="PASS" endtime="20170728 18:10:39.668" starttime="20170728 18:10:39.665"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_no}</arg>
<arg>15 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_301}</var>
</assign>
<msg timestamp="20170728 18:10:39.675" level="INFO">${current_time_before_301} = 2017-07-28 18:10:24.666</msg>
<status status="PASS" endtime="20170728 18:10:39.676" starttime="20170728 18:10:39.669"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_no}</arg>
<arg>61 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_302}</var>
</assign>
<msg timestamp="20170728 18:10:39.678" level="INFO">${current_time_after_302} = 2017-07-28 18:11:40.666</msg>
<status status="PASS" endtime="20170728 18:10:39.678" starttime="20170728 18:10:39.677"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where user_id ='${args11}' and update_time between' ${current_time_before_301}' and '${current_time_after_302}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 18:10:39.680" level="INFO">Executing : Query  |  select * from account_unilateral_bill where user_id ='12345671' and update_time between' 2017-07-28 18:10:24.666' and '2017-07-28 18:11:40.666' </msg>
<msg timestamp="20170728 18:10:39.691" level="INFO">${user_id} = ()</msg>
<status status="PASS" endtime="20170728 18:10:39.691" starttime="20170728 18:10:39.679"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${user_id}</arg>
</arguments>
<msg timestamp="20170728 18:10:39.693" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170728 18:10:39.693" starttime="20170728 18:10:39.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill里是空的</arg>
</arguments>
<msg timestamp="20170728 18:10:39.695" level="INFO">表account_unilateral_bill里是空的</msg>
<status status="PASS" endtime="20170728 18:10:39.695" starttime="20170728 18:10:39.694"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time_nouser}</var>
</assign>
<msg timestamp="20170728 18:10:39.697" level="INFO">${current_time_nouser} = 2017-07-28 18:10:39.697</msg>
<status status="PASS" endtime="20170728 18:10:39.697" starttime="20170728 18:10:39.696"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_nouser}</arg>
<arg>15 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_3011}</var>
</assign>
<msg timestamp="20170728 18:10:39.700" level="INFO">${current_time_before_3011} = 2017-07-28 18:10:24.697</msg>
<status status="PASS" endtime="20170728 18:10:39.701" starttime="20170728 18:10:39.698"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_nouser}</arg>
<arg>61 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_3022}</var>
</assign>
<msg timestamp="20170728 18:10:39.704" level="INFO">${current_time_after_3022} = 2017-07-28 18:11:40.697</msg>
<status status="PASS" endtime="20170728 18:10:39.705" starttime="20170728 18:10:39.703"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where user_id ='${args11}' and update_time between' ${current_time_before_3011}' and '${current_time_after_3022}'</arg>
</arguments>
<assign>
<var>${user_id_no}</var>
</assign>
<msg timestamp="20170728 18:10:39.709" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id ='12345671' and update_time between' 2017-07-28 18:10:24.697' and '2017-07-28 18:11:40.697' </msg>
<msg timestamp="20170728 18:10:39.720" level="INFO">${user_id_no} = ()</msg>
<status status="PASS" endtime="20170728 18:10:39.721" starttime="20170728 18:10:39.707"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${user_id_no}</arg>
</arguments>
<msg timestamp="20170728 18:10:39.723" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170728 18:10:39.723" starttime="20170728 18:10:39.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>ajb_account_transaction里是空的</arg>
</arguments>
<msg timestamp="20170728 18:10:39.725" level="INFO">ajb_account_transaction里是空的</msg>
<status status="PASS" endtime="20170728 18:10:39.725" starttime="20170728 18:10:39.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>调用艾佳币回收冻结，没有user_id,也不能创建新的账号。</arg>
</arguments>
<msg timestamp="20170728 18:10:39.727" level="INFO">调用艾佳币回收冻结，没有user_id,也不能创建新的账号。</msg>
<status status="PASS" endtime="20170728 18:10:39.727" starttime="20170728 18:10:39.726"></status>
</kw>
<status status="PASS" endtime="20170728 18:10:39.729" critical="yes" starttime="20170728 18:10:39.507"></status>
</test>
<status status="PASS" endtime="20170728 18:10:39.731" starttime="20170728 18:10:39.218"></status>
</suite>
<status status="PASS" endtime="20170728 18:10:39.737" starttime="20170728 18:10:39.214"></status>
</suite>
<status status="PASS" endtime="20170728 18:10:39.740" starttime="20170728 18:10:39.020"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="账户中心" pass="1">账户中心</stat>
<stat fail="0" id="s1-s1" name="艾佳币" pass="1">账户中心.艾佳币</stat>
<stat fail="0" id="s1-s1-s1" name="艾佳币回收冻结" pass="1">账户中心.艾佳币.艾佳币回收冻结</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
