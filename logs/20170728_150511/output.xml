<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170728 15:11:48.816" generator="Robot 3.0.2 (Python 2.7.8 on win32)">
<suite source="F:\logs and reports\账户中心" id="s1" name="账户中心">
<suite source="F:\logs and reports\账户中心\艾佳币" id="s1-s1" name="艾佳币">
<suite source="F:\logs and reports\账户中心\艾佳币\艾佳币充值.txt" id="s1-s1-s1" name="艾佳币充值">
<test id="s1-s1-s1-t1" name="输入已有的userId和正确amount参数">
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>100000</arg>
<arg>1</arg>
<arg>2</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 15:11:49.331" level="INFO">${args11} = 100000</msg>
<status status="PASS" endtime="20170728 15:11:49.333" starttime="20170728 15:11:49.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 15:11:49.336" level="INFO">${args22} = 1</msg>
<status status="PASS" endtime="20170728 15:11:49.336" starttime="20170728 15:11:49.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 15:11:49.338" level="INFO">${args33} = 2</msg>
<status status="PASS" endtime="20170728 15:11:49.339" starttime="20170728 15:11:49.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 15:11:49.342" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 15:11:49.343" starttime="20170728 15:11:49.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 15:11:49.346" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</msg>
<status status="PASS" endtime="20170728 15:11:49.346" starttime="20170728 15:11:49.344"></status>
</kw>
<status status="PASS" endtime="20170728 15:11:49.347" starttime="20170728 15:11:49.326"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 15:11:49.351" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</msg>
<status status="PASS" endtime="20170728 15:11:49.352" starttime="20170728 15:11:49.350"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 15:11:49.354" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 15:11:49.354" starttime="20170728 15:11:49.353"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 15:11:49.359" starttime="20170728 15:11:49.357"></status>
</kw>
<msg timestamp="20170728 15:11:49.362" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 15:11:49.364" starttime="20170728 15:11:49.355"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>user_id</arg>
</arguments>
<status status="PASS" endtime="20170728 15:11:49.370" starttime="20170728 15:11:49.368"></status>
</kw>
<msg timestamp="20170728 15:11:49.371" level="INFO">${args11_after} = user_id</msg>
<status status="PASS" endtime="20170728 15:11:49.372" starttime="20170728 15:11:49.366"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:11:49.409" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:11:49.432" starttime="20170728 15:11:49.376"></status>
</kw>
<status status="PASS" endtime="20170728 15:11:49.434" starttime="20170728 15:11:49.374"></status>
</kw>
<status status="PASS" endtime="20170728 15:11:49.436" starttime="20170728 15:11:49.373"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 15:11:49.441" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and channel_no='1' </msg>
<msg timestamp="20170728 15:11:49.474" level="INFO">${database1} = ((9100, '32102151361499943857', 100000, 6135, 1, '32102151361499943857', '20170714000118SSP038852', Decimal('2.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, ...</msg>
<status status="PASS" endtime="20170728 15:11:49.475" starttime="20170728 15:11:49.438"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 15:11:49.479" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 15:11:49.487" level="INFO">${database} = ((12449, 6135, Decimal('50424.00'), Decimal('49602.00'), Decimal('822.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 15, 6, 18), 0),)</msg>
<status status="PASS" endtime="20170728 15:11:49.488" starttime="20170728 15:11:49.477"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 15:11:49.494" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 15:11:49.495" starttime="20170728 15:11:49.491"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 15:11:49.501" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 15:11:49.503" starttime="20170728 15:11:49.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 15:11:49.507" level="INFO">获得account_id值为：6135</msg>
<status status="PASS" endtime="20170728 15:11:49.508" starttime="20170728 15:11:49.505"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 15:11:49.512" level="INFO">${total_amount_before} = 50424.00</msg>
<status status="PASS" endtime="20170728 15:11:49.514" starttime="20170728 15:11:49.510"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 15:11:49.519" level="INFO">${balance_amount_before} = 49602.00</msg>
<status status="PASS" endtime="20170728 15:11:49.520" starttime="20170728 15:11:49.516"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 15:11:49.525" level="INFO">${frozen_amount_before} = 822.00</msg>
<status status="PASS" endtime="20170728 15:11:49.526" starttime="20170728 15:11:49.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 15:11:49.531" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 15:11:49.533" starttime="20170728 15:11:49.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 15:11:49.538" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 15:11:49.540" starttime="20170728 15:11:49.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 15:11:49.547" level="INFO">${total_amount_before} = 50424.00</msg>
<status status="PASS" endtime="20170728 15:11:49.549" starttime="20170728 15:11:49.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 15:11:49.554" level="INFO">${balance_amount_before} = 49602.00</msg>
<status status="PASS" endtime="20170728 15:11:49.556" starttime="20170728 15:11:49.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 15:11:49.563" level="INFO">${frozen_amount_before} = 822.00</msg>
<status status="PASS" endtime="20170728 15:11:49.565" starttime="20170728 15:11:49.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 15:11:49.570" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 15:11:49.572" starttime="20170728 15:11:49.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 15:11:49.576" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 15:11:49.579" starttime="20170728 15:11:49.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 15:11:49.585" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</msg>
<status status="PASS" endtime="20170728 15:11:49.586" starttime="20170728 15:11:49.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170728 15:11:49.591" level="INFO">${database} = ((12449, 6135, Decimal('50424.00'), Decimal('49602.00'), Decimal('822.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 15, 6, 18), 0),)</msg>
<status status="PASS" endtime="20170728 15:11:49.592" starttime="20170728 15:11:49.588"></status>
</kw>
<status status="PASS" endtime="20170728 15:11:49.595" starttime="20170728 15:11:49.349"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Data" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:11:49.701" starttime="20170728 15:11:49.607"></status>
</kw>
<msg timestamp="20170728 15:11:49.704" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 15:11:49.705" starttime="20170728 15:11:49.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 15:11:49.710" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 15:11:49.711" starttime="20170728 15:11:49.708"></status>
</kw>
<status status="PASS" endtime="20170728 15:11:49.713" starttime="20170728 15:11:49.598"></status>
</kw>
<kw name="字段验证" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 15:11:49.719" level="INFO">200</msg>
<status status="PASS" endtime="20170728 15:11:49.721" starttime="20170728 15:11:49.717"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 15:11:49.726" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:11:49.728" starttime="20170728 15:11:49.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 15:11:49.733" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 15:11:49.736" starttime="20170728 15:11:49.730"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 15:11:49.741" level="INFO">To JSON using : content={"data":{"orderNum":"32102151361501207611"},"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 15:11:49.742" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 15:11:49.744" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': {u'orderNum': u'32102151361501207611'}, u'success': True}</msg>
<status status="PASS" endtime="20170728 15:11:49.746" starttime="20170728 15:11:49.738"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 15:11:49.753" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:11:49.755" starttime="20170728 15:11:49.749"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 15:11:49.760" starttime="20170728 15:11:49.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 15:11:49.764" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 15:11:49.767" starttime="20170728 15:11:49.762"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<assign>
<var>@{Link1}</var>
</assign>
<msg timestamp="20170728 15:11:49.772" level="INFO">@{Link1} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 15:11:49.773" starttime="20170728 15:11:49.769"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>"${value}" in @{Link1}</arg>
<arg>Get From Dictionary</arg>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${orderNum}</var>
</assign>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<status status="PASS" endtime="20170728 15:11:49.781" starttime="20170728 15:11:49.778"></status>
</kw>
<msg timestamp="20170728 15:11:49.784" level="INFO">${orderNum} = 32102151361501207611</msg>
<status status="PASS" endtime="20170728 15:11:49.785" starttime="20170728 15:11:49.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<msg timestamp="20170728 15:11:49.790" level="INFO">${orderNum} = 32102151361501207611</msg>
<status status="PASS" endtime="20170728 15:11:49.792" starttime="20170728 15:11:49.788"></status>
</kw>
<status status="PASS" endtime="20170728 15:11:49.795" starttime="20170728 15:11:49.715"></status>
</kw>
<kw name="表account_unilateral_bill的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_unilateral_bill</arg>
</arguments>
<msg timestamp="20170728 15:11:49.805" level="INFO">现在开始校验表account_unilateral_bill</msg>
<status status="PASS" endtime="20170728 15:11:49.807" starttime="20170728 15:11:49.802"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:11:49.818" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:11:49.841" starttime="20170728 15:11:49.815"></status>
</kw>
<status status="PASS" endtime="20170728 15:11:49.844" starttime="20170728 15:11:49.811"></status>
</kw>
<status status="PASS" endtime="20170728 15:11:49.846" starttime="20170728 15:11:49.809"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>account_unilateral_bill</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:11:49.859" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:11:49.869" starttime="20170728 15:11:49.856"></status>
</kw>
<status status="PASS" endtime="20170728 15:11:49.871" starttime="20170728 15:11:49.853"></status>
</kw>
<status status="PASS" endtime="20170728 15:11:49.873" starttime="20170728 15:11:49.851"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 15:11:49.878" level="INFO">${current_time} = 2017-07-28 15:11:49.877</msg>
<status status="PASS" endtime="20170728 15:11:49.880" starttime="20170728 15:11:49.875"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>10 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 15:11:49.891" level="INFO">${current_time_before_30} = 2017-07-28 15:11:39.877</msg>
<status status="PASS" endtime="20170728 15:11:49.893" starttime="20170728 15:11:49.883"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 15:11:49.899" level="INFO">${current_time_after_30} = 2017-07-28 15:12:54.877</msg>
<status status="PASS" endtime="20170728 15:11:49.901" starttime="20170728 15:11:49.896"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 15:11:49.906" level="INFO">Executing : Query  |  select * from account_unilateral_bill where user_id='100000' and update_time between' 2017-07-28 15:11:39.877' and '2017-07-28 15:12:54.877' </msg>
<msg timestamp="20170728 15:11:49.918" level="INFO">${updatetime} = ()</msg>
<status status="PASS" endtime="20170728 15:11:49.919" starttime="20170728 15:11:49.903"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 15:11:49.924" level="INFO">Length is 0</msg>
<msg timestamp="20170728 15:11:49.926" level="FAIL">TypeError: not enough arguments for format string</msg>
<status status="FAIL" endtime="20170728 15:11:49.928" starttime="20170728 15:11:49.922"></status>
</kw>
<status status="FAIL" endtime="20170728 15:11:49.930" starttime="20170728 15:11:49.849"></status>
</kw>
<status status="FAIL" endtime="20170728 15:11:49.933" starttime="20170728 15:11:49.798"></status>
</kw>
<status status="FAIL" endtime="20170728 15:11:49.935" critical="yes" starttime="20170728 15:11:49.323">TypeError: not enough arguments for format string</status>
</test>
<status status="FAIL" endtime="20170728 15:11:49.939" starttime="20170728 15:11:49.043"></status>
</suite>
<status status="FAIL" endtime="20170728 15:11:49.946" starttime="20170728 15:11:49.038"></status>
</suite>
<status status="FAIL" endtime="20170728 15:11:49.950" starttime="20170728 15:11:48.844"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="0">Critical Tests</stat>
<stat fail="1" pass="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="1" id="s1" name="账户中心" pass="0">账户中心</stat>
<stat fail="1" id="s1-s1" name="艾佳币" pass="0">账户中心.艾佳币</stat>
<stat fail="1" id="s1-s1-s1" name="艾佳币充值" pass="0">账户中心.艾佳币.艾佳币充值</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20170728 15:11:49.319" level="ERROR">Error in file 'F:\logs and reports\账户中心\艾佳币\艾佳币充值.txt': Resource file '艾佳币需要的操作.txt' does not exist.</msg>
</errors>
</robot>
