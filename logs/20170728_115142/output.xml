<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170728 11:52:10.178" generator="Robot 3.0.2 (Python 2.7.8 on win32)">
<suite source="F:\logs and reports\账户中心" id="s1" name="账户中心">
<suite source="F:\logs and reports\账户中心\订单" id="s1-s1" name="订单">
<suite source="F:\logs and reports\账户中心\订单\订单支付冻结（线上）.txt" id="s1-s1-s1" name="订单支付冻结（线上）">
<test id="s1-s1-s1-t1" name="输入正确的userId和orderNum，ajbAmount的参数">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 11:52:10.699" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 11:52:10.737" starttime="20170728 11:52:10.677"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:10.738" starttime="20170728 11:52:10.676"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:10.738" starttime="20170728 11:52:10.675"></status>
</kw>
<kw name="清数据" library="myResource">
<arguments>
<arg>8880888</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 11:52:10.742" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 11:52:10.749" starttime="20170728 11:52:10.741"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:10.750" starttime="20170728 11:52:10.740"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:10.750" starttime="20170728 11:52:10.739"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170728 11:52:10.751" level="INFO">Executing : Query  |  select * from ajb_account_transaction where id=8880888 </msg>
<msg timestamp="20170728 11:52:10.756" level="INFO">${check} = ()</msg>
<status status="PASS" endtime="20170728 11:52:10.757" starttime="20170728 11:52:10.751"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170728 11:52:10.758" level="INFO">Length is 0</msg>
<msg timestamp="20170728 11:52:10.759" level="INFO">${check_length} = 0</msg>
<status status="PASS" endtime="20170728 11:52:10.759" starttime="20170728 11:52:10.758"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} != 0</arg>
<arg>execute sql string</arg>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>数据库之前没有数据</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库之前没有数据</arg>
</arguments>
<msg timestamp="20170728 11:52:10.761" level="INFO">数据库之前没有数据</msg>
<status status="PASS" endtime="20170728 11:52:10.761" starttime="20170728 11:52:10.760"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:10.762" starttime="20170728 11:52:10.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库里面的这条数据清理成功啦。</arg>
</arguments>
<msg timestamp="20170728 11:52:10.763" level="INFO">数据库里面的这条数据清理成功啦。</msg>
<status status="PASS" endtime="20170728 11:52:10.763" starttime="20170728 11:52:10.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_delete}</arg>
</arguments>
<msg timestamp="20170728 11:52:10.765" level="INFO">${id_delete} = 8880888</msg>
<status status="PASS" endtime="20170728 11:52:10.765" starttime="20170728 11:52:10.764"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:10.766" starttime="20170728 11:52:10.739"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("${id_delete}","32102151361500284867","100000","6135","1","32102151361500284867","","2000","1","6","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170728 11:52:10.767" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("8880888","32102151361500284867","100000","6135","1","32102151361500284867","","2000","1","6","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170728 11:52:10.809" starttime="20170728 11:52:10.766"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>100000</arg>
<arg>32102151361500284867</arg>
<arg>10</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 11:52:10.812" level="INFO">${args11} = 100000</msg>
<status status="PASS" endtime="20170728 11:52:10.813" starttime="20170728 11:52:10.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 11:52:10.814" level="INFO">${args22} = 32102151361500284867</msg>
<status status="PASS" endtime="20170728 11:52:10.814" starttime="20170728 11:52:10.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 11:52:10.816" level="INFO">${args33} = 10</msg>
<status status="PASS" endtime="20170728 11:52:10.816" starttime="20170728 11:52:10.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 11:52:10.817" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 11:52:10.818" starttime="20170728 11:52:10.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 11:52:10.819" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/freezePay</msg>
<status status="PASS" endtime="20170728 11:52:10.820" starttime="20170728 11:52:10.818"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:10.820" starttime="20170728 11:52:10.810"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 11:52:10.822" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/freezePay</msg>
<status status="PASS" endtime="20170728 11:52:10.822" starttime="20170728 11:52:10.821"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 11:52:10.824" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 11:52:10.824" starttime="20170728 11:52:10.823"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 11:52:10.826" starttime="20170728 11:52:10.825"></status>
</kw>
<msg timestamp="20170728 11:52:10.826" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 11:52:10.827" starttime="20170728 11:52:10.824"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>user_id</arg>
</arguments>
<status status="PASS" endtime="20170728 11:52:10.829" starttime="20170728 11:52:10.828"></status>
</kw>
<msg timestamp="20170728 11:52:10.829" level="INFO">${args11_after} = user_id</msg>
<status status="PASS" endtime="20170728 11:52:10.829" starttime="20170728 11:52:10.827"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 11:52:10.832" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 11:52:10.844" starttime="20170728 11:52:10.831"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:10.845" starttime="20170728 11:52:10.831"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:10.845" starttime="20170728 11:52:10.830"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 11:52:10.847" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and channel_no='1' </msg>
<msg timestamp="20170728 11:52:10.865" level="INFO">${database1} = ((9100, '32102151361499943857', 100000, 6135, 1, '32102151361499943857', '20170714000118SSP038852', Decimal('2.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, ...</msg>
<status status="PASS" endtime="20170728 11:52:10.865" starttime="20170728 11:52:10.846"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 11:52:10.867" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 11:52:10.872" level="INFO">${database} = ((12449, 6135, Decimal('50426.00'), Decimal('50028.00'), Decimal('398.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 11, 52, 49), 0),)</msg>
<status status="PASS" endtime="20170728 11:52:10.873" starttime="20170728 11:52:10.866"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 11:52:10.874" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 11:52:10.874" starttime="20170728 11:52:10.873"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 11:52:10.876" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 11:52:10.876" starttime="20170728 11:52:10.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 11:52:10.877" level="INFO">获得account_id值为：6135</msg>
<status status="PASS" endtime="20170728 11:52:10.877" starttime="20170728 11:52:10.876"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 11:52:10.879" level="INFO">${total_amount_before} = 50426.00</msg>
<status status="PASS" endtime="20170728 11:52:10.879" starttime="20170728 11:52:10.878"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 11:52:10.881" level="INFO">${balance_amount_before} = 50028.00</msg>
<status status="PASS" endtime="20170728 11:52:10.881" starttime="20170728 11:52:10.880"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 11:52:10.882" level="INFO">${frozen_amount_before} = 398.00</msg>
<status status="PASS" endtime="20170728 11:52:10.883" starttime="20170728 11:52:10.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 11:52:10.884" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 11:52:10.884" starttime="20170728 11:52:10.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 11:52:10.885" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 11:52:10.886" starttime="20170728 11:52:10.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 11:52:10.887" level="INFO">${total_amount_before} = 50426.00</msg>
<status status="PASS" endtime="20170728 11:52:10.887" starttime="20170728 11:52:10.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 11:52:10.888" level="INFO">${balance_amount_before} = 50028.00</msg>
<status status="PASS" endtime="20170728 11:52:10.889" starttime="20170728 11:52:10.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 11:52:10.890" level="INFO">${frozen_amount_before} = 398.00</msg>
<status status="PASS" endtime="20170728 11:52:10.891" starttime="20170728 11:52:10.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 11:52:10.892" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 11:52:10.893" starttime="20170728 11:52:10.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 11:52:10.894" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 11:52:10.895" starttime="20170728 11:52:10.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 11:52:10.896" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/freezePay</msg>
<status status="PASS" endtime="20170728 11:52:10.896" starttime="20170728 11:52:10.895"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:10.897" starttime="20170728 11:52:10.821"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Freeze Pay" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 11:52:11.058" starttime="20170728 11:52:10.900"></status>
</kw>
<msg timestamp="20170728 11:52:11.058" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 11:52:11.059" starttime="20170728 11:52:10.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.060" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 11:52:11.061" starttime="20170728 11:52:11.059"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:11.062" starttime="20170728 11:52:10.897"></status>
</kw>
<kw name="字段验证" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.065" level="INFO">200</msg>
<status status="PASS" endtime="20170728 11:52:11.065" starttime="20170728 11:52:11.064"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 11:52:11.067" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 11:52:11.067" starttime="20170728 11:52:11.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 11:52:11.068" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 11:52:11.069" starttime="20170728 11:52:11.068"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 11:52:11.070" level="INFO">To JSON using : content={"data":null,"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 11:52:11.070" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 11:52:11.071" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': None, u'success': True}</msg>
<status status="PASS" endtime="20170728 11:52:11.071" starttime="20170728 11:52:11.069"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 11:52:11.072" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 11:52:11.073" starttime="20170728 11:52:11.071"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 11:52:11.075" starttime="20170728 11:52:11.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 11:52:11.077" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 11:52:11.077" starttime="20170728 11:52:11.076"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<assign>
<var>@{Link1}</var>
</assign>
<msg timestamp="20170728 11:52:11.078" level="INFO">@{Link1} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 11:52:11.079" starttime="20170728 11:52:11.077"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>"${value}" in @{Link1}</arg>
<arg>Get From Dictionary</arg>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${orderNum}</var>
</assign>
<msg timestamp="20170728 11:52:11.081" level="INFO">${orderNum} = None</msg>
<status status="PASS" endtime="20170728 11:52:11.082" starttime="20170728 11:52:11.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.083" level="INFO">${orderNum} = None</msg>
<status status="PASS" endtime="20170728 11:52:11.083" starttime="20170728 11:52:11.082"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:11.084" starttime="20170728 11:52:11.063"></status>
</kw>
<kw name="表account_unilateral_bill的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_unilateral_bill</arg>
</arguments>
<msg timestamp="20170728 11:52:11.085" level="INFO">现在开始校验表account_unilateral_bill</msg>
<status status="PASS" endtime="20170728 11:52:11.086" starttime="20170728 11:52:11.085"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 11:52:11.089" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 11:52:11.099" starttime="20170728 11:52:11.088"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:11.100" starttime="20170728 11:52:11.087"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:11.101" starttime="20170728 11:52:11.086"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>account_unilateral_bill</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 11:52:11.104" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 11:52:11.118" starttime="20170728 11:52:11.104"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:11.118" starttime="20170728 11:52:11.103"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:11.119" starttime="20170728 11:52:11.102"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 11:52:11.120" level="INFO">${current_time} = 2017-07-28 11:52:11.120</msg>
<status status="PASS" endtime="20170728 11:52:11.121" starttime="20170728 11:52:11.120"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>10 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 11:52:11.126" level="INFO">${current_time_before_30} = 2017-07-28 11:52:01.120</msg>
<status status="PASS" endtime="20170728 11:52:11.127" starttime="20170728 11:52:11.121"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 11:52:11.128" level="INFO">${current_time_after_30} = 2017-07-28 11:53:16.120</msg>
<status status="PASS" endtime="20170728 11:52:11.129" starttime="20170728 11:52:11.127"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 11:52:11.130" level="INFO">Executing : Query  |  select * from account_unilateral_bill where user_id='100000' and update_time between' 2017-07-28 11:52:01.120' and '2017-07-28 11:53:16.120' </msg>
<msg timestamp="20170728 11:52:11.139" level="INFO">${updatetime} = ((6699, '32102151361501207281', 100000, 6135, '32102151361501207280', 1, 11, 1, Decimal('10.00'), None, datetime.datetime(2017, 7, 28, 11, 53, 15), datetime.datetime(2017, 7, 28, 11, 53, 15), 0),)</msg>
<status status="PASS" endtime="20170728 11:52:11.139" starttime="20170728 11:52:11.129"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.140" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 11:52:11.141" starttime="20170728 11:52:11.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 11:52:11.142" level="INFO">account_unilateral_bill表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 11:52:11.142" starttime="20170728 11:52:11.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.144" level="INFO">${current_time_before_30} = 2017-07-28 11:52:01.120</msg>
<status status="PASS" endtime="20170728 11:52:11.145" starttime="20170728 11:52:11.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.146" level="INFO">${current_time_after_30} = 2017-07-28 11:53:16.120</msg>
<status status="PASS" endtime="20170728 11:52:11.147" starttime="20170728 11:52:11.145"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:11.147" starttime="20170728 11:52:11.101"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id} 'and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 11:52:11.149" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6135 'and update_time between' 2017-07-28 11:52:01.120' and '2017-07-28 11:53:16.120' </msg>
<msg timestamp="20170728 11:52:11.155" level="INFO">${user_id} = ((6699, '32102151361501207281', 100000, 6135, '32102151361501207280', 1, 11, 1, Decimal('10.00'), None, datetime.datetime(2017, 7, 28, 11, 53, 15), datetime.datetime(2017, 7, 28, 11, 53, 15), 0),)</msg>
<status status="PASS" endtime="20170728 11:52:11.155" starttime="20170728 11:52:11.148"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170728 11:52:11.157" level="INFO">Length is 20</msg>
<msg timestamp="20170728 11:52:11.157" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170728 11:52:11.157" starttime="20170728 11:52:11.156"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 11:52:11.159" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 11:52:11.159" starttime="20170728 11:52:11.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 11:52:11.160" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 11:52:11.160" starttime="20170728 11:52:11.160"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 11:52:11.162" starttime="20170728 11:52:11.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 11:52:11.164" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 11:52:11.165" starttime="20170728 11:52:11.163"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170728 11:52:11.166" level="INFO">Length is 20</msg>
<msg timestamp="20170728 11:52:11.167" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170728 11:52:11.167" starttime="20170728 11:52:11.165"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 11:52:11.169" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 11:52:11.169" starttime="20170728 11:52:11.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 11:52:11.170" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 11:52:11.171" starttime="20170728 11:52:11.170"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 11:52:11.172" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 11:52:11.172" starttime="20170728 11:52:11.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 11:52:11.173" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 11:52:11.173" starttime="20170728 11:52:11.173"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>11</arg>
</arguments>
<status status="PASS" endtime="20170728 11:52:11.177" starttime="20170728 11:52:11.176"></status>
</kw>
<msg timestamp="20170728 11:52:11.177" level="INFO">${event_code} = 11</msg>
<status status="PASS" endtime="20170728 11:52:11.178" starttime="20170728 11:52:11.175"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 11:52:11.180" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 11:52:11.180" starttime="20170728 11:52:11.178"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 11:52:11.183" starttime="20170728 11:52:11.182"></status>
</kw>
<msg timestamp="20170728 11:52:11.184" level="INFO">${event_code_after} = 11</msg>
<status status="PASS" endtime="20170728 11:52:11.184" starttime="20170728 11:52:11.181"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 11:52:11.187" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 11:52:11.187" starttime="20170728 11:52:11.186"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 11:52:11.190" starttime="20170728 11:52:11.189"></status>
</kw>
<msg timestamp="20170728 11:52:11.190" level="INFO">${command_type} = 1</msg>
<status status="PASS" endtime="20170728 11:52:11.191" starttime="20170728 11:52:11.188"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<status status="PASS" endtime="20170728 11:52:11.195" starttime="20170728 11:52:11.193"></status>
</kw>
<msg timestamp="20170728 11:52:11.197" level="INFO">${amount} = 10</msg>
<status status="PASS" endtime="20170728 11:52:11.197" starttime="20170728 11:52:11.191"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 11:52:11.199" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 11:52:11.200" starttime="20170728 11:52:11.198"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>4</arg>
</arguments>
<status status="PASS" endtime="20170728 11:52:11.202" starttime="20170728 11:52:11.201"></status>
</kw>
<msg timestamp="20170728 11:52:11.202" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 11:52:11.203" starttime="20170728 11:52:11.200"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 11:52:11.206" starttime="20170728 11:52:11.205"></status>
</kw>
<msg timestamp="20170728 11:52:11.206" level="INFO">${total_amount} = 50426.00</msg>
<status status="PASS" endtime="20170728 11:52:11.206" starttime="20170728 11:52:11.203"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${balance_amount_before}-${args33}</arg>
</arguments>
<status status="PASS" endtime="20170728 11:52:11.211" starttime="20170728 11:52:11.210"></status>
</kw>
<msg timestamp="20170728 11:52:11.212" level="INFO">${balance_amount} = 50018.0</msg>
<status status="PASS" endtime="20170728 11:52:11.213" starttime="20170728 11:52:11.207"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${frozen_amount_before}+${args33}</arg>
</arguments>
<status status="PASS" endtime="20170728 11:52:11.216" starttime="20170728 11:52:11.215"></status>
</kw>
<msg timestamp="20170728 11:52:11.217" level="INFO">${frozen_amount} = 408.0</msg>
<status status="PASS" endtime="20170728 11:52:11.217" starttime="20170728 11:52:11.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.218" level="INFO">${event_code} = 11</msg>
<status status="PASS" endtime="20170728 11:52:11.219" starttime="20170728 11:52:11.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.220" level="INFO">${command_type} = 1</msg>
<status status="PASS" endtime="20170728 11:52:11.220" starttime="20170728 11:52:11.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.221" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 11:52:11.222" starttime="20170728 11:52:11.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.223" level="INFO">${amount} = 10</msg>
<status status="PASS" endtime="20170728 11:52:11.223" starttime="20170728 11:52:11.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.225" level="INFO">${total_amount} = 50426.00</msg>
<status status="PASS" endtime="20170728 11:52:11.225" starttime="20170728 11:52:11.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.226" level="INFO">${balance_amount} = 50018.0</msg>
<status status="PASS" endtime="20170728 11:52:11.226" starttime="20170728 11:52:11.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.228" level="INFO">${frozen_amount} = 408.0</msg>
<status status="PASS" endtime="20170728 11:52:11.228" starttime="20170728 11:52:11.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.231" level="INFO">${event_code_after} = 11</msg>
<status status="PASS" endtime="20170728 11:52:11.232" starttime="20170728 11:52:11.229"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:11.232" starttime="20170728 11:52:11.174"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.234" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 11:52:11.234" starttime="20170728 11:52:11.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 11:52:11.235" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 11:52:11.236" starttime="20170728 11:52:11.235"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.237" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 11:52:11.237" starttime="20170728 11:52:11.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170728 11:52:11.238" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170728 11:52:11.239" starttime="20170728 11:52:11.238"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.240" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 11:52:11.240" starttime="20170728 11:52:11.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 11:52:11.241" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 11:52:11.241" starttime="20170728 11:52:11.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 11:52:11.243" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 11:52:11.243" starttime="20170728 11:52:11.242"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 11:52:11.245" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 11:52:11.245" starttime="20170728 11:52:11.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 11:52:11.248" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 11:52:11.248" starttime="20170728 11:52:11.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170728 11:52:11.249" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170728 11:52:11.249" starttime="20170728 11:52:11.249"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_unilateral}</var>
</assign>
<msg timestamp="20170728 11:52:11.251" level="INFO">${user_id[0][0]_unilateral} = 6699</msg>
<status status="PASS" endtime="20170728 11:52:11.251" starttime="20170728 11:52:11.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_unilateral}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.252" level="INFO">${user_id[0][0]_unilateral} = 6699</msg>
<status status="PASS" endtime="20170728 11:52:11.253" starttime="20170728 11:52:11.252"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]_unilateral}'</arg>
</arguments>
<msg timestamp="20170728 11:52:11.254" level="INFO">Executing : Execute SQL String  |  delete from account_unilateral_bill where id ='6699' </msg>
<status status="PASS" endtime="20170728 11:52:11.292" starttime="20170728 11:52:11.253"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:11.293" starttime="20170728 11:52:11.084"></status>
</kw>
<kw name="表ajb_account_transaction" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170728 11:52:11.296" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170728 11:52:11.297" starttime="20170728 11:52:11.295"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 11:52:11.300" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 11:52:11.307" starttime="20170728 11:52:11.299"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:11.308" starttime="20170728 11:52:11.298"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:11.308" starttime="20170728 11:52:11.298"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>ajb_account_transaction</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 11:52:11.313" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 11:52:11.321" starttime="20170728 11:52:11.312"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:11.322" starttime="20170728 11:52:11.311"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:11.323" starttime="20170728 11:52:11.310"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 11:52:11.325" level="INFO">${current_time} = 2017-07-28 11:52:11.325</msg>
<status status="PASS" endtime="20170728 11:52:11.325" starttime="20170728 11:52:11.324"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>10 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 11:52:11.327" level="INFO">${current_time_before_30} = 2017-07-28 11:52:01.325</msg>
<status status="PASS" endtime="20170728 11:52:11.327" starttime="20170728 11:52:11.326"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 11:52:11.329" level="INFO">${current_time_after_30} = 2017-07-28 11:53:16.325</msg>
<status status="PASS" endtime="20170728 11:52:11.329" starttime="20170728 11:52:11.328"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 11:52:11.331" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and update_time between' 2017-07-28 11:52:01.325' and '2017-07-28 11:53:16.325' </msg>
<msg timestamp="20170728 11:52:11.343" level="INFO">${updatetime} = ((88889406, '32102151361501207279', 100000, 6135, 1, '32102151361500284867', None, Decimal('10.00'), 1, 11, 2, 0, datetime.datetime(2017, 7, 28, 11, 53, 15), datetime.datetime(2017, 7, 28, 11, 53, 15)...</msg>
<status status="PASS" endtime="20170728 11:52:11.343" starttime="20170728 11:52:11.330"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.345" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 11:52:11.345" starttime="20170728 11:52:11.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 11:52:11.347" level="INFO">ajb_account_transaction表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 11:52:11.347" starttime="20170728 11:52:11.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.348" level="INFO">${current_time_before_30} = 2017-07-28 11:52:01.325</msg>
<status status="PASS" endtime="20170728 11:52:11.349" starttime="20170728 11:52:11.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.350" level="INFO">${current_time_after_30} = 2017-07-28 11:53:16.325</msg>
<status status="PASS" endtime="20170728 11:52:11.350" starttime="20170728 11:52:11.349"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:11.351" starttime="20170728 11:52:11.309"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 11:52:11.353" level="INFO">Executing : Query  |  select * from ajb_account_transaction where account_id ='6135' and update_time between' 2017-07-28 11:52:01.325' and '2017-07-28 11:53:16.325' </msg>
<msg timestamp="20170728 11:52:11.364" level="INFO">${user_id} = ((88889406, '32102151361501207279', 100000, 6135, 1, '32102151361500284867', None, Decimal('10.00'), 1, 11, 2, 0, datetime.datetime(2017, 7, 28, 11, 53, 15), datetime.datetime(2017, 7, 28, 11, 53, 15)...</msg>
<status status="PASS" endtime="20170728 11:52:11.364" starttime="20170728 11:52:11.351"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 11:52:11.366" level="INFO">Length is 20</msg>
<msg timestamp="20170728 11:52:11.367" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 11:52:11.367" starttime="20170728 11:52:11.365"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 11:52:11.369" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 11:52:11.369" starttime="20170728 11:52:11.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 11:52:11.371" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 11:52:11.371" starttime="20170728 11:52:11.370"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 11:52:11.372" starttime="20170728 11:52:11.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 11:52:11.373" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 11:52:11.374" starttime="20170728 11:52:11.373"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.375" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 11:52:11.376" starttime="20170728 11:52:11.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no的值正确</arg>
</arguments>
<msg timestamp="20170728 11:52:11.377" level="INFO">channel_no的值正确</msg>
<status status="PASS" endtime="20170728 11:52:11.377" starttime="20170728 11:52:11.376"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${args11}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${orderNum}</arg>
</arguments>
<assign>
<var>${bill_order_num}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 11:52:11.381" starttime="20170728 11:52:11.379"></status>
</kw>
<msg timestamp="20170728 11:52:11.382" level="INFO">${bill_order_num} = 32102151361500284867</msg>
<status status="PASS" endtime="20170728 11:52:11.382" starttime="20170728 11:52:11.377"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>${bill_order_num}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.383" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 11:52:11.384" starttime="20170728 11:52:11.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170728 11:52:11.385" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170728 11:52:11.385" starttime="20170728 11:52:11.384"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>11</arg>
</arguments>
<status status="PASS" endtime="20170728 11:52:11.390" starttime="20170728 11:52:11.389"></status>
</kw>
<msg timestamp="20170728 11:52:11.390" level="INFO">${event_code} = 11</msg>
<status status="PASS" endtime="20170728 11:52:11.390" starttime="20170728 11:52:11.387"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 11:52:11.392" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 11:52:11.392" starttime="20170728 11:52:11.391"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 11:52:11.395" starttime="20170728 11:52:11.395"></status>
</kw>
<msg timestamp="20170728 11:52:11.397" level="INFO">${event_code_after} = 11</msg>
<status status="PASS" endtime="20170728 11:52:11.397" starttime="20170728 11:52:11.393"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 11:52:11.399" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 11:52:11.400" starttime="20170728 11:52:11.398"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 11:52:11.403" starttime="20170728 11:52:11.402"></status>
</kw>
<msg timestamp="20170728 11:52:11.403" level="INFO">${command_type} = 1</msg>
<status status="PASS" endtime="20170728 11:52:11.404" starttime="20170728 11:52:11.400"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<status status="PASS" endtime="20170728 11:52:11.406" starttime="20170728 11:52:11.406"></status>
</kw>
<msg timestamp="20170728 11:52:11.407" level="INFO">${amount} = 10</msg>
<status status="PASS" endtime="20170728 11:52:11.407" starttime="20170728 11:52:11.404"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 11:52:11.408" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 11:52:11.408" starttime="20170728 11:52:11.407"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>4</arg>
</arguments>
<status status="PASS" endtime="20170728 11:52:11.411" starttime="20170728 11:52:11.410"></status>
</kw>
<msg timestamp="20170728 11:52:11.411" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 11:52:11.411" starttime="20170728 11:52:11.409"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 11:52:11.414" starttime="20170728 11:52:11.413"></status>
</kw>
<msg timestamp="20170728 11:52:11.414" level="INFO">${total_amount} = 50426.00</msg>
<status status="PASS" endtime="20170728 11:52:11.414" starttime="20170728 11:52:11.412"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${balance_amount_before}-${args33}</arg>
</arguments>
<status status="PASS" endtime="20170728 11:52:11.419" starttime="20170728 11:52:11.418"></status>
</kw>
<msg timestamp="20170728 11:52:11.420" level="INFO">${balance_amount} = 50018.0</msg>
<status status="PASS" endtime="20170728 11:52:11.420" starttime="20170728 11:52:11.415"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${frozen_amount_before}+${args33}</arg>
</arguments>
<status status="PASS" endtime="20170728 11:52:11.423" starttime="20170728 11:52:11.422"></status>
</kw>
<msg timestamp="20170728 11:52:11.423" level="INFO">${frozen_amount} = 408.0</msg>
<status status="PASS" endtime="20170728 11:52:11.424" starttime="20170728 11:52:11.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.425" level="INFO">${event_code} = 11</msg>
<status status="PASS" endtime="20170728 11:52:11.425" starttime="20170728 11:52:11.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.426" level="INFO">${command_type} = 1</msg>
<status status="PASS" endtime="20170728 11:52:11.427" starttime="20170728 11:52:11.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.428" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 11:52:11.428" starttime="20170728 11:52:11.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.430" level="INFO">${amount} = 10</msg>
<status status="PASS" endtime="20170728 11:52:11.431" starttime="20170728 11:52:11.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.432" level="INFO">${total_amount} = 50426.00</msg>
<status status="PASS" endtime="20170728 11:52:11.432" starttime="20170728 11:52:11.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.433" level="INFO">${balance_amount} = 50018.0</msg>
<status status="PASS" endtime="20170728 11:52:11.434" starttime="20170728 11:52:11.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.436" level="INFO">${frozen_amount} = 408.0</msg>
<status status="PASS" endtime="20170728 11:52:11.436" starttime="20170728 11:52:11.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.437" level="INFO">${event_code_after} = 11</msg>
<status status="PASS" endtime="20170728 11:52:11.438" starttime="20170728 11:52:11.437"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:11.438" starttime="20170728 11:52:11.386"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170728 11:52:11.440" level="INFO">${pay_no_after} = None</msg>
<status status="PASS" endtime="20170728 11:52:11.440" starttime="20170728 11:52:11.439"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170728 11:52:11.441" level="INFO">Length is 4</msg>
<msg timestamp="20170728 11:52:11.441" level="INFO">${pay_no_after_length} = 4</msg>
<status status="PASS" endtime="20170728 11:52:11.442" starttime="20170728 11:52:11.440"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.444" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 11:52:11.444" starttime="20170728 11:52:11.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170728 11:52:11.445" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170728 11:52:11.446" starttime="20170728 11:52:11.445"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.447" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 11:52:11.448" starttime="20170728 11:52:11.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 11:52:11.449" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 11:52:11.449" starttime="20170728 11:52:11.448"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 11:52:11.451" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 11:52:11.452" starttime="20170728 11:52:11.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 11:52:11.453" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 11:52:11.453" starttime="20170728 11:52:11.452"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][9]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.455" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 11:52:11.455" starttime="20170728 11:52:11.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 11:52:11.456" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 11:52:11.456" starttime="20170728 11:52:11.456"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 11:52:11.458" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 11:52:11.458" starttime="20170728 11:52:11.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170728 11:52:11.459" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170728 11:52:11.460" starttime="20170728 11:52:11.458"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 11:52:11.483" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 11:52:11.483" starttime="20170728 11:52:11.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 11:52:11.484" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 11:52:11.484" starttime="20170728 11:52:11.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 11:52:11.485" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 11:52:11.486" starttime="20170728 11:52:11.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170728 11:52:11.487" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170728 11:52:11.487" starttime="20170728 11:52:11.486"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170728 11:52:11.488" level="INFO">${user_id[0][0]_transaction} = 88889406</msg>
<status status="PASS" endtime="20170728 11:52:11.489" starttime="20170728 11:52:11.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.490" level="INFO">${user_id[0][0]_transaction} = 88889406</msg>
<status status="PASS" endtime="20170728 11:52:11.490" starttime="20170728 11:52:11.489"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id[0][0]}'</arg>
</arguments>
<assign>
<var>${user_id_unilateral_delete1}</var>
</assign>
<msg timestamp="20170728 11:52:11.492" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88889406' </msg>
<msg timestamp="20170728 11:52:11.534" level="INFO">${user_id_unilateral_delete1} = None</msg>
<status status="PASS" endtime="20170728 11:52:11.534" starttime="20170728 11:52:11.491"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:11.535" starttime="20170728 11:52:11.294"></status>
</kw>
<kw name="表account_amount的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_amount</arg>
</arguments>
<msg timestamp="20170728 11:52:11.537" level="INFO">现在开始校验表account_amount</msg>
<status status="PASS" endtime="20170728 11:52:11.537" starttime="20170728 11:52:11.536"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 11:52:11.539" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 11:52:11.549" starttime="20170728 11:52:11.539"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:11.550" starttime="20170728 11:52:11.538"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:11.551" starttime="20170728 11:52:11.537"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time1}</var>
</assign>
<msg timestamp="20170728 11:52:11.553" level="INFO">${current_time1} = 2017-07-28 11:52:11.552</msg>
<status status="PASS" endtime="20170728 11:52:11.553" starttime="20170728 11:52:11.551"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_before_30}</var>
</assign>
<msg timestamp="20170728 11:52:11.555" level="INFO">${current_time1_before_30} = 2017-07-28 11:51:11.552</msg>
<status status="PASS" endtime="20170728 11:52:11.556" starttime="20170728 11:52:11.554"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_after_30}</var>
</assign>
<msg timestamp="20170728 11:52:11.557" level="INFO">${current_time1_after_30} = 2017-07-28 11:53:11.552</msg>
<status status="PASS" endtime="20170728 11:52:11.558" starttime="20170728 11:52:11.556"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 11:52:11.559" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 11:52:11.564" level="INFO">${user_id} = ((12449, 6135, Decimal('50426.00'), Decimal('50018.00'), Decimal('408.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 11, 53, 15), 0),)</msg>
<status status="PASS" endtime="20170728 11:52:11.565" starttime="20170728 11:52:11.558"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>11</arg>
</arguments>
<status status="PASS" endtime="20170728 11:52:11.569" starttime="20170728 11:52:11.568"></status>
</kw>
<msg timestamp="20170728 11:52:11.570" level="INFO">${event_code} = 11</msg>
<status status="PASS" endtime="20170728 11:52:11.570" starttime="20170728 11:52:11.566"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 11:52:11.571" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 11:52:11.572" starttime="20170728 11:52:11.570"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 11:52:11.574" starttime="20170728 11:52:11.573"></status>
</kw>
<msg timestamp="20170728 11:52:11.574" level="INFO">${event_code_after} = 11</msg>
<status status="PASS" endtime="20170728 11:52:11.574" starttime="20170728 11:52:11.572"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 11:52:11.576" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 11:52:11.576" starttime="20170728 11:52:11.575"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 11:52:11.578" starttime="20170728 11:52:11.578"></status>
</kw>
<msg timestamp="20170728 11:52:11.579" level="INFO">${command_type} = 1</msg>
<status status="PASS" endtime="20170728 11:52:11.579" starttime="20170728 11:52:11.576"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<status status="PASS" endtime="20170728 11:52:11.582" starttime="20170728 11:52:11.581"></status>
</kw>
<msg timestamp="20170728 11:52:11.582" level="INFO">${amount} = 10</msg>
<status status="PASS" endtime="20170728 11:52:11.582" starttime="20170728 11:52:11.580"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 11:52:11.584" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 11:52:11.584" starttime="20170728 11:52:11.583"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>4</arg>
</arguments>
<status status="PASS" endtime="20170728 11:52:11.587" starttime="20170728 11:52:11.586"></status>
</kw>
<msg timestamp="20170728 11:52:11.588" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 11:52:11.588" starttime="20170728 11:52:11.584"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 11:52:11.592" starttime="20170728 11:52:11.591"></status>
</kw>
<msg timestamp="20170728 11:52:11.592" level="INFO">${total_amount} = 50426.00</msg>
<status status="PASS" endtime="20170728 11:52:11.593" starttime="20170728 11:52:11.589"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${balance_amount_before}-${args33}</arg>
</arguments>
<status status="PASS" endtime="20170728 11:52:11.597" starttime="20170728 11:52:11.596"></status>
</kw>
<msg timestamp="20170728 11:52:11.597" level="INFO">${balance_amount} = 50018.0</msg>
<status status="PASS" endtime="20170728 11:52:11.598" starttime="20170728 11:52:11.594"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${frozen_amount_before}+${args33}</arg>
</arguments>
<status status="PASS" endtime="20170728 11:52:11.600" starttime="20170728 11:52:11.600"></status>
</kw>
<msg timestamp="20170728 11:52:11.601" level="INFO">${frozen_amount} = 408.0</msg>
<status status="PASS" endtime="20170728 11:52:11.601" starttime="20170728 11:52:11.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.602" level="INFO">${event_code} = 11</msg>
<status status="PASS" endtime="20170728 11:52:11.603" starttime="20170728 11:52:11.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.604" level="INFO">${command_type} = 1</msg>
<status status="PASS" endtime="20170728 11:52:11.605" starttime="20170728 11:52:11.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.607" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 11:52:11.607" starttime="20170728 11:52:11.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.608" level="INFO">${amount} = 10</msg>
<status status="PASS" endtime="20170728 11:52:11.609" starttime="20170728 11:52:11.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.610" level="INFO">${total_amount} = 50426.00</msg>
<status status="PASS" endtime="20170728 11:52:11.610" starttime="20170728 11:52:11.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.611" level="INFO">${balance_amount} = 50018.0</msg>
<status status="PASS" endtime="20170728 11:52:11.612" starttime="20170728 11:52:11.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.614" level="INFO">${frozen_amount} = 408.0</msg>
<status status="PASS" endtime="20170728 11:52:11.614" starttime="20170728 11:52:11.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.615" level="INFO">${event_code_after} = 11</msg>
<status status="PASS" endtime="20170728 11:52:11.615" starttime="20170728 11:52:11.614"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:11.616" starttime="20170728 11:52:11.566"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 11:52:11.617" starttime="20170728 11:52:11.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 11:52:11.620" level="INFO">total_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 11:52:11.620" starttime="20170728 11:52:11.618"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.622" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 11:52:11.622" starttime="20170728 11:52:11.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 11:52:11.623" level="INFO">balance_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 11:52:11.624" starttime="20170728 11:52:11.623"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.625" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 11:52:11.625" starttime="20170728 11:52:11.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 11:52:11.626" level="INFO">frozen_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 11:52:11.627" starttime="20170728 11:52:11.626"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 11:52:11.628" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 11:52:11.628" starttime="20170728 11:52:11.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 11:52:11.631" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 11:52:11.631" starttime="20170728 11:52:11.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount校验成功！</arg>
</arguments>
<msg timestamp="20170728 11:52:11.633" level="INFO">表account_amount校验成功！</msg>
<status status="PASS" endtime="20170728 11:52:11.633" starttime="20170728 11:52:11.632"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:11.634" starttime="20170728 11:52:11.535"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.635" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=8880888 </msg>
<status status="PASS" endtime="20170728 11:52:11.715" starttime="20170728 11:52:11.635"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:11.716" critical="yes" starttime="20170728 11:52:10.672"></status>
</test>
<test id="s1-s1-s1-t2" name="当输入ajbAmount为0其他输入正确参数的时候">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 11:52:11.723" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 11:52:11.733" starttime="20170728 11:52:11.722"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:11.734" starttime="20170728 11:52:11.721"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:11.735" starttime="20170728 11:52:11.720"></status>
</kw>
<kw name="清数据" library="myResource">
<arguments>
<arg>8880888</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 11:52:11.738" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 11:52:11.746" starttime="20170728 11:52:11.737"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:11.747" starttime="20170728 11:52:11.736"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:11.748" starttime="20170728 11:52:11.736"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170728 11:52:11.750" level="INFO">Executing : Query  |  select * from ajb_account_transaction where id=8880888 </msg>
<msg timestamp="20170728 11:52:11.755" level="INFO">${check} = ()</msg>
<status status="PASS" endtime="20170728 11:52:11.756" starttime="20170728 11:52:11.749"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170728 11:52:11.757" level="INFO">Length is 0</msg>
<msg timestamp="20170728 11:52:11.758" level="INFO">${check_length} = 0</msg>
<status status="PASS" endtime="20170728 11:52:11.758" starttime="20170728 11:52:11.756"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} != 0</arg>
<arg>execute sql string</arg>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>数据库之前没有数据</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库之前没有数据</arg>
</arguments>
<msg timestamp="20170728 11:52:11.760" level="INFO">数据库之前没有数据</msg>
<status status="PASS" endtime="20170728 11:52:11.760" starttime="20170728 11:52:11.759"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:11.761" starttime="20170728 11:52:11.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库里面的这条数据清理成功啦。</arg>
</arguments>
<msg timestamp="20170728 11:52:11.762" level="INFO">数据库里面的这条数据清理成功啦。</msg>
<status status="PASS" endtime="20170728 11:52:11.762" starttime="20170728 11:52:11.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_delete}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.764" level="INFO">${id_delete} = 8880888</msg>
<status status="PASS" endtime="20170728 11:52:11.764" starttime="20170728 11:52:11.763"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:11.765" starttime="20170728 11:52:11.735"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("${id_delete}","32102151361500284867","100000","6135","1","32102151361500284867","","2000","1","6","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170728 11:52:11.766" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("8880888","32102151361500284867","100000","6135","1","32102151361500284867","","2000","1","6","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170728 11:52:11.848" starttime="20170728 11:52:11.766"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>100000</arg>
<arg>32102151361500284867</arg>
<arg>0</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.850" level="INFO">${args11} = 100000</msg>
<status status="PASS" endtime="20170728 11:52:11.851" starttime="20170728 11:52:11.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.852" level="INFO">${args22} = 32102151361500284867</msg>
<status status="PASS" endtime="20170728 11:52:11.852" starttime="20170728 11:52:11.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.854" level="INFO">${args33} = 0</msg>
<status status="PASS" endtime="20170728 11:52:11.854" starttime="20170728 11:52:11.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.855" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 11:52:11.856" starttime="20170728 11:52:11.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.857" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/freezePay</msg>
<status status="PASS" endtime="20170728 11:52:11.857" starttime="20170728 11:52:11.856"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:11.858" starttime="20170728 11:52:11.849"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 11:52:11.859" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/freezePay</msg>
<status status="PASS" endtime="20170728 11:52:11.860" starttime="20170728 11:52:11.859"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 11:52:11.861" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 11:52:11.861" starttime="20170728 11:52:11.860"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 11:52:11.864" starttime="20170728 11:52:11.863"></status>
</kw>
<msg timestamp="20170728 11:52:11.865" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 11:52:11.865" starttime="20170728 11:52:11.862"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>user_id</arg>
</arguments>
<status status="PASS" endtime="20170728 11:52:11.868" starttime="20170728 11:52:11.867"></status>
</kw>
<msg timestamp="20170728 11:52:11.868" level="INFO">${args11_after} = user_id</msg>
<status status="PASS" endtime="20170728 11:52:11.868" starttime="20170728 11:52:11.866"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 11:52:11.871" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 11:52:11.890" starttime="20170728 11:52:11.870"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:11.891" starttime="20170728 11:52:11.869"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:11.891" starttime="20170728 11:52:11.869"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 11:52:11.893" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and channel_no='1' </msg>
<msg timestamp="20170728 11:52:11.909" level="INFO">${database1} = ((9100, '32102151361499943857', 100000, 6135, 1, '32102151361499943857', '20170714000118SSP038852', Decimal('2.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, ...</msg>
<status status="PASS" endtime="20170728 11:52:11.909" starttime="20170728 11:52:11.892"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 11:52:11.911" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 11:52:11.917" level="INFO">${database} = ((12449, 6135, Decimal('50426.00'), Decimal('50018.00'), Decimal('408.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 11, 53, 15), 0),)</msg>
<status status="PASS" endtime="20170728 11:52:11.917" starttime="20170728 11:52:11.910"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 11:52:11.919" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 11:52:11.922" starttime="20170728 11:52:11.918"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 11:52:11.924" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 11:52:11.925" starttime="20170728 11:52:11.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.926" level="INFO">获得account_id值为：6135</msg>
<status status="PASS" endtime="20170728 11:52:11.926" starttime="20170728 11:52:11.925"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 11:52:11.928" level="INFO">${total_amount_before} = 50426.00</msg>
<status status="PASS" endtime="20170728 11:52:11.928" starttime="20170728 11:52:11.927"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 11:52:11.930" level="INFO">${balance_amount_before} = 50018.00</msg>
<status status="PASS" endtime="20170728 11:52:11.930" starttime="20170728 11:52:11.929"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 11:52:11.931" level="INFO">${frozen_amount_before} = 408.00</msg>
<status status="PASS" endtime="20170728 11:52:11.931" starttime="20170728 11:52:11.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.933" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 11:52:11.933" starttime="20170728 11:52:11.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.934" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 11:52:11.935" starttime="20170728 11:52:11.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.936" level="INFO">${total_amount_before} = 50426.00</msg>
<status status="PASS" endtime="20170728 11:52:11.937" starttime="20170728 11:52:11.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.938" level="INFO">${balance_amount_before} = 50018.00</msg>
<status status="PASS" endtime="20170728 11:52:11.938" starttime="20170728 11:52:11.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.940" level="INFO">${frozen_amount_before} = 408.00</msg>
<status status="PASS" endtime="20170728 11:52:11.940" starttime="20170728 11:52:11.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.941" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 11:52:11.942" starttime="20170728 11:52:11.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.943" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 11:52:11.943" starttime="20170728 11:52:11.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 11:52:11.944" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/freezePay</msg>
<status status="PASS" endtime="20170728 11:52:11.945" starttime="20170728 11:52:11.944"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:11.946" starttime="20170728 11:52:11.858"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Freeze Pay" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 11:52:12.004" starttime="20170728 11:52:11.950"></status>
</kw>
<msg timestamp="20170728 11:52:12.005" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 11:52:12.006" starttime="20170728 11:52:11.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 11:52:12.015" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 11:52:12.015" starttime="20170728 11:52:12.013"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:12.015" starttime="20170728 11:52:11.947"></status>
</kw>
<kw name="字段验证" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 11:52:12.017" level="INFO">200</msg>
<status status="PASS" endtime="20170728 11:52:12.018" starttime="20170728 11:52:12.017"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 11:52:12.019" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 11:52:12.019" starttime="20170728 11:52:12.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 11:52:12.021" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 11:52:12.021" starttime="20170728 11:52:12.020"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 11:52:12.022" level="INFO">To JSON using : content={"data":null,"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 11:52:12.022" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 11:52:12.023" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': None, u'success': True}</msg>
<status status="PASS" endtime="20170728 11:52:12.023" starttime="20170728 11:52:12.021"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 11:52:12.025" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 11:52:12.025" starttime="20170728 11:52:12.024"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 11:52:12.026" starttime="20170728 11:52:12.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 11:52:12.029" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 11:52:12.029" starttime="20170728 11:52:12.028"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<assign>
<var>@{Link1}</var>
</assign>
<msg timestamp="20170728 11:52:12.030" level="INFO">@{Link1} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 11:52:12.031" starttime="20170728 11:52:12.030"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>"${value}" in @{Link1}</arg>
<arg>Get From Dictionary</arg>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${orderNum}</var>
</assign>
<msg timestamp="20170728 11:52:12.033" level="INFO">${orderNum} = None</msg>
<status status="PASS" endtime="20170728 11:52:12.033" starttime="20170728 11:52:12.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<msg timestamp="20170728 11:52:12.035" level="INFO">${orderNum} = None</msg>
<status status="PASS" endtime="20170728 11:52:12.035" starttime="20170728 11:52:12.034"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:12.036" starttime="20170728 11:52:12.016"></status>
</kw>
<kw name="amount和表里的校验" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 11:52:12.039" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 11:52:12.049" starttime="20170728 11:52:12.038"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:12.050" starttime="20170728 11:52:12.038"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:12.050" starttime="20170728 11:52:12.037"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 11:52:12.054" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 11:52:12.059" level="INFO">${user_id} = ((12449, 6135, Decimal('50426.00'), Decimal('50018.00'), Decimal('408.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 11, 53, 15), 0),)</msg>
<status status="PASS" endtime="20170728 11:52:12.059" starttime="20170728 11:52:12.051"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 11:52:12.061" starttime="20170728 11:52:12.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 11:52:12.063" level="INFO">total_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 11:52:12.064" starttime="20170728 11:52:12.062"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 11:52:12.065" starttime="20170728 11:52:12.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 11:52:12.067" level="INFO">balance_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 11:52:12.067" starttime="20170728 11:52:12.066"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 11:52:12.069" starttime="20170728 11:52:12.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 11:52:12.070" level="INFO">frozen_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 11:52:12.071" starttime="20170728 11:52:12.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amounts的数据没有变化正确的</arg>
</arguments>
<msg timestamp="20170728 11:52:12.072" level="INFO">amounts的数据没有变化正确的</msg>
<status status="PASS" endtime="20170728 11:52:12.072" starttime="20170728 11:52:12.071"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 11:52:12.073" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 11:52:12.074" starttime="20170728 11:52:12.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount内容没有发生变化</arg>
</arguments>
<msg timestamp="20170728 11:52:12.075" level="INFO">表account_amount内容没有发生变化</msg>
<status status="PASS" endtime="20170728 11:52:12.075" starttime="20170728 11:52:12.074"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 11:52:12.076" level="INFO">${current_time} = 2017-07-28 11:52:12.076</msg>
<status status="PASS" endtime="20170728 11:52:12.076" starttime="20170728 11:52:12.075"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 11:52:12.078" level="INFO">${current_time_before_30} = 2017-07-28 11:51:12.076</msg>
<status status="PASS" endtime="20170728 11:52:12.078" starttime="20170728 11:52:12.077"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 11:52:12.080" level="INFO">${current_time_after_30} = 2017-07-28 11:53:17.076</msg>
<status status="PASS" endtime="20170728 11:52:12.080" starttime="20170728 11:52:12.079"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${bill_check}</var>
</assign>
<msg timestamp="20170728 11:52:12.081" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6135' and update_time between' 2017-07-28 11:51:12.076' and '2017-07-28 11:53:17.076' </msg>
<msg timestamp="20170728 11:52:12.086" level="INFO">${bill_check} = ()</msg>
<status status="PASS" endtime="20170728 11:52:12.086" starttime="20170728 11:52:12.081"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${bill_check}</arg>
</arguments>
<assign>
<var>${bill_check_length}</var>
</assign>
<msg timestamp="20170728 11:52:12.088" level="INFO">Length is 0</msg>
<msg timestamp="20170728 11:52:12.089" level="INFO">${bill_check_length} = 0</msg>
<status status="PASS" endtime="20170728 11:52:12.089" starttime="20170728 11:52:12.087"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${bill_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 11:52:12.091" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 11:52:12.091" starttime="20170728 11:52:12.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>account_unilateral_bill里的没有相关数据</arg>
</arguments>
<msg timestamp="20170728 11:52:12.092" level="INFO">account_unilateral_bill里的没有相关数据</msg>
<status status="PASS" endtime="20170728 11:52:12.093" starttime="20170728 11:52:12.092"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num ='${args11}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${transaction_check}</var>
</assign>
<msg timestamp="20170728 11:52:12.095" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num ='100000' and update_time between' 2017-07-28 11:51:12.076' and '2017-07-28 11:53:17.076' </msg>
<msg timestamp="20170728 11:52:12.103" level="INFO">${transaction_check} = ()</msg>
<status status="PASS" endtime="20170728 11:52:12.104" starttime="20170728 11:52:12.094"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${transaction_check}</arg>
</arguments>
<assign>
<var>${transaction_check_length}</var>
</assign>
<msg timestamp="20170728 11:52:12.105" level="INFO">Length is 0</msg>
<msg timestamp="20170728 11:52:12.106" level="INFO">${transaction_check_length} = 0</msg>
<status status="PASS" endtime="20170728 11:52:12.106" starttime="20170728 11:52:12.105"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${transaction_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 11:52:12.107" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 11:52:12.107" starttime="20170728 11:52:12.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>ajb_account_transaction里的没有相关数据</arg>
</arguments>
<msg timestamp="20170728 11:52:12.108" level="INFO">ajb_account_transaction里的没有相关数据</msg>
<status status="PASS" endtime="20170728 11:52:12.108" starttime="20170728 11:52:12.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库表里数据调用接口前后没有发生变化</arg>
</arguments>
<msg timestamp="20170728 11:52:12.109" level="INFO">数据库表里数据调用接口前后没有发生变化</msg>
<status status="PASS" endtime="20170728 11:52:12.110" starttime="20170728 11:52:12.109"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:12.110" starttime="20170728 11:52:12.036"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<msg timestamp="20170728 11:52:12.111" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=8880888 </msg>
<status status="PASS" endtime="20170728 11:52:12.155" starttime="20170728 11:52:12.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当输入艾佳币的数量为0的时候，接口返回成功，但是数据不入库里</arg>
</arguments>
<msg timestamp="20170728 11:52:12.156" level="INFO">当输入艾佳币的数量为0的时候，接口返回成功，但是数据不入库里</msg>
<status status="PASS" endtime="20170728 11:52:12.157" starttime="20170728 11:52:12.156"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:12.157" critical="yes" starttime="20170728 11:52:11.717"></status>
</test>
<test id="s1-s1-s1-t3" name="当ajbAmount为字符">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 11:52:12.163" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 11:52:12.173" starttime="20170728 11:52:12.163"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:12.174" starttime="20170728 11:52:12.162"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:12.175" starttime="20170728 11:52:12.161"></status>
</kw>
<kw name="清数据" library="myResource">
<arguments>
<arg>8880888</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 11:52:12.180" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 11:52:12.187" starttime="20170728 11:52:12.178"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:12.188" starttime="20170728 11:52:12.177"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:12.188" starttime="20170728 11:52:12.176"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170728 11:52:12.190" level="INFO">Executing : Query  |  select * from ajb_account_transaction where id=8880888 </msg>
<msg timestamp="20170728 11:52:12.197" level="INFO">${check} = ()</msg>
<status status="PASS" endtime="20170728 11:52:12.197" starttime="20170728 11:52:12.189"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170728 11:52:12.198" level="INFO">Length is 0</msg>
<msg timestamp="20170728 11:52:12.198" level="INFO">${check_length} = 0</msg>
<status status="PASS" endtime="20170728 11:52:12.199" starttime="20170728 11:52:12.198"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} != 0</arg>
<arg>execute sql string</arg>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>数据库之前没有数据</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库之前没有数据</arg>
</arguments>
<msg timestamp="20170728 11:52:12.201" level="INFO">数据库之前没有数据</msg>
<status status="PASS" endtime="20170728 11:52:12.201" starttime="20170728 11:52:12.200"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:12.201" starttime="20170728 11:52:12.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库里面的这条数据清理成功啦。</arg>
</arguments>
<msg timestamp="20170728 11:52:12.202" level="INFO">数据库里面的这条数据清理成功啦。</msg>
<status status="PASS" endtime="20170728 11:52:12.203" starttime="20170728 11:52:12.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_delete}</arg>
</arguments>
<msg timestamp="20170728 11:52:12.204" level="INFO">${id_delete} = 8880888</msg>
<status status="PASS" endtime="20170728 11:52:12.204" starttime="20170728 11:52:12.203"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:12.205" starttime="20170728 11:52:12.175"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("${id_delete}","32102151361500284867","100000","6135","1","32102151361500284867","","2000","1","6","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170728 11:52:12.206" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("8880888","32102151361500284867","100000","6135","1","32102151361500284867","","2000","1","6","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170728 11:52:12.249" starttime="20170728 11:52:12.205"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>100000</arg>
<arg>32102151361500284867</arg>
<arg>str</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 11:52:12.251" level="INFO">${args11} = 100000</msg>
<status status="PASS" endtime="20170728 11:52:12.252" starttime="20170728 11:52:12.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 11:52:12.253" level="INFO">${args22} = 32102151361500284867</msg>
<status status="PASS" endtime="20170728 11:52:12.253" starttime="20170728 11:52:12.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 11:52:12.255" level="INFO">${args33} = str</msg>
<status status="PASS" endtime="20170728 11:52:12.255" starttime="20170728 11:52:12.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 11:52:12.256" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 11:52:12.256" starttime="20170728 11:52:12.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 11:52:12.258" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/freezePay</msg>
<status status="PASS" endtime="20170728 11:52:12.258" starttime="20170728 11:52:12.257"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:12.259" starttime="20170728 11:52:12.250"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 11:52:12.261" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/freezePay</msg>
<status status="PASS" endtime="20170728 11:52:12.262" starttime="20170728 11:52:12.260"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 11:52:12.264" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 11:52:12.264" starttime="20170728 11:52:12.263"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 11:52:12.267" starttime="20170728 11:52:12.266"></status>
</kw>
<msg timestamp="20170728 11:52:12.267" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 11:52:12.267" starttime="20170728 11:52:12.265"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>user_id</arg>
</arguments>
<status status="PASS" endtime="20170728 11:52:12.269" starttime="20170728 11:52:12.269"></status>
</kw>
<msg timestamp="20170728 11:52:12.270" level="INFO">${args11_after} = user_id</msg>
<status status="PASS" endtime="20170728 11:52:12.270" starttime="20170728 11:52:12.268"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 11:52:12.272" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 11:52:12.284" starttime="20170728 11:52:12.272"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:12.285" starttime="20170728 11:52:12.271"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:12.286" starttime="20170728 11:52:12.271"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 11:52:12.287" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and channel_no='1' </msg>
<msg timestamp="20170728 11:52:12.306" level="INFO">${database1} = ((9100, '32102151361499943857', 100000, 6135, 1, '32102151361499943857', '20170714000118SSP038852', Decimal('2.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, ...</msg>
<status status="PASS" endtime="20170728 11:52:12.306" starttime="20170728 11:52:12.286"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 11:52:12.308" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 11:52:12.317" level="INFO">${database} = ((12449, 6135, Decimal('50426.00'), Decimal('50018.00'), Decimal('408.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 11, 53, 15), 0),)</msg>
<status status="PASS" endtime="20170728 11:52:12.317" starttime="20170728 11:52:12.307"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 11:52:12.319" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 11:52:12.319" starttime="20170728 11:52:12.318"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 11:52:12.321" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 11:52:12.321" starttime="20170728 11:52:12.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 11:52:12.322" level="INFO">获得account_id值为：6135</msg>
<status status="PASS" endtime="20170728 11:52:12.323" starttime="20170728 11:52:12.322"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 11:52:12.324" level="INFO">${total_amount_before} = 50426.00</msg>
<status status="PASS" endtime="20170728 11:52:12.324" starttime="20170728 11:52:12.323"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 11:52:12.326" level="INFO">${balance_amount_before} = 50018.00</msg>
<status status="PASS" endtime="20170728 11:52:12.326" starttime="20170728 11:52:12.325"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 11:52:12.327" level="INFO">${frozen_amount_before} = 408.00</msg>
<status status="PASS" endtime="20170728 11:52:12.327" starttime="20170728 11:52:12.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 11:52:12.329" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 11:52:12.329" starttime="20170728 11:52:12.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 11:52:12.331" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 11:52:12.331" starttime="20170728 11:52:12.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 11:52:12.333" level="INFO">${total_amount_before} = 50426.00</msg>
<status status="PASS" endtime="20170728 11:52:12.333" starttime="20170728 11:52:12.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 11:52:12.335" level="INFO">${balance_amount_before} = 50018.00</msg>
<status status="PASS" endtime="20170728 11:52:12.336" starttime="20170728 11:52:12.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 11:52:12.338" level="INFO">${frozen_amount_before} = 408.00</msg>
<status status="PASS" endtime="20170728 11:52:12.339" starttime="20170728 11:52:12.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 11:52:12.341" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 11:52:12.341" starttime="20170728 11:52:12.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 11:52:12.343" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 11:52:12.343" starttime="20170728 11:52:12.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 11:52:12.344" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/freezePay</msg>
<status status="PASS" endtime="20170728 11:52:12.344" starttime="20170728 11:52:12.344"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:12.345" starttime="20170728 11:52:12.259"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Freeze Pay" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 11:52:12.358" starttime="20170728 11:52:12.348"></status>
</kw>
<msg timestamp="20170728 11:52:12.359" level="INFO">${data} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20170728 11:52:12.359" starttime="20170728 11:52:12.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 11:52:12.360" level="INFO">${data} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20170728 11:52:12.361" starttime="20170728 11:52:12.359"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:12.361" starttime="20170728 11:52:12.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 11:52:12.363" level="INFO">400</msg>
<status status="PASS" endtime="20170728 11:52:12.363" starttime="20170728 11:52:12.362"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20170728 11:52:12.365" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 11:52:12.365" starttime="20170728 11:52:12.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>400由于语法格式有误，服务器无法理解此请求。</arg>
</arguments>
<msg timestamp="20170728 11:52:12.366" level="INFO">400由于语法格式有误，服务器无法理解此请求。</msg>
<status status="PASS" endtime="20170728 11:52:12.367" starttime="20170728 11:52:12.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 11:52:12.368" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 11:52:12.368" starttime="20170728 11:52:12.367"></status>
</kw>
<kw name="amount和表里的校验" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 11:52:12.372" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 11:52:12.381" starttime="20170728 11:52:12.371"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:12.382" starttime="20170728 11:52:12.371"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:12.382" starttime="20170728 11:52:12.370"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 11:52:12.384" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 11:52:12.388" level="INFO">${user_id} = ((12449, 6135, Decimal('50426.00'), Decimal('50018.00'), Decimal('408.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 11, 53, 15), 0),)</msg>
<status status="PASS" endtime="20170728 11:52:12.388" starttime="20170728 11:52:12.383"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 11:52:12.390" starttime="20170728 11:52:12.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 11:52:12.391" level="INFO">total_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 11:52:12.391" starttime="20170728 11:52:12.390"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 11:52:12.392" starttime="20170728 11:52:12.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 11:52:12.394" level="INFO">balance_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 11:52:12.394" starttime="20170728 11:52:12.393"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 11:52:12.396" starttime="20170728 11:52:12.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 11:52:12.397" level="INFO">frozen_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 11:52:12.397" starttime="20170728 11:52:12.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amounts的数据没有变化正确的</arg>
</arguments>
<msg timestamp="20170728 11:52:12.398" level="INFO">amounts的数据没有变化正确的</msg>
<status status="PASS" endtime="20170728 11:52:12.399" starttime="20170728 11:52:12.398"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 11:52:12.400" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 11:52:12.401" starttime="20170728 11:52:12.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount内容没有发生变化</arg>
</arguments>
<msg timestamp="20170728 11:52:12.402" level="INFO">表account_amount内容没有发生变化</msg>
<status status="PASS" endtime="20170728 11:52:12.402" starttime="20170728 11:52:12.401"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 11:52:12.403" level="INFO">${current_time} = 2017-07-28 11:52:12.403</msg>
<status status="PASS" endtime="20170728 11:52:12.404" starttime="20170728 11:52:12.403"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 11:52:12.405" level="INFO">${current_time_before_30} = 2017-07-28 11:51:12.403</msg>
<status status="PASS" endtime="20170728 11:52:12.406" starttime="20170728 11:52:12.404"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 11:52:12.407" level="INFO">${current_time_after_30} = 2017-07-28 11:53:17.403</msg>
<status status="PASS" endtime="20170728 11:52:12.408" starttime="20170728 11:52:12.406"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${bill_check}</var>
</assign>
<msg timestamp="20170728 11:52:12.409" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6135' and update_time between' 2017-07-28 11:51:12.403' and '2017-07-28 11:53:17.403' </msg>
<msg timestamp="20170728 11:52:12.414" level="INFO">${bill_check} = ()</msg>
<status status="PASS" endtime="20170728 11:52:12.415" starttime="20170728 11:52:12.408"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${bill_check}</arg>
</arguments>
<assign>
<var>${bill_check_length}</var>
</assign>
<msg timestamp="20170728 11:52:12.416" level="INFO">Length is 0</msg>
<msg timestamp="20170728 11:52:12.416" level="INFO">${bill_check_length} = 0</msg>
<status status="PASS" endtime="20170728 11:52:12.417" starttime="20170728 11:52:12.415"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${bill_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 11:52:12.418" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 11:52:12.418" starttime="20170728 11:52:12.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>account_unilateral_bill里的没有相关数据</arg>
</arguments>
<msg timestamp="20170728 11:52:12.419" level="INFO">account_unilateral_bill里的没有相关数据</msg>
<status status="PASS" endtime="20170728 11:52:12.419" starttime="20170728 11:52:12.419"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num ='${args11}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${transaction_check}</var>
</assign>
<msg timestamp="20170728 11:52:12.421" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num ='100000' and update_time between' 2017-07-28 11:51:12.403' and '2017-07-28 11:53:17.403' </msg>
<msg timestamp="20170728 11:52:12.432" level="INFO">${transaction_check} = ()</msg>
<status status="PASS" endtime="20170728 11:52:12.432" starttime="20170728 11:52:12.420"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${transaction_check}</arg>
</arguments>
<assign>
<var>${transaction_check_length}</var>
</assign>
<msg timestamp="20170728 11:52:12.434" level="INFO">Length is 0</msg>
<msg timestamp="20170728 11:52:12.434" level="INFO">${transaction_check_length} = 0</msg>
<status status="PASS" endtime="20170728 11:52:12.434" starttime="20170728 11:52:12.433"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${transaction_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 11:52:12.435" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 11:52:12.436" starttime="20170728 11:52:12.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>ajb_account_transaction里的没有相关数据</arg>
</arguments>
<msg timestamp="20170728 11:52:12.437" level="INFO">ajb_account_transaction里的没有相关数据</msg>
<status status="PASS" endtime="20170728 11:52:12.437" starttime="20170728 11:52:12.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库表里数据调用接口前后没有发生变化</arg>
</arguments>
<msg timestamp="20170728 11:52:12.438" level="INFO">数据库表里数据调用接口前后没有发生变化</msg>
<status status="PASS" endtime="20170728 11:52:12.438" starttime="20170728 11:52:12.437"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:12.439" starttime="20170728 11:52:12.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>输入已有的user_id和amount为字符的时候，语法错误，报400</arg>
</arguments>
<msg timestamp="20170728 11:52:12.440" level="INFO">输入已有的user_id和amount为字符的时候，语法错误，报400</msg>
<status status="PASS" endtime="20170728 11:52:12.440" starttime="20170728 11:52:12.439"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<msg timestamp="20170728 11:52:12.441" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=8880888 </msg>
<status status="PASS" endtime="20170728 11:52:12.482" starttime="20170728 11:52:12.440"></status>
</kw>
<status status="PASS" endtime="20170728 11:52:12.483" critical="yes" starttime="20170728 11:52:12.159"></status>
</test>
<status status="PASS" endtime="20170728 11:52:12.484" starttime="20170728 11:52:10.402"></status>
</suite>
<status status="PASS" endtime="20170728 11:52:12.491" starttime="20170728 11:52:10.398"></status>
</suite>
<status status="PASS" endtime="20170728 11:52:12.495" starttime="20170728 11:52:10.207"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="3">Critical Tests</stat>
<stat fail="0" pass="3">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="账户中心" pass="3">账户中心</stat>
<stat fail="0" id="s1-s1" name="订单" pass="3">账户中心.订单</stat>
<stat fail="0" id="s1-s1-s1" name="订单支付冻结（线上）" pass="3">账户中心.订单.订单支付冻结（线上）</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
