<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170728 11:48:34.168" generator="Robot 3.0.2 (Python 2.7.8 on win32)">
<suite source="F:\logs and reports\账户中心" id="s1" name="账户中心">
<suite source="F:\logs and reports\账户中心\订单" id="s1-s1" name="订单">
<suite source="F:\logs and reports\账户中心\订单\订单支付冻结（线上）.txt" id="s1-s1-s1" name="订单支付冻结（线上）">
<test id="s1-s1-s1-t1" name="输入正确的userId和orderNum，ajbAmount的参数">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 11:48:34.700" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 11:48:34.710" starttime="20170728 11:48:34.677"></status>
</kw>
<status status="PASS" endtime="20170728 11:48:34.711" starttime="20170728 11:48:34.676"></status>
</kw>
<status status="PASS" endtime="20170728 11:48:34.712" starttime="20170728 11:48:34.675"></status>
</kw>
<kw name="清数据" library="myResource">
<arguments>
<arg>8880888</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 11:48:34.717" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 11:48:34.725" starttime="20170728 11:48:34.717"></status>
</kw>
<status status="PASS" endtime="20170728 11:48:34.726" starttime="20170728 11:48:34.716"></status>
</kw>
<status status="PASS" endtime="20170728 11:48:34.727" starttime="20170728 11:48:34.714"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170728 11:48:34.728" level="INFO">Executing : Query  |  select * from ajb_account_transaction where id=8880888 </msg>
<msg timestamp="20170728 11:48:34.732" level="INFO">${check} = ()</msg>
<status status="PASS" endtime="20170728 11:48:34.733" starttime="20170728 11:48:34.728"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170728 11:48:34.734" level="INFO">Length is 0</msg>
<msg timestamp="20170728 11:48:34.734" level="INFO">${check_length} = 0</msg>
<status status="PASS" endtime="20170728 11:48:34.735" starttime="20170728 11:48:34.733"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} != 0</arg>
<arg>execute sql string</arg>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>数据库之前没有数据</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库之前没有数据</arg>
</arguments>
<msg timestamp="20170728 11:48:34.737" level="INFO">数据库之前没有数据</msg>
<status status="PASS" endtime="20170728 11:48:34.737" starttime="20170728 11:48:34.736"></status>
</kw>
<status status="PASS" endtime="20170728 11:48:34.738" starttime="20170728 11:48:34.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库里面的这条数据清理成功啦。</arg>
</arguments>
<msg timestamp="20170728 11:48:34.739" level="INFO">数据库里面的这条数据清理成功啦。</msg>
<status status="PASS" endtime="20170728 11:48:34.739" starttime="20170728 11:48:34.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_delete}</arg>
</arguments>
<msg timestamp="20170728 11:48:34.740" level="INFO">${id_delete} = 8880888</msg>
<status status="PASS" endtime="20170728 11:48:34.740" starttime="20170728 11:48:34.739"></status>
</kw>
<status status="PASS" endtime="20170728 11:48:34.741" starttime="20170728 11:48:34.712"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("${id_delete}","32102151361500284867","100000","6135","1","32102151361500284867","","2000","1","6","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170728 11:48:34.743" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("8880888","32102151361500284867","100000","6135","1","32102151361500284867","","2000","1","6","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170728 11:48:34.777" starttime="20170728 11:48:34.742"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>1000000</arg>
<arg>32102151361500284867</arg>
<arg>10</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 11:48:34.780" level="INFO">${args11} = 1000000</msg>
<status status="PASS" endtime="20170728 11:48:34.780" starttime="20170728 11:48:34.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 11:48:34.782" level="INFO">${args22} = 32102151361500284867</msg>
<status status="PASS" endtime="20170728 11:48:34.782" starttime="20170728 11:48:34.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 11:48:34.783" level="INFO">${args33} = 10</msg>
<status status="PASS" endtime="20170728 11:48:34.784" starttime="20170728 11:48:34.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 11:48:34.785" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 11:48:34.785" starttime="20170728 11:48:34.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 11:48:34.787" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/freezePay</msg>
<status status="PASS" endtime="20170728 11:48:34.787" starttime="20170728 11:48:34.786"></status>
</kw>
<status status="PASS" endtime="20170728 11:48:34.788" starttime="20170728 11:48:34.778"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 11:48:34.791" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/freezePay</msg>
<status status="PASS" endtime="20170728 11:48:34.791" starttime="20170728 11:48:34.790"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 11:48:34.794" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 11:48:34.794" starttime="20170728 11:48:34.792"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 11:48:34.796" starttime="20170728 11:48:34.796"></status>
</kw>
<msg timestamp="20170728 11:48:34.797" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 11:48:34.797" starttime="20170728 11:48:34.795"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>user_id</arg>
</arguments>
<status status="PASS" endtime="20170728 11:48:34.800" starttime="20170728 11:48:34.799"></status>
</kw>
<msg timestamp="20170728 11:48:34.800" level="INFO">${args11_after} = user_id</msg>
<status status="PASS" endtime="20170728 11:48:34.801" starttime="20170728 11:48:34.798"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 11:48:34.803" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 11:48:34.812" starttime="20170728 11:48:34.803"></status>
</kw>
<status status="PASS" endtime="20170728 11:48:34.813" starttime="20170728 11:48:34.802"></status>
</kw>
<status status="PASS" endtime="20170728 11:48:34.814" starttime="20170728 11:48:34.801"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 11:48:34.815" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='1000000' and channel_no='1' </msg>
<msg timestamp="20170728 11:48:34.873" level="INFO">${database1} = ((9022, '32102151361499849640', 1000000, 6131, 1, '32102151361499849640', '20170712200245SVE038744', Decimal('2.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 12, 20, 3, 47), datetime.datetime(2017, 7, ...</msg>
<status status="PASS" endtime="20170728 11:48:34.873" starttime="20170728 11:48:34.814"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 11:48:34.875" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6131' </msg>
<msg timestamp="20170728 11:48:34.879" level="INFO">${database} = ((12445, 6131, Decimal('50426.00'), Decimal('50034.00'), Decimal('392.00'), datetime.datetime(2017, 7, 12, 20, 3, 46), datetime.datetime(2017, 7, 28, 11, 43, 10), 0),)</msg>
<status status="PASS" endtime="20170728 11:48:34.879" starttime="20170728 11:48:34.874"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 11:48:34.881" level="INFO">${user_id_real} = 1000000</msg>
<status status="PASS" endtime="20170728 11:48:34.881" starttime="20170728 11:48:34.880"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 11:48:34.883" level="INFO">${account_id} = 6131</msg>
<status status="PASS" endtime="20170728 11:48:34.884" starttime="20170728 11:48:34.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 11:48:34.885" level="INFO">获得account_id值为：6131</msg>
<status status="PASS" endtime="20170728 11:48:34.885" starttime="20170728 11:48:34.884"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 11:48:34.887" level="INFO">${total_amount_before} = 50426.00</msg>
<status status="PASS" endtime="20170728 11:48:34.887" starttime="20170728 11:48:34.886"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 11:48:34.890" level="INFO">${balance_amount_before} = 50034.00</msg>
<status status="PASS" endtime="20170728 11:48:34.890" starttime="20170728 11:48:34.888"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 11:48:34.892" level="INFO">${frozen_amount_before} = 392.00</msg>
<status status="PASS" endtime="20170728 11:48:34.893" starttime="20170728 11:48:34.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 11:48:34.895" level="INFO">${account_id} = 6131</msg>
<status status="PASS" endtime="20170728 11:48:34.895" starttime="20170728 11:48:34.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 11:48:34.896" level="INFO">${user_id_real} = 1000000</msg>
<status status="PASS" endtime="20170728 11:48:34.897" starttime="20170728 11:48:34.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 11:48:34.898" level="INFO">${total_amount_before} = 50426.00</msg>
<status status="PASS" endtime="20170728 11:48:34.898" starttime="20170728 11:48:34.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 11:48:34.901" level="INFO">${balance_amount_before} = 50034.00</msg>
<status status="PASS" endtime="20170728 11:48:34.902" starttime="20170728 11:48:34.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 11:48:34.905" level="INFO">${frozen_amount_before} = 392.00</msg>
<status status="PASS" endtime="20170728 11:48:34.905" starttime="20170728 11:48:34.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 11:48:34.906" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 11:48:34.907" starttime="20170728 11:48:34.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 11:48:34.908" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 11:48:34.909" starttime="20170728 11:48:34.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 11:48:34.910" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/freezePay</msg>
<status status="PASS" endtime="20170728 11:48:34.911" starttime="20170728 11:48:34.909"></status>
</kw>
<status status="PASS" endtime="20170728 11:48:34.911" starttime="20170728 11:48:34.789"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Freeze Pay" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 11:48:35.013" starttime="20170728 11:48:34.914"></status>
</kw>
<msg timestamp="20170728 11:48:35.014" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 11:48:35.015" starttime="20170728 11:48:34.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 11:48:35.016" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 11:48:35.016" starttime="20170728 11:48:35.015"></status>
</kw>
<status status="PASS" endtime="20170728 11:48:35.017" starttime="20170728 11:48:34.912"></status>
</kw>
<kw name="字段验证" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 11:48:35.019" level="INFO">200</msg>
<status status="PASS" endtime="20170728 11:48:35.019" starttime="20170728 11:48:35.018"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 11:48:35.020" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 11:48:35.021" starttime="20170728 11:48:35.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 11:48:35.022" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 11:48:35.022" starttime="20170728 11:48:35.021"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 11:48:35.024" level="INFO">To JSON using : content={"data":null,"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 11:48:35.024" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 11:48:35.024" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': None, u'success': True}</msg>
<status status="PASS" endtime="20170728 11:48:35.025" starttime="20170728 11:48:35.023"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 11:48:35.026" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 11:48:35.027" starttime="20170728 11:48:35.025"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 11:48:35.028" starttime="20170728 11:48:35.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 11:48:35.029" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 11:48:35.030" starttime="20170728 11:48:35.029"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<assign>
<var>@{Link1}</var>
</assign>
<msg timestamp="20170728 11:48:35.032" level="INFO">@{Link1} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 11:48:35.033" starttime="20170728 11:48:35.031"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>"${value}" in @{Link1}</arg>
<arg>Get From Dictionary</arg>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${orderNum}</var>
</assign>
<msg timestamp="20170728 11:48:35.035" level="INFO">${orderNum} = None</msg>
<status status="PASS" endtime="20170728 11:48:35.035" starttime="20170728 11:48:35.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<msg timestamp="20170728 11:48:35.037" level="INFO">${orderNum} = None</msg>
<status status="PASS" endtime="20170728 11:48:35.037" starttime="20170728 11:48:35.036"></status>
</kw>
<status status="PASS" endtime="20170728 11:48:35.038" starttime="20170728 11:48:35.017"></status>
</kw>
<kw name="表account_unilateral_bill的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_unilateral_bill</arg>
</arguments>
<msg timestamp="20170728 11:48:35.040" level="INFO">现在开始校验表account_unilateral_bill</msg>
<status status="PASS" endtime="20170728 11:48:35.040" starttime="20170728 11:48:35.039"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 11:48:35.043" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 11:48:35.053" starttime="20170728 11:48:35.042"></status>
</kw>
<status status="PASS" endtime="20170728 11:48:35.054" starttime="20170728 11:48:35.041"></status>
</kw>
<status status="PASS" endtime="20170728 11:48:35.054" starttime="20170728 11:48:35.041"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>account_unilateral_bill</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 11:48:35.059" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 11:48:35.067" starttime="20170728 11:48:35.058"></status>
</kw>
<status status="PASS" endtime="20170728 11:48:35.068" starttime="20170728 11:48:35.057"></status>
</kw>
<status status="PASS" endtime="20170728 11:48:35.068" starttime="20170728 11:48:35.056"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 11:48:35.069" level="INFO">${current_time} = 2017-07-28 11:48:35.069</msg>
<status status="PASS" endtime="20170728 11:48:35.070" starttime="20170728 11:48:35.069"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>10 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 11:48:35.076" level="INFO">${current_time_before_30} = 2017-07-28 11:48:25.069</msg>
<status status="PASS" endtime="20170728 11:48:35.076" starttime="20170728 11:48:35.070"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 11:48:35.078" level="INFO">${current_time_after_30} = 2017-07-28 11:49:40.069</msg>
<status status="PASS" endtime="20170728 11:48:35.078" starttime="20170728 11:48:35.077"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 11:48:35.080" level="INFO">Executing : Query  |  select * from account_unilateral_bill where user_id='1000000' and update_time between' 2017-07-28 11:48:25.069' and '2017-07-28 11:49:40.069' </msg>
<msg timestamp="20170728 11:48:35.091" level="INFO">${updatetime} = ((6693, '32102151361501207261', 1000000, 6161, '32102151361501207260', 1, 11, 1, Decimal('10.00'), None, datetime.datetime(2017, 7, 28, 11, 49, 27), datetime.datetime(2017, 7, 28, 11, 49, 27), 0), (66...</msg>
<status status="PASS" endtime="20170728 11:48:35.091" starttime="20170728 11:48:35.079"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 11:48:35.093" level="INFO">Length is 2</msg>
<status status="PASS" endtime="20170728 11:48:35.093" starttime="20170728 11:48:35.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 11:48:35.095" level="INFO">account_unilateral_bill表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 11:48:35.095" starttime="20170728 11:48:35.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 11:48:35.097" level="INFO">${current_time_before_30} = 2017-07-28 11:48:25.069</msg>
<status status="PASS" endtime="20170728 11:48:35.097" starttime="20170728 11:48:35.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 11:48:35.099" level="INFO">${current_time_after_30} = 2017-07-28 11:49:40.069</msg>
<status status="PASS" endtime="20170728 11:48:35.099" starttime="20170728 11:48:35.098"></status>
</kw>
<status status="PASS" endtime="20170728 11:48:35.100" starttime="20170728 11:48:35.055"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id} 'and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 11:48:35.102" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6131 'and update_time between' 2017-07-28 11:48:25.069' and '2017-07-28 11:49:40.069' </msg>
<msg timestamp="20170728 11:48:35.110" level="INFO">${user_id} = ()</msg>
<status status="PASS" endtime="20170728 11:48:35.110" starttime="20170728 11:48:35.101"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170728 11:48:35.111" level="FAIL">Resolving variable '${user_id[0][1]}' failed: IndexError: tuple index out of range</msg>
<status status="FAIL" endtime="20170728 11:48:35.112" starttime="20170728 11:48:35.111"></status>
</kw>
<status status="FAIL" endtime="20170728 11:48:35.112" starttime="20170728 11:48:35.038"></status>
</kw>
<status status="FAIL" endtime="20170728 11:48:35.113" critical="yes" starttime="20170728 11:48:34.672">Resolving variable '${user_id[0][1]}' failed: IndexError: tuple index out of range</status>
</test>
<status status="FAIL" endtime="20170728 11:48:35.114" starttime="20170728 11:48:34.394"></status>
</suite>
<status status="FAIL" endtime="20170728 11:48:35.120" starttime="20170728 11:48:34.390"></status>
</suite>
<status status="FAIL" endtime="20170728 11:48:35.125" starttime="20170728 11:48:34.198"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="0">Critical Tests</stat>
<stat fail="1" pass="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="1" id="s1" name="账户中心" pass="0">账户中心</stat>
<stat fail="1" id="s1-s1" name="订单" pass="0">账户中心.订单</stat>
<stat fail="1" id="s1-s1-s1" name="订单支付冻结（线上）" pass="0">账户中心.订单.订单支付冻结（线上）</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
