<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170728 14:16:42.314" generator="Robot 3.0.2 (Python 2.7.8 on win32)">
<suite source="F:\logs and reports\账户中心" id="s1" name="账户中心">
<suite source="F:\logs and reports\账户中心\订单" id="s1-s1" name="订单">
<suite source="F:\logs and reports\账户中心\订单\订单取消支付（线上）.txt" id="s1-s1-s1" name="订单取消支付（线上）">
<test id="s1-s1-s1-t1" name="输入正确的订单冻结oderNum">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 14:16:42.866" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 14:16:42.893" starttime="20170728 14:16:42.842"></status>
</kw>
<status status="PASS" endtime="20170728 14:16:42.895" starttime="20170728 14:16:42.841"></status>
</kw>
<status status="PASS" endtime="20170728 14:16:42.895" starttime="20170728 14:16:42.840"></status>
</kw>
<kw name="清数据" library="myResource">
<arguments>
<arg>888888</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 14:16:42.899" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 14:16:42.922" starttime="20170728 14:16:42.899"></status>
</kw>
<status status="PASS" endtime="20170728 14:16:42.924" starttime="20170728 14:16:42.897"></status>
</kw>
<status status="PASS" endtime="20170728 14:16:42.925" starttime="20170728 14:16:42.897"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170728 14:16:42.927" level="INFO">Executing : Query  |  select * from ajb_account_transaction where id=888888 </msg>
<msg timestamp="20170728 14:16:42.940" level="INFO">${check} = ((888888, '32102151361500975216', 100000, 6135, 1, '32102151361500012119', '', Decimal('2.00'), 1, 11, 2, 0, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)),)</msg>
<status status="PASS" endtime="20170728 14:16:42.941" starttime="20170728 14:16:42.926"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170728 14:16:42.943" level="INFO">Length is 1</msg>
<msg timestamp="20170728 14:16:42.943" level="INFO">${check_length} = 1</msg>
<status status="PASS" endtime="20170728 14:16:42.944" starttime="20170728 14:16:42.942"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} != 0</arg>
<arg>execute sql string</arg>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>数据库之前没有数据</arg>
</arguments>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<msg timestamp="20170728 14:16:42.948" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=888888 </msg>
<status status="PASS" endtime="20170728 14:16:42.991" starttime="20170728 14:16:42.946"></status>
</kw>
<status status="PASS" endtime="20170728 14:16:42.993" starttime="20170728 14:16:42.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库里面的这条数据清理成功啦。</arg>
</arguments>
<msg timestamp="20170728 14:16:42.999" level="INFO">数据库里面的这条数据清理成功啦。</msg>
<status status="PASS" endtime="20170728 14:16:43.001" starttime="20170728 14:16:42.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_delete}</arg>
</arguments>
<msg timestamp="20170728 14:16:43.006" level="INFO">${id_delete} = 888888</msg>
<status status="PASS" endtime="20170728 14:16:43.007" starttime="20170728 14:16:43.003"></status>
</kw>
<status status="PASS" endtime="20170728 14:16:43.009" starttime="20170728 14:16:42.896"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("${id_delete}","32102151361500975216","100000","6135","1","32102151361500012119","","2","1","11","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170728 14:16:43.019" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("888888","32102151361500975216","100000","6135","1","32102151361500012119","","2","1","11","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170728 14:16:43.078" starttime="20170728 14:16:43.014"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>32102151361500012119</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 14:16:43.081" level="INFO">${args11} = 32102151361500012119</msg>
<status status="PASS" endtime="20170728 14:16:43.082" starttime="20170728 14:16:43.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 14:16:43.083" level="INFO">${args22} = </msg>
<status status="PASS" endtime="20170728 14:16:43.084" starttime="20170728 14:16:43.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 14:16:43.085" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170728 14:16:43.086" starttime="20170728 14:16:43.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 14:16:43.087" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 14:16:43.088" starttime="20170728 14:16:43.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 14:16:43.090" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/cancelPay</msg>
<status status="PASS" endtime="20170728 14:16:43.091" starttime="20170728 14:16:43.089"></status>
</kw>
<status status="PASS" endtime="20170728 14:16:43.092" starttime="20170728 14:16:43.079"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 14:16:43.096" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/cancelPay</msg>
<status status="PASS" endtime="20170728 14:16:43.097" starttime="20170728 14:16:43.095"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 14:16:43.098" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 14:16:43.098" starttime="20170728 14:16:43.097"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 14:16:43.101" starttime="20170728 14:16:43.100"></status>
</kw>
<msg timestamp="20170728 14:16:43.102" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 14:16:43.102" starttime="20170728 14:16:43.099"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>order_num</arg>
</arguments>
<status status="PASS" endtime="20170728 14:16:43.105" starttime="20170728 14:16:43.104"></status>
</kw>
<msg timestamp="20170728 14:16:43.106" level="INFO">${args11_after} = order_num</msg>
<status status="PASS" endtime="20170728 14:16:43.106" starttime="20170728 14:16:43.103"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 14:16:43.110" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 14:16:43.121" starttime="20170728 14:16:43.109"></status>
</kw>
<status status="PASS" endtime="20170728 14:16:43.123" starttime="20170728 14:16:43.108"></status>
</kw>
<status status="PASS" endtime="20170728 14:16:43.124" starttime="20170728 14:16:43.107"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 14:16:43.126" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num='32102151361500012119' and channel_no='1' </msg>
<msg timestamp="20170728 14:16:43.138" level="INFO">${database1} = ((9242, '32102151361500012119', 100000, 6135, 1, '32102151361500012119', '20170717133633HCE041747', Decimal('2000.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 17, 13, 36, 36), datetime.datetime(2017, ...</msg>
<status status="PASS" endtime="20170728 14:16:43.139" starttime="20170728 14:16:43.125"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 14:16:43.143" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 14:16:43.151" level="INFO">${database} = ((12449, 6135, Decimal('50424.00'), Decimal('49582.00'), Decimal('842.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 14, 17, 28), 0),)</msg>
<status status="PASS" endtime="20170728 14:16:43.152" starttime="20170728 14:16:43.140"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 14:16:43.154" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 14:16:43.155" starttime="20170728 14:16:43.153"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 14:16:43.158" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 14:16:43.159" starttime="20170728 14:16:43.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 14:16:43.161" level="INFO">获得account_id值为：6135</msg>
<status status="PASS" endtime="20170728 14:16:43.162" starttime="20170728 14:16:43.160"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 14:16:43.164" level="INFO">${total_amount_before} = 50424.00</msg>
<status status="PASS" endtime="20170728 14:16:43.164" starttime="20170728 14:16:43.163"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 14:16:43.166" level="INFO">${balance_amount_before} = 49582.00</msg>
<status status="PASS" endtime="20170728 14:16:43.166" starttime="20170728 14:16:43.165"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 14:16:43.168" level="INFO">${frozen_amount_before} = 842.00</msg>
<status status="PASS" endtime="20170728 14:16:43.169" starttime="20170728 14:16:43.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 14:16:43.171" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 14:16:43.172" starttime="20170728 14:16:43.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 14:16:43.174" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 14:16:43.174" starttime="20170728 14:16:43.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 14:16:43.176" level="INFO">${total_amount_before} = 50424.00</msg>
<status status="PASS" endtime="20170728 14:16:43.176" starttime="20170728 14:16:43.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 14:16:43.178" level="INFO">${balance_amount_before} = 49582.00</msg>
<status status="PASS" endtime="20170728 14:16:43.178" starttime="20170728 14:16:43.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 14:16:43.180" level="INFO">${frozen_amount_before} = 842.00</msg>
<status status="PASS" endtime="20170728 14:16:43.180" starttime="20170728 14:16:43.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 14:16:43.182" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 14:16:43.182" starttime="20170728 14:16:43.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 14:16:43.185" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 14:16:43.186" starttime="20170728 14:16:43.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 14:16:43.188" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/cancelPay</msg>
<status status="PASS" endtime="20170728 14:16:43.188" starttime="20170728 14:16:43.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170728 14:16:43.190" level="INFO">${database} = ((12449, 6135, Decimal('50424.00'), Decimal('49582.00'), Decimal('842.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 14, 17, 28), 0),)</msg>
<status status="PASS" endtime="20170728 14:16:43.191" starttime="20170728 14:16:43.189"></status>
</kw>
<status status="PASS" endtime="20170728 14:16:43.191" starttime="20170728 14:16:43.093"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Ajb Withdraw Cancel" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 14:16:43.296" starttime="20170728 14:16:43.195"></status>
</kw>
<msg timestamp="20170728 14:16:43.297" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 14:16:43.298" starttime="20170728 14:16:43.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 14:16:43.299" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 14:16:43.300" starttime="20170728 14:16:43.299"></status>
</kw>
<status status="PASS" endtime="20170728 14:16:43.301" starttime="20170728 14:16:43.192"></status>
</kw>
<kw name="字段验证" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 14:16:43.303" level="INFO">200</msg>
<status status="PASS" endtime="20170728 14:16:43.303" starttime="20170728 14:16:43.302"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 14:16:43.305" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 14:16:43.305" starttime="20170728 14:16:43.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 14:16:43.307" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 14:16:43.308" starttime="20170728 14:16:43.306"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 14:16:43.310" level="INFO">To JSON using : content={"data":null,"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 14:16:43.311" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 14:16:43.312" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': None, u'success': True}</msg>
<status status="PASS" endtime="20170728 14:16:43.312" starttime="20170728 14:16:43.309"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 14:16:43.314" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 14:16:43.314" starttime="20170728 14:16:43.313"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 14:16:43.316" starttime="20170728 14:16:43.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 14:16:43.317" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 14:16:43.318" starttime="20170728 14:16:43.317"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<assign>
<var>@{Link1}</var>
</assign>
<msg timestamp="20170728 14:16:43.319" level="INFO">@{Link1} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 14:16:43.320" starttime="20170728 14:16:43.318"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>"${value}" in @{Link1}</arg>
<arg>Get From Dictionary</arg>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${orderNum}</var>
</assign>
<msg timestamp="20170728 14:16:43.322" level="INFO">${orderNum} = None</msg>
<status status="PASS" endtime="20170728 14:16:43.323" starttime="20170728 14:16:43.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<msg timestamp="20170728 14:16:43.325" level="INFO">${orderNum} = None</msg>
<status status="PASS" endtime="20170728 14:16:43.326" starttime="20170728 14:16:43.324"></status>
</kw>
<status status="PASS" endtime="20170728 14:16:43.327" starttime="20170728 14:16:43.301"></status>
</kw>
<kw name="确认取消的金额数" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 14:16:43.332" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 14:16:43.347" starttime="20170728 14:16:43.331"></status>
</kw>
<status status="PASS" endtime="20170728 14:16:43.348" starttime="20170728 14:16:43.330"></status>
</kw>
<status status="PASS" endtime="20170728 14:16:43.349" starttime="20170728 14:16:43.329"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>8</arg>
</arguments>
<assign>
<var>${event_code_judge}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>11</arg>
</arguments>
<status status="PASS" endtime="20170728 14:16:43.353" starttime="20170728 14:16:43.352"></status>
</kw>
<msg timestamp="20170728 14:16:43.354" level="INFO">${event_code_judge} = 11</msg>
<status status="PASS" endtime="20170728 14:16:43.354" starttime="20170728 14:16:43.350"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num ='${args11}' and event_code=${event_code_judge}</arg>
</arguments>
<assign>
<var>${search}</var>
</assign>
<msg timestamp="20170728 14:16:43.356" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num ='32102151361500012119' and event_code=11 </msg>
<msg timestamp="20170728 14:16:43.373" level="INFO">${search} = ((888888, '32102151361500975216', 100000, 6135, 1, '32102151361500012119', '', Decimal('2.00'), 1, 11, 2, 0, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)), (8...</msg>
<status status="PASS" endtime="20170728 14:16:43.374" starttime="20170728 14:16:43.355"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${search[0][7]}</arg>
</arguments>
<assign>
<var>${change_total_amount}</var>
</assign>
<msg timestamp="20170728 14:16:43.376" level="INFO">${change_total_amount} = 2.00</msg>
<status status="PASS" endtime="20170728 14:16:43.377" starttime="20170728 14:16:43.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${change_total_amount}</arg>
</arguments>
<msg timestamp="20170728 14:16:43.378" level="INFO">${change_total_amount} = 2.00</msg>
<status status="PASS" endtime="20170728 14:16:43.378" starttime="20170728 14:16:43.377"></status>
</kw>
<status status="PASS" endtime="20170728 14:16:43.379" starttime="20170728 14:16:43.328"></status>
</kw>
<kw name="表account_unilateral_bill的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_unilateral_bill</arg>
</arguments>
<msg timestamp="20170728 14:16:43.381" level="INFO">现在开始校验表account_unilateral_bill</msg>
<status status="PASS" endtime="20170728 14:16:43.382" starttime="20170728 14:16:43.380"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 14:16:43.386" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 14:16:43.646" starttime="20170728 14:16:43.385"></status>
</kw>
<status status="PASS" endtime="20170728 14:16:43.649" starttime="20170728 14:16:43.383"></status>
</kw>
<status status="PASS" endtime="20170728 14:16:43.652" starttime="20170728 14:16:43.382"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>account_unilateral_bill</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 14:16:43.671" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 14:16:43.691" starttime="20170728 14:16:43.667"></status>
</kw>
<status status="PASS" endtime="20170728 14:16:43.692" starttime="20170728 14:16:43.663"></status>
</kw>
<status status="PASS" endtime="20170728 14:16:43.693" starttime="20170728 14:16:43.659"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 14:16:43.694" level="INFO">${current_time} = 2017-07-28 14:16:43.694</msg>
<status status="PASS" endtime="20170728 14:16:43.695" starttime="20170728 14:16:43.693"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>10 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 14:16:43.702" level="INFO">${current_time_before_30} = 2017-07-28 14:16:33.694</msg>
<status status="PASS" endtime="20170728 14:16:43.702" starttime="20170728 14:16:43.695"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 14:16:43.705" level="INFO">${current_time_after_30} = 2017-07-28 14:17:48.694</msg>
<status status="PASS" endtime="20170728 14:16:43.706" starttime="20170728 14:16:43.703"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 14:16:43.708" level="INFO">Executing : Query  |  select * from account_unilateral_bill where user_id='100000' and update_time between' 2017-07-28 14:16:33.694' and '2017-07-28 14:17:48.694' </msg>
<msg timestamp="20170728 14:16:43.720" level="INFO">${updatetime} = ((6766, '32102151361501207430', 100000, 6135, '32102151361501207428', 1, 12, 2, Decimal('10.00'), None, datetime.datetime(2017, 7, 28, 14, 17, 28), datetime.datetime(2017, 7, 28, 14, 17, 28), 0), (676...</msg>
<status status="PASS" endtime="20170728 14:16:43.720" starttime="20170728 14:16:43.707"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 14:16:43.723" level="INFO">Length is 3</msg>
<status status="PASS" endtime="20170728 14:16:43.723" starttime="20170728 14:16:43.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 14:16:43.724" level="INFO">account_unilateral_bill表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 14:16:43.725" starttime="20170728 14:16:43.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 14:16:43.726" level="INFO">${current_time_before_30} = 2017-07-28 14:16:33.694</msg>
<status status="PASS" endtime="20170728 14:16:43.727" starttime="20170728 14:16:43.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 14:16:43.728" level="INFO">${current_time_after_30} = 2017-07-28 14:17:48.694</msg>
<status status="PASS" endtime="20170728 14:16:43.729" starttime="20170728 14:16:43.727"></status>
</kw>
<status status="PASS" endtime="20170728 14:16:43.730" starttime="20170728 14:16:43.654"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id} 'and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 14:16:43.731" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6135 'and update_time between' 2017-07-28 14:16:33.694' and '2017-07-28 14:17:48.694' </msg>
<msg timestamp="20170728 14:16:43.740" level="INFO">${user_id} = ((6766, '32102151361501207430', 100000, 6135, '32102151361501207428', 1, 12, 2, Decimal('10.00'), None, datetime.datetime(2017, 7, 28, 14, 17, 28), datetime.datetime(2017, 7, 28, 14, 17, 28), 0), (676...</msg>
<status status="PASS" endtime="20170728 14:16:43.741" starttime="20170728 14:16:43.730"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170728 14:16:43.742" level="INFO">Length is 20</msg>
<msg timestamp="20170728 14:16:43.743" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170728 14:16:43.743" starttime="20170728 14:16:43.741"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 14:16:43.745" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 14:16:43.745" starttime="20170728 14:16:43.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 14:16:43.747" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 14:16:43.747" starttime="20170728 14:16:43.746"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 14:16:43.749" starttime="20170728 14:16:43.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 14:16:43.752" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 14:16:43.752" starttime="20170728 14:16:43.749"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170728 14:16:43.755" level="INFO">Length is 20</msg>
<msg timestamp="20170728 14:16:43.755" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170728 14:16:43.756" starttime="20170728 14:16:43.753"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 14:16:43.761" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 14:16:43.762" starttime="20170728 14:16:43.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 14:16:43.764" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 14:16:43.765" starttime="20170728 14:16:43.763"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 14:16:43.767" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 14:16:43.767" starttime="20170728 14:16:43.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 14:16:43.769" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 14:16:43.769" starttime="20170728 14:16:43.768"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>12</arg>
</arguments>
<status status="PASS" endtime="20170728 14:16:43.774" starttime="20170728 14:16:43.773"></status>
</kw>
<msg timestamp="20170728 14:16:43.775" level="INFO">${event_code} = 12</msg>
<status status="PASS" endtime="20170728 14:16:43.775" starttime="20170728 14:16:43.771"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 14:16:43.777" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 14:16:43.777" starttime="20170728 14:16:43.776"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 14:16:43.782" starttime="20170728 14:16:43.781"></status>
</kw>
<msg timestamp="20170728 14:16:43.783" level="INFO">${event_code_after} = 12</msg>
<status status="PASS" endtime="20170728 14:16:43.783" starttime="20170728 14:16:43.780"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 14:16:43.784" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 14:16:43.785" starttime="20170728 14:16:43.784"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<status status="PASS" endtime="20170728 14:16:43.788" starttime="20170728 14:16:43.787"></status>
</kw>
<msg timestamp="20170728 14:16:43.789" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 14:16:43.789" starttime="20170728 14:16:43.785"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 14:16:43.793" starttime="20170728 14:16:43.792"></status>
</kw>
<msg timestamp="20170728 14:16:43.794" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 14:16:43.794" starttime="20170728 14:16:43.790"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 14:16:43.796" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 14:16:43.796" starttime="20170728 14:16:43.795"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>4</arg>
</arguments>
<status status="PASS" endtime="20170728 14:16:43.801" starttime="20170728 14:16:43.800"></status>
</kw>
<msg timestamp="20170728 14:16:43.801" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 14:16:43.802" starttime="20170728 14:16:43.798"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 14:16:43.805" starttime="20170728 14:16:43.804"></status>
</kw>
<msg timestamp="20170728 14:16:43.806" level="INFO">${total_amount} = 50424.00</msg>
<status status="PASS" endtime="20170728 14:16:43.806" starttime="20170728 14:16:43.802"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${change_total_amount}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 14:16:43.810" starttime="20170728 14:16:43.809"></status>
</kw>
<msg timestamp="20170728 14:16:43.811" level="INFO">${balance_amount} = 49584.0</msg>
<status status="PASS" endtime="20170728 14:16:43.811" starttime="20170728 14:16:43.807"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 14:16:43.815" starttime="20170728 14:16:43.814"></status>
</kw>
<msg timestamp="20170728 14:16:43.815" level="INFO">${frozen_amount} = 840.0</msg>
<status status="PASS" endtime="20170728 14:16:43.816" starttime="20170728 14:16:43.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 14:16:43.817" level="INFO">${event_code} = 12</msg>
<status status="PASS" endtime="20170728 14:16:43.818" starttime="20170728 14:16:43.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 14:16:43.820" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 14:16:43.820" starttime="20170728 14:16:43.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 14:16:43.824" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 14:16:43.825" starttime="20170728 14:16:43.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 14:16:43.827" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 14:16:43.828" starttime="20170728 14:16:43.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 14:16:43.831" level="INFO">${total_amount} = 50424.00</msg>
<status status="PASS" endtime="20170728 14:16:43.832" starttime="20170728 14:16:43.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 14:16:43.834" level="INFO">${balance_amount} = 49584.0</msg>
<status status="PASS" endtime="20170728 14:16:43.834" starttime="20170728 14:16:43.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 14:16:43.836" level="INFO">${frozen_amount} = 840.0</msg>
<status status="PASS" endtime="20170728 14:16:43.836" starttime="20170728 14:16:43.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 14:16:43.838" level="INFO">${event_code_after} = 12</msg>
<status status="PASS" endtime="20170728 14:16:43.839" starttime="20170728 14:16:43.837"></status>
</kw>
<status status="PASS" endtime="20170728 14:16:43.840" starttime="20170728 14:16:43.770"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 14:16:43.844" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 14:16:43.845" starttime="20170728 14:16:43.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 14:16:43.847" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 14:16:43.847" starttime="20170728 14:16:43.846"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 14:16:43.849" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 14:16:43.849" starttime="20170728 14:16:43.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170728 14:16:43.851" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170728 14:16:43.851" starttime="20170728 14:16:43.850"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 14:16:43.854" level="FAIL">10 != 2</msg>
<status status="FAIL" endtime="20170728 14:16:43.855" starttime="20170728 14:16:43.852"></status>
</kw>
<status status="FAIL" endtime="20170728 14:16:43.856" starttime="20170728 14:16:43.380"></status>
</kw>
<status status="FAIL" endtime="20170728 14:16:43.858" critical="yes" starttime="20170728 14:16:42.837">10 != 2</status>
</test>
<status status="FAIL" endtime="20170728 14:16:43.860" starttime="20170728 14:16:42.554"></status>
</suite>
<status status="FAIL" endtime="20170728 14:16:43.867" starttime="20170728 14:16:42.550"></status>
</suite>
<status status="FAIL" endtime="20170728 14:16:43.871" starttime="20170728 14:16:42.345"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="0">Critical Tests</stat>
<stat fail="1" pass="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="1" id="s1" name="账户中心" pass="0">账户中心</stat>
<stat fail="1" id="s1-s1" name="订单" pass="0">账户中心.订单</stat>
<stat fail="1" id="s1-s1-s1" name="订单取消支付（线上）" pass="0">账户中心.订单.订单取消支付（线上）</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
