<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170728 17:56:09.381" generator="Robot 3.0.2 (Python 2.7.8 on win32)">
<suite source="F:\logs and reports\账户中心" id="s1" name="账户中心">
<suite source="F:\logs and reports\账户中心\艾佳币" id="s1-s1" name="艾佳币">
<suite source="F:\logs and reports\账户中心\艾佳币\艾佳币充值.txt" id="s1-s1-s1" name="艾佳币充值">
<test id="s1-s1-s1-t1" name="输入未有的user_id和正确的amount参数">
<kw name="参数配置" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:56:09.983" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:56:09.995" starttime="20170728 17:56:09.955"></status>
</kw>
<status status="PASS" endtime="20170728 17:56:09.997" starttime="20170728 17:56:09.953"></status>
</kw>
<kw name="输入拥有不同类型账户的用户user_id" library="myResource">
<arguments>
<arg>100000</arg>
<arg>100000</arg>
<arg>123456783</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_user_account_id}</arg>
</arguments>
<msg timestamp="20170728 17:56:10.001" level="INFO">${boss_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170728 17:56:10.001" starttime="20170728 17:56:09.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_user_account_id}</arg>
</arguments>
<msg timestamp="20170728 17:56:10.004" level="INFO">${app_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170728 17:56:10.005" starttime="20170728 17:56:10.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${no_user_account_id}</arg>
</arguments>
<msg timestamp="20170728 17:56:10.007" level="INFO">${no_user_account_id} = 123456783</msg>
<status status="PASS" endtime="20170728 17:56:10.007" starttime="20170728 17:56:10.006"></status>
</kw>
<status status="PASS" endtime="20170728 17:56:10.008" starttime="20170728 17:56:09.998"></status>
</kw>
<status status="PASS" endtime="20170728 17:56:10.008" starttime="20170728 17:56:09.950"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>${no_user_account_id}</arg>
<arg>1</arg>
<arg>2</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:56:10.011" level="INFO">${args11} = 123456783</msg>
<status status="PASS" endtime="20170728 17:56:10.011" starttime="20170728 17:56:10.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:56:10.013" level="INFO">${args22} = 1</msg>
<status status="PASS" endtime="20170728 17:56:10.013" starttime="20170728 17:56:10.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 17:56:10.014" level="INFO">${args33} = 2</msg>
<status status="PASS" endtime="20170728 17:56:10.015" starttime="20170728 17:56:10.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 17:56:10.019" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 17:56:10.019" starttime="20170728 17:56:10.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 17:56:10.022" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</msg>
<status status="PASS" endtime="20170728 17:56:10.023" starttime="20170728 17:56:10.020"></status>
</kw>
<status status="PASS" endtime="20170728 17:56:10.024" starttime="20170728 17:56:10.009"></status>
</kw>
<kw name="参数配置" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:56:10.027" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:56:10.038" starttime="20170728 17:56:10.027"></status>
</kw>
<status status="PASS" endtime="20170728 17:56:10.039" starttime="20170728 17:56:10.026"></status>
</kw>
<kw name="输入拥有不同类型账户的用户user_id" library="myResource">
<arguments>
<arg>100000</arg>
<arg>100000</arg>
<arg>123456783</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_user_account_id}</arg>
</arguments>
<msg timestamp="20170728 17:56:10.043" level="INFO">${boss_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170728 17:56:10.044" starttime="20170728 17:56:10.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_user_account_id}</arg>
</arguments>
<msg timestamp="20170728 17:56:10.045" level="INFO">${app_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170728 17:56:10.046" starttime="20170728 17:56:10.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${no_user_account_id}</arg>
</arguments>
<msg timestamp="20170728 17:56:10.048" level="INFO">${no_user_account_id} = 123456783</msg>
<status status="PASS" endtime="20170728 17:56:10.048" starttime="20170728 17:56:10.047"></status>
</kw>
<status status="PASS" endtime="20170728 17:56:10.049" starttime="20170728 17:56:10.040"></status>
</kw>
<status status="PASS" endtime="20170728 17:56:10.050" starttime="20170728 17:56:10.025"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id ='${args11}'</arg>
</arguments>
<assign>
<var>${no_user_id}</var>
</assign>
<msg timestamp="20170728 17:56:10.052" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id ='123456783' </msg>
<msg timestamp="20170728 17:56:10.062" level="INFO">${no_user_id} = ()</msg>
<status status="PASS" endtime="20170728 17:56:10.063" starttime="20170728 17:56:10.051"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${no_user_id}</arg>
</arguments>
<msg timestamp="20170728 17:56:10.065" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170728 17:56:10.065" starttime="20170728 17:56:10.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>此user_id不存在</arg>
</arguments>
<msg timestamp="20170728 17:56:10.067" level="INFO">此user_id不存在</msg>
<status status="PASS" endtime="20170728 17:56:10.067" starttime="20170728 17:56:10.066"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 17:56:10.069" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</msg>
<status status="PASS" endtime="20170728 17:56:10.069" starttime="20170728 17:56:10.068"></status>
</kw>
<kw name="Data" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data_no_user_id}</var>
</assign>
<msg timestamp="20170728 17:56:10.142" level="INFO">${data_no_user_id} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:56:10.142" starttime="20170728 17:56:10.070"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data_no_user_id.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 17:56:10.144" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:56:10.145" starttime="20170728 17:56:10.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 17:56:10.146" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 17:56:10.146" starttime="20170728 17:56:10.145"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data_no_user_id.text}</arg>
</arguments>
<assign>
<var>${toJson1}</var>
</assign>
<msg timestamp="20170728 17:56:10.148" level="INFO">To JSON using : content={"data":{"orderNum":"32102151361501231282"},"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 17:56:10.148" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 17:56:10.149" level="INFO">${toJson1} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': {u'orderNum': u'32102151361501231282'}, u'success': True}</msg>
<status status="PASS" endtime="20170728 17:56:10.149" starttime="20170728 17:56:10.147"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson1['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 17:56:10.151" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:56:10.152" starttime="20170728 17:56:10.150"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson1['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 17:56:10.153" starttime="20170728 17:56:10.153"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${toJson1['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${no_user_id_orderNum}</var>
</assign>
<msg timestamp="20170728 17:56:10.155" level="INFO">${no_user_id_orderNum} = 32102151361501231282</msg>
<status status="PASS" endtime="20170728 17:56:10.156" starttime="20170728 17:56:10.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:56:10.157" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 17:56:10.158" starttime="20170728 17:56:10.157"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id ='${args11}'</arg>
</arguments>
<assign>
<var>${no_user_id_after}</var>
</assign>
<msg timestamp="20170728 17:56:10.159" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id ='123456783' </msg>
<msg timestamp="20170728 17:56:10.167" level="INFO">${no_user_id_after} = ((100000000090L, '32102151361501231281', 123456783, 6356, 1, 2, 0, datetime.datetime(2017, 7, 28, 17, 57, 15), datetime.datetime(2017, 7, 28, 17, 57, 15)),)</msg>
<status status="PASS" endtime="20170728 17:56:10.168" starttime="20170728 17:56:10.158"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${no_user_id_after}</arg>
</arguments>
<msg timestamp="20170728 17:56:10.170" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 17:56:10.170" starttime="20170728 17:56:10.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>调用艾佳币充值接口自动生成boss的账号</arg>
</arguments>
<msg timestamp="20170728 17:56:10.172" level="INFO">调用艾佳币充值接口自动生成boss的账号</msg>
<status status="PASS" endtime="20170728 17:56:10.173" starttime="20170728 17:56:10.171"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${no_user_id_after[0][3]}</arg>
</arguments>
<assign>
<var>${no_user_id_account_id}</var>
</assign>
<msg timestamp="20170728 17:56:10.174" level="INFO">${no_user_id_account_id} = 6356</msg>
<status status="PASS" endtime="20170728 17:56:10.175" starttime="20170728 17:56:10.173"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_open_record where user_id ='${args11}'</arg>
</arguments>
<msg timestamp="20170728 17:56:10.176" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_open_record where user_id ='123456783' </msg>
<status status="PASS" endtime="20170728 17:56:10.217" starttime="20170728 17:56:10.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>已删除该账号！</arg>
</arguments>
<msg timestamp="20170728 17:56:10.219" level="INFO">已删除该账号！</msg>
<status status="PASS" endtime="20170728 17:56:10.219" starttime="20170728 17:56:10.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_unilateral_bill</arg>
</arguments>
<msg timestamp="20170728 17:56:10.221" level="INFO">现在开始校验表account_unilateral_bill</msg>
<status status="PASS" endtime="20170728 17:56:10.221" starttime="20170728 17:56:10.220"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time_no}</var>
</assign>
<msg timestamp="20170728 17:56:10.223" level="INFO">${current_time_no} = 2017-07-28 17:56:10.222</msg>
<status status="PASS" endtime="20170728 17:56:10.223" starttime="20170728 17:56:10.222"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_no}</arg>
<arg>5 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_301}</var>
</assign>
<msg timestamp="20170728 17:56:10.229" level="INFO">${current_time_before_301} = 2017-07-28 17:56:05.222</msg>
<status status="PASS" endtime="20170728 17:56:10.229" starttime="20170728 17:56:10.224"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_no}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_302}</var>
</assign>
<msg timestamp="20170728 17:56:10.231" level="INFO">${current_time_after_302} = 2017-07-28 17:57:50.222</msg>
<status status="PASS" endtime="20170728 17:56:10.231" starttime="20170728 17:56:10.230"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${no_user_id_account_id}'and update_time between' ${current_time_before_301}' and '${current_time_after_302}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:56:10.234" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6356'and update_time between' 2017-07-28 17:56:05.222' and '2017-07-28 17:57:50.222' </msg>
<msg timestamp="20170728 17:56:10.240" level="INFO">${user_id} = ((8118, '32102151361501231286', 123456783, 6356, '32102151361501231283', 1, 7, 3, Decimal('1.00'), None, datetime.datetime(2017, 7, 28, 17, 57, 15), datetime.datetime(2017, 7, 28, 17, 57, 15), 0),)</msg>
<status status="PASS" endtime="20170728 17:56:10.241" starttime="20170728 17:56:10.232"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170728 17:56:10.243" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:56:10.244" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:56:10.245" starttime="20170728 17:56:10.241"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:56:10.246" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:56:10.247" starttime="20170728 17:56:10.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:56:10.248" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:56:10.249" starttime="20170728 17:56:10.248"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:56:10.252" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:56:10.252" starttime="20170728 17:56:10.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:56:10.254" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:56:10.254" starttime="20170728 17:56:10.253"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170728 17:56:10.255" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:56:10.256" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:56:10.256" starttime="20170728 17:56:10.255"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:56:10.259" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:56:10.259" starttime="20170728 17:56:10.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:56:10.261" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:56:10.261" starttime="20170728 17:56:10.260"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:56:10.262" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:56:10.263" starttime="20170728 17:56:10.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 17:56:10.264" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 17:56:10.265" starttime="20170728 17:56:10.264"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>7</arg>
</arguments>
<msg timestamp="20170728 17:56:10.266" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:56:10.267" starttime="20170728 17:56:10.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 17:56:10.268" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 17:56:10.269" starttime="20170728 17:56:10.268"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20170728 17:56:10.270" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:56:10.271" starttime="20170728 17:56:10.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170728 17:56:10.272" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170728 17:56:10.272" starttime="20170728 17:56:10.271"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:56:10.276" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:56:10.277" starttime="20170728 17:56:10.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 17:56:10.279" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 17:56:10.280" starttime="20170728 17:56:10.278"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${user_id[0][10]}</arg>
<arg>${user_id[0][11]}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:56:10.282" starttime="20170728 17:56:10.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 17:56:10.284" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 17:56:10.285" starttime="20170728 17:56:10.283"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:56:10.286" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:56:10.287" starttime="20170728 17:56:10.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:56:10.288" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:56:10.289" starttime="20170728 17:56:10.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170728 17:56:10.290" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170728 17:56:10.291" starttime="20170728 17:56:10.290"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_unilateral}</var>
</assign>
<msg timestamp="20170728 17:56:10.293" level="INFO">${user_id[0][0]_unilateral} = 8118</msg>
<status status="PASS" endtime="20170728 17:56:10.293" starttime="20170728 17:56:10.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_unilateral}</arg>
</arguments>
<msg timestamp="20170728 17:56:10.295" level="INFO">${user_id[0][0]_unilateral} = 8118</msg>
<status status="PASS" endtime="20170728 17:56:10.295" starttime="20170728 17:56:10.294"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]_unilateral}'</arg>
</arguments>
<msg timestamp="20170728 17:56:10.297" level="INFO">Executing : Execute SQL String  |  delete from account_unilateral_bill where id ='8118' </msg>
<status status="PASS" endtime="20170728 17:56:10.348" starttime="20170728 17:56:10.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170728 17:56:10.351" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170728 17:56:10.352" starttime="20170728 17:56:10.350"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time_nouser}</var>
</assign>
<msg timestamp="20170728 17:56:10.354" level="INFO">${current_time_nouser} = 2017-07-28 17:56:10.354</msg>
<status status="PASS" endtime="20170728 17:56:10.354" starttime="20170728 17:56:10.353"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_nouser}</arg>
<arg>5 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_3011}</var>
</assign>
<msg timestamp="20170728 17:56:10.356" level="INFO">${current_time_before_3011} = 2017-07-28 17:56:05.354</msg>
<status status="PASS" endtime="20170728 17:56:10.357" starttime="20170728 17:56:10.355"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_nouser}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_3022}</var>
</assign>
<msg timestamp="20170728 17:56:10.358" level="INFO">${current_time_after_3022} = 2017-07-28 17:57:50.354</msg>
<status status="PASS" endtime="20170728 17:56:10.359" starttime="20170728 17:56:10.357"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where account_id ='${no_user_id_account_id}' and update_time between' ${current_time_before_3011}' and '${current_time_after_3022}'</arg>
</arguments>
<assign>
<var>${user_id_no}</var>
</assign>
<msg timestamp="20170728 17:56:10.361" level="INFO">Executing : Query  |  select * from ajb_account_transaction where account_id ='6356' and update_time between' 2017-07-28 17:56:05.354' and '2017-07-28 17:57:50.354' </msg>
<msg timestamp="20170728 17:56:10.372" level="INFO">${user_id_no} = ((88889961, '32102151361501231282', 123456783, 6356, 1, '32102151361501231282', '20170728175712HXD051931', Decimal('1.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 28, 17, 57, 15), datetime.datetime(20...</msg>
<status status="PASS" endtime="20170728 17:56:10.372" starttime="20170728 17:56:10.360"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id_no[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 17:56:10.375" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:56:10.376" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:56:10.376" starttime="20170728 17:56:10.373"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:56:10.378" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:56:10.379" starttime="20170728 17:56:10.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:56:10.380" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:56:10.381" starttime="20170728 17:56:10.379"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][2]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:56:10.383" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:56:10.384" starttime="20170728 17:56:10.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:56:10.386" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:56:10.387" starttime="20170728 17:56:10.385"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][4]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:56:10.388" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:56:10.389" starttime="20170728 17:56:10.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no的值正确</arg>
</arguments>
<msg timestamp="20170728 17:56:10.391" level="INFO">channel_no的值正确</msg>
<status status="PASS" endtime="20170728 17:56:10.391" starttime="20170728 17:56:10.390"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][5]}</arg>
<arg>${no_user_id_orderNum}</arg>
</arguments>
<msg timestamp="20170728 17:56:10.393" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:56:10.394" starttime="20170728 17:56:10.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170728 17:56:10.396" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170728 17:56:10.396" starttime="20170728 17:56:10.395"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id_no[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170728 17:56:10.398" level="INFO">${pay_no_after} = 20170728175712HXD051931</msg>
<status status="PASS" endtime="20170728 17:56:10.398" starttime="20170728 17:56:10.397"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170728 17:56:10.401" level="INFO">Length is 23</msg>
<msg timestamp="20170728 17:56:10.401" level="INFO">${pay_no_after_length} = 23</msg>
<status status="PASS" endtime="20170728 17:56:10.402" starttime="20170728 17:56:10.399"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>23</arg>
</arguments>
<msg timestamp="20170728 17:56:10.403" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:56:10.404" starttime="20170728 17:56:10.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170728 17:56:10.406" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170728 17:56:10.406" starttime="20170728 17:56:10.405"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][7]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:56:10.408" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:56:10.409" starttime="20170728 17:56:10.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 17:56:10.412" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 17:56:10.414" starttime="20170728 17:56:10.411"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:56:10.417" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:56:10.418" starttime="20170728 17:56:10.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 17:56:10.420" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 17:56:10.420" starttime="20170728 17:56:10.419"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][9]}</arg>
<arg>7</arg>
</arguments>
<msg timestamp="20170728 17:56:10.422" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:56:10.423" starttime="20170728 17:56:10.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 17:56:10.424" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 17:56:10.425" starttime="20170728 17:56:10.423"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 17:56:10.427" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:56:10.427" starttime="20170728 17:56:10.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170728 17:56:10.430" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170728 17:56:10.430" starttime="20170728 17:56:10.429"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:56:10.435" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:56:10.436" starttime="20170728 17:56:10.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:56:10.438" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:56:10.439" starttime="20170728 17:56:10.437"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${user_id_no[0][12]}</arg>
<arg>${user_id_no[0][13]}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:56:10.441" starttime="20170728 17:56:10.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 17:56:10.443" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 17:56:10.443" starttime="20170728 17:56:10.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170728 17:56:10.445" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170728 17:56:10.445" starttime="20170728 17:56:10.444"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id_no[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170728 17:56:10.447" level="INFO">${user_id[0][0]_transaction} = 88889961</msg>
<status status="PASS" endtime="20170728 17:56:10.448" starttime="20170728 17:56:10.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170728 17:56:10.451" level="INFO">${user_id[0][0]_transaction} = 88889961</msg>
<status status="PASS" endtime="20170728 17:56:10.452" starttime="20170728 17:56:10.450"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id_no[0][0]}'</arg>
</arguments>
<msg timestamp="20170728 17:56:10.454" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88889961' </msg>
<status status="PASS" endtime="20170728 17:56:10.541" starttime="20170728 17:56:10.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_amount</arg>
</arguments>
<msg timestamp="20170728 17:56:10.543" level="INFO">现在开始校验表account_amount</msg>
<status status="PASS" endtime="20170728 17:56:10.543" starttime="20170728 17:56:10.542"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${no_user_id_account_id}'</arg>
</arguments>
<assign>
<var>${user_id_t}</var>
</assign>
<msg timestamp="20170728 17:56:10.545" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6356' </msg>
<msg timestamp="20170728 17:56:10.557" level="INFO">${user_id_t} = ((12670, 6356, Decimal('1.00'), Decimal('1.00'), Decimal('0.00'), datetime.datetime(2017, 7, 28, 17, 57, 15), datetime.datetime(2017, 7, 28, 17, 57, 15), 0),)</msg>
<status status="PASS" endtime="20170728 17:56:10.557" starttime="20170728 17:56:10.544"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][2]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:56:10.560" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:56:10.561" starttime="20170728 17:56:10.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:56:10.564" level="INFO">total_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:56:10.564" starttime="20170728 17:56:10.562"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][3]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:56:10.568" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:56:10.569" starttime="20170728 17:56:10.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:56:10.572" level="INFO">balance_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:56:10.572" starttime="20170728 17:56:10.570"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][4]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:56:10.574" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:56:10.574" starttime="20170728 17:56:10.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:56:10.576" level="INFO">frozen_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:56:10.576" starttime="20170728 17:56:10.575"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:56:10.577" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:56:10.578" starttime="20170728 17:56:10.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:56:10.579" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:56:10.579" starttime="20170728 17:56:10.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:56:10.581" level="INFO">表account_amount校验成功！</msg>
<status status="PASS" endtime="20170728 17:56:10.581" starttime="20170728 17:56:10.580"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_amount where account_id ='${no_user_id_account_id}'</arg>
</arguments>
<msg timestamp="20170728 17:56:10.583" level="INFO">Executing : Execute SQL String  |  delete from account_amount where account_id ='6356' </msg>
<status status="PASS" endtime="20170728 17:56:10.667" starttime="20170728 17:56:10.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>输入未有的user_id和正确的amount参数，会直接生成boss账户，然后表里的数据都入库成功！</arg>
</arguments>
<msg timestamp="20170728 17:56:10.668" level="INFO">输入未有的user_id和正确的amount参数，会直接生成boss账户，然后表里的数据都入库成功！</msg>
<status status="PASS" endtime="20170728 17:56:10.669" starttime="20170728 17:56:10.668"></status>
</kw>
<status status="PASS" endtime="20170728 17:56:10.670" critical="yes" starttime="20170728 17:56:09.945"></status>
</test>
<status status="PASS" endtime="20170728 17:56:10.671" starttime="20170728 17:56:09.628"></status>
</suite>
<status status="PASS" endtime="20170728 17:56:10.677" starttime="20170728 17:56:09.622"></status>
</suite>
<status status="PASS" endtime="20170728 17:56:10.680" starttime="20170728 17:56:09.409"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="账户中心" pass="1">账户中心</stat>
<stat fail="0" id="s1-s1" name="艾佳币" pass="1">账户中心.艾佳币</stat>
<stat fail="0" id="s1-s1-s1" name="艾佳币充值" pass="1">账户中心.艾佳币.艾佳币充值</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20170728 17:56:09.942" level="ERROR">Error in file 'F:\logs and reports\账户中心\艾佳币\艾佳币充值.txt': Resource file '艾佳币需要的操作.txt' does not exist.</msg>
</errors>
</robot>
