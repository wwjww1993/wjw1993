<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170728 16:06:24.144" generator="Robot 3.0.2 (Python 2.7.8 on win32)">
<suite source="F:\logs and reports\账户中心" id="s1" name="账户中心">
<suite source="F:\logs and reports\账户中心\艾佳币" id="s1-s1" name="艾佳币">
<suite source="F:\logs and reports\账户中心\艾佳币\艾佳币活动充值.txt" id="s1-s1-s1" name="艾佳币活动充值">
<test id="s1-s1-s1-t1" name="输入木有的user_id和正确的amount和活动代码">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 16:06:24.706" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 16:06:24.743" starttime="20170728 16:06:24.680"></status>
</kw>
<status status="PASS" endtime="20170728 16:06:24.745" starttime="20170728 16:06:24.678"></status>
</kw>
<status status="PASS" endtime="20170728 16:06:24.747" starttime="20170728 16:06:24.676"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>123456785</arg>
<arg>10</arg>
<arg>1</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 16:06:24.752" level="INFO">${args11} = 123456785</msg>
<status status="PASS" endtime="20170728 16:06:24.753" starttime="20170728 16:06:24.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 16:06:24.760" level="INFO">${args22} = 10</msg>
<status status="PASS" endtime="20170728 16:06:24.761" starttime="20170728 16:06:24.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 16:06:24.765" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170728 16:06:24.766" starttime="20170728 16:06:24.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 16:06:24.769" level="INFO">${args44} = 1</msg>
<status status="PASS" endtime="20170728 16:06:24.770" starttime="20170728 16:06:24.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 16:06:24.774" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</msg>
<status status="PASS" endtime="20170728 16:06:24.775" starttime="20170728 16:06:24.772"></status>
</kw>
<status status="PASS" endtime="20170728 16:06:24.777" starttime="20170728 16:06:24.748"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id ='${args11}'</arg>
</arguments>
<assign>
<var>${no_user_id}</var>
</assign>
<msg timestamp="20170728 16:06:24.780" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id ='123456785' </msg>
<msg timestamp="20170728 16:06:24.801" level="INFO">${no_user_id} = ()</msg>
<status status="PASS" endtime="20170728 16:06:24.802" starttime="20170728 16:06:24.778"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${no_user_id}</arg>
</arguments>
<msg timestamp="20170728 16:06:24.805" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170728 16:06:24.806" starttime="20170728 16:06:24.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>此user_id不存在</arg>
</arguments>
<msg timestamp="20170728 16:06:24.809" level="INFO">此user_id不存在</msg>
<status status="PASS" endtime="20170728 16:06:24.810" starttime="20170728 16:06:24.808"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 16:06:24.813" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</msg>
<status status="PASS" endtime="20170728 16:06:24.814" starttime="20170728 16:06:24.811"></status>
</kw>
<kw name="Ajb Activity Recharge" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data_no_user_id}</var>
</assign>
<msg timestamp="20170728 16:06:24.908" level="INFO">${data_no_user_id} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 16:06:24.911" starttime="20170728 16:06:24.815"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data_no_user_id.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 16:06:24.919" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:06:24.923" starttime="20170728 16:06:24.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 16:06:24.932" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 16:06:24.934" starttime="20170728 16:06:24.927"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data_no_user_id.text}</arg>
</arguments>
<assign>
<var>${toJson1}</var>
</assign>
<msg timestamp="20170728 16:06:24.943" level="INFO">To JSON using : content={"data":{"orderNum":"32102151361501208183"},"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 16:06:24.946" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 16:06:24.949" level="INFO">${toJson1} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': {u'orderNum': u'32102151361501208183'}, u'success': True}</msg>
<status status="PASS" endtime="20170728 16:06:24.950" starttime="20170728 16:06:24.939"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson1['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 16:06:24.955" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:06:24.958" starttime="20170728 16:06:24.953"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson1['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 16:06:24.967" starttime="20170728 16:06:24.963"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${toJson1['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${no_user_id_orderNum}</var>
</assign>
<msg timestamp="20170728 16:06:24.974" level="INFO">${no_user_id_orderNum} = 32102151361501208183</msg>
<status status="PASS" endtime="20170728 16:06:24.976" starttime="20170728 16:06:24.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 16:06:24.983" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 16:06:24.985" starttime="20170728 16:06:24.980"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id ='${args11}'and channel_no=2</arg>
</arguments>
<assign>
<var>${no_user_id_after}</var>
</assign>
<msg timestamp="20170728 16:06:24.989" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id ='123456785'and channel_no=2 </msg>
<msg timestamp="20170728 16:06:25.015" level="INFO">${no_user_id_after} = ((100000000042L, '32102151361501208182', 123456785, 6308, 2, 2, 0, datetime.datetime(2017, 7, 28, 16, 7, 30), datetime.datetime(2017, 7, 28, 16, 7, 30)),)</msg>
<status status="PASS" endtime="20170728 16:06:25.017" starttime="20170728 16:06:24.987"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${no_user_id_after}</arg>
</arguments>
<msg timestamp="20170728 16:06:25.023" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 16:06:25.025" starttime="20170728 16:06:25.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>调用艾佳币活动充值接口自动生成boss的账号</arg>
</arguments>
<msg timestamp="20170728 16:06:25.030" level="INFO">调用艾佳币活动充值接口自动生成boss的账号</msg>
<status status="PASS" endtime="20170728 16:06:25.032" starttime="20170728 16:06:25.027"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${no_user_id_after[0][3]}</arg>
</arguments>
<assign>
<var>${no_user_id_account_id}</var>
</assign>
<msg timestamp="20170728 16:06:25.036" level="INFO">${no_user_id_account_id} = 6308</msg>
<status status="PASS" endtime="20170728 16:06:25.038" starttime="20170728 16:06:25.034"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_open_record where user_id ='${args11}'and channel_no=2</arg>
</arguments>
<msg timestamp="20170728 16:06:25.045" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_open_record where user_id ='123456785'and channel_no=2 </msg>
<status status="PASS" endtime="20170728 16:06:25.102" starttime="20170728 16:06:25.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>已删除该账号！</arg>
</arguments>
<msg timestamp="20170728 16:06:25.108" level="INFO">已删除该账号！</msg>
<status status="PASS" endtime="20170728 16:06:25.110" starttime="20170728 16:06:25.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_unilateral_bill</arg>
</arguments>
<msg timestamp="20170728 16:06:25.115" level="INFO">现在开始校验表account_unilateral_bill</msg>
<status status="PASS" endtime="20170728 16:06:25.117" starttime="20170728 16:06:25.112"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time_no}</var>
</assign>
<msg timestamp="20170728 16:06:25.123" level="INFO">${current_time_no} = 2017-07-28 16:06:25.122</msg>
<status status="PASS" endtime="20170728 16:06:25.124" starttime="20170728 16:06:25.120"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_no}</arg>
<arg>5 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_301}</var>
</assign>
<msg timestamp="20170728 16:06:25.140" level="INFO">${current_time_before_301} = 2017-07-28 16:06:20.122</msg>
<status status="PASS" endtime="20170728 16:06:25.141" starttime="20170728 16:06:25.128"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_no}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_302}</var>
</assign>
<msg timestamp="20170728 16:06:25.148" level="INFO">${current_time_after_302} = 2017-07-28 16:08:05.122</msg>
<status status="PASS" endtime="20170728 16:06:25.149" starttime="20170728 16:06:25.142"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${no_user_id_account_id}'and update_time between' ${current_time_before_301}' and '${current_time_after_302}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 16:06:25.154" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6308'and update_time between' 2017-07-28 16:06:20.122' and '2017-07-28 16:08:05.122' </msg>
<msg timestamp="20170728 16:06:25.171" level="INFO">${user_id} = ((7176, '32102151361501208187', 123456785, 6308, '32102151361501208184', 1, 1, 3, Decimal('10.00'), None, datetime.datetime(2017, 7, 28, 16, 7, 30), datetime.datetime(2017, 7, 28, 16, 7, 30), 0),)</msg>
<status status="PASS" endtime="20170728 16:06:25.172" starttime="20170728 16:06:25.152"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170728 16:06:25.177" level="INFO">Length is 20</msg>
<msg timestamp="20170728 16:06:25.180" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170728 16:06:25.181" starttime="20170728 16:06:25.174"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 16:06:25.187" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:06:25.188" starttime="20170728 16:06:25.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 16:06:25.193" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 16:06:25.195" starttime="20170728 16:06:25.190"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 16:06:25.200" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:06:25.202" starttime="20170728 16:06:25.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 16:06:25.208" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 16:06:25.210" starttime="20170728 16:06:25.205"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170728 16:06:25.215" level="INFO">Length is 20</msg>
<msg timestamp="20170728 16:06:25.217" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170728 16:06:25.218" starttime="20170728 16:06:25.212"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 16:06:25.222" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:06:25.223" starttime="20170728 16:06:25.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 16:06:25.227" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 16:06:25.229" starttime="20170728 16:06:25.225"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 16:06:25.233" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:06:25.235" starttime="20170728 16:06:25.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 16:06:25.239" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 16:06:25.240" starttime="20170728 16:06:25.237"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 16:06:25.246" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:06:25.247" starttime="20170728 16:06:25.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 16:06:25.251" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 16:06:25.254" starttime="20170728 16:06:25.249"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20170728 16:06:25.260" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:06:25.263" starttime="20170728 16:06:25.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170728 16:06:25.268" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170728 16:06:25.270" starttime="20170728 16:06:25.266"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 16:06:25.275" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:06:25.277" starttime="20170728 16:06:25.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 16:06:25.281" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 16:06:25.283" starttime="20170728 16:06:25.279"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${user_id[0][10]}</arg>
<arg>${user_id[0][11]}</arg>
</arguments>
<status status="PASS" endtime="20170728 16:06:25.290" starttime="20170728 16:06:25.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 16:06:25.294" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 16:06:25.296" starttime="20170728 16:06:25.292"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 16:06:25.301" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:06:25.302" starttime="20170728 16:06:25.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 16:06:25.307" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 16:06:25.309" starttime="20170728 16:06:25.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170728 16:06:25.313" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170728 16:06:25.315" starttime="20170728 16:06:25.310"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_unilateral}</var>
</assign>
<msg timestamp="20170728 16:06:25.321" level="INFO">${user_id[0][0]_unilateral} = 7176</msg>
<status status="PASS" endtime="20170728 16:06:25.322" starttime="20170728 16:06:25.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_unilateral}</arg>
</arguments>
<msg timestamp="20170728 16:06:25.326" level="INFO">${user_id[0][0]_unilateral} = 7176</msg>
<status status="PASS" endtime="20170728 16:06:25.328" starttime="20170728 16:06:25.324"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]_unilateral}'</arg>
</arguments>
<msg timestamp="20170728 16:06:25.333" level="INFO">Executing : Execute SQL String  |  delete from account_unilateral_bill where id ='7176' </msg>
<status status="PASS" endtime="20170728 16:06:25.439" starttime="20170728 16:06:25.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170728 16:06:25.444" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170728 16:06:25.445" starttime="20170728 16:06:25.442"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time_nouser}</var>
</assign>
<msg timestamp="20170728 16:06:25.450" level="INFO">${current_time_nouser} = 2017-07-28 16:06:25.450</msg>
<status status="PASS" endtime="20170728 16:06:25.452" starttime="20170728 16:06:25.448"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_nouser}</arg>
<arg>5 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_3011}</var>
</assign>
<msg timestamp="20170728 16:06:25.456" level="INFO">${current_time_before_3011} = 2017-07-28 16:06:20.450</msg>
<status status="PASS" endtime="20170728 16:06:25.458" starttime="20170728 16:06:25.454"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_nouser}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_3022}</var>
</assign>
<msg timestamp="20170728 16:06:25.463" level="INFO">${current_time_after_3022} = 2017-07-28 16:08:05.450</msg>
<status status="PASS" endtime="20170728 16:06:25.464" starttime="20170728 16:06:25.460"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where account_id ='${no_user_id_account_id}' and update_time between' ${current_time_before_3011}' and '${current_time_after_3022}'</arg>
</arguments>
<assign>
<var>${user_id_no}</var>
</assign>
<msg timestamp="20170728 16:06:25.469" level="INFO">Executing : Query  |  select * from ajb_account_transaction where account_id ='6308' and update_time between' 2017-07-28 16:06:20.450' and '2017-07-28 16:08:05.450' </msg>
<msg timestamp="20170728 16:06:25.486" level="INFO">${user_id_no} = ((88889584, '32102151361501208183', 123456785, 6308, 2, '32102151361501208183', '20170728160727EYP051461', Decimal('10.00'), 1, 1, 2, 0, datetime.datetime(2017, 7, 28, 16, 7, 30), datetime.datetime(20...</msg>
<status status="PASS" endtime="20170728 16:06:25.488" starttime="20170728 16:06:25.466"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id_no[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 16:06:25.493" level="INFO">Length is 20</msg>
<msg timestamp="20170728 16:06:25.495" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 16:06:25.497" starttime="20170728 16:06:25.490"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 16:06:25.501" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:06:25.502" starttime="20170728 16:06:25.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 16:06:25.507" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 16:06:25.509" starttime="20170728 16:06:25.505"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][2]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 16:06:25.513" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:06:25.515" starttime="20170728 16:06:25.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 16:06:25.519" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 16:06:25.521" starttime="20170728 16:06:25.517"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][4]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 16:06:25.527" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:06:25.529" starttime="20170728 16:06:25.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no的值正确</arg>
</arguments>
<msg timestamp="20170728 16:06:25.533" level="INFO">channel_no的值正确</msg>
<status status="PASS" endtime="20170728 16:06:25.535" starttime="20170728 16:06:25.531"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][5]}</arg>
<arg>${no_user_id_orderNum}</arg>
</arguments>
<msg timestamp="20170728 16:06:25.538" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:06:25.540" starttime="20170728 16:06:25.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170728 16:06:25.544" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170728 16:06:25.547" starttime="20170728 16:06:25.542"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id_no[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170728 16:06:25.551" level="INFO">${pay_no_after} = 20170728160727EYP051461</msg>
<status status="PASS" endtime="20170728 16:06:25.553" starttime="20170728 16:06:25.548"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170728 16:06:25.557" level="INFO">Length is 23</msg>
<msg timestamp="20170728 16:06:25.559" level="INFO">${pay_no_after_length} = 23</msg>
<status status="PASS" endtime="20170728 16:06:25.560" starttime="20170728 16:06:25.555"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>23</arg>
</arguments>
<msg timestamp="20170728 16:06:25.566" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:06:25.568" starttime="20170728 16:06:25.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170728 16:06:25.573" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170728 16:06:25.575" starttime="20170728 16:06:25.571"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][7]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 16:06:25.580" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:06:25.582" starttime="20170728 16:06:25.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 16:06:25.586" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 16:06:25.589" starttime="20170728 16:06:25.584"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 16:06:25.594" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:06:25.597" starttime="20170728 16:06:25.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 16:06:25.601" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 16:06:25.603" starttime="20170728 16:06:25.599"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][9]}</arg>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 16:06:25.608" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:06:25.609" starttime="20170728 16:06:25.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 16:06:25.613" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 16:06:25.615" starttime="20170728 16:06:25.611"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 16:06:25.620" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:06:25.622" starttime="20170728 16:06:25.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170728 16:06:25.625" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170728 16:06:25.626" starttime="20170728 16:06:25.623"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 16:06:25.631" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:06:25.633" starttime="20170728 16:06:25.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 16:06:25.636" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 16:06:25.638" starttime="20170728 16:06:25.635"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${user_id_no[0][12]}</arg>
<arg>${user_id_no[0][13]}</arg>
</arguments>
<status status="PASS" endtime="20170728 16:06:25.641" starttime="20170728 16:06:25.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 16:06:25.644" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 16:06:25.645" starttime="20170728 16:06:25.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170728 16:06:25.647" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170728 16:06:25.648" starttime="20170728 16:06:25.646"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id_no[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170728 16:06:25.651" level="INFO">${user_id[0][0]_transaction} = 88889584</msg>
<status status="PASS" endtime="20170728 16:06:25.651" starttime="20170728 16:06:25.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170728 16:06:25.653" level="INFO">${user_id[0][0]_transaction} = 88889584</msg>
<status status="PASS" endtime="20170728 16:06:25.654" starttime="20170728 16:06:25.652"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id_no[0][0]}'</arg>
</arguments>
<msg timestamp="20170728 16:06:25.656" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88889584' </msg>
<status status="PASS" endtime="20170728 16:06:25.766" starttime="20170728 16:06:25.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_amount</arg>
</arguments>
<msg timestamp="20170728 16:06:25.772" level="INFO">现在开始校验表account_amount</msg>
<status status="PASS" endtime="20170728 16:06:25.774" starttime="20170728 16:06:25.770"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${no_user_id_account_id}'</arg>
</arguments>
<assign>
<var>${user_id_t}</var>
</assign>
<msg timestamp="20170728 16:06:25.779" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6308' </msg>
<msg timestamp="20170728 16:06:25.830" level="INFO">${user_id_t} = ((12622, 6308, Decimal('10.00'), Decimal('10.00'), Decimal('0.00'), datetime.datetime(2017, 7, 28, 16, 7, 30), datetime.datetime(2017, 7, 28, 16, 7, 30), 0),)</msg>
<status status="PASS" endtime="20170728 16:06:25.831" starttime="20170728 16:06:25.776"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][2]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 16:06:25.837" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:06:25.838" starttime="20170728 16:06:25.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 16:06:25.843" level="INFO">total_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 16:06:25.844" starttime="20170728 16:06:25.841"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][3]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 16:06:25.850" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:06:25.851" starttime="20170728 16:06:25.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 16:06:25.857" level="INFO">balance_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 16:06:25.859" starttime="20170728 16:06:25.854"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][4]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 16:06:25.867" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:06:25.869" starttime="20170728 16:06:25.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 16:06:25.875" level="INFO">frozen_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 16:06:25.877" starttime="20170728 16:06:25.873"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 16:06:25.885" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:06:25.888" starttime="20170728 16:06:25.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 16:06:25.891" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 16:06:25.891" starttime="20170728 16:06:25.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount校验成功！</arg>
</arguments>
<msg timestamp="20170728 16:06:25.893" level="INFO">表account_amount校验成功！</msg>
<status status="PASS" endtime="20170728 16:06:25.895" starttime="20170728 16:06:25.892"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_amount where account_id ='${no_user_id_account_id}'</arg>
</arguments>
<msg timestamp="20170728 16:06:25.898" level="INFO">Executing : Execute SQL String  |  delete from account_amount where account_id ='6308' </msg>
<status status="PASS" endtime="20170728 16:06:26.005" starttime="20170728 16:06:25.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>输入未有的user_id和正确的amount参数，会直接生成app账户，然后表里的数据都入库成功！</arg>
</arguments>
<msg timestamp="20170728 16:06:26.012" level="INFO">输入未有的user_id和正确的amount参数，会直接生成app账户，然后表里的数据都入库成功！</msg>
<status status="PASS" endtime="20170728 16:06:26.014" starttime="20170728 16:06:26.009"></status>
</kw>
<status status="PASS" endtime="20170728 16:06:26.016" critical="yes" starttime="20170728 16:06:24.672"></status>
</test>
<status status="PASS" endtime="20170728 16:06:26.021" starttime="20170728 16:06:24.377"></status>
</suite>
<status status="PASS" endtime="20170728 16:06:26.033" starttime="20170728 16:06:24.371"></status>
</suite>
<status status="PASS" endtime="20170728 16:06:26.041" starttime="20170728 16:06:24.176"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="账户中心" pass="1">账户中心</stat>
<stat fail="0" id="s1-s1" name="艾佳币" pass="1">账户中心.艾佳币</stat>
<stat fail="0" id="s1-s1-s1" name="艾佳币活动充值" pass="1">账户中心.艾佳币.艾佳币活动充值</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
