<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170728 14:06:28.964" generator="Robot 3.0.2 (Python 2.7.8 on win32)">
<suite source="F:\logs and reports\账户中心" id="s1" name="账户中心">
<suite source="F:\logs and reports\账户中心\订单" id="s1-s1" name="订单">
<suite source="F:\logs and reports\账户中心\订单\订单取消支付（线上）.txt" id="s1-s1-s1" name="订单取消支付（线上）">
<test id="s1-s1-s1-t1" name="输入正确的订单冻结oderNum">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 14:06:29.485" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 14:06:29.530" starttime="20170728 14:06:29.464"></status>
</kw>
<status status="PASS" endtime="20170728 14:06:29.531" starttime="20170728 14:06:29.463"></status>
</kw>
<status status="PASS" endtime="20170728 14:06:29.532" starttime="20170728 14:06:29.462"></status>
</kw>
<kw name="清数据" library="myResource">
<arguments>
<arg>888888</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 14:06:29.536" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 14:06:29.549" starttime="20170728 14:06:29.535"></status>
</kw>
<status status="PASS" endtime="20170728 14:06:29.550" starttime="20170728 14:06:29.534"></status>
</kw>
<status status="PASS" endtime="20170728 14:06:29.551" starttime="20170728 14:06:29.533"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170728 14:06:29.553" level="INFO">Executing : Query  |  select * from ajb_account_transaction where id=888888 </msg>
<msg timestamp="20170728 14:06:29.559" level="INFO">${check} = ((888888, '32102151361500975216', 100000, 6135, 1, '32102151361500284867', '', Decimal('2.00'), 1, 11, 2, 0, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)),)</msg>
<status status="PASS" endtime="20170728 14:06:29.559" starttime="20170728 14:06:29.551"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170728 14:06:29.561" level="INFO">Length is 1</msg>
<msg timestamp="20170728 14:06:29.562" level="INFO">${check_length} = 1</msg>
<status status="PASS" endtime="20170728 14:06:29.562" starttime="20170728 14:06:29.560"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} != 0</arg>
<arg>execute sql string</arg>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>数据库之前没有数据</arg>
</arguments>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<msg timestamp="20170728 14:06:29.565" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=888888 </msg>
<status status="PASS" endtime="20170728 14:06:29.683" starttime="20170728 14:06:29.564"></status>
</kw>
<status status="PASS" endtime="20170728 14:06:29.686" starttime="20170728 14:06:29.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库里面的这条数据清理成功啦。</arg>
</arguments>
<msg timestamp="20170728 14:06:29.690" level="INFO">数据库里面的这条数据清理成功啦。</msg>
<status status="PASS" endtime="20170728 14:06:29.692" starttime="20170728 14:06:29.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_delete}</arg>
</arguments>
<msg timestamp="20170728 14:06:29.697" level="INFO">${id_delete} = 888888</msg>
<status status="PASS" endtime="20170728 14:06:29.698" starttime="20170728 14:06:29.694"></status>
</kw>
<status status="PASS" endtime="20170728 14:06:29.701" starttime="20170728 14:06:29.533"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("${id_delete}","32102151361500975216","100000","6135","1","32102151361500284867","","2","1","11","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170728 14:06:29.706" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("888888","32102151361500975216","100000","6135","1","32102151361500284867","","2","1","11","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170728 14:06:29.813" starttime="20170728 14:06:29.704"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>32102151361500284867</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 14:06:29.819" level="INFO">${args11} = 32102151361500284867</msg>
<status status="PASS" endtime="20170728 14:06:29.820" starttime="20170728 14:06:29.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 14:06:29.824" level="INFO">${args22} = </msg>
<status status="PASS" endtime="20170728 14:06:29.825" starttime="20170728 14:06:29.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 14:06:29.829" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170728 14:06:29.830" starttime="20170728 14:06:29.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 14:06:29.835" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 14:06:29.836" starttime="20170728 14:06:29.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 14:06:29.839" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/cancelPay</msg>
<status status="PASS" endtime="20170728 14:06:29.841" starttime="20170728 14:06:29.837"></status>
</kw>
<status status="PASS" endtime="20170728 14:06:29.842" starttime="20170728 14:06:29.815"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 14:06:29.849" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/cancelPay</msg>
<status status="PASS" endtime="20170728 14:06:29.849" starttime="20170728 14:06:29.846"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 14:06:29.852" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 14:06:29.853" starttime="20170728 14:06:29.851"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 14:06:29.857" starttime="20170728 14:06:29.855"></status>
</kw>
<msg timestamp="20170728 14:06:29.858" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 14:06:29.859" starttime="20170728 14:06:29.854"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>order_num</arg>
</arguments>
<status status="PASS" endtime="20170728 14:06:29.863" starttime="20170728 14:06:29.862"></status>
</kw>
<msg timestamp="20170728 14:06:29.863" level="INFO">${args11_after} = order_num</msg>
<status status="PASS" endtime="20170728 14:06:29.864" starttime="20170728 14:06:29.861"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 14:06:29.868" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 14:06:29.885" starttime="20170728 14:06:29.866"></status>
</kw>
<status status="PASS" endtime="20170728 14:06:29.886" starttime="20170728 14:06:29.865"></status>
</kw>
<status status="PASS" endtime="20170728 14:06:29.887" starttime="20170728 14:06:29.864"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 14:06:29.890" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num='32102151361500284867' and channel_no='1' </msg>
<msg timestamp="20170728 14:06:29.904" level="INFO">${database1} = ((888888, '32102151361500975216', 100000, 6135, 1, '32102151361500284867', '', Decimal('2.00'), 1, 11, 2, 0, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)),)</msg>
<status status="PASS" endtime="20170728 14:06:29.905" starttime="20170728 14:06:29.888"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 14:06:29.909" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 14:06:29.918" level="INFO">${database} = ((12449, 6135, Decimal('50424.00'), Decimal('49570.00'), Decimal('854.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 14, 1, 16), 0),)</msg>
<status status="PASS" endtime="20170728 14:06:29.920" starttime="20170728 14:06:29.906"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 14:06:29.924" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 14:06:29.925" starttime="20170728 14:06:29.921"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 14:06:29.929" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 14:06:29.930" starttime="20170728 14:06:29.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 14:06:29.934" level="INFO">获得account_id值为：6135</msg>
<status status="PASS" endtime="20170728 14:06:29.935" starttime="20170728 14:06:29.932"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 14:06:29.937" level="INFO">${total_amount_before} = 50424.00</msg>
<status status="PASS" endtime="20170728 14:06:29.938" starttime="20170728 14:06:29.936"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 14:06:29.940" level="INFO">${balance_amount_before} = 49570.00</msg>
<status status="PASS" endtime="20170728 14:06:29.941" starttime="20170728 14:06:29.939"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 14:06:29.943" level="INFO">${frozen_amount_before} = 854.00</msg>
<status status="PASS" endtime="20170728 14:06:29.943" starttime="20170728 14:06:29.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 14:06:29.945" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 14:06:29.946" starttime="20170728 14:06:29.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 14:06:29.948" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 14:06:29.949" starttime="20170728 14:06:29.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 14:06:29.950" level="INFO">${total_amount_before} = 50424.00</msg>
<status status="PASS" endtime="20170728 14:06:29.951" starttime="20170728 14:06:29.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 14:06:29.952" level="INFO">${balance_amount_before} = 49570.00</msg>
<status status="PASS" endtime="20170728 14:06:29.953" starttime="20170728 14:06:29.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 14:06:29.954" level="INFO">${frozen_amount_before} = 854.00</msg>
<status status="PASS" endtime="20170728 14:06:29.955" starttime="20170728 14:06:29.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 14:06:29.957" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 14:06:29.959" starttime="20170728 14:06:29.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 14:06:29.962" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 14:06:29.963" starttime="20170728 14:06:29.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 14:06:29.965" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/cancelPay</msg>
<status status="PASS" endtime="20170728 14:06:29.966" starttime="20170728 14:06:29.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170728 14:06:29.968" level="INFO">${database} = ((12449, 6135, Decimal('50424.00'), Decimal('49570.00'), Decimal('854.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 14, 1, 16), 0),)</msg>
<status status="PASS" endtime="20170728 14:06:29.969" starttime="20170728 14:06:29.967"></status>
</kw>
<status status="PASS" endtime="20170728 14:06:29.969" starttime="20170728 14:06:29.844"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Ajb Withdraw Cancel" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 14:06:30.023" starttime="20170728 14:06:29.973"></status>
</kw>
<msg timestamp="20170728 14:06:30.025" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 14:06:30.025" starttime="20170728 14:06:29.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 14:06:30.027" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 14:06:30.028" starttime="20170728 14:06:30.026"></status>
</kw>
<status status="PASS" endtime="20170728 14:06:30.028" starttime="20170728 14:06:29.970"></status>
</kw>
<kw name="字段验证" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 14:06:30.031" level="INFO">200</msg>
<status status="PASS" endtime="20170728 14:06:30.031" starttime="20170728 14:06:30.030"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 14:06:30.033" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 14:06:30.033" starttime="20170728 14:06:30.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 14:06:30.035" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 14:06:30.035" starttime="20170728 14:06:30.034"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 14:06:30.037" level="INFO">To JSON using : content={"data":null,"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 14:06:30.037" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 14:06:30.038" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': None, u'success': True}</msg>
<status status="PASS" endtime="20170728 14:06:30.039" starttime="20170728 14:06:30.036"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 14:06:30.042" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 14:06:30.042" starttime="20170728 14:06:30.040"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 14:06:30.044" starttime="20170728 14:06:30.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 14:06:30.046" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 14:06:30.046" starttime="20170728 14:06:30.045"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<assign>
<var>@{Link1}</var>
</assign>
<msg timestamp="20170728 14:06:30.048" level="INFO">@{Link1} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 14:06:30.048" starttime="20170728 14:06:30.047"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>"${value}" in @{Link1}</arg>
<arg>Get From Dictionary</arg>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${orderNum}</var>
</assign>
<msg timestamp="20170728 14:06:30.050" level="INFO">${orderNum} = None</msg>
<status status="PASS" endtime="20170728 14:06:30.050" starttime="20170728 14:06:30.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<msg timestamp="20170728 14:06:30.052" level="INFO">${orderNum} = None</msg>
<status status="PASS" endtime="20170728 14:06:30.052" starttime="20170728 14:06:30.051"></status>
</kw>
<status status="PASS" endtime="20170728 14:06:30.053" starttime="20170728 14:06:30.029"></status>
</kw>
<kw name="确认取消的金额数" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 14:06:30.059" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 14:06:30.085" starttime="20170728 14:06:30.056"></status>
</kw>
<status status="PASS" endtime="20170728 14:06:30.086" starttime="20170728 14:06:30.055"></status>
</kw>
<status status="PASS" endtime="20170728 14:06:30.087" starttime="20170728 14:06:30.054"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>8</arg>
</arguments>
<assign>
<var>${event_code_judge}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>11</arg>
</arguments>
<status status="PASS" endtime="20170728 14:06:30.091" starttime="20170728 14:06:30.089"></status>
</kw>
<msg timestamp="20170728 14:06:30.091" level="INFO">${event_code_judge} = 11</msg>
<status status="PASS" endtime="20170728 14:06:30.092" starttime="20170728 14:06:30.088"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num ='${args11}' and event_code=${event_code_judge}</arg>
</arguments>
<assign>
<var>${search}</var>
</assign>
<msg timestamp="20170728 14:06:30.093" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num ='32102151361500284867' and event_code=11 </msg>
<msg timestamp="20170728 14:06:30.109" level="INFO">${search} = ((888888, '32102151361500975216', 100000, 6135, 1, '32102151361500284867', '', Decimal('2.00'), 1, 11, 2, 0, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)), (8...</msg>
<status status="PASS" endtime="20170728 14:06:30.110" starttime="20170728 14:06:30.092"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${search[0][7]}</arg>
</arguments>
<assign>
<var>${change_total_amount}</var>
</assign>
<msg timestamp="20170728 14:06:30.112" level="INFO">${change_total_amount} = 2.00</msg>
<status status="PASS" endtime="20170728 14:06:30.112" starttime="20170728 14:06:30.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${change_total_amount}</arg>
</arguments>
<msg timestamp="20170728 14:06:30.115" level="INFO">${change_total_amount} = 2.00</msg>
<status status="PASS" endtime="20170728 14:06:30.115" starttime="20170728 14:06:30.113"></status>
</kw>
<status status="PASS" endtime="20170728 14:06:30.116" starttime="20170728 14:06:30.054"></status>
</kw>
<kw name="表account_unilateral_bill的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_unilateral_bill</arg>
</arguments>
<msg timestamp="20170728 14:06:30.118" level="INFO">现在开始校验表account_unilateral_bill</msg>
<status status="PASS" endtime="20170728 14:06:30.118" starttime="20170728 14:06:30.117"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 14:06:30.122" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 14:06:30.139" starttime="20170728 14:06:30.121"></status>
</kw>
<status status="PASS" endtime="20170728 14:06:30.141" starttime="20170728 14:06:30.120"></status>
</kw>
<status status="PASS" endtime="20170728 14:06:30.141" starttime="20170728 14:06:30.119"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>account_unilateral_bill</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 14:06:30.149" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 14:06:30.161" starttime="20170728 14:06:30.147"></status>
</kw>
<status status="PASS" endtime="20170728 14:06:30.162" starttime="20170728 14:06:30.145"></status>
</kw>
<status status="PASS" endtime="20170728 14:06:30.163" starttime="20170728 14:06:30.143"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 14:06:30.165" level="INFO">${current_time} = 2017-07-28 14:06:30.165</msg>
<status status="PASS" endtime="20170728 14:06:30.165" starttime="20170728 14:06:30.164"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>10 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 14:06:30.171" level="INFO">${current_time_before_30} = 2017-07-28 14:06:20.165</msg>
<status status="PASS" endtime="20170728 14:06:30.172" starttime="20170728 14:06:30.166"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 14:06:30.175" level="INFO">${current_time_after_30} = 2017-07-28 14:07:35.165</msg>
<status status="PASS" endtime="20170728 14:06:30.176" starttime="20170728 14:06:30.173"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 14:06:30.179" level="INFO">Executing : Query  |  select * from account_unilateral_bill where user_id='100000' and update_time between' 2017-07-28 14:06:20.165' and '2017-07-28 14:07:35.165' </msg>
<msg timestamp="20170728 14:06:30.188" level="INFO">${updatetime} = ()</msg>
<status status="PASS" endtime="20170728 14:06:30.188" starttime="20170728 14:06:30.177"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 14:06:30.190" level="INFO">Length is 0</msg>
<msg timestamp="20170728 14:06:30.190" level="FAIL">TypeError: not enough arguments for format string</msg>
<status status="FAIL" endtime="20170728 14:06:30.191" starttime="20170728 14:06:30.189"></status>
</kw>
<status status="FAIL" endtime="20170728 14:06:30.192" starttime="20170728 14:06:30.142"></status>
</kw>
<status status="FAIL" endtime="20170728 14:06:30.192" starttime="20170728 14:06:30.116"></status>
</kw>
<status status="FAIL" endtime="20170728 14:06:30.193" critical="yes" starttime="20170728 14:06:29.458">TypeError: not enough arguments for format string</status>
</test>
<status status="FAIL" endtime="20170728 14:06:30.195" starttime="20170728 14:06:29.186"></status>
</suite>
<status status="FAIL" endtime="20170728 14:06:30.201" starttime="20170728 14:06:29.182"></status>
</suite>
<status status="FAIL" endtime="20170728 14:06:30.205" starttime="20170728 14:06:28.992"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="0">Critical Tests</stat>
<stat fail="1" pass="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="1" id="s1" name="账户中心" pass="0">账户中心</stat>
<stat fail="1" id="s1-s1" name="订单" pass="0">账户中心.订单</stat>
<stat fail="1" id="s1-s1-s1" name="订单取消支付（线上）" pass="0">账户中心.订单.订单取消支付（线上）</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
