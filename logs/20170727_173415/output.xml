<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170727 17:34:42.127" generator="Robot 3.0.2 (Python 2.7.8 on win32)">
<suite source="F:\logs and reports\账户中心" id="s1" name="账户中心">
<suite source="F:\logs and reports\账户中心\订单" id="s1-s1" name="订单">
<suite source="F:\logs and reports\账户中心\订单\订单支付退款（线上）.txt" id="s1-s1-s1" name="订单支付退款（线上）">
<test id="s1-s1-s1-t1" name="输入参数全部正确">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170727 17:34:42.786" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170727 17:34:42.887" starttime="20170727 17:34:42.751"></status>
</kw>
<status status="PASS" endtime="20170727 17:34:42.888" starttime="20170727 17:34:42.748"></status>
</kw>
<status status="PASS" endtime="20170727 17:34:42.889" starttime="20170727 17:34:42.745"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("8888888","32102151361500885834","1000000","6131","1","32102151361500885834","","2","1","13","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170727 17:34:42.892" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("8888888","32102151361500885834","1000000","6131","1","32102151361500885834","","2","1","13","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170727 17:34:43.062" starttime="20170727 17:34:42.891"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>32102151361500885834</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170727 17:34:43.065" level="INFO">${args11} = 32102151361500885834</msg>
<status status="PASS" endtime="20170727 17:34:43.065" starttime="20170727 17:34:43.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170727 17:34:43.067" level="INFO">${args22} = </msg>
<status status="PASS" endtime="20170727 17:34:43.068" starttime="20170727 17:34:43.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170727 17:34:43.071" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170727 17:34:43.072" starttime="20170727 17:34:43.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170727 17:34:43.074" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170727 17:34:43.074" starttime="20170727 17:34:43.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170727 17:34:43.076" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</msg>
<status status="PASS" endtime="20170727 17:34:43.076" starttime="20170727 17:34:43.075"></status>
</kw>
<status status="PASS" endtime="20170727 17:34:43.077" starttime="20170727 17:34:43.063"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num='${args11}' and event_code=13</arg>
</arguments>
<assign>
<var>${user_id_refund}</var>
</assign>
<msg timestamp="20170727 17:34:43.080" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num='32102151361500885834' and event_code=13 </msg>
<msg timestamp="20170727 17:34:43.140" level="INFO">${user_id_refund} = ((8888888, '32102151361500885834', 1000000, 6131, 1, '32102151361500885834', '', Decimal('2.00'), 1, 13, 2, 0, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)),)</msg>
<status status="PASS" endtime="20170727 17:34:43.141" starttime="20170727 17:34:43.079"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${user_id_refund[0][2]}' and channel_no=1</arg>
</arguments>
<assign>
<var>${account_id_bos}</var>
</assign>
<msg timestamp="20170727 17:34:43.143" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='1000000' and channel_no=1 </msg>
<msg timestamp="20170727 17:34:43.191" level="INFO">${account_id_bos} = ((6086, '32102151361499849639', 1000000, 6131, 1, 2, 0, datetime.datetime(2017, 7, 12, 20, 3, 46), datetime.datetime(2017, 7, 12, 20, 3, 46)),)</msg>
<status status="PASS" endtime="20170727 17:34:43.192" starttime="20170727 17:34:43.142"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_id_bos[0][3]}</arg>
</arguments>
<assign>
<var>${account_id_boss}</var>
</assign>
<msg timestamp="20170727 17:34:43.197" level="INFO">${account_id_boss} = 6131</msg>
<status status="PASS" endtime="20170727 17:34:43.199" starttime="20170727 17:34:43.194"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${user_id_refund[0][2]}' and channel_no=2</arg>
</arguments>
<assign>
<var>${account_id_ap}</var>
</assign>
<msg timestamp="20170727 17:34:43.203" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='1000000' and channel_no=2 </msg>
<msg timestamp="20170727 17:34:43.231" level="INFO">${account_id_ap} = ((10212, '32102151361500285171', 1000000, 6161, 2, 2, 0, datetime.datetime(2017, 7, 19, 17, 6, 7), datetime.datetime(2017, 7, 19, 17, 6, 7)),)</msg>
<status status="PASS" endtime="20170727 17:34:43.232" starttime="20170727 17:34:43.200"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_id_ap[0][3]}</arg>
</arguments>
<assign>
<var>${account_id_app}</var>
</assign>
<msg timestamp="20170727 17:34:43.235" level="INFO">${account_id_app} = 6161</msg>
<status status="PASS" endtime="20170727 17:34:43.237" starttime="20170727 17:34:43.233"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_boss}'</arg>
</arguments>
<assign>
<var>${amount_boss}</var>
</assign>
<msg timestamp="20170727 17:34:43.241" level="INFO">Executing : Query  |  select * from account_amount where account_id='6131' </msg>
<msg timestamp="20170727 17:34:43.262" level="INFO">${amount_boss} = ((12445, 6131, Decimal('45162.00'), Decimal('172653.00'), Decimal('72507.00'), datetime.datetime(2017, 7, 12, 20, 3, 46), datetime.datetime(2017, 7, 27, 17, 33, 40), 0),)</msg>
<status status="PASS" endtime="20170727 17:34:43.263" starttime="20170727 17:34:43.239"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_app}'</arg>
</arguments>
<assign>
<var>${amount_app}</var>
</assign>
<msg timestamp="20170727 17:34:43.267" level="INFO">Executing : Query  |  select * from account_amount where account_id='6161' </msg>
<msg timestamp="20170727 17:34:43.345" level="INFO">${amount_app} = ((12475, 6161, Decimal('10162.00'), Decimal('10162.00'), Decimal('0.00'), datetime.datetime(2017, 7, 19, 17, 6, 7), datetime.datetime(2017, 7, 27, 17, 33, 30), 0),)</msg>
<status status="PASS" endtime="20170727 17:34:43.346" starttime="20170727 17:34:43.264"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170727 17:34:43.347" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</msg>
<status status="PASS" endtime="20170727 17:34:43.348" starttime="20170727 17:34:43.346"></status>
</kw>
<kw name="Ajb Withdraw Cancel" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170727 17:34:43.975" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170727 17:34:43.976" starttime="20170727 17:34:43.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170727 17:34:43.979" level="INFO">200</msg>
<status status="PASS" endtime="20170727 17:34:43.980" starttime="20170727 17:34:43.978"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170727 17:34:43.984" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 17:34:43.985" starttime="20170727 17:34:43.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170727 17:34:43.988" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170727 17:34:43.990" starttime="20170727 17:34:43.987"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170727 17:34:43.994" level="INFO">To JSON using : content={"data":null,"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170727 17:34:43.995" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170727 17:34:43.997" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': None, u'success': True}</msg>
<status status="PASS" endtime="20170727 17:34:43.997" starttime="20170727 17:34:43.992"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170727 17:34:44.004" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 17:34:44.006" starttime="20170727 17:34:44.000"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170727 17:34:44.010" starttime="20170727 17:34:44.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170727 17:34:44.011" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170727 17:34:44.012" starttime="20170727 17:34:44.010"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170727 17:34:44.013" level="INFO">${current_time} = 2017-07-27 17:34:44.013</msg>
<status status="PASS" endtime="20170727 17:34:44.013" starttime="20170727 17:34:44.012"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>15 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170727 17:34:44.020" level="INFO">${current_time_before_30} = 2017-07-27 17:34:29.013</msg>
<status status="PASS" endtime="20170727 17:34:44.021" starttime="20170727 17:34:44.014"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170727 17:34:44.023" level="INFO">${current_time_after_30} = 2017-07-27 17:35:49.013</msg>
<status status="PASS" endtime="20170727 17:34:44.023" starttime="20170727 17:34:44.022"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id_app} 'and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170727 17:34:44.026" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6161 'and update_time between' 2017-07-27 17:34:29.013' and '2017-07-27 17:35:49.013' </msg>
<msg timestamp="20170727 17:34:44.052" level="INFO">${user_id} = ((6150, '32102151361501144060', 1000000, 6161, '32102151361501144058', 1, 14, 3, Decimal('2.00'), None, datetime.datetime(2017, 7, 27, 17, 35, 47), datetime.datetime(2017, 7, 27, 17, 35, 47), 0),)</msg>
<status status="PASS" endtime="20170727 17:34:44.053" starttime="20170727 17:34:44.024"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170727 17:34:44.055" level="INFO">Length is 20</msg>
<msg timestamp="20170727 17:34:44.055" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170727 17:34:44.056" starttime="20170727 17:34:44.054"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170727 17:34:44.057" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 17:34:44.058" starttime="20170727 17:34:44.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170727 17:34:44.059" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170727 17:34:44.060" starttime="20170727 17:34:44.059"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_refund[0][2]}</arg>
</arguments>
<status status="PASS" endtime="20170727 17:34:44.062" starttime="20170727 17:34:44.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170727 17:34:44.063" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170727 17:34:44.064" starttime="20170727 17:34:44.063"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170727 17:34:44.065" level="INFO">Length is 20</msg>
<msg timestamp="20170727 17:34:44.066" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170727 17:34:44.068" starttime="20170727 17:34:44.065"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170727 17:34:44.070" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 17:34:44.071" starttime="20170727 17:34:44.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170727 17:34:44.073" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170727 17:34:44.073" starttime="20170727 17:34:44.072"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170727 17:34:44.075" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 17:34:44.075" starttime="20170727 17:34:44.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170727 17:34:44.077" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170727 17:34:44.077" starttime="20170727 17:34:44.076"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>14</arg>
</arguments>
<msg timestamp="20170727 17:34:44.080" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 17:34:44.081" starttime="20170727 17:34:44.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170727 17:34:44.082" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170727 17:34:44.083" starttime="20170727 17:34:44.081"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20170727 17:34:44.084" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 17:34:44.086" starttime="20170727 17:34:44.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170727 17:34:44.087" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170727 17:34:44.087" starttime="20170727 17:34:44.086"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<status status="PASS" endtime="20170727 17:34:44.089" starttime="20170727 17:34:44.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170727 17:34:44.091" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170727 17:34:44.091" starttime="20170727 17:34:44.090"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170727 17:34:44.095" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 17:34:44.096" starttime="20170727 17:34:44.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170727 17:34:44.099" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170727 17:34:44.099" starttime="20170727 17:34:44.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170727 17:34:44.102" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170727 17:34:44.103" starttime="20170727 17:34:44.100"></status>
</kw>
<kw name="Conn Mysql" library="wjwTestLibrary">
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]}'</arg>
</arguments>
<assign>
<var>${user_id_unilateral_delete}</var>
</assign>
<msg timestamp="20170727 17:34:44.200" level="INFO">${user_id_unilateral_delete} = ()</msg>
<status status="PASS" endtime="20170727 17:34:44.201" starttime="20170727 17:34:44.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170727 17:34:44.206" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170727 17:34:44.208" starttime="20170727 17:34:44.204"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time1}</var>
</assign>
<msg timestamp="20170727 17:34:44.212" level="INFO">${current_time1} = 2017-07-27 17:34:44.212</msg>
<status status="PASS" endtime="20170727 17:34:44.213" starttime="20170727 17:34:44.210"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>15 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_301}</var>
</assign>
<msg timestamp="20170727 17:34:44.218" level="INFO">${current_time_before_301} = 2017-07-27 17:34:29.212</msg>
<status status="PASS" endtime="20170727 17:34:44.219" starttime="20170727 17:34:44.215"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_301}</var>
</assign>
<msg timestamp="20170727 17:34:44.221" level="INFO">${current_time_after_301} = 2017-07-27 17:35:49.212</msg>
<status status="PASS" endtime="20170727 17:34:44.222" starttime="20170727 17:34:44.220"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where account_id ='${account_id_app}' and update_time between' ${current_time_before_301}' and '${current_time_after_301}'</arg>
</arguments>
<assign>
<var>${user_id1}</var>
</assign>
<msg timestamp="20170727 17:34:44.224" level="INFO">Executing : Query  |  select * from ajb_account_transaction where account_id ='6161' and update_time between' 2017-07-27 17:34:29.212' and '2017-07-27 17:35:49.212' </msg>
<msg timestamp="20170727 17:34:44.255" level="INFO">${user_id1} = ((88889202, '32102151361501144057', 1000000, 6161, 2, '32102151361500885834', '20170727173544TVP051010', Decimal('2.00'), 1, 14, 2, 0, datetime.datetime(2017, 7, 27, 17, 35, 47), datetime.datetime(201...</msg>
<status status="PASS" endtime="20170727 17:34:44.256" starttime="20170727 17:34:44.223"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id1[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170727 17:34:44.258" level="INFO">Length is 20</msg>
<msg timestamp="20170727 17:34:44.258" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170727 17:34:44.259" starttime="20170727 17:34:44.257"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170727 17:34:44.260" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 17:34:44.261" starttime="20170727 17:34:44.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170727 17:34:44.262" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170727 17:34:44.262" starttime="20170727 17:34:44.261"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][2]}</arg>
<arg>${user_id_refund[0][2]}</arg>
</arguments>
<status status="PASS" endtime="20170727 17:34:44.266" starttime="20170727 17:34:44.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170727 17:34:44.267" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170727 17:34:44.269" starttime="20170727 17:34:44.266"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][4]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170727 17:34:44.271" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 17:34:44.272" starttime="20170727 17:34:44.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no的值正确</arg>
</arguments>
<msg timestamp="20170727 17:34:44.274" level="INFO">channel_no的值正确</msg>
<status status="PASS" endtime="20170727 17:34:44.274" starttime="20170727 17:34:44.273"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][5]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170727 17:34:44.276" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 17:34:44.277" starttime="20170727 17:34:44.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170727 17:34:44.278" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170727 17:34:44.279" starttime="20170727 17:34:44.278"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id1[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170727 17:34:44.280" level="INFO">${pay_no_after} = 20170727173544TVP051010</msg>
<status status="PASS" endtime="20170727 17:34:44.281" starttime="20170727 17:34:44.279"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170727 17:34:44.283" level="INFO">Length is 23</msg>
<msg timestamp="20170727 17:34:44.283" level="INFO">${pay_no_after_length} = 23</msg>
<status status="PASS" endtime="20170727 17:34:44.283" starttime="20170727 17:34:44.282"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>23</arg>
</arguments>
<msg timestamp="20170727 17:34:44.285" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 17:34:44.285" starttime="20170727 17:34:44.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170727 17:34:44.288" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170727 17:34:44.288" starttime="20170727 17:34:44.287"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][7]}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<status status="PASS" endtime="20170727 17:34:44.291" starttime="20170727 17:34:44.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170727 17:34:44.292" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170727 17:34:44.293" starttime="20170727 17:34:44.292"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170727 17:34:44.295" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 17:34:44.296" starttime="20170727 17:34:44.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170727 17:34:44.298" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170727 17:34:44.299" starttime="20170727 17:34:44.297"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][9]}</arg>
<arg>14</arg>
</arguments>
<msg timestamp="20170727 17:34:44.301" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 17:34:44.302" starttime="20170727 17:34:44.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170727 17:34:44.304" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170727 17:34:44.305" starttime="20170727 17:34:44.303"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170727 17:34:44.306" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 17:34:44.307" starttime="20170727 17:34:44.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170727 17:34:44.308" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170727 17:34:44.309" starttime="20170727 17:34:44.308"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170727 17:34:44.311" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 17:34:44.311" starttime="20170727 17:34:44.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170727 17:34:44.312" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170727 17:34:44.314" starttime="20170727 17:34:44.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170727 17:34:44.317" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170727 17:34:44.317" starttime="20170727 17:34:44.316"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170727 17:34:44.320" level="INFO">${user_id[0][0]_transaction} = 6150</msg>
<status status="PASS" endtime="20170727 17:34:44.321" starttime="20170727 17:34:44.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170727 17:34:44.322" level="INFO">${user_id[0][0]_transaction} = 6150</msg>
<status status="PASS" endtime="20170727 17:34:44.323" starttime="20170727 17:34:44.321"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id1[0][0]}'</arg>
</arguments>
<msg timestamp="20170727 17:34:44.324" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88889202' </msg>
<status status="PASS" endtime="20170727 17:34:44.577" starttime="20170727 17:34:44.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>检验表account_amount</arg>
</arguments>
<msg timestamp="20170727 17:34:44.583" level="INFO">检验表account_amount</msg>
<status status="PASS" endtime="20170727 17:34:44.585" starttime="20170727 17:34:44.580"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_app}'</arg>
</arguments>
<assign>
<var>${amount_app_after}</var>
</assign>
<msg timestamp="20170727 17:34:44.591" level="INFO">Executing : Query  |  select * from account_amount where account_id='6161' </msg>
<msg timestamp="20170727 17:34:44.605" level="INFO">${amount_app_after} = ((12475, 6161, Decimal('10164.00'), Decimal('10164.00'), Decimal('0.00'), datetime.datetime(2017, 7, 19, 17, 6, 7), datetime.datetime(2017, 7, 27, 17, 35, 47), 0),)</msg>
<status status="PASS" endtime="20170727 17:34:44.607" starttime="20170727 17:34:44.588"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${amount_app_after[0][2]}-${amount_app[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_app}</var>
</assign>
<msg timestamp="20170727 17:34:44.613" level="INFO">${total_amount_app} = 2.0</msg>
<status status="PASS" endtime="20170727 17:34:44.614" starttime="20170727 17:34:44.610"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${total_amount_app}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<msg timestamp="20170727 17:34:44.620" level="INFO">Argument types are:
&lt;type 'float'&gt;
&lt;class 'decimal.Decimal'&gt;</msg>
<status status="PASS" endtime="20170727 17:34:44.621" starttime="20170727 17:34:44.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount正确</arg>
</arguments>
<msg timestamp="20170727 17:34:44.624" level="INFO">total_amount正确</msg>
<status status="PASS" endtime="20170727 17:34:44.625" starttime="20170727 17:34:44.623"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${amount_app_after[0][3]}-${amount_app[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_app}</var>
</assign>
<msg timestamp="20170727 17:34:44.630" level="INFO">${balance_amount_app} = 2.0</msg>
<status status="PASS" endtime="20170727 17:34:44.630" starttime="20170727 17:34:44.627"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${balance_amount_app}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<msg timestamp="20170727 17:34:44.633" level="INFO">Argument types are:
&lt;type 'float'&gt;
&lt;class 'decimal.Decimal'&gt;</msg>
<status status="PASS" endtime="20170727 17:34:44.635" starttime="20170727 17:34:44.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount正确</arg>
</arguments>
<msg timestamp="20170727 17:34:44.638" level="INFO">balance_amount正确</msg>
<status status="PASS" endtime="20170727 17:34:44.639" starttime="20170727 17:34:44.636"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${amount_app_after[0][4]}-${amount_app[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_app}</var>
</assign>
<msg timestamp="20170727 17:34:44.643" level="INFO">${frozen_amount_app} = 0.0</msg>
<status status="PASS" endtime="20170727 17:34:44.643" starttime="20170727 17:34:44.641"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${frozen_amount_app}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170727 17:34:44.645" level="INFO">Argument types are:
&lt;type 'float'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 17:34:44.645" starttime="20170727 17:34:44.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount正确</arg>
</arguments>
<msg timestamp="20170727 17:34:44.647" level="INFO">frozen_amount正确</msg>
<status status="PASS" endtime="20170727 17:34:44.647" starttime="20170727 17:34:44.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>检验表account_amount成功</arg>
</arguments>
<msg timestamp="20170727 17:34:44.648" level="INFO">检验表account_amount成功</msg>
<status status="PASS" endtime="20170727 17:34:44.649" starttime="20170727 17:34:44.648"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=888888</arg>
</arguments>
<msg timestamp="20170727 17:34:44.650" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=888888 </msg>
<status status="PASS" endtime="20170727 17:34:44.665" starttime="20170727 17:34:44.650"></status>
</kw>
<status status="PASS" endtime="20170727 17:34:44.666" critical="yes" starttime="20170727 17:34:42.739"></status>
</test>
<status status="PASS" endtime="20170727 17:34:44.668" starttime="20170727 17:34:42.358"></status>
</suite>
<status status="PASS" endtime="20170727 17:34:44.677" starttime="20170727 17:34:42.354"></status>
</suite>
<status status="PASS" endtime="20170727 17:34:44.681" starttime="20170727 17:34:42.156"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="账户中心" pass="1">账户中心</stat>
<stat fail="0" id="s1-s1" name="订单" pass="1">账户中心.订单</stat>
<stat fail="0" id="s1-s1-s1" name="订单支付退款（线上）" pass="1">账户中心.订单.订单支付退款（线上）</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
