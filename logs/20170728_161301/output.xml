<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170728 16:13:36.951" generator="Robot 3.0.2 (Python 2.7.8 on win32)">
<suite source="F:\logs and reports\账户中心" id="s1" name="账户中心">
<suite source="F:\logs and reports\账户中心\艾佳币" id="s1-s1" name="艾佳币">
<suite source="F:\logs and reports\账户中心\艾佳币\艾佳币充值.txt" id="s1-s1-s1" name="艾佳币充值">
<test id="s1-s1-s1-t1" name="输入未有的user_id和正确的amount参数">
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>123456785</arg>
<arg>1</arg>
<arg>2</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 16:13:37.487" level="INFO">${args11} = 123456785</msg>
<status status="PASS" endtime="20170728 16:13:37.487" starttime="20170728 16:13:37.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 16:13:37.491" level="INFO">${args22} = 1</msg>
<status status="PASS" endtime="20170728 16:13:37.492" starttime="20170728 16:13:37.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 16:13:37.493" level="INFO">${args33} = 2</msg>
<status status="PASS" endtime="20170728 16:13:37.494" starttime="20170728 16:13:37.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 16:13:37.495" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 16:13:37.496" starttime="20170728 16:13:37.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 16:13:37.497" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</msg>
<status status="PASS" endtime="20170728 16:13:37.498" starttime="20170728 16:13:37.497"></status>
</kw>
<status status="PASS" endtime="20170728 16:13:37.498" starttime="20170728 16:13:37.484"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 16:13:37.526" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 16:13:37.572" starttime="20170728 16:13:37.502"></status>
</kw>
<status status="PASS" endtime="20170728 16:13:37.574" starttime="20170728 16:13:37.501"></status>
</kw>
<status status="PASS" endtime="20170728 16:13:37.574" starttime="20170728 16:13:37.499"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id ='${args11}'</arg>
</arguments>
<assign>
<var>${no_user_id}</var>
</assign>
<msg timestamp="20170728 16:13:37.576" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id ='123456785' </msg>
<msg timestamp="20170728 16:13:37.584" level="INFO">${no_user_id} = ()</msg>
<status status="PASS" endtime="20170728 16:13:37.584" starttime="20170728 16:13:37.575"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${no_user_id}</arg>
</arguments>
<msg timestamp="20170728 16:13:37.586" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170728 16:13:37.586" starttime="20170728 16:13:37.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>此user_id不存在</arg>
</arguments>
<msg timestamp="20170728 16:13:37.587" level="INFO">此user_id不存在</msg>
<status status="PASS" endtime="20170728 16:13:37.588" starttime="20170728 16:13:37.587"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 16:13:37.591" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</msg>
<status status="PASS" endtime="20170728 16:13:37.592" starttime="20170728 16:13:37.590"></status>
</kw>
<kw name="Data" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data_no_user_id}</var>
</assign>
<msg timestamp="20170728 16:13:37.712" level="INFO">${data_no_user_id} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 16:13:37.712" starttime="20170728 16:13:37.594"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data_no_user_id.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 16:13:37.714" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:13:37.715" starttime="20170728 16:13:37.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 16:13:37.717" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 16:13:37.717" starttime="20170728 16:13:37.716"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data_no_user_id.text}</arg>
</arguments>
<assign>
<var>${toJson1}</var>
</assign>
<msg timestamp="20170728 16:13:37.719" level="INFO">To JSON using : content={"data":{"orderNum":"32102151361501208543"},"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 16:13:37.720" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 16:13:37.720" level="INFO">${toJson1} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': {u'orderNum': u'32102151361501208543'}, u'success': True}</msg>
<status status="PASS" endtime="20170728 16:13:37.721" starttime="20170728 16:13:37.718"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson1['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 16:13:37.722" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:13:37.723" starttime="20170728 16:13:37.721"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson1['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 16:13:37.725" starttime="20170728 16:13:37.724"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${toJson1['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${no_user_id_orderNum}</var>
</assign>
<msg timestamp="20170728 16:13:37.728" level="INFO">${no_user_id_orderNum} = 32102151361501208543</msg>
<status status="PASS" endtime="20170728 16:13:37.729" starttime="20170728 16:13:37.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 16:13:37.730" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 16:13:37.731" starttime="20170728 16:13:37.729"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id ='${args11}'</arg>
</arguments>
<assign>
<var>${no_user_id_after}</var>
</assign>
<msg timestamp="20170728 16:13:37.732" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id ='123456785' </msg>
<msg timestamp="20170728 16:13:37.741" level="INFO">${no_user_id_after} = ((100000000053L, '32102151361501208542', 123456785, 6319, 1, 2, 0, datetime.datetime(2017, 7, 28, 16, 14, 43), datetime.datetime(2017, 7, 28, 16, 14, 43)),)</msg>
<status status="PASS" endtime="20170728 16:13:37.741" starttime="20170728 16:13:37.731"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${no_user_id_after}</arg>
</arguments>
<msg timestamp="20170728 16:13:37.743" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 16:13:37.744" starttime="20170728 16:13:37.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>调用艾佳币充值接口自动生成boss的账号</arg>
</arguments>
<msg timestamp="20170728 16:13:37.745" level="INFO">调用艾佳币充值接口自动生成boss的账号</msg>
<status status="PASS" endtime="20170728 16:13:37.746" starttime="20170728 16:13:37.744"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${no_user_id_after[0][3]}</arg>
</arguments>
<assign>
<var>${no_user_id_account_id}</var>
</assign>
<msg timestamp="20170728 16:13:37.747" level="INFO">${no_user_id_account_id} = 6319</msg>
<status status="PASS" endtime="20170728 16:13:37.748" starttime="20170728 16:13:37.746"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_open_record where user_id ='${args11}'</arg>
</arguments>
<msg timestamp="20170728 16:13:37.749" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_open_record where user_id ='123456785' </msg>
<status status="PASS" endtime="20170728 16:13:37.841" starttime="20170728 16:13:37.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>已删除该账号！</arg>
</arguments>
<msg timestamp="20170728 16:13:37.846" level="INFO">已删除该账号！</msg>
<status status="PASS" endtime="20170728 16:13:37.847" starttime="20170728 16:13:37.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_unilateral_bill</arg>
</arguments>
<msg timestamp="20170728 16:13:37.853" level="INFO">现在开始校验表account_unilateral_bill</msg>
<status status="PASS" endtime="20170728 16:13:37.854" starttime="20170728 16:13:37.850"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time_no}</var>
</assign>
<msg timestamp="20170728 16:13:37.859" level="INFO">${current_time_no} = 2017-07-28 16:13:37.859</msg>
<status status="PASS" endtime="20170728 16:13:37.860" starttime="20170728 16:13:37.857"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_no}</arg>
<arg>15 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_301}</var>
</assign>
<msg timestamp="20170728 16:13:37.872" level="INFO">${current_time_before_301} = 2017-07-28 16:13:22.859</msg>
<status status="PASS" endtime="20170728 16:13:37.873" starttime="20170728 16:13:37.861"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_no}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_302}</var>
</assign>
<msg timestamp="20170728 16:13:37.879" level="INFO">${current_time_after_302} = 2017-07-28 16:14:42.859</msg>
<status status="PASS" endtime="20170728 16:13:37.880" starttime="20170728 16:13:37.875"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${no_user_id_account_id}'and update_time between' ${current_time_before_301}' and '${current_time_after_302}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 16:13:37.885" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6319'and update_time between' 2017-07-28 16:13:22.859' and '2017-07-28 16:14:42.859' </msg>
<msg timestamp="20170728 16:13:37.894" level="INFO">${user_id} = ()</msg>
<status status="PASS" endtime="20170728 16:13:37.895" starttime="20170728 16:13:37.883"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170728 16:13:37.898" level="FAIL">Resolving variable '${user_id[0][1]}' failed: IndexError: tuple index out of range</msg>
<status status="FAIL" endtime="20170728 16:13:37.899" starttime="20170728 16:13:37.896"></status>
</kw>
<status status="FAIL" endtime="20170728 16:13:37.900" critical="yes" starttime="20170728 16:13:37.480">Resolving variable '${user_id[0][1]}' failed: IndexError: tuple index out of range</status>
</test>
<status status="FAIL" endtime="20170728 16:13:37.903" starttime="20170728 16:13:37.183"></status>
</suite>
<status status="FAIL" endtime="20170728 16:13:37.913" starttime="20170728 16:13:37.179"></status>
</suite>
<status status="FAIL" endtime="20170728 16:13:37.919" starttime="20170728 16:13:36.979"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="0">Critical Tests</stat>
<stat fail="1" pass="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="1" id="s1" name="账户中心" pass="0">账户中心</stat>
<stat fail="1" id="s1-s1" name="艾佳币" pass="0">账户中心.艾佳币</stat>
<stat fail="1" id="s1-s1-s1" name="艾佳币充值" pass="0">账户中心.艾佳币.艾佳币充值</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20170728 16:13:37.476" level="ERROR">Error in file 'F:\logs and reports\账户中心\艾佳币\艾佳币充值.txt': Resource file '艾佳币需要的操作.txt' does not exist.</msg>
</errors>
</robot>
