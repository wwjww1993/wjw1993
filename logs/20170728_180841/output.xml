<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170728 18:09:00.712" generator="Robot 3.0.2 (Python 2.7.8 on win32)">
<suite source="F:\logs and reports\账户中心" id="s1" name="账户中心">
<suite source="F:\logs and reports\账户中心\艾佳币" id="s1-s1" name="艾佳币">
<suite source="F:\logs and reports\账户中心\艾佳币\艾佳币充值.txt" id="s1-s1-s1" name="艾佳币充值">
<test id="s1-s1-s1-t1" name="输入未有的user_id和正确的amount参数">
<kw name="参数配置" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 18:09:01.325" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 18:09:01.851" starttime="20170728 18:09:01.299"></status>
</kw>
<status status="PASS" endtime="20170728 18:09:01.855" starttime="20170728 18:09:01.296"></status>
</kw>
<kw name="输入拥有不同类型账户的用户user_id" library="myResource">
<arguments>
<arg>100000</arg>
<arg>100000</arg>
<arg>123456781</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_user_account_id}</arg>
</arguments>
<msg timestamp="20170728 18:09:01.863" level="INFO">${boss_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170728 18:09:01.865" starttime="20170728 18:09:01.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_user_account_id}</arg>
</arguments>
<msg timestamp="20170728 18:09:01.868" level="INFO">${app_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170728 18:09:01.869" starttime="20170728 18:09:01.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${no_user_account_id}</arg>
</arguments>
<msg timestamp="20170728 18:09:01.873" level="INFO">${no_user_account_id} = 123456781</msg>
<status status="PASS" endtime="20170728 18:09:01.874" starttime="20170728 18:09:01.871"></status>
</kw>
<status status="PASS" endtime="20170728 18:09:01.875" starttime="20170728 18:09:01.859"></status>
</kw>
<status status="PASS" endtime="20170728 18:09:01.877" starttime="20170728 18:09:01.293"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>${no_user_account_id}</arg>
<arg>1</arg>
<arg>2</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 18:09:01.882" level="INFO">${args11} = 123456781</msg>
<status status="PASS" endtime="20170728 18:09:01.883" starttime="20170728 18:09:01.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 18:09:01.889" level="INFO">${args22} = 1</msg>
<status status="PASS" endtime="20170728 18:09:01.890" starttime="20170728 18:09:01.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 18:09:01.895" level="INFO">${args33} = 2</msg>
<status status="PASS" endtime="20170728 18:09:01.897" starttime="20170728 18:09:01.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 18:09:01.902" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 18:09:01.905" starttime="20170728 18:09:01.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 18:09:01.909" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</msg>
<status status="PASS" endtime="20170728 18:09:01.910" starttime="20170728 18:09:01.907"></status>
</kw>
<status status="PASS" endtime="20170728 18:09:01.912" starttime="20170728 18:09:01.878"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id ='${args11}'</arg>
</arguments>
<assign>
<var>${no_user_id}</var>
</assign>
<msg timestamp="20170728 18:09:01.916" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id ='123456781' </msg>
<msg timestamp="20170728 18:09:01.925" level="INFO">${no_user_id} = ()</msg>
<status status="PASS" endtime="20170728 18:09:01.926" starttime="20170728 18:09:01.914"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${no_user_id}</arg>
</arguments>
<msg timestamp="20170728 18:09:01.931" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170728 18:09:01.932" starttime="20170728 18:09:01.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>此user_id不存在</arg>
</arguments>
<msg timestamp="20170728 18:09:01.937" level="INFO">此user_id不存在</msg>
<status status="PASS" endtime="20170728 18:09:01.939" starttime="20170728 18:09:01.935"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 18:09:01.944" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</msg>
<status status="PASS" endtime="20170728 18:09:01.945" starttime="20170728 18:09:01.941"></status>
</kw>
<kw name="Data" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data_no_user_id}</var>
</assign>
<msg timestamp="20170728 18:09:02.054" level="INFO">${data_no_user_id} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 18:09:02.056" starttime="20170728 18:09:01.947"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data_no_user_id.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 18:09:02.060" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:02.062" starttime="20170728 18:09:02.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 18:09:02.066" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 18:09:02.068" starttime="20170728 18:09:02.064"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data_no_user_id.text}</arg>
</arguments>
<assign>
<var>${toJson1}</var>
</assign>
<msg timestamp="20170728 18:09:02.072" level="INFO">To JSON using : content={"data":{"orderNum":"32102151361501231379"},"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 18:09:02.074" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 18:09:02.076" level="INFO">${toJson1} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': {u'orderNum': u'32102151361501231379'}, u'success': True}</msg>
<status status="PASS" endtime="20170728 18:09:02.077" starttime="20170728 18:09:02.070"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson1['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 18:09:02.082" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:02.084" starttime="20170728 18:09:02.080"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson1['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 18:09:02.089" starttime="20170728 18:09:02.086"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${toJson1['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${no_user_id_orderNum}</var>
</assign>
<msg timestamp="20170728 18:09:02.094" level="INFO">${no_user_id_orderNum} = 32102151361501231379</msg>
<status status="PASS" endtime="20170728 18:09:02.096" starttime="20170728 18:09:02.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 18:09:02.100" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 18:09:02.101" starttime="20170728 18:09:02.098"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id ='${args11}'</arg>
</arguments>
<assign>
<var>${no_user_id_after}</var>
</assign>
<msg timestamp="20170728 18:09:02.106" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id ='123456781' </msg>
<msg timestamp="20170728 18:09:02.146" level="INFO">${no_user_id_after} = ((100000000096L, '32102151361501231378', 123456781, 6362, 1, 2, 0, datetime.datetime(2017, 7, 28, 18, 10, 7), datetime.datetime(2017, 7, 28, 18, 10, 7)),)</msg>
<status status="PASS" endtime="20170728 18:09:02.147" starttime="20170728 18:09:02.104"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${no_user_id_after}</arg>
</arguments>
<msg timestamp="20170728 18:09:02.149" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 18:09:02.150" starttime="20170728 18:09:02.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>调用艾佳币充值接口自动生成boss的账号</arg>
</arguments>
<msg timestamp="20170728 18:09:02.152" level="INFO">调用艾佳币充值接口自动生成boss的账号</msg>
<status status="PASS" endtime="20170728 18:09:02.153" starttime="20170728 18:09:02.151"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${no_user_id_after[0][3]}</arg>
</arguments>
<assign>
<var>${no_user_id_account_id}</var>
</assign>
<msg timestamp="20170728 18:09:02.156" level="INFO">${no_user_id_account_id} = 6362</msg>
<status status="PASS" endtime="20170728 18:09:02.157" starttime="20170728 18:09:02.154"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_open_record where user_id ='${args11}'</arg>
</arguments>
<msg timestamp="20170728 18:09:02.159" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_open_record where user_id ='123456781' </msg>
<status status="PASS" endtime="20170728 18:09:02.230" starttime="20170728 18:09:02.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>已删除该账号！</arg>
</arguments>
<msg timestamp="20170728 18:09:02.237" level="INFO">已删除该账号！</msg>
<status status="PASS" endtime="20170728 18:09:02.240" starttime="20170728 18:09:02.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_unilateral_bill</arg>
</arguments>
<msg timestamp="20170728 18:09:02.248" level="INFO">现在开始校验表account_unilateral_bill</msg>
<status status="PASS" endtime="20170728 18:09:02.250" starttime="20170728 18:09:02.243"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time_no}</var>
</assign>
<msg timestamp="20170728 18:09:02.254" level="INFO">${current_time_no} = 2017-07-28 18:09:02.253</msg>
<status status="PASS" endtime="20170728 18:09:02.255" starttime="20170728 18:09:02.252"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_no}</arg>
<arg>5 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_301}</var>
</assign>
<msg timestamp="20170728 18:09:02.261" level="INFO">${current_time_before_301} = 2017-07-28 18:08:57.253</msg>
<status status="PASS" endtime="20170728 18:09:02.262" starttime="20170728 18:09:02.256"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_no}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_302}</var>
</assign>
<msg timestamp="20170728 18:09:02.266" level="INFO">${current_time_after_302} = 2017-07-28 18:10:42.253</msg>
<status status="PASS" endtime="20170728 18:09:02.267" starttime="20170728 18:09:02.264"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${no_user_id_account_id}'and update_time between' ${current_time_before_301}' and '${current_time_after_302}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 18:09:02.270" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6362'and update_time between' 2017-07-28 18:08:57.253' and '2017-07-28 18:10:42.253' </msg>
<msg timestamp="20170728 18:09:02.275" level="INFO">${user_id} = ((8168, '32102151361501231383', 123456781, 6362, '32102151361501231380', 1, 7, 3, Decimal('1.00'), None, datetime.datetime(2017, 7, 28, 18, 10, 7), datetime.datetime(2017, 7, 28, 18, 10, 7), 0),)</msg>
<status status="PASS" endtime="20170728 18:09:02.277" starttime="20170728 18:09:02.268"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170728 18:09:02.280" level="INFO">Length is 20</msg>
<msg timestamp="20170728 18:09:02.281" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170728 18:09:02.282" starttime="20170728 18:09:02.279"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 18:09:02.284" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:02.285" starttime="20170728 18:09:02.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 18:09:02.288" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 18:09:02.289" starttime="20170728 18:09:02.286"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 18:09:02.292" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:02.293" starttime="20170728 18:09:02.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 18:09:02.297" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 18:09:02.298" starttime="20170728 18:09:02.295"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170728 18:09:02.300" level="INFO">Length is 20</msg>
<msg timestamp="20170728 18:09:02.301" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170728 18:09:02.301" starttime="20170728 18:09:02.299"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 18:09:02.304" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:02.304" starttime="20170728 18:09:02.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 18:09:02.306" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 18:09:02.307" starttime="20170728 18:09:02.305"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 18:09:02.311" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:02.313" starttime="20170728 18:09:02.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 18:09:02.316" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 18:09:02.316" starttime="20170728 18:09:02.314"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>7</arg>
</arguments>
<msg timestamp="20170728 18:09:02.319" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:02.320" starttime="20170728 18:09:02.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 18:09:02.322" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 18:09:02.323" starttime="20170728 18:09:02.321"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20170728 18:09:02.326" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:02.328" starttime="20170728 18:09:02.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170728 18:09:02.330" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170728 18:09:02.331" starttime="20170728 18:09:02.329"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 18:09:02.333" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:02.334" starttime="20170728 18:09:02.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 18:09:02.337" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 18:09:02.338" starttime="20170728 18:09:02.336"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${user_id[0][10]}</arg>
<arg>${user_id[0][11]}</arg>
</arguments>
<status status="PASS" endtime="20170728 18:09:02.341" starttime="20170728 18:09:02.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 18:09:02.342" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 18:09:02.343" starttime="20170728 18:09:02.342"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 18:09:02.346" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:02.347" starttime="20170728 18:09:02.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 18:09:02.349" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 18:09:02.350" starttime="20170728 18:09:02.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170728 18:09:02.352" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170728 18:09:02.353" starttime="20170728 18:09:02.351"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_unilateral}</var>
</assign>
<msg timestamp="20170728 18:09:02.356" level="INFO">${user_id[0][0]_unilateral} = 8168</msg>
<status status="PASS" endtime="20170728 18:09:02.357" starttime="20170728 18:09:02.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_unilateral}</arg>
</arguments>
<msg timestamp="20170728 18:09:02.361" level="INFO">${user_id[0][0]_unilateral} = 8168</msg>
<status status="PASS" endtime="20170728 18:09:02.362" starttime="20170728 18:09:02.359"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]_unilateral}'</arg>
</arguments>
<msg timestamp="20170728 18:09:02.364" level="INFO">Executing : Execute SQL String  |  delete from account_unilateral_bill where id ='8168' </msg>
<status status="PASS" endtime="20170728 18:09:02.434" starttime="20170728 18:09:02.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170728 18:09:02.438" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170728 18:09:02.439" starttime="20170728 18:09:02.436"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time_nouser}</var>
</assign>
<msg timestamp="20170728 18:09:02.441" level="INFO">${current_time_nouser} = 2017-07-28 18:09:02.441</msg>
<status status="PASS" endtime="20170728 18:09:02.442" starttime="20170728 18:09:02.440"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_nouser}</arg>
<arg>5 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_3011}</var>
</assign>
<msg timestamp="20170728 18:09:02.444" level="INFO">${current_time_before_3011} = 2017-07-28 18:08:57.441</msg>
<status status="PASS" endtime="20170728 18:09:02.445" starttime="20170728 18:09:02.443"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_nouser}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_3022}</var>
</assign>
<msg timestamp="20170728 18:09:02.447" level="INFO">${current_time_after_3022} = 2017-07-28 18:10:42.441</msg>
<status status="PASS" endtime="20170728 18:09:02.448" starttime="20170728 18:09:02.446"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where account_id ='${no_user_id_account_id}' and update_time between' ${current_time_before_3011}' and '${current_time_after_3022}'</arg>
</arguments>
<assign>
<var>${user_id_no}</var>
</assign>
<msg timestamp="20170728 18:09:02.450" level="INFO">Executing : Query  |  select * from ajb_account_transaction where account_id ='6362' and update_time between' 2017-07-28 18:08:57.441' and '2017-07-28 18:10:42.441' </msg>
<msg timestamp="20170728 18:09:02.460" level="INFO">${user_id_no} = ((88889978, '32102151361501231379', 123456781, 6362, 1, '32102151361501231379', '20170728181004YNK051947', Decimal('1.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 28, 18, 10, 7), datetime.datetime(201...</msg>
<status status="PASS" endtime="20170728 18:09:02.461" starttime="20170728 18:09:02.449"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id_no[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 18:09:02.464" level="INFO">Length is 20</msg>
<msg timestamp="20170728 18:09:02.465" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 18:09:02.466" starttime="20170728 18:09:02.462"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 18:09:02.468" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:02.470" starttime="20170728 18:09:02.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 18:09:02.473" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 18:09:02.473" starttime="20170728 18:09:02.471"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][2]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 18:09:02.476" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:02.479" starttime="20170728 18:09:02.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 18:09:02.481" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 18:09:02.482" starttime="20170728 18:09:02.480"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][4]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 18:09:02.484" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:02.485" starttime="20170728 18:09:02.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no的值正确</arg>
</arguments>
<msg timestamp="20170728 18:09:02.488" level="INFO">channel_no的值正确</msg>
<status status="PASS" endtime="20170728 18:09:02.489" starttime="20170728 18:09:02.486"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][5]}</arg>
<arg>${no_user_id_orderNum}</arg>
</arguments>
<msg timestamp="20170728 18:09:02.492" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:02.494" starttime="20170728 18:09:02.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170728 18:09:02.497" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170728 18:09:02.498" starttime="20170728 18:09:02.495"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id_no[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170728 18:09:02.501" level="INFO">${pay_no_after} = 20170728181004YNK051947</msg>
<status status="PASS" endtime="20170728 18:09:02.503" starttime="20170728 18:09:02.500"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170728 18:09:02.506" level="INFO">Length is 23</msg>
<msg timestamp="20170728 18:09:02.507" level="INFO">${pay_no_after_length} = 23</msg>
<status status="PASS" endtime="20170728 18:09:02.508" starttime="20170728 18:09:02.505"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>23</arg>
</arguments>
<msg timestamp="20170728 18:09:02.510" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:02.510" starttime="20170728 18:09:02.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170728 18:09:02.512" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170728 18:09:02.513" starttime="20170728 18:09:02.511"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][7]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 18:09:02.517" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:02.518" starttime="20170728 18:09:02.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 18:09:02.521" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 18:09:02.522" starttime="20170728 18:09:02.519"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 18:09:02.524" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:02.525" starttime="20170728 18:09:02.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 18:09:02.529" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 18:09:02.531" starttime="20170728 18:09:02.528"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][9]}</arg>
<arg>7</arg>
</arguments>
<msg timestamp="20170728 18:09:02.534" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:02.536" starttime="20170728 18:09:02.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 18:09:02.540" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 18:09:02.541" starttime="20170728 18:09:02.538"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 18:09:02.544" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:02.545" starttime="20170728 18:09:02.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170728 18:09:02.549" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170728 18:09:02.550" starttime="20170728 18:09:02.547"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 18:09:02.552" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:02.553" starttime="20170728 18:09:02.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 18:09:02.555" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 18:09:02.556" starttime="20170728 18:09:02.554"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${user_id_no[0][12]}</arg>
<arg>${user_id_no[0][13]}</arg>
</arguments>
<status status="PASS" endtime="20170728 18:09:02.560" starttime="20170728 18:09:02.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 18:09:02.562" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 18:09:02.563" starttime="20170728 18:09:02.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170728 18:09:02.565" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170728 18:09:02.566" starttime="20170728 18:09:02.564"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id_no[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170728 18:09:02.568" level="INFO">${user_id[0][0]_transaction} = 88889978</msg>
<status status="PASS" endtime="20170728 18:09:02.569" starttime="20170728 18:09:02.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170728 18:09:02.572" level="INFO">${user_id[0][0]_transaction} = 88889978</msg>
<status status="PASS" endtime="20170728 18:09:02.573" starttime="20170728 18:09:02.571"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id_no[0][0]}'</arg>
</arguments>
<msg timestamp="20170728 18:09:02.575" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88889978' </msg>
<status status="PASS" endtime="20170728 18:09:02.629" starttime="20170728 18:09:02.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_amount</arg>
</arguments>
<msg timestamp="20170728 18:09:02.632" level="INFO">现在开始校验表account_amount</msg>
<status status="PASS" endtime="20170728 18:09:02.633" starttime="20170728 18:09:02.631"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${no_user_id_account_id}'</arg>
</arguments>
<assign>
<var>${user_id_t}</var>
</assign>
<msg timestamp="20170728 18:09:02.636" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6362' </msg>
<msg timestamp="20170728 18:09:02.642" level="INFO">${user_id_t} = ((12676, 6362, Decimal('1.00'), Decimal('1.00'), Decimal('0.00'), datetime.datetime(2017, 7, 28, 18, 10, 7), datetime.datetime(2017, 7, 28, 18, 10, 7), 0),)</msg>
<status status="PASS" endtime="20170728 18:09:02.643" starttime="20170728 18:09:02.634"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][2]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 18:09:02.645" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:02.646" starttime="20170728 18:09:02.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 18:09:02.648" level="INFO">total_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 18:09:02.649" starttime="20170728 18:09:02.647"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][3]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 18:09:02.652" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:02.654" starttime="20170728 18:09:02.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 18:09:02.656" level="INFO">balance_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 18:09:02.657" starttime="20170728 18:09:02.655"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][4]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 18:09:02.659" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:02.660" starttime="20170728 18:09:02.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 18:09:02.662" level="INFO">frozen_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 18:09:02.662" starttime="20170728 18:09:02.661"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 18:09:02.664" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:02.665" starttime="20170728 18:09:02.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 18:09:02.667" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 18:09:02.668" starttime="20170728 18:09:02.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount校验成功！</arg>
</arguments>
<msg timestamp="20170728 18:09:02.671" level="INFO">表account_amount校验成功！</msg>
<status status="PASS" endtime="20170728 18:09:02.673" starttime="20170728 18:09:02.669"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_amount where account_id ='${no_user_id_account_id}'</arg>
</arguments>
<msg timestamp="20170728 18:09:02.676" level="INFO">Executing : Execute SQL String  |  delete from account_amount where account_id ='6362' </msg>
<status status="PASS" endtime="20170728 18:09:02.840" starttime="20170728 18:09:02.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>输入未有的user_id和正确的amount参数，会直接生成boss账户，然后表里的数据都入库成功！</arg>
</arguments>
<msg timestamp="20170728 18:09:02.848" level="INFO">输入未有的user_id和正确的amount参数，会直接生成boss账户，然后表里的数据都入库成功！</msg>
<status status="PASS" endtime="20170728 18:09:02.851" starttime="20170728 18:09:02.845"></status>
</kw>
<status status="PASS" endtime="20170728 18:09:02.855" critical="yes" starttime="20170728 18:09:01.287"></status>
</test>
<status status="PASS" endtime="20170728 18:09:02.861" starttime="20170728 18:09:00.976"></status>
</suite>
<suite source="F:\logs and reports\账户中心\艾佳币\艾佳币回收冻结.txt" id="s1-s1-s2" name="艾佳币回收冻结">
<test id="s1-s1-s2-t1" name="输入木有的user_id和正确的amount参数">
<kw name="参数配置" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 18:09:02.913" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 18:09:02.925" starttime="20170728 18:09:02.911"></status>
</kw>
<status status="PASS" endtime="20170728 18:09:02.926" starttime="20170728 18:09:02.909"></status>
</kw>
<kw name="输入拥有不同类型账户的用户user_id" library="myResource">
<arguments>
<arg>100000</arg>
<arg>100000</arg>
<arg>123456781</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_user_account_id}</arg>
</arguments>
<msg timestamp="20170728 18:09:02.931" level="INFO">${boss_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170728 18:09:02.932" starttime="20170728 18:09:02.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_user_account_id}</arg>
</arguments>
<msg timestamp="20170728 18:09:02.936" level="INFO">${app_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170728 18:09:02.938" starttime="20170728 18:09:02.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${no_user_account_id}</arg>
</arguments>
<msg timestamp="20170728 18:09:02.942" level="INFO">${no_user_account_id} = 123456781</msg>
<status status="PASS" endtime="20170728 18:09:02.944" starttime="20170728 18:09:02.940"></status>
</kw>
<status status="PASS" endtime="20170728 18:09:02.945" starttime="20170728 18:09:02.927"></status>
</kw>
<status status="PASS" endtime="20170728 18:09:02.946" starttime="20170728 18:09:02.906"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>${no_user_account_id}</arg>
<arg>1</arg>
<arg>2</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 18:09:02.951" level="INFO">${args11} = 123456781</msg>
<status status="PASS" endtime="20170728 18:09:02.953" starttime="20170728 18:09:02.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 18:09:02.956" level="INFO">${args22} = 1</msg>
<status status="PASS" endtime="20170728 18:09:02.956" starttime="20170728 18:09:02.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 18:09:02.958" level="INFO">${args33} = 2</msg>
<status status="PASS" endtime="20170728 18:09:02.959" starttime="20170728 18:09:02.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 18:09:02.961" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 18:09:02.962" starttime="20170728 18:09:02.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 18:09:02.964" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</msg>
<status status="PASS" endtime="20170728 18:09:02.965" starttime="20170728 18:09:02.963"></status>
</kw>
<status status="PASS" endtime="20170728 18:09:02.965" starttime="20170728 18:09:02.947"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id ='${args11}'</arg>
</arguments>
<assign>
<var>${no_user_id}</var>
</assign>
<msg timestamp="20170728 18:09:02.969" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id ='123456781' </msg>
<msg timestamp="20170728 18:09:02.979" level="INFO">${no_user_id} = ()</msg>
<status status="PASS" endtime="20170728 18:09:02.979" starttime="20170728 18:09:02.967"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${no_user_id}</arg>
</arguments>
<msg timestamp="20170728 18:09:02.981" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170728 18:09:02.982" starttime="20170728 18:09:02.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>此user_id不存在</arg>
</arguments>
<msg timestamp="20170728 18:09:02.986" level="INFO">此user_id不存在</msg>
<status status="PASS" endtime="20170728 18:09:02.987" starttime="20170728 18:09:02.983"></status>
</kw>
<kw name="Data" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data_no_user_id}</var>
</assign>
<msg timestamp="20170728 18:09:03.007" level="INFO">${data_no_user_id} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20170728 18:09:03.008" starttime="20170728 18:09:02.989"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data_no_user_id.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 18:09:03.011" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170728 18:09:03.013" level="FAIL">500 != 200</msg>
<status status="FAIL" endtime="20170728 18:09:03.014" starttime="20170728 18:09:03.009"></status>
</kw>
<status status="FAIL" endtime="20170728 18:09:03.016" critical="yes" starttime="20170728 18:09:02.901">500 != 200</status>
</test>
<status status="FAIL" endtime="20170728 18:09:03.018" starttime="20170728 18:09:02.877"></status>
</suite>
<status status="FAIL" endtime="20170728 18:09:03.025" starttime="20170728 18:09:00.969"></status>
</suite>
<status status="FAIL" endtime="20170728 18:09:03.031" starttime="20170728 18:09:00.745"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="1">Critical Tests</stat>
<stat fail="1" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="1" id="s1" name="账户中心" pass="1">账户中心</stat>
<stat fail="1" id="s1-s1" name="艾佳币" pass="1">账户中心.艾佳币</stat>
<stat fail="0" id="s1-s1-s1" name="艾佳币充值" pass="1">账户中心.艾佳币.艾佳币充值</stat>
<stat fail="1" id="s1-s1-s2" name="艾佳币回收冻结" pass="0">账户中心.艾佳币.艾佳币回收冻结</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20170728 18:09:01.281" level="ERROR">Error in file 'F:\logs and reports\账户中心\艾佳币\艾佳币充值.txt': Resource file '艾佳币需要的操作.txt' does not exist.</msg>
</errors>
</robot>
