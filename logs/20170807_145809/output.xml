<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170807 15:07:44.930" generator="Robot 3.0.2 (Python 2.7.8 on win32)">
<suite source="F:\logs and reports\账户中心" id="s1" name="账户中心">
<suite source="F:\logs and reports\账户中心\订单" id="s1-s1" name="订单">
<suite source="F:\logs and reports\账户中心\订单\订单支付退款（线上）.txt" id="s1-s1-s1" name="订单支付退款（线上）">
<test id="s1-s1-s1-t1" name="艾佳币账户未过期，支付订单后取消顶大，解冻艾佳币，有效期小于15天的延长15天">
<kw name="参数配置" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170807 15:07:45.398" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170807 15:07:45.430" starttime="20170807 15:07:45.383"></status>
</kw>
<status status="PASS" endtime="20170807 15:07:45.430" starttime="20170807 15:07:45.383"></status>
</kw>
<kw name="输入拥有不同类型账户的用户user_id" library="myResource">
<arguments>
<arg>100000</arg>
<arg>100000</arg>
<arg>123456781</arg>
<arg>http://192.168.1.31:10003</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:07:45.430" level="INFO">${boss_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170807 15:07:45.430" starttime="20170807 15:07:45.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:07:45.430" level="INFO">${app_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170807 15:07:45.430" starttime="20170807 15:07:45.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${no_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:07:45.430" level="INFO">${no_user_account_id} = 123456781</msg>
<status status="PASS" endtime="20170807 15:07:45.430" starttime="20170807 15:07:45.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${environment}</arg>
</arguments>
<msg timestamp="20170807 15:07:45.430" level="INFO">${environment} = http://192.168.1.31:10003</msg>
<status status="PASS" endtime="20170807 15:07:45.430" starttime="20170807 15:07:45.430"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${boss_user_account_id}' and channel_no=1</arg>
</arguments>
<assign>
<var>${boss_channel_no1}</var>
</assign>
<msg timestamp="20170807 15:07:45.445" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=1 </msg>
<msg timestamp="20170807 15:07:45.461" level="INFO">${boss_channel_no1} = ((17140, '1686241311501149903', 100000, 5755, 1, 2, 0, datetime.datetime(2017, 7, 27, 18, 4, 58), datetime.datetime(2017, 7, 27, 18, 4, 58)),)</msg>
<status status="PASS" endtime="20170807 15:07:45.461" starttime="20170807 15:07:45.445"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${boss_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${boss_channel_no}</var>
</assign>
<msg timestamp="20170807 15:07:45.461" level="INFO">${boss_channel_no} = 5755</msg>
<status status="PASS" endtime="20170807 15:07:45.461" starttime="20170807 15:07:45.461"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${app_user_account_id}' and channel_no=2</arg>
</arguments>
<assign>
<var>${app_channel_no1}</var>
</assign>
<msg timestamp="20170807 15:07:45.461" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=2 </msg>
<msg timestamp="20170807 15:07:45.476" level="INFO">${app_channel_no1} = ((17141, '1686241311501149931', 100000, 5756, 2, 2, 0, datetime.datetime(2017, 7, 27, 18, 28, 2), datetime.datetime(2017, 7, 27, 18, 28, 2)),)</msg>
<status status="PASS" endtime="20170807 15:07:45.476" starttime="20170807 15:07:45.461"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${app_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${app_channel_no}</var>
</assign>
<msg timestamp="20170807 15:07:45.476" level="INFO">${app_channel_no} = 5756</msg>
<status status="PASS" endtime="20170807 15:07:45.476" starttime="20170807 15:07:45.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_channel_no}</arg>
</arguments>
<msg timestamp="20170807 15:07:45.476" level="INFO">${boss_channel_no} = 5755</msg>
<status status="PASS" endtime="20170807 15:07:45.476" starttime="20170807 15:07:45.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_channel_no}</arg>
</arguments>
<msg timestamp="20170807 15:07:45.476" level="INFO">${app_channel_no} = 5756</msg>
<status status="PASS" endtime="20170807 15:07:45.476" starttime="20170807 15:07:45.476"></status>
</kw>
<status status="PASS" endtime="20170807 15:07:45.476" starttime="20170807 15:07:45.430"></status>
</kw>
<status status="PASS" endtime="20170807 15:07:45.476" starttime="20170807 15:07:45.383"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170807 15:07:45.476" level="INFO">${current_time} = 2017-08-07 15:07:45.476</msg>
<status status="PASS" endtime="20170807 15:07:45.476" starttime="20170807 15:07:45.476"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>1 days</arg>
</arguments>
<assign>
<var>${after_time}</var>
</assign>
<msg timestamp="20170807 15:07:45.492" level="INFO">${after_time} = 2017-08-08 15:07:45.476</msg>
<status status="PASS" endtime="20170807 15:07:45.492" starttime="20170807 15:07:45.492"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>10 days</arg>
</arguments>
<assign>
<var>${account_begin_time}</var>
</assign>
<msg timestamp="20170807 15:07:45.492" level="INFO">${account_begin_time} = 2017-07-28 15:07:45.476</msg>
<status status="PASS" endtime="20170807 15:07:45.492" starttime="20170807 15:07:45.492"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>15 days</arg>
</arguments>
<assign>
<var>${after_time_check1}</var>
</assign>
<msg timestamp="20170807 15:07:45.492" level="INFO">${after_time_check1} = 2017-08-22 15:07:45.476</msg>
<status status="PASS" endtime="20170807 15:07:45.492" starttime="20170807 15:07:45.492"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${after_time_check1}</arg>
<arg>datetime</arg>
</arguments>
<assign>
<var>${after_time_check}</var>
</assign>
<msg timestamp="20170807 15:07:45.492" level="INFO">${after_time_check} = 2017-08-22 15:07:45.476000</msg>
<status status="PASS" endtime="20170807 15:07:45.492" starttime="20170807 15:07:45.492"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id="${boss_user_account_id}"</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170807 15:07:45.508" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id="100000" </msg>
<msg timestamp="20170807 15:07:45.508" level="INFO">${id} = ((17140, '1686241311501149903', 100000, 5755, 1, 2, 0, datetime.datetime(2017, 7, 27, 18, 4, 58), datetime.datetime(2017, 7, 27, 18, 4, 58)), (17141, '1686241311501149931', 100000, 5756, 2, 2, 0, date...</msg>
<status status="PASS" endtime="20170807 15:07:45.508" starttime="20170807 15:07:45.492"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_base where user_id="${boss_user_account_id}"</arg>
</arguments>
<msg timestamp="20170807 15:07:45.523" level="INFO">Executing : Execute SQL String  |  delete from account_base where user_id="100000" </msg>
<status status="PASS" endtime="20170807 15:07:45.570" starttime="20170807 15:07:45.508"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into account_base(id,user_id,role_type,account_type,account_status,account_begin_time,account_end_time,add_time,update_time,del_flag) values("${id[0][3]}","${boss_user_account_id}","1","2","2","${account_begin_time}","${after_time}","${account_begin_time}","${account_begin_time}","0");</arg>
</arguments>
<msg timestamp="20170807 15:07:45.570" level="INFO">Executing : Execute SQL String  |  insert into account_base(id,user_id,role_type,account_type,account_status,account_begin_time,account_end_time,add_time,update_time,del_flag) values("5755","100000","1","2","2","2017-07-28 15:07:45.476","2017-08-08 15:07:45.476","2017-07-28 15:07:45.476","2017-07-28 15:07:45.476","0"); </msg>
<status status="PASS" endtime="20170807 15:07:45.679" starttime="20170807 15:07:45.570"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into account_base(id,user_id,role_type,account_type,account_status,account_begin_time,account_end_time,add_time,update_time,del_flag) values("${id[1][3]}","${boss_user_account_id}","1","2","2","${account_begin_time}","${after_time}","${account_begin_time}","${account_begin_time}","0");</arg>
</arguments>
<msg timestamp="20170807 15:07:45.679" level="INFO">Executing : Execute SQL String  |  insert into account_base(id,user_id,role_type,account_type,account_status,account_begin_time,account_end_time,add_time,update_time,del_flag) values("5756","100000","1","2","2","2017-07-28 15:07:45.476","2017-08-08 15:07:45.476","2017-07-28 15:07:45.476","2017-07-28 15:07:45.476","0"); </msg>
<status status="PASS" endtime="20170807 15:07:45.726" starttime="20170807 15:07:45.679"></status>
</kw>
<kw name="清数据" library="myResource">
<arguments>
<arg>888888</arg>
</arguments>
<kw name="参数配置" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170807 15:07:45.726" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170807 15:07:45.742" starttime="20170807 15:07:45.726"></status>
</kw>
<status status="PASS" endtime="20170807 15:07:45.742" starttime="20170807 15:07:45.726"></status>
</kw>
<kw name="输入拥有不同类型账户的用户user_id" library="myResource">
<arguments>
<arg>100000</arg>
<arg>100000</arg>
<arg>123456781</arg>
<arg>http://192.168.1.31:10003</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:07:45.757" level="INFO">${boss_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170807 15:07:45.757" starttime="20170807 15:07:45.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:07:45.757" level="INFO">${app_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170807 15:07:45.757" starttime="20170807 15:07:45.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${no_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:07:45.757" level="INFO">${no_user_account_id} = 123456781</msg>
<status status="PASS" endtime="20170807 15:07:45.757" starttime="20170807 15:07:45.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${environment}</arg>
</arguments>
<msg timestamp="20170807 15:07:45.757" level="INFO">${environment} = http://192.168.1.31:10003</msg>
<status status="PASS" endtime="20170807 15:07:45.757" starttime="20170807 15:07:45.757"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${boss_user_account_id}' and channel_no=1</arg>
</arguments>
<assign>
<var>${boss_channel_no1}</var>
</assign>
<msg timestamp="20170807 15:07:45.757" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=1 </msg>
<msg timestamp="20170807 15:07:45.773" level="INFO">${boss_channel_no1} = ((17140, '1686241311501149903', 100000, 5755, 1, 2, 0, datetime.datetime(2017, 7, 27, 18, 4, 58), datetime.datetime(2017, 7, 27, 18, 4, 58)),)</msg>
<status status="PASS" endtime="20170807 15:07:45.773" starttime="20170807 15:07:45.757"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${boss_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${boss_channel_no}</var>
</assign>
<msg timestamp="20170807 15:07:45.773" level="INFO">${boss_channel_no} = 5755</msg>
<status status="PASS" endtime="20170807 15:07:45.773" starttime="20170807 15:07:45.773"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${app_user_account_id}' and channel_no=2</arg>
</arguments>
<assign>
<var>${app_channel_no1}</var>
</assign>
<msg timestamp="20170807 15:07:45.773" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=2 </msg>
<msg timestamp="20170807 15:07:45.788" level="INFO">${app_channel_no1} = ((17141, '1686241311501149931', 100000, 5756, 2, 2, 0, datetime.datetime(2017, 7, 27, 18, 28, 2), datetime.datetime(2017, 7, 27, 18, 28, 2)),)</msg>
<status status="PASS" endtime="20170807 15:07:45.788" starttime="20170807 15:07:45.773"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${app_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${app_channel_no}</var>
</assign>
<msg timestamp="20170807 15:07:45.788" level="INFO">${app_channel_no} = 5756</msg>
<status status="PASS" endtime="20170807 15:07:45.788" starttime="20170807 15:07:45.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_channel_no}</arg>
</arguments>
<msg timestamp="20170807 15:07:45.788" level="INFO">${boss_channel_no} = 5755</msg>
<status status="PASS" endtime="20170807 15:07:45.788" starttime="20170807 15:07:45.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_channel_no}</arg>
</arguments>
<msg timestamp="20170807 15:07:45.788" level="INFO">${app_channel_no} = 5756</msg>
<status status="PASS" endtime="20170807 15:07:45.788" starttime="20170807 15:07:45.788"></status>
</kw>
<status status="PASS" endtime="20170807 15:07:45.788" starttime="20170807 15:07:45.742"></status>
</kw>
<status status="PASS" endtime="20170807 15:07:45.804" starttime="20170807 15:07:45.726"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170807 15:07:45.804" level="INFO">Executing : Query  |  select * from ajb_account_transaction where id=888888 </msg>
<msg timestamp="20170807 15:07:45.804" level="INFO">${check} = ((888888, '32102151361500885834', 100000, 5755, 1, '32102151361500885834', '', Decimal('2.00'), 1, 13, 2, 0, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)),)</msg>
<status status="PASS" endtime="20170807 15:07:45.804" starttime="20170807 15:07:45.804"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170807 15:07:45.804" level="INFO">Length is 1</msg>
<msg timestamp="20170807 15:07:45.804" level="INFO">${check_length} = 1</msg>
<status status="PASS" endtime="20170807 15:07:45.804" starttime="20170807 15:07:45.804"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} != 0</arg>
<arg>execute sql string</arg>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>数据库之前没有数据</arg>
</arguments>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<msg timestamp="20170807 15:07:45.820" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=888888 </msg>
<status status="PASS" endtime="20170807 15:07:45.913" starttime="20170807 15:07:45.820"></status>
</kw>
<status status="PASS" endtime="20170807 15:07:45.913" starttime="20170807 15:07:45.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库里面的这条数据清理成功啦。</arg>
</arguments>
<msg timestamp="20170807 15:07:45.929" level="INFO">数据库里面的这条数据清理成功啦。</msg>
<status status="PASS" endtime="20170807 15:07:45.929" starttime="20170807 15:07:45.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_delete}</arg>
</arguments>
<msg timestamp="20170807 15:07:45.929" level="INFO">${id_delete} = 888888</msg>
<status status="PASS" endtime="20170807 15:07:45.929" starttime="20170807 15:07:45.929"></status>
</kw>
<status status="PASS" endtime="20170807 15:07:45.929" starttime="20170807 15:07:45.726"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("${id_delete}","32102151361500885834","${boss_user_account_id}","${boss_channel_no}","1","32102151361500885834","","2","1","13","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170807 15:07:45.929" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("888888","32102151361500885834","100000","5755","1","32102151361500885834","","2","1","13","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170807 15:07:45.991" starttime="20170807 15:07:45.929"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>32102151361500885834</arg>
<arg>${environment}/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170807 15:07:45.991" level="INFO">${args11} = 32102151361500885834</msg>
<status status="PASS" endtime="20170807 15:07:45.991" starttime="20170807 15:07:45.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170807 15:07:45.991" level="INFO">${args22} = </msg>
<status status="PASS" endtime="20170807 15:07:45.991" starttime="20170807 15:07:45.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170807 15:07:45.991" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170807 15:07:45.991" starttime="20170807 15:07:45.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170807 15:07:46.007" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170807 15:07:46.007" starttime="20170807 15:07:45.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170807 15:07:46.007" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</msg>
<status status="PASS" endtime="20170807 15:07:46.007" starttime="20170807 15:07:46.007"></status>
</kw>
<status status="PASS" endtime="20170807 15:07:46.007" starttime="20170807 15:07:45.991"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num='${args11}' and event_code=13</arg>
</arguments>
<assign>
<var>${user_id_refund}</var>
</assign>
<msg timestamp="20170807 15:07:46.007" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num='32102151361500885834' and event_code=13 </msg>
<msg timestamp="20170807 15:07:46.038" level="INFO">${user_id_refund} = ((888888, '32102151361500885834', 100000, 5755, 1, '32102151361500885834', '', Decimal('2.00'), 1, 13, 2, 0, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)),)</msg>
<status status="PASS" endtime="20170807 15:07:46.038" starttime="20170807 15:07:46.007"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${user_id_refund[0][2]}' and channel_no=1</arg>
</arguments>
<assign>
<var>${account_id_bos}</var>
</assign>
<msg timestamp="20170807 15:07:46.038" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=1 </msg>
<msg timestamp="20170807 15:07:46.038" level="INFO">${account_id_bos} = ((17140, '1686241311501149903', 100000, 5755, 1, 2, 0, datetime.datetime(2017, 7, 27, 18, 4, 58), datetime.datetime(2017, 7, 27, 18, 4, 58)),)</msg>
<status status="PASS" endtime="20170807 15:07:46.038" starttime="20170807 15:07:46.038"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_id_bos[0][3]}</arg>
</arguments>
<assign>
<var>${account_id_boss}</var>
</assign>
<msg timestamp="20170807 15:07:46.054" level="INFO">${account_id_boss} = 5755</msg>
<status status="PASS" endtime="20170807 15:07:46.054" starttime="20170807 15:07:46.038"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${user_id_refund[0][2]}' and channel_no=2</arg>
</arguments>
<assign>
<var>${account_id_ap}</var>
</assign>
<msg timestamp="20170807 15:07:46.054" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=2 </msg>
<msg timestamp="20170807 15:07:46.069" level="INFO">${account_id_ap} = ((17141, '1686241311501149931', 100000, 5756, 2, 2, 0, datetime.datetime(2017, 7, 27, 18, 28, 2), datetime.datetime(2017, 7, 27, 18, 28, 2)),)</msg>
<status status="PASS" endtime="20170807 15:07:46.069" starttime="20170807 15:07:46.054"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_id_ap[0][3]}</arg>
</arguments>
<assign>
<var>${account_id_app}</var>
</assign>
<msg timestamp="20170807 15:07:46.069" level="INFO">${account_id_app} = 5756</msg>
<status status="PASS" endtime="20170807 15:07:46.069" starttime="20170807 15:07:46.069"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_boss}'</arg>
</arguments>
<assign>
<var>${amount_boss}</var>
</assign>
<msg timestamp="20170807 15:07:46.069" level="INFO">Executing : Query  |  select * from account_amount where account_id='5755' </msg>
<msg timestamp="20170807 15:07:46.100" level="INFO">${amount_boss} = ((17178, 5755, Decimal('78.00'), Decimal('68.00'), Decimal('10.00'), datetime.datetime(2017, 7, 27, 18, 4, 58), datetime.datetime(2017, 8, 7, 14, 58, 28), 0),)</msg>
<status status="PASS" endtime="20170807 15:07:46.100" starttime="20170807 15:07:46.069"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_app}'</arg>
</arguments>
<assign>
<var>${amount_app}</var>
</assign>
<msg timestamp="20170807 15:07:46.100" level="INFO">Executing : Query  |  select * from account_amount where account_id='5756' </msg>
<msg timestamp="20170807 15:07:46.100" level="INFO">${amount_app} = ((17179, 5756, Decimal('76.00'), Decimal('66.00'), Decimal('10.00'), datetime.datetime(2017, 7, 27, 18, 28, 2), datetime.datetime(2017, 8, 7, 14, 58, 15), 0),)</msg>
<status status="PASS" endtime="20170807 15:07:46.116" starttime="20170807 15:07:46.100"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170807 15:07:46.116" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</msg>
<status status="PASS" endtime="20170807 15:07:46.116" starttime="20170807 15:07:46.116"></status>
</kw>
<kw name="Ajb Withdraw Cancel" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170807 15:07:46.912" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170807 15:07:46.912" starttime="20170807 15:07:46.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170807 15:07:46.927" level="INFO">200</msg>
<status status="PASS" endtime="20170807 15:07:46.927" starttime="20170807 15:07:46.927"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170807 15:07:46.927" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:07:46.943" starttime="20170807 15:07:46.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170807 15:07:46.943" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170807 15:07:46.943" starttime="20170807 15:07:46.943"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170807 15:07:46.958" level="INFO">To JSON using : content={"data":null,"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170807 15:07:46.958" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170807 15:07:46.958" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': None, u'success': True}</msg>
<status status="PASS" endtime="20170807 15:07:46.958" starttime="20170807 15:07:46.943"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170807 15:07:46.958" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:07:46.958" starttime="20170807 15:07:46.958"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170807 15:07:46.958" starttime="20170807 15:07:46.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170807 15:07:46.958" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170807 15:07:46.958" starttime="20170807 15:07:46.958"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170807 15:07:46.958" level="INFO">${current_time} = 2017-08-07 15:07:46.958</msg>
<status status="PASS" endtime="20170807 15:07:46.958" starttime="20170807 15:07:46.958"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>5 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170807 15:07:46.958" level="INFO">${current_time_before_30} = 2017-08-07 15:07:41.958</msg>
<status status="PASS" endtime="20170807 15:07:46.958" starttime="20170807 15:07:46.958"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170807 15:07:46.974" level="INFO">${current_time_after_30} = 2017-08-07 15:09:26.958</msg>
<status status="PASS" endtime="20170807 15:07:46.974" starttime="20170807 15:07:46.974"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where event_code=14 and user_id='${user_id_refund[0][2]}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170807 15:07:46.974" level="INFO">Executing : Query  |  select * from account_unilateral_bill where event_code=14 and user_id='100000' and update_time between' 2017-08-07 15:07:41.958' and '2017-08-07 15:09:26.958' </msg>
<msg timestamp="20170807 15:07:46.990" level="INFO">${user_id} = ((25593, '32102151361501755143', 100000, 5755, '32102151361501755141', 1, 14, 3, Decimal('2.00'), None, datetime.datetime(2017, 8, 7, 15, 8, 3), datetime.datetime(2017, 8, 7, 15, 8, 3), 0),)</msg>
<status status="PASS" endtime="20170807 15:07:46.990" starttime="20170807 15:07:46.974"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170807 15:07:46.990" level="INFO">Length is 20</msg>
<msg timestamp="20170807 15:07:46.990" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170807 15:07:46.990" starttime="20170807 15:07:46.990"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170807 15:07:47.005" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:07:47.005" starttime="20170807 15:07:46.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170807 15:07:47.005" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170807 15:07:47.005" starttime="20170807 15:07:47.005"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_refund[0][2]}</arg>
</arguments>
<status status="PASS" endtime="20170807 15:07:47.005" starttime="20170807 15:07:47.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170807 15:07:47.005" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170807 15:07:47.005" starttime="20170807 15:07:47.005"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170807 15:07:47.005" level="INFO">Length is 20</msg>
<msg timestamp="20170807 15:07:47.005" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170807 15:07:47.005" starttime="20170807 15:07:47.005"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170807 15:07:47.005" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:07:47.005" starttime="20170807 15:07:47.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170807 15:07:47.005" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170807 15:07:47.005" starttime="20170807 15:07:47.005"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170807 15:07:47.021" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:07:47.021" starttime="20170807 15:07:47.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170807 15:07:47.021" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170807 15:07:47.021" starttime="20170807 15:07:47.021"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>14</arg>
</arguments>
<msg timestamp="20170807 15:07:47.021" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:07:47.021" starttime="20170807 15:07:47.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170807 15:07:47.021" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170807 15:07:47.021" starttime="20170807 15:07:47.021"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20170807 15:07:47.021" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:07:47.021" starttime="20170807 15:07:47.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170807 15:07:47.021" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170807 15:07:47.021" starttime="20170807 15:07:47.021"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<status status="PASS" endtime="20170807 15:07:47.036" starttime="20170807 15:07:47.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170807 15:07:47.036" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170807 15:07:47.036" starttime="20170807 15:07:47.036"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170807 15:07:47.036" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:07:47.036" starttime="20170807 15:07:47.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170807 15:07:47.036" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170807 15:07:47.036" starttime="20170807 15:07:47.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170807 15:07:47.036" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170807 15:07:47.036" starttime="20170807 15:07:47.036"></status>
</kw>
<kw name="Conn Mysql" library="wjwTestLibrary">
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]}'</arg>
</arguments>
<assign>
<var>${user_id_unilateral_delete}</var>
</assign>
<msg timestamp="20170807 15:07:47.161" level="INFO">${user_id_unilateral_delete} = ()</msg>
<status status="PASS" endtime="20170807 15:07:47.161" starttime="20170807 15:07:47.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170807 15:07:47.177" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170807 15:07:47.177" starttime="20170807 15:07:47.177"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time1}</var>
</assign>
<msg timestamp="20170807 15:07:47.192" level="INFO">${current_time1} = 2017-08-07 15:07:47.192</msg>
<status status="PASS" endtime="20170807 15:07:47.192" starttime="20170807 15:07:47.177"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>5 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_301}</var>
</assign>
<msg timestamp="20170807 15:07:47.192" level="INFO">${current_time_before_301} = 2017-08-07 15:07:42.192</msg>
<status status="PASS" endtime="20170807 15:07:47.192" starttime="20170807 15:07:47.192"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_301}</var>
</assign>
<msg timestamp="20170807 15:07:47.192" level="INFO">${current_time_after_301} = 2017-08-07 15:09:27.192</msg>
<status status="PASS" endtime="20170807 15:07:47.192" starttime="20170807 15:07:47.192"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where event_code=14 and user_id='${user_id_refund[0][2]}' and update_time between' ${current_time_before_301}' and '${current_time_after_301}'</arg>
</arguments>
<assign>
<var>${user_id1}</var>
</assign>
<msg timestamp="20170807 15:07:47.208" level="INFO">Executing : Query  |  select * from ajb_account_transaction where event_code=14 and user_id='100000' and update_time between' 2017-08-07 15:07:42.192' and '2017-08-07 15:09:27.192' </msg>
<msg timestamp="20170807 15:07:47.224" level="INFO">${user_id1} = ((88888990, '32102151361501755140', 100000, 5755, 1, '32102151361500885834', '20170807150800LCN012724', Decimal('2.00'), 1, 14, 2, 0, datetime.datetime(2017, 8, 7, 15, 8, 3), datetime.datetime(2017, 8...</msg>
<status status="PASS" endtime="20170807 15:07:47.224" starttime="20170807 15:07:47.192"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id1[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170807 15:07:47.224" level="INFO">Length is 20</msg>
<msg timestamp="20170807 15:07:47.224" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170807 15:07:47.239" starttime="20170807 15:07:47.224"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170807 15:07:47.239" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:07:47.239" starttime="20170807 15:07:47.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170807 15:07:47.239" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170807 15:07:47.239" starttime="20170807 15:07:47.239"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][2]}</arg>
<arg>${user_id_refund[0][2]}</arg>
</arguments>
<status status="PASS" endtime="20170807 15:07:47.239" starttime="20170807 15:07:47.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170807 15:07:47.239" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170807 15:07:47.239" starttime="20170807 15:07:47.239"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][5]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170807 15:07:47.239" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:07:47.239" starttime="20170807 15:07:47.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170807 15:07:47.239" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170807 15:07:47.239" starttime="20170807 15:07:47.239"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id1[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170807 15:07:47.255" level="INFO">${pay_no_after} = 20170807150800LCN012724</msg>
<status status="PASS" endtime="20170807 15:07:47.255" starttime="20170807 15:07:47.255"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170807 15:07:47.255" level="INFO">Length is 23</msg>
<msg timestamp="20170807 15:07:47.255" level="INFO">${pay_no_after_length} = 23</msg>
<status status="PASS" endtime="20170807 15:07:47.255" starttime="20170807 15:07:47.255"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>23</arg>
</arguments>
<msg timestamp="20170807 15:07:47.255" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:07:47.255" starttime="20170807 15:07:47.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170807 15:07:47.255" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170807 15:07:47.255" starttime="20170807 15:07:47.255"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][7]}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<status status="PASS" endtime="20170807 15:07:47.255" starttime="20170807 15:07:47.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170807 15:07:47.255" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170807 15:07:47.255" starttime="20170807 15:07:47.255"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170807 15:07:47.270" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:07:47.270" starttime="20170807 15:07:47.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170807 15:07:47.270" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170807 15:07:47.286" starttime="20170807 15:07:47.270"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][9]}</arg>
<arg>14</arg>
</arguments>
<msg timestamp="20170807 15:07:47.286" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:07:47.286" starttime="20170807 15:07:47.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170807 15:07:47.286" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170807 15:07:47.286" starttime="20170807 15:07:47.286"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170807 15:07:47.286" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:07:47.286" starttime="20170807 15:07:47.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170807 15:07:47.286" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170807 15:07:47.286" starttime="20170807 15:07:47.286"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170807 15:07:47.302" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:07:47.302" starttime="20170807 15:07:47.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170807 15:07:47.302" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170807 15:07:47.302" starttime="20170807 15:07:47.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170807 15:07:47.302" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170807 15:07:47.302" starttime="20170807 15:07:47.302"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170807 15:07:47.302" level="INFO">${user_id[0][0]_transaction} = 25593</msg>
<status status="PASS" endtime="20170807 15:07:47.302" starttime="20170807 15:07:47.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170807 15:07:47.302" level="INFO">${user_id[0][0]_transaction} = 25593</msg>
<status status="PASS" endtime="20170807 15:07:47.302" starttime="20170807 15:07:47.302"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id1[0][0]}'</arg>
</arguments>
<msg timestamp="20170807 15:07:47.302" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88888990' </msg>
<status status="PASS" endtime="20170807 15:07:47.442" starttime="20170807 15:07:47.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>检验表account_amount</arg>
</arguments>
<msg timestamp="20170807 15:07:47.442" level="INFO">检验表account_amount</msg>
<status status="PASS" endtime="20170807 15:07:47.442" starttime="20170807 15:07:47.442"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_app}'</arg>
</arguments>
<assign>
<var>${amount_app_after}</var>
</assign>
<msg timestamp="20170807 15:07:47.442" level="INFO">Executing : Query  |  select * from account_amount where account_id='5756' </msg>
<msg timestamp="20170807 15:07:47.458" level="INFO">${amount_app_after} = ((17179, 5756, Decimal('76.00'), Decimal('66.00'), Decimal('10.00'), datetime.datetime(2017, 7, 27, 18, 28, 2), datetime.datetime(2017, 8, 7, 14, 58, 15), 0),)</msg>
<status status="PASS" endtime="20170807 15:07:47.473" starttime="20170807 15:07:47.442"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_boss}'</arg>
</arguments>
<assign>
<var>${amount_boss_after}</var>
</assign>
<msg timestamp="20170807 15:07:47.473" level="INFO">Executing : Query  |  select * from account_amount where account_id='5755' </msg>
<msg timestamp="20170807 15:07:47.489" level="INFO">${amount_boss_after} = ((17178, 5755, Decimal('80.00'), Decimal('70.00'), Decimal('10.00'), datetime.datetime(2017, 7, 27, 18, 4, 58), datetime.datetime(2017, 8, 7, 15, 8, 3), 0),)</msg>
<status status="PASS" endtime="20170807 15:07:47.489" starttime="20170807 15:07:47.473"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${amount_boss_after[0][2]}+${amount_app_after[0][2]}-${amount_boss[0][2]}-${amount_app[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_check}</var>
</assign>
<msg timestamp="20170807 15:07:47.489" level="INFO">${total_amount_check} = 2.0</msg>
<status status="PASS" endtime="20170807 15:07:47.489" starttime="20170807 15:07:47.489"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${total_amount_check}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<msg timestamp="20170807 15:07:47.504" level="INFO">Argument types are:
&lt;type 'float'&gt;
&lt;class 'decimal.Decimal'&gt;</msg>
<status status="PASS" endtime="20170807 15:07:47.504" starttime="20170807 15:07:47.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount正确</arg>
</arguments>
<msg timestamp="20170807 15:07:47.504" level="INFO">total_amount正确</msg>
<status status="PASS" endtime="20170807 15:07:47.504" starttime="20170807 15:07:47.504"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${amount_boss_after[0][3]}+${amount_app_after[0][3]}-${amount_boss[0][3]}-${amount_app[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_check}</var>
</assign>
<msg timestamp="20170807 15:07:47.520" level="INFO">${balance_amount_check} = 2.0</msg>
<status status="PASS" endtime="20170807 15:07:47.520" starttime="20170807 15:07:47.520"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${balance_amount_check}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<msg timestamp="20170807 15:07:47.520" level="INFO">Argument types are:
&lt;type 'float'&gt;
&lt;class 'decimal.Decimal'&gt;</msg>
<status status="PASS" endtime="20170807 15:07:47.520" starttime="20170807 15:07:47.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount正确</arg>
</arguments>
<msg timestamp="20170807 15:07:47.520" level="INFO">balance_amount正确</msg>
<status status="PASS" endtime="20170807 15:07:47.520" starttime="20170807 15:07:47.520"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${amount_boss[0][4]}+${amount_app[0][4]}-${amount_boss_after[0][4]}-${amount_app_after[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_check}</var>
</assign>
<msg timestamp="20170807 15:07:47.520" level="INFO">${frozen_amount_check} = 0.0</msg>
<status status="PASS" endtime="20170807 15:07:47.520" starttime="20170807 15:07:47.520"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${frozen_amount_check}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170807 15:07:47.520" level="INFO">Argument types are:
&lt;type 'float'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:07:47.520" starttime="20170807 15:07:47.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount正确</arg>
</arguments>
<msg timestamp="20170807 15:07:47.520" level="INFO">frozen_amount正确</msg>
<status status="PASS" endtime="20170807 15:07:47.520" starttime="20170807 15:07:47.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>检验表account_amount成功</arg>
</arguments>
<msg timestamp="20170807 15:07:47.536" level="INFO">检验表account_amount成功</msg>
<status status="PASS" endtime="20170807 15:07:47.536" starttime="20170807 15:07:47.536"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<msg timestamp="20170807 15:07:47.536" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=888888 </msg>
<status status="PASS" endtime="20170807 15:07:47.614" starttime="20170807 15:07:47.536"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount SET total_amount =${amount_boss[0][2]},balance_amount=${amount_boss[0][3]},frozen_amount=${amount_boss[0][4]} where account_id="${account_id_boss}";</arg>
</arguments>
<msg timestamp="20170807 15:07:47.614" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount SET total_amount =78.00,balance_amount=68.00,frozen_amount=10.00 where account_id="5755"; </msg>
<status status="PASS" endtime="20170807 15:07:47.770" starttime="20170807 15:07:47.614"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount SET total_amount=${amount_boss[0][2]},balance_amount=${amount_boss[0][3]},frozen_amount=${amount_boss[0][4]} where account_id="${account_id_app}";</arg>
</arguments>
<msg timestamp="20170807 15:07:47.785" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount SET total_amount=78.00,balance_amount=68.00,frozen_amount=10.00 where account_id="5756"; </msg>
<status status="PASS" endtime="20170807 15:07:47.941" starttime="20170807 15:07:47.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170807 15:07:47.941" level="INFO">成功</msg>
<status status="PASS" endtime="20170807 15:07:47.941" starttime="20170807 15:07:47.941"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_base where user_id="${boss_user_account_id}"</arg>
</arguments>
<assign>
<var>${after_time_after}</var>
</assign>
<msg timestamp="20170807 15:07:47.957" level="INFO">Executing : Query  |  select * from account_base where user_id="100000" </msg>
<msg timestamp="20170807 15:07:47.957" level="INFO">${after_time_after} = ((5755, 100000, 1, 2, 2, datetime.datetime(2017, 7, 28, 15, 7, 45), datetime.datetime(2017, 8, 22, 23, 59, 59), datetime.datetime(2017, 7, 28, 15, 7, 45), datetime.datetime(2017, 8, 7, 15, 8, 3), 0), ...</msg>
<status status="PASS" endtime="20170807 15:07:47.972" starttime="20170807 15:07:47.941"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${after_time_after[0][6]}</arg>
<arg>${after_time_after[1][6]}</arg>
</arguments>
<status status="PASS" endtime="20170807 15:07:47.972" starttime="20170807 15:07:47.972"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${after_time_after[0][6]}</arg>
<arg>datetime</arg>
</arguments>
<assign>
<var>${after_time_after1}</var>
</assign>
<msg timestamp="20170807 15:07:47.972" level="INFO">${after_time_after1} = 2017-08-22 23:59:59</msg>
<status status="PASS" endtime="20170807 15:07:47.972" starttime="20170807 15:07:47.972"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${after_time_check1}</arg>
<arg>datetime</arg>
</arguments>
<assign>
<var>${after_time_check}</var>
</assign>
<msg timestamp="20170807 15:07:47.972" level="INFO">${after_time_check} = 2017-08-22 15:07:45.476000</msg>
<status status="PASS" endtime="20170807 15:07:47.972" starttime="20170807 15:07:47.972"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${after_time_after1.month}</arg>
<arg>${after_time_check.month}</arg>
</arguments>
<status status="PASS" endtime="20170807 15:07:47.972" starttime="20170807 15:07:47.972"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${after_time_after1.day}</arg>
<arg>${after_time_check.day}</arg>
</arguments>
<status status="PASS" endtime="20170807 15:07:47.972" starttime="20170807 15:07:47.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>账户未过期，且有效期小于15天的时候，有效期延长15天</arg>
</arguments>
<msg timestamp="20170807 15:07:47.972" level="INFO">账户未过期，且有效期小于15天的时候，有效期延长15天</msg>
<status status="PASS" endtime="20170807 15:07:47.972" starttime="20170807 15:07:47.972"></status>
</kw>
<status status="PASS" endtime="20170807 15:07:47.972" critical="yes" starttime="20170807 15:07:45.367"></status>
</test>
<status status="PASS" endtime="20170807 15:07:47.988" starttime="20170807 15:07:45.133"></status>
</suite>
<status status="PASS" endtime="20170807 15:07:47.988" starttime="20170807 15:07:45.118"></status>
</suite>
<status status="PASS" endtime="20170807 15:07:47.988" starttime="20170807 15:07:44.946"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="账户中心" pass="1">账户中心</stat>
<stat fail="0" id="s1-s1" name="订单" pass="1">账户中心.订单</stat>
<stat fail="0" id="s1-s1-s1" name="订单支付退款（线上）" pass="1">账户中心.订单.订单支付退款（线上）</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
