<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170804 09:29:09.675" generator="Robot 3.0.2 (Python 2.7.8 on win32)">
<suite source="F:\logs and reports\账户中心" id="s1" name="账户中心">
<suite source="F:\logs and reports\账户中心\艾佳币" id="s1-s1" name="艾佳币">
<suite source="F:\logs and reports\账户中心\艾佳币\艾佳币活动充值.txt" id="s1-s1-s1" name="艾佳币活动充值">
<test id="s1-s1-s1-t1" name="没有app端账户，当充值正确的amount数目，接口返回成功，直接生成app账户，数据入库">
<kw name="参数配置" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170804 09:29:10.494" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170804 09:29:10.678" starttime="20170804 09:29:10.468"></status>
</kw>
<status status="PASS" endtime="20170804 09:29:10.680" starttime="20170804 09:29:10.466"></status>
</kw>
<kw name="输入拥有不同类型账户的用户user_id" library="myResource">
<arguments>
<arg>10000</arg>
<arg>10000</arg>
<arg>123456781</arg>
<arg>http://192.168.1.31:10003</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_user_account_id}</arg>
</arguments>
<msg timestamp="20170804 09:29:10.684" level="INFO">${boss_user_account_id} = 10000</msg>
<status status="PASS" endtime="20170804 09:29:10.685" starttime="20170804 09:29:10.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_user_account_id}</arg>
</arguments>
<msg timestamp="20170804 09:29:10.689" level="INFO">${app_user_account_id} = 10000</msg>
<status status="PASS" endtime="20170804 09:29:10.691" starttime="20170804 09:29:10.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${no_user_account_id}</arg>
</arguments>
<msg timestamp="20170804 09:29:10.694" level="INFO">${no_user_account_id} = 123456781</msg>
<status status="PASS" endtime="20170804 09:29:10.695" starttime="20170804 09:29:10.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${environment}</arg>
</arguments>
<msg timestamp="20170804 09:29:10.697" level="INFO">${environment} = http://192.168.1.31:10003</msg>
<status status="PASS" endtime="20170804 09:29:10.698" starttime="20170804 09:29:10.696"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${boss_user_account_id}' and channel_no=1</arg>
</arguments>
<assign>
<var>${boss_channel_no1}</var>
</assign>
<msg timestamp="20170804 09:29:10.701" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='10000' and channel_no=1 </msg>
<msg timestamp="20170804 09:29:10.711" level="INFO">${boss_channel_no1} = ((17757, '32102151361501753586', 10000, 100005, 1, 2, 0, datetime.datetime(2017, 8, 3, 16, 53, 36), datetime.datetime(2017, 8, 3, 16, 53, 36)),)</msg>
<status status="PASS" endtime="20170804 09:29:10.712" starttime="20170804 09:29:10.699"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${boss_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${boss_channel_no}</var>
</assign>
<msg timestamp="20170804 09:29:10.716" level="INFO">${boss_channel_no} = 100005</msg>
<status status="PASS" endtime="20170804 09:29:10.717" starttime="20170804 09:29:10.714"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${app_user_account_id}' and channel_no=2</arg>
</arguments>
<assign>
<var>${app_channel_no1}</var>
</assign>
<msg timestamp="20170804 09:29:10.720" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='10000' and channel_no=2 </msg>
<msg timestamp="20170804 09:29:10.729" level="INFO">${app_channel_no1} = ((17756, '32102151361501753580', 10000, 100004, 2, 2, 0, datetime.datetime(2017, 8, 3, 16, 53, 24), datetime.datetime(2017, 8, 3, 16, 53, 24)),)</msg>
<status status="PASS" endtime="20170804 09:29:10.731" starttime="20170804 09:29:10.718"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${app_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${app_channel_no}</var>
</assign>
<msg timestamp="20170804 09:29:10.733" level="INFO">${app_channel_no} = 100004</msg>
<status status="PASS" endtime="20170804 09:29:10.734" starttime="20170804 09:29:10.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_channel_no}</arg>
</arguments>
<msg timestamp="20170804 09:29:10.737" level="INFO">${boss_channel_no} = 100005</msg>
<status status="PASS" endtime="20170804 09:29:10.739" starttime="20170804 09:29:10.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_channel_no}</arg>
</arguments>
<msg timestamp="20170804 09:29:10.744" level="INFO">${app_channel_no} = 100004</msg>
<status status="PASS" endtime="20170804 09:29:10.745" starttime="20170804 09:29:10.741"></status>
</kw>
<status status="PASS" endtime="20170804 09:29:10.746" starttime="20170804 09:29:10.681"></status>
</kw>
<status status="PASS" endtime="20170804 09:29:10.747" starttime="20170804 09:29:10.463"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>${no_user_account_id}</arg>
<arg>10</arg>
<arg>1</arg>
<arg>${environment}/ihome-api/settlement/ajbActivityRecharge</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170804 09:29:10.751" level="INFO">${args11} = 123456781</msg>
<status status="PASS" endtime="20170804 09:29:10.752" starttime="20170804 09:29:10.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170804 09:29:10.757" level="INFO">${args22} = 10</msg>
<status status="PASS" endtime="20170804 09:29:10.758" starttime="20170804 09:29:10.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170804 09:29:10.761" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170804 09:29:10.761" starttime="20170804 09:29:10.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170804 09:29:10.764" level="INFO">${args44} = 1</msg>
<status status="PASS" endtime="20170804 09:29:10.765" starttime="20170804 09:29:10.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170804 09:29:10.768" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</msg>
<status status="PASS" endtime="20170804 09:29:10.769" starttime="20170804 09:29:10.766"></status>
</kw>
<status status="PASS" endtime="20170804 09:29:10.770" starttime="20170804 09:29:10.748"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id ='${args11}'</arg>
</arguments>
<assign>
<var>${no_user_id}</var>
</assign>
<msg timestamp="20170804 09:29:10.773" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id ='123456781' </msg>
<msg timestamp="20170804 09:29:10.782" level="INFO">${no_user_id} = ()</msg>
<status status="PASS" endtime="20170804 09:29:10.783" starttime="20170804 09:29:10.771"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${no_user_id}</arg>
</arguments>
<msg timestamp="20170804 09:29:10.788" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170804 09:29:10.790" starttime="20170804 09:29:10.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>此user_id不存在</arg>
</arguments>
<msg timestamp="20170804 09:29:10.793" level="INFO">此user_id不存在</msg>
<status status="PASS" endtime="20170804 09:29:10.793" starttime="20170804 09:29:10.791"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170804 09:29:10.796" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</msg>
<status status="PASS" endtime="20170804 09:29:10.797" starttime="20170804 09:29:10.795"></status>
</kw>
<kw name="Ajb Activity Recharge" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data_no_user_id}</var>
</assign>
<msg timestamp="20170804 09:29:10.891" level="INFO">${data_no_user_id} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170804 09:29:10.893" starttime="20170804 09:29:10.799"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data_no_user_id.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170804 09:29:10.896" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170804 09:29:10.897" starttime="20170804 09:29:10.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170804 09:29:10.899" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170804 09:29:10.900" starttime="20170804 09:29:10.898"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data_no_user_id.text}</arg>
</arguments>
<assign>
<var>${toJson1}</var>
</assign>
<msg timestamp="20170804 09:29:10.902" level="INFO">To JSON using : content={"data":{"orderNum":"32102151361501753942"},"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170804 09:29:10.904" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170804 09:29:10.905" level="INFO">${toJson1} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': {u'orderNum': u'32102151361501753942'}, u'success': True}</msg>
<status status="PASS" endtime="20170804 09:29:10.906" starttime="20170804 09:29:10.901"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson1['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170804 09:29:10.911" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170804 09:29:10.913" starttime="20170804 09:29:10.908"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson1['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170804 09:29:10.915" starttime="20170804 09:29:10.914"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${toJson1['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${no_user_id_orderNum}</var>
</assign>
<msg timestamp="20170804 09:29:10.918" level="INFO">${no_user_id_orderNum} = 32102151361501753942</msg>
<status status="PASS" endtime="20170804 09:29:10.919" starttime="20170804 09:29:10.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170804 09:29:10.921" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170804 09:29:10.923" starttime="20170804 09:29:10.920"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id ='${args11}'and channel_no=2</arg>
</arguments>
<assign>
<var>${no_user_id_after}</var>
</assign>
<msg timestamp="20170804 09:29:10.927" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id ='123456781'and channel_no=2 </msg>
<msg timestamp="20170804 09:29:10.935" level="INFO">${no_user_id_after} = ((17761, '32102151361501753941', 123456781, 100009, 2, 2, 0, datetime.datetime(2017, 8, 4, 9, 29, 25), datetime.datetime(2017, 8, 4, 9, 29, 25)),)</msg>
<status status="PASS" endtime="20170804 09:29:10.936" starttime="20170804 09:29:10.925"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${no_user_id_after}</arg>
</arguments>
<msg timestamp="20170804 09:29:10.939" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170804 09:29:10.941" starttime="20170804 09:29:10.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>调用艾佳币活动充值接口自动生成boss的账号</arg>
</arguments>
<msg timestamp="20170804 09:29:10.945" level="INFO">调用艾佳币活动充值接口自动生成boss的账号</msg>
<status status="PASS" endtime="20170804 09:29:10.946" starttime="20170804 09:29:10.943"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${no_user_id_after[0][3]}</arg>
</arguments>
<assign>
<var>${no_user_id_account_id}</var>
</assign>
<msg timestamp="20170804 09:29:10.948" level="INFO">${no_user_id_account_id} = 100009</msg>
<status status="PASS" endtime="20170804 09:29:10.949" starttime="20170804 09:29:10.947"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_open_record where user_id ='${args11}'and channel_no=2</arg>
</arguments>
<msg timestamp="20170804 09:29:10.952" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_open_record where user_id ='123456781'and channel_no=2 </msg>
<status status="PASS" endtime="20170804 09:29:10.999" starttime="20170804 09:29:10.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>已删除该账号！</arg>
</arguments>
<msg timestamp="20170804 09:29:11.004" level="INFO">已删除该账号！</msg>
<status status="PASS" endtime="20170804 09:29:11.005" starttime="20170804 09:29:11.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_unilateral_bill</arg>
</arguments>
<msg timestamp="20170804 09:29:11.008" level="INFO">现在开始校验表account_unilateral_bill</msg>
<status status="PASS" endtime="20170804 09:29:11.010" starttime="20170804 09:29:11.007"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time_no}</var>
</assign>
<msg timestamp="20170804 09:29:11.013" level="INFO">${current_time_no} = 2017-08-04 09:29:11.013</msg>
<status status="PASS" endtime="20170804 09:29:11.014" starttime="20170804 09:29:11.011"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_no}</arg>
<arg>5 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_301}</var>
</assign>
<msg timestamp="20170804 09:29:11.026" level="INFO">${current_time_before_301} = 2017-08-04 09:29:06.013</msg>
<status status="PASS" endtime="20170804 09:29:11.028" starttime="20170804 09:29:11.016"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_no}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_302}</var>
</assign>
<msg timestamp="20170804 09:29:11.033" level="INFO">${current_time_after_302} = 2017-08-04 09:30:51.013</msg>
<status status="PASS" endtime="20170804 09:29:11.035" starttime="20170804 09:29:11.030"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${no_user_id_account_id}'and update_time between' ${current_time_before_301}' and '${current_time_after_302}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170804 09:29:11.040" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='100009'and update_time between' 2017-08-04 09:29:06.013' and '2017-08-04 09:30:51.013' </msg>
<msg timestamp="20170804 09:29:11.048" level="INFO">${user_id} = ((24955, '32102151361501753946', 123456781, 100009, '32102151361501753943', 1, 1, 3, Decimal('10.00'), None, datetime.datetime(2017, 8, 4, 9, 29, 25), datetime.datetime(2017, 8, 4, 9, 29, 25), 0),)</msg>
<status status="PASS" endtime="20170804 09:29:11.049" starttime="20170804 09:29:11.037"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170804 09:29:11.052" level="INFO">Length is 20</msg>
<msg timestamp="20170804 09:29:11.053" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170804 09:29:11.054" starttime="20170804 09:29:11.050"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170804 09:29:11.057" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170804 09:29:11.059" starttime="20170804 09:29:11.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170804 09:29:11.061" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170804 09:29:11.062" starttime="20170804 09:29:11.060"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170804 09:29:11.065" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170804 09:29:11.067" starttime="20170804 09:29:11.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170804 09:29:11.070" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170804 09:29:11.072" starttime="20170804 09:29:11.069"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170804 09:29:11.077" level="INFO">Length is 20</msg>
<msg timestamp="20170804 09:29:11.078" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170804 09:29:11.079" starttime="20170804 09:29:11.075"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170804 09:29:11.084" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170804 09:29:11.085" starttime="20170804 09:29:11.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170804 09:29:11.088" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170804 09:29:11.089" starttime="20170804 09:29:11.087"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170804 09:29:11.093" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170804 09:29:11.095" starttime="20170804 09:29:11.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170804 09:29:11.098" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170804 09:29:11.100" starttime="20170804 09:29:11.097"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170804 09:29:11.103" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170804 09:29:11.104" starttime="20170804 09:29:11.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170804 09:29:11.108" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170804 09:29:11.109" starttime="20170804 09:29:11.106"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20170804 09:29:11.111" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170804 09:29:11.112" starttime="20170804 09:29:11.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170804 09:29:11.115" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170804 09:29:11.116" starttime="20170804 09:29:11.113"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170804 09:29:11.119" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170804 09:29:11.120" starttime="20170804 09:29:11.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170804 09:29:11.123" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170804 09:29:11.125" starttime="20170804 09:29:11.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间校验成功</arg>
</arguments>
<msg timestamp="20170804 09:29:11.129" level="INFO">add_time和update_time时间校验成功</msg>
<status status="PASS" endtime="20170804 09:29:11.130" starttime="20170804 09:29:11.127"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170804 09:29:11.133" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170804 09:29:11.134" starttime="20170804 09:29:11.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170804 09:29:11.136" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170804 09:29:11.137" starttime="20170804 09:29:11.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170804 09:29:11.139" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170804 09:29:11.141" starttime="20170804 09:29:11.138"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_unilateral}</var>
</assign>
<msg timestamp="20170804 09:29:11.145" level="INFO">${user_id[0][0]_unilateral} = 24955</msg>
<status status="PASS" endtime="20170804 09:29:11.146" starttime="20170804 09:29:11.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_unilateral}</arg>
</arguments>
<msg timestamp="20170804 09:29:11.149" level="INFO">${user_id[0][0]_unilateral} = 24955</msg>
<status status="PASS" endtime="20170804 09:29:11.150" starttime="20170804 09:29:11.147"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]_unilateral}'</arg>
</arguments>
<msg timestamp="20170804 09:29:11.152" level="INFO">Executing : Execute SQL String  |  delete from account_unilateral_bill where id ='24955' </msg>
<status status="PASS" endtime="20170804 09:29:11.200" starttime="20170804 09:29:11.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170804 09:29:11.203" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170804 09:29:11.204" starttime="20170804 09:29:11.201"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time_nouser}</var>
</assign>
<msg timestamp="20170804 09:29:11.208" level="INFO">${current_time_nouser} = 2017-08-04 09:29:11.208</msg>
<status status="PASS" endtime="20170804 09:29:11.209" starttime="20170804 09:29:11.206"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_nouser}</arg>
<arg>5 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_3011}</var>
</assign>
<msg timestamp="20170804 09:29:11.212" level="INFO">${current_time_before_3011} = 2017-08-04 09:29:06.208</msg>
<status status="PASS" endtime="20170804 09:29:11.213" starttime="20170804 09:29:11.210"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_nouser}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_3022}</var>
</assign>
<msg timestamp="20170804 09:29:11.216" level="INFO">${current_time_after_3022} = 2017-08-04 09:30:51.208</msg>
<status status="PASS" endtime="20170804 09:29:11.217" starttime="20170804 09:29:11.214"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where account_id ='${no_user_id_account_id}' and update_time between' ${current_time_before_3011}' and '${current_time_after_3022}'</arg>
</arguments>
<assign>
<var>${user_id_no}</var>
</assign>
<msg timestamp="20170804 09:29:11.220" level="INFO">Executing : Query  |  select * from ajb_account_transaction where account_id ='100009' and update_time between' 2017-08-04 09:29:06.208' and '2017-08-04 09:30:51.208' </msg>
<msg timestamp="20170804 09:29:11.234" level="INFO">${user_id_no} = ((10533, '32102151361501753942', 123456781, 100009, 2, '32102151361501753942', '20170804092922OBI012542', Decimal('10.00'), 1, 1, 2, 0, datetime.datetime(2017, 8, 4, 9, 29, 25), datetime.datetime(2017...</msg>
<status status="PASS" endtime="20170804 09:29:11.235" starttime="20170804 09:29:11.218"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id_no[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170804 09:29:11.238" level="INFO">Length is 20</msg>
<msg timestamp="20170804 09:29:11.241" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170804 09:29:11.242" starttime="20170804 09:29:11.236"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170804 09:29:11.245" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170804 09:29:11.246" starttime="20170804 09:29:11.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170804 09:29:11.249" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170804 09:29:11.251" starttime="20170804 09:29:11.247"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][2]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170804 09:29:11.254" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170804 09:29:11.255" starttime="20170804 09:29:11.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170804 09:29:11.259" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170804 09:29:11.259" starttime="20170804 09:29:11.257"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][4]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170804 09:29:11.263" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170804 09:29:11.264" starttime="20170804 09:29:11.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no的值正确</arg>
</arguments>
<msg timestamp="20170804 09:29:11.266" level="INFO">channel_no的值正确</msg>
<status status="PASS" endtime="20170804 09:29:11.267" starttime="20170804 09:29:11.265"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][5]}</arg>
<arg>${no_user_id_orderNum}</arg>
</arguments>
<msg timestamp="20170804 09:29:11.271" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170804 09:29:11.273" starttime="20170804 09:29:11.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170804 09:29:11.275" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170804 09:29:11.276" starttime="20170804 09:29:11.274"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id_no[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170804 09:29:11.279" level="INFO">${pay_no_after} = 20170804092922OBI012542</msg>
<status status="PASS" endtime="20170804 09:29:11.280" starttime="20170804 09:29:11.277"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170804 09:29:11.283" level="INFO">Length is 23</msg>
<msg timestamp="20170804 09:29:11.284" level="INFO">${pay_no_after_length} = 23</msg>
<status status="PASS" endtime="20170804 09:29:11.286" starttime="20170804 09:29:11.281"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>23</arg>
</arguments>
<msg timestamp="20170804 09:29:11.290" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170804 09:29:11.291" starttime="20170804 09:29:11.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170804 09:29:11.293" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170804 09:29:11.294" starttime="20170804 09:29:11.292"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][7]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170804 09:29:11.297" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170804 09:29:11.299" starttime="20170804 09:29:11.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170804 09:29:11.301" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170804 09:29:11.302" starttime="20170804 09:29:11.300"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170804 09:29:11.305" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170804 09:29:11.307" starttime="20170804 09:29:11.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170804 09:29:11.309" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170804 09:29:11.310" starttime="20170804 09:29:11.308"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][9]}</arg>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170804 09:29:11.315" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170804 09:29:11.317" starttime="20170804 09:29:11.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170804 09:29:11.320" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170804 09:29:11.321" starttime="20170804 09:29:11.318"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170804 09:29:11.324" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170804 09:29:11.325" starttime="20170804 09:29:11.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170804 09:29:11.327" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170804 09:29:11.329" starttime="20170804 09:29:11.326"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170804 09:29:11.332" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170804 09:29:11.353" starttime="20170804 09:29:11.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170804 09:29:11.356" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170804 09:29:11.358" starttime="20170804 09:29:11.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间校验成功</arg>
</arguments>
<msg timestamp="20170804 09:29:11.366" level="INFO">add_time和update_time时间校验成功</msg>
<status status="PASS" endtime="20170804 09:29:11.367" starttime="20170804 09:29:11.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170804 09:29:11.371" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170804 09:29:11.373" starttime="20170804 09:29:11.369"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id_no[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170804 09:29:11.377" level="INFO">${user_id[0][0]_transaction} = 10533</msg>
<status status="PASS" endtime="20170804 09:29:11.379" starttime="20170804 09:29:11.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170804 09:29:11.383" level="INFO">${user_id[0][0]_transaction} = 10533</msg>
<status status="PASS" endtime="20170804 09:29:11.385" starttime="20170804 09:29:11.381"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id_no[0][0]}'</arg>
</arguments>
<msg timestamp="20170804 09:29:11.392" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='10533' </msg>
<status status="PASS" endtime="20170804 09:29:11.466" starttime="20170804 09:29:11.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_amount</arg>
</arguments>
<msg timestamp="20170804 09:29:11.477" level="INFO">现在开始校验表account_amount</msg>
<status status="PASS" endtime="20170804 09:29:11.482" starttime="20170804 09:29:11.471"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${no_user_id_account_id}'</arg>
</arguments>
<assign>
<var>${user_id_t}</var>
</assign>
<msg timestamp="20170804 09:29:11.492" level="INFO">Executing : Query  |  select * from account_amount where account_id ='100009' </msg>
<msg timestamp="20170804 09:29:11.502" level="INFO">${user_id_t} = ((17831, 100009, Decimal('10.00'), Decimal('10.00'), Decimal('0.00'), datetime.datetime(2017, 8, 4, 9, 29, 25), datetime.datetime(2017, 8, 4, 9, 29, 25), 0),)</msg>
<status status="PASS" endtime="20170804 09:29:11.504" starttime="20170804 09:29:11.486"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][2]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170804 09:29:11.510" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170804 09:29:11.511" starttime="20170804 09:29:11.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170804 09:29:11.514" level="INFO">total_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170804 09:29:11.515" starttime="20170804 09:29:11.513"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][3]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170804 09:29:11.521" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170804 09:29:11.522" starttime="20170804 09:29:11.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170804 09:29:11.526" level="INFO">balance_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170804 09:29:11.528" starttime="20170804 09:29:11.525"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][4]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170804 09:29:11.532" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170804 09:29:11.534" starttime="20170804 09:29:11.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170804 09:29:11.539" level="INFO">frozen_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170804 09:29:11.541" starttime="20170804 09:29:11.537"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170804 09:29:11.544" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170804 09:29:11.545" starttime="20170804 09:29:11.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170804 09:29:11.549" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170804 09:29:11.550" starttime="20170804 09:29:11.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount校验成功！</arg>
</arguments>
<msg timestamp="20170804 09:29:11.554" level="INFO">表account_amount校验成功！</msg>
<status status="PASS" endtime="20170804 09:29:11.557" starttime="20170804 09:29:11.552"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_amount where account_id ='${no_user_id_account_id}'</arg>
</arguments>
<msg timestamp="20170804 09:29:11.560" level="INFO">Executing : Execute SQL String  |  delete from account_amount where account_id ='100009' </msg>
<status status="PASS" endtime="20170804 09:29:11.602" starttime="20170804 09:29:11.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>输入未有的user_id和正确的amount参数，会直接生成app账户，然后表里的数据都入库成功！</arg>
</arguments>
<msg timestamp="20170804 09:29:11.606" level="INFO">输入未有的user_id和正确的amount参数，会直接生成app账户，然后表里的数据都入库成功！</msg>
<status status="PASS" endtime="20170804 09:29:11.608" starttime="20170804 09:29:11.604"></status>
</kw>
<status status="PASS" endtime="20170804 09:29:11.609" critical="yes" starttime="20170804 09:29:10.455"></status>
</test>
<status status="PASS" endtime="20170804 09:29:11.611" starttime="20170804 09:29:10.071"></status>
</suite>
<status status="PASS" endtime="20170804 09:29:11.619" starttime="20170804 09:29:10.066"></status>
</suite>
<status status="PASS" endtime="20170804 09:29:11.624" starttime="20170804 09:29:09.725"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="账户中心" pass="1">账户中心</stat>
<stat fail="0" id="s1-s1" name="艾佳币" pass="1">账户中心.艾佳币</stat>
<stat fail="0" id="s1-s1-s1" name="艾佳币活动充值" pass="1">账户中心.艾佳币.艾佳币活动充值</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
