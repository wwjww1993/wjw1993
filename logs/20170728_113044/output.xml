<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170728 11:31:43.707" generator="Robot 3.0.2 (Python 2.7.8 on win32)">
<suite source="F:\logs and reports\账户中心" id="s1" name="账户中心">
<suite source="F:\logs and reports\账户中心\艾佳币" id="s1-s1" name="艾佳币">
<suite source="F:\logs and reports\账户中心\艾佳币\艾佳币回收冻结.txt" id="s1-s1-s1" name="艾佳币回收冻结">
<test id="s1-s1-s1-t1" name="输入已有的userId和正确amount参数">
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>1000000</arg>
<arg>200</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 11:31:44.235" level="INFO">${args11} = 1000000</msg>
<status status="PASS" endtime="20170728 11:31:44.236" starttime="20170728 11:31:44.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 11:31:44.239" level="INFO">${args22} = 200</msg>
<status status="PASS" endtime="20170728 11:31:44.240" starttime="20170728 11:31:44.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 11:31:44.242" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170728 11:31:44.244" starttime="20170728 11:31:44.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 11:31:44.246" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 11:31:44.247" starttime="20170728 11:31:44.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 11:31:44.249" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</msg>
<status status="PASS" endtime="20170728 11:31:44.250" starttime="20170728 11:31:44.248"></status>
</kw>
<status status="PASS" endtime="20170728 11:31:44.251" starttime="20170728 11:31:44.231"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 11:31:44.279" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 11:31:44.294" starttime="20170728 11:31:44.255"></status>
</kw>
<status status="PASS" endtime="20170728 11:31:44.295" starttime="20170728 11:31:44.254"></status>
</kw>
<status status="PASS" endtime="20170728 11:31:44.297" starttime="20170728 11:31:44.253"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 11:31:44.302" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</msg>
<status status="PASS" endtime="20170728 11:31:44.303" starttime="20170728 11:31:44.300"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 11:31:44.305" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 11:31:44.305" starttime="20170728 11:31:44.304"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 11:31:44.310" starttime="20170728 11:31:44.308"></status>
</kw>
<msg timestamp="20170728 11:31:44.311" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 11:31:44.312" starttime="20170728 11:31:44.306"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>user_id</arg>
</arguments>
<status status="PASS" endtime="20170728 11:31:44.316" starttime="20170728 11:31:44.314"></status>
</kw>
<msg timestamp="20170728 11:31:44.317" level="INFO">${args11_after} = user_id</msg>
<status status="PASS" endtime="20170728 11:31:44.318" starttime="20170728 11:31:44.313"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 11:31:44.322" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 11:31:44.337" starttime="20170728 11:31:44.321"></status>
</kw>
<status status="PASS" endtime="20170728 11:31:44.338" starttime="20170728 11:31:44.320"></status>
</kw>
<status status="PASS" endtime="20170728 11:31:44.339" starttime="20170728 11:31:44.319"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 11:31:44.342" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='1000000' and channel_no='1' </msg>
<msg timestamp="20170728 11:31:44.404" level="INFO">${database1} = ((9022, '32102151361499849640', 1000000, 6131, 1, '32102151361499849640', '20170712200245SVE038744', Decimal('2.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 12, 20, 3, 47), datetime.datetime(2017, 7, ...</msg>
<status status="PASS" endtime="20170728 11:31:44.405" starttime="20170728 11:31:44.340"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 11:31:44.407" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6131' </msg>
<msg timestamp="20170728 11:31:44.413" level="INFO">${database} = ((12445, 6131, Decimal('50428.00'), Decimal('50428.00'), Decimal('0.00'), datetime.datetime(2017, 7, 12, 20, 3, 46), datetime.datetime(2017, 7, 28, 11, 20, 40), 0),)</msg>
<status status="PASS" endtime="20170728 11:31:44.413" starttime="20170728 11:31:44.406"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 11:31:44.416" level="INFO">${user_id_real} = 1000000</msg>
<status status="PASS" endtime="20170728 11:31:44.417" starttime="20170728 11:31:44.414"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 11:31:44.420" level="INFO">${account_id} = 6131</msg>
<status status="PASS" endtime="20170728 11:31:44.421" starttime="20170728 11:31:44.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 11:31:44.423" level="INFO">获得account_id值为：6131</msg>
<status status="PASS" endtime="20170728 11:31:44.424" starttime="20170728 11:31:44.422"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 11:31:44.426" level="INFO">${total_amount_before} = 50428.00</msg>
<status status="PASS" endtime="20170728 11:31:44.426" starttime="20170728 11:31:44.425"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 11:31:44.429" level="INFO">${balance_amount_before} = 50428.00</msg>
<status status="PASS" endtime="20170728 11:31:44.430" starttime="20170728 11:31:44.427"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 11:31:44.432" level="INFO">${frozen_amount_before} = 0.00</msg>
<status status="PASS" endtime="20170728 11:31:44.432" starttime="20170728 11:31:44.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 11:31:44.435" level="INFO">${account_id} = 6131</msg>
<status status="PASS" endtime="20170728 11:31:44.435" starttime="20170728 11:31:44.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 11:31:44.439" level="INFO">${user_id_real} = 1000000</msg>
<status status="PASS" endtime="20170728 11:31:44.440" starttime="20170728 11:31:44.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 11:31:44.443" level="INFO">${total_amount_before} = 50428.00</msg>
<status status="PASS" endtime="20170728 11:31:44.444" starttime="20170728 11:31:44.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 11:31:44.446" level="INFO">${balance_amount_before} = 50428.00</msg>
<status status="PASS" endtime="20170728 11:31:44.446" starttime="20170728 11:31:44.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 11:31:44.449" level="INFO">${frozen_amount_before} = 0.00</msg>
<status status="PASS" endtime="20170728 11:31:44.450" starttime="20170728 11:31:44.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 11:31:44.454" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 11:31:44.455" starttime="20170728 11:31:44.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 11:31:44.458" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 11:31:44.459" starttime="20170728 11:31:44.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 11:31:44.461" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</msg>
<status status="PASS" endtime="20170728 11:31:44.462" starttime="20170728 11:31:44.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170728 11:31:44.464" level="INFO">${database} = ((12445, 6131, Decimal('50428.00'), Decimal('50428.00'), Decimal('0.00'), datetime.datetime(2017, 7, 12, 20, 3, 46), datetime.datetime(2017, 7, 28, 11, 20, 40), 0),)</msg>
<status status="PASS" endtime="20170728 11:31:44.466" starttime="20170728 11:31:44.463"></status>
</kw>
<status status="PASS" endtime="20170728 11:31:44.468" starttime="20170728 11:31:44.299"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Data" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 11:31:44.543" starttime="20170728 11:31:44.472"></status>
</kw>
<msg timestamp="20170728 11:31:44.544" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 11:31:44.545" starttime="20170728 11:31:44.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 11:31:44.547" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 11:31:44.548" starttime="20170728 11:31:44.546"></status>
</kw>
<status status="PASS" endtime="20170728 11:31:44.549" starttime="20170728 11:31:44.469"></status>
</kw>
<kw name="字段验证" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 11:31:44.554" level="INFO">200</msg>
<status status="PASS" endtime="20170728 11:31:44.554" starttime="20170728 11:31:44.552"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 11:31:44.556" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 11:31:44.557" starttime="20170728 11:31:44.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 11:31:44.560" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 11:31:44.561" starttime="20170728 11:31:44.558"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 11:31:44.563" level="INFO">To JSON using : content={"data":{"orderNum":"32102151361501207075"},"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 11:31:44.563" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 11:31:44.564" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': {u'orderNum': u'32102151361501207075'}, u'success': True}</msg>
<status status="PASS" endtime="20170728 11:31:44.565" starttime="20170728 11:31:44.562"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 11:31:44.568" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 11:31:44.568" starttime="20170728 11:31:44.566"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 11:31:44.570" starttime="20170728 11:31:44.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 11:31:44.572" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 11:31:44.573" starttime="20170728 11:31:44.571"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<assign>
<var>@{Link1}</var>
</assign>
<msg timestamp="20170728 11:31:44.575" level="INFO">@{Link1} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 11:31:44.576" starttime="20170728 11:31:44.574"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>"${value}" in @{Link1}</arg>
<arg>Get From Dictionary</arg>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${orderNum}</var>
</assign>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<status status="PASS" endtime="20170728 11:31:44.583" starttime="20170728 11:31:44.580"></status>
</kw>
<msg timestamp="20170728 11:31:44.584" level="INFO">${orderNum} = 32102151361501207075</msg>
<status status="PASS" endtime="20170728 11:31:44.585" starttime="20170728 11:31:44.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<msg timestamp="20170728 11:31:44.588" level="INFO">${orderNum} = 32102151361501207075</msg>
<status status="PASS" endtime="20170728 11:31:44.589" starttime="20170728 11:31:44.587"></status>
</kw>
<status status="PASS" endtime="20170728 11:31:44.589" starttime="20170728 11:31:44.550"></status>
</kw>
<kw name="表ajb_account_open_record的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_open_record</arg>
</arguments>
<msg timestamp="20170728 11:31:44.592" level="INFO">现在开始校验表ajb_account_open_record</msg>
<status status="PASS" endtime="20170728 11:31:44.593" starttime="20170728 11:31:44.591"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 11:31:44.600" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 11:31:44.610" starttime="20170728 11:31:44.598"></status>
</kw>
<status status="PASS" endtime="20170728 11:31:44.612" starttime="20170728 11:31:44.596"></status>
</kw>
<status status="PASS" endtime="20170728 11:31:44.613" starttime="20170728 11:31:44.594"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 11:31:44.616" level="INFO">Executing : Query  |  select * from ajb_account_open_record where account_id ='6131' </msg>
<msg timestamp="20170728 11:31:44.627" level="INFO">${user_id} = ((6086, '32102151361499849639', 1000000, 6131, 1, 2, 0, datetime.datetime(2017, 7, 12, 20, 3, 46), datetime.datetime(2017, 7, 12, 20, 3, 46)), (100000000000L, '32102151361499849639', 1000000, 6131, 1,...</msg>
<status status="PASS" endtime="20170728 11:31:44.628" starttime="20170728 11:31:44.614"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 11:31:44.631" level="INFO">Length is 20</msg>
<msg timestamp="20170728 11:31:44.632" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 11:31:44.634" starttime="20170728 11:31:44.630"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 11:31:44.636" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 11:31:44.638" starttime="20170728 11:31:44.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 11:31:44.642" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 11:31:44.643" starttime="20170728 11:31:44.640"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 11:31:44.646" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 11:31:44.647" starttime="20170728 11:31:44.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 11:31:44.649" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 11:31:44.650" starttime="20170728 11:31:44.648"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 11:31:44.652" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 11:31:44.653" starttime="20170728 11:31:44.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no正确反映艾佳币账户渠道</arg>
</arguments>
<msg timestamp="20170728 11:31:44.655" level="INFO">channel_no正确反映艾佳币账户渠道</msg>
<status status="PASS" endtime="20170728 11:31:44.656" starttime="20170728 11:31:44.654"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 11:31:44.660" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 11:31:44.661" starttime="20170728 11:31:44.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>status的值为2,表示生效，是正确的</arg>
</arguments>
<msg timestamp="20170728 11:31:44.662" level="INFO">status的值为2,表示生效，是正确的</msg>
<status status="PASS" endtime="20170728 11:31:44.663" starttime="20170728 11:31:44.662"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 11:31:44.667" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 11:31:44.668" starttime="20170728 11:31:44.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 11:31:44.669" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 11:31:44.670" starttime="20170728 11:31:44.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表里面的add_time和update_time的时间是一致的。校验正确。</arg>
</arguments>
<msg timestamp="20170728 11:31:44.672" level="INFO">表里面的add_time和update_time的时间是一致的。校验正确。</msg>
<status status="PASS" endtime="20170728 11:31:44.673" starttime="20170728 11:31:44.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_open_record的校验成功！</arg>
</arguments>
<msg timestamp="20170728 11:31:44.675" level="INFO">表ajb_account_open_record的校验成功！</msg>
<status status="PASS" endtime="20170728 11:31:44.676" starttime="20170728 11:31:44.674"></status>
</kw>
<status status="PASS" endtime="20170728 11:31:44.677" starttime="20170728 11:31:44.590"></status>
</kw>
<kw name="表account_unilateral_bill的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_unilateral_bill</arg>
</arguments>
<msg timestamp="20170728 11:31:44.680" level="INFO">现在开始校验表account_unilateral_bill</msg>
<status status="PASS" endtime="20170728 11:31:44.680" starttime="20170728 11:31:44.679"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 11:31:44.684" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 11:31:44.693" starttime="20170728 11:31:44.683"></status>
</kw>
<status status="PASS" endtime="20170728 11:31:44.694" starttime="20170728 11:31:44.682"></status>
</kw>
<status status="PASS" endtime="20170728 11:31:44.696" starttime="20170728 11:31:44.681"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>account_unilateral_bill</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 11:31:44.703" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 11:31:44.710" starttime="20170728 11:31:44.701"></status>
</kw>
<status status="PASS" endtime="20170728 11:31:44.711" starttime="20170728 11:31:44.699"></status>
</kw>
<status status="PASS" endtime="20170728 11:31:44.712" starttime="20170728 11:31:44.698"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 11:31:44.715" level="INFO">${current_time} = 2017-07-28 11:31:44.714</msg>
<status status="PASS" endtime="20170728 11:31:44.715" starttime="20170728 11:31:44.714"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>10 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 11:31:44.725" level="INFO">${current_time_before_30} = 2017-07-28 11:31:34.714</msg>
<status status="PASS" endtime="20170728 11:31:44.726" starttime="20170728 11:31:44.717"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 11:31:44.729" level="INFO">${current_time_after_30} = 2017-07-28 11:32:49.714</msg>
<status status="PASS" endtime="20170728 11:31:44.730" starttime="20170728 11:31:44.728"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 11:31:44.734" level="INFO">Executing : Query  |  select * from account_unilateral_bill where user_id='1000000' and update_time between' 2017-07-28 11:31:34.714' and '2017-07-28 11:32:49.714' </msg>
<msg timestamp="20170728 11:31:44.744" level="INFO">${updatetime} = ((6599, '32102151361501207074', 1000000, 6161, '32102151361501207073', 1, 8, 1, Decimal('200.00'), None, datetime.datetime(2017, 7, 28, 11, 31, 53), datetime.datetime(2017, 7, 28, 11, 31, 53), 0), (66...</msg>
<status status="PASS" endtime="20170728 11:31:44.745" starttime="20170728 11:31:44.732"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 11:31:44.748" level="INFO">Length is 2</msg>
<status status="PASS" endtime="20170728 11:31:44.749" starttime="20170728 11:31:44.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 11:31:44.751" level="INFO">account_unilateral_bill表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 11:31:44.752" starttime="20170728 11:31:44.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 11:31:44.754" level="INFO">${current_time_before_30} = 2017-07-28 11:31:34.714</msg>
<status status="PASS" endtime="20170728 11:31:44.755" starttime="20170728 11:31:44.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 11:31:44.758" level="INFO">${current_time_after_30} = 2017-07-28 11:32:49.714</msg>
<status status="PASS" endtime="20170728 11:31:44.758" starttime="20170728 11:31:44.756"></status>
</kw>
<status status="PASS" endtime="20170728 11:31:44.759" starttime="20170728 11:31:44.697"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id} 'and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 11:31:44.761" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6131 'and update_time between' 2017-07-28 11:31:34.714' and '2017-07-28 11:32:49.714' </msg>
<msg timestamp="20170728 11:31:44.767" level="INFO">${user_id} = ()</msg>
<status status="PASS" endtime="20170728 11:31:44.768" starttime="20170728 11:31:44.760"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170728 11:31:44.771" level="FAIL">Resolving variable '${user_id[0][1]}' failed: IndexError: tuple index out of range</msg>
<status status="FAIL" endtime="20170728 11:31:44.773" starttime="20170728 11:31:44.770"></status>
</kw>
<status status="FAIL" endtime="20170728 11:31:44.775" starttime="20170728 11:31:44.678"></status>
</kw>
<status status="FAIL" endtime="20170728 11:31:44.775" critical="yes" starttime="20170728 11:31:44.227">Resolving variable '${user_id[0][1]}' failed: IndexError: tuple index out of range</status>
</test>
<status status="FAIL" endtime="20170728 11:31:44.777" starttime="20170728 11:31:43.945"></status>
</suite>
<status status="FAIL" endtime="20170728 11:31:44.784" starttime="20170728 11:31:43.940"></status>
</suite>
<status status="FAIL" endtime="20170728 11:31:44.787" starttime="20170728 11:31:43.741"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="0">Critical Tests</stat>
<stat fail="1" pass="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="1" id="s1" name="账户中心" pass="0">账户中心</stat>
<stat fail="1" id="s1-s1" name="艾佳币" pass="0">账户中心.艾佳币</stat>
<stat fail="1" id="s1-s1-s1" name="艾佳币回收冻结" pass="0">账户中心.艾佳币.艾佳币回收冻结</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
