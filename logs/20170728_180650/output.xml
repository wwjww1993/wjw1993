<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170728 18:07:44.842" generator="Robot 3.0.2 (Python 2.7.8 on win32)">
<suite source="F:\logs and reports\账户中心" id="s1" name="账户中心">
<suite source="F:\logs and reports\账户中心\艾佳币" id="s1-s1" name="艾佳币">
<suite source="F:\logs and reports\账户中心\艾佳币\艾佳币回收冻结.txt" id="s1-s1-s1" name="艾佳币回收冻结">
<test id="s1-s1-s1-t1" name="输入木有的user_id和正确的amount参数">
<kw name="参数配置" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 18:07:45.444" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 18:07:45.459" starttime="20170728 18:07:45.398"></status>
</kw>
<status status="PASS" endtime="20170728 18:07:45.462" starttime="20170728 18:07:45.394"></status>
</kw>
<kw name="输入拥有不同类型账户的用户user_id" library="myResource">
<arguments>
<arg>100000</arg>
<arg>100000</arg>
<arg>123456781</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_user_account_id}</arg>
</arguments>
<msg timestamp="20170728 18:07:45.468" level="INFO">${boss_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170728 18:07:45.470" starttime="20170728 18:07:45.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_user_account_id}</arg>
</arguments>
<msg timestamp="20170728 18:07:45.474" level="INFO">${app_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170728 18:07:45.475" starttime="20170728 18:07:45.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${no_user_account_id}</arg>
</arguments>
<msg timestamp="20170728 18:07:45.479" level="INFO">${no_user_account_id} = 123456781</msg>
<status status="PASS" endtime="20170728 18:07:45.481" starttime="20170728 18:07:45.477"></status>
</kw>
<status status="PASS" endtime="20170728 18:07:45.482" starttime="20170728 18:07:45.463"></status>
</kw>
<status status="PASS" endtime="20170728 18:07:45.484" starttime="20170728 18:07:45.392"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>${no_user_account_id}</arg>
<arg>1</arg>
<arg>2</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 18:07:45.490" level="INFO">${args11} = 123456781</msg>
<status status="PASS" endtime="20170728 18:07:45.491" starttime="20170728 18:07:45.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 18:07:45.494" level="INFO">${args22} = 1</msg>
<status status="PASS" endtime="20170728 18:07:45.496" starttime="20170728 18:07:45.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 18:07:45.500" level="INFO">${args33} = 2</msg>
<status status="PASS" endtime="20170728 18:07:45.501" starttime="20170728 18:07:45.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 18:07:45.506" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 18:07:45.507" starttime="20170728 18:07:45.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 18:07:45.511" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</msg>
<status status="PASS" endtime="20170728 18:07:45.513" starttime="20170728 18:07:45.509"></status>
</kw>
<status status="PASS" endtime="20170728 18:07:45.514" starttime="20170728 18:07:45.485"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id ='${args11}'</arg>
</arguments>
<assign>
<var>${no_user_id}</var>
</assign>
<msg timestamp="20170728 18:07:45.518" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id ='123456781' </msg>
<msg timestamp="20170728 18:07:45.529" level="INFO">${no_user_id} = ()</msg>
<status status="PASS" endtime="20170728 18:07:45.530" starttime="20170728 18:07:45.516"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${no_user_id}</arg>
</arguments>
<msg timestamp="20170728 18:07:45.533" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170728 18:07:45.535" starttime="20170728 18:07:45.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>此user_id不存在</arg>
</arguments>
<msg timestamp="20170728 18:07:45.538" level="INFO">此user_id不存在</msg>
<status status="PASS" endtime="20170728 18:07:45.540" starttime="20170728 18:07:45.537"></status>
</kw>
<kw name="Data" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data_no_user_id}</var>
</assign>
<msg timestamp="20170728 18:07:45.561" level="INFO">${data_no_user_id} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 18:07:45.562" starttime="20170728 18:07:45.541"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data_no_user_id.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 18:07:45.566" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:07:45.568" starttime="20170728 18:07:45.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 18:07:45.571" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 18:07:45.573" starttime="20170728 18:07:45.569"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data_no_user_id.text}</arg>
</arguments>
<assign>
<var>${toJson1}</var>
</assign>
<msg timestamp="20170728 18:07:45.577" level="INFO">To JSON using : content={"data":{"orderNum":null},"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 18:07:45.579" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 18:07:45.580" level="INFO">${toJson1} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': {u'orderNum': None}, u'success': True}</msg>
<status status="PASS" endtime="20170728 18:07:45.582" starttime="20170728 18:07:45.575"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson1['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 18:07:45.587" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:07:45.588" starttime="20170728 18:07:45.584"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson1['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 18:07:45.594" starttime="20170728 18:07:45.591"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${toJson1['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${no_user_id_orderNum}</var>
</assign>
<msg timestamp="20170728 18:07:45.599" level="INFO">${no_user_id_orderNum} = None</msg>
<status status="PASS" endtime="20170728 18:07:45.600" starttime="20170728 18:07:45.596"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${no_user_id_orderNum}</arg>
</arguments>
<assign>
<var>${no_user_id_orderNum_length}</var>
</assign>
<msg timestamp="20170728 18:07:45.605" level="INFO">${no_user_id_orderNum_length} = None</msg>
<status status="PASS" endtime="20170728 18:07:45.607" starttime="20170728 18:07:45.602"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${no_user_id_orderNum_length}</arg>
<arg>None</arg>
</arguments>
<status status="PASS" endtime="20170728 18:07:45.612" starttime="20170728 18:07:45.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 18:07:45.616" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 18:07:45.618" starttime="20170728 18:07:45.614"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id ='${args11}'</arg>
</arguments>
<assign>
<var>${no_user_id_after}</var>
</assign>
<msg timestamp="20170728 18:07:45.623" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id ='123456781' </msg>
<msg timestamp="20170728 18:07:45.669" level="INFO">${no_user_id_after} = ()</msg>
<status status="PASS" endtime="20170728 18:07:45.671" starttime="20170728 18:07:45.620"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${no_user_id_after}</arg>
</arguments>
<msg timestamp="20170728 18:07:45.676" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170728 18:07:45.677" starttime="20170728 18:07:45.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>此用户不存在，调用接口也不能创建账户</arg>
</arguments>
<msg timestamp="20170728 18:07:45.681" level="INFO">此用户不存在，调用接口也不能创建账户</msg>
<status status="PASS" endtime="20170728 18:07:45.683" starttime="20170728 18:07:45.679"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time_no}</var>
</assign>
<msg timestamp="20170728 18:07:45.688" level="INFO">${current_time_no} = 2017-07-28 18:07:45.688</msg>
<status status="PASS" endtime="20170728 18:07:45.689" starttime="20170728 18:07:45.685"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_no}</arg>
<arg>15 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_301}</var>
</assign>
<msg timestamp="20170728 18:07:45.702" level="INFO">${current_time_before_301} = 2017-07-28 18:07:30.688</msg>
<status status="PASS" endtime="20170728 18:07:45.704" starttime="20170728 18:07:45.692"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_no}</arg>
<arg>61 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_302}</var>
</assign>
<msg timestamp="20170728 18:07:45.709" level="INFO">${current_time_after_302} = 2017-07-28 18:08:46.688</msg>
<status status="PASS" endtime="20170728 18:07:45.710" starttime="20170728 18:07:45.706"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where user_id ='${args11}' and update_time between' ${current_time_before_301}' and '${current_time_after_302}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 18:07:45.715" level="INFO">Executing : Query  |  select * from account_unilateral_bill where user_id ='123456781' and update_time between' 2017-07-28 18:07:30.688' and '2017-07-28 18:08:46.688' </msg>
<msg timestamp="20170728 18:07:45.733" level="INFO">${user_id} = ()</msg>
<status status="PASS" endtime="20170728 18:07:45.734" starttime="20170728 18:07:45.713"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${user_id}</arg>
</arguments>
<msg timestamp="20170728 18:07:45.738" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170728 18:07:45.740" starttime="20170728 18:07:45.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill里是空的</arg>
</arguments>
<msg timestamp="20170728 18:07:45.744" level="INFO">表account_unilateral_bill里是空的</msg>
<status status="PASS" endtime="20170728 18:07:45.745" starttime="20170728 18:07:45.742"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time_nouser}</var>
</assign>
<msg timestamp="20170728 18:07:45.749" level="INFO">${current_time_nouser} = 2017-07-28 18:07:45.749</msg>
<status status="PASS" endtime="20170728 18:07:45.751" starttime="20170728 18:07:45.747"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_nouser}</arg>
<arg>15 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_3011}</var>
</assign>
<msg timestamp="20170728 18:07:45.755" level="INFO">${current_time_before_3011} = 2017-07-28 18:07:30.749</msg>
<status status="PASS" endtime="20170728 18:07:45.756" starttime="20170728 18:07:45.752"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_nouser}</arg>
<arg>61 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_3022}</var>
</assign>
<msg timestamp="20170728 18:07:45.762" level="INFO">${current_time_after_3022} = 2017-07-28 18:08:46.749</msg>
<status status="PASS" endtime="20170728 18:07:45.763" starttime="20170728 18:07:45.759"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where user_id ='${args11}' and update_time between' ${current_time_before_3011}' and '${current_time_after_3022}'</arg>
</arguments>
<assign>
<var>${user_id_no}</var>
</assign>
<msg timestamp="20170728 18:07:45.768" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id ='123456781' and update_time between' 2017-07-28 18:07:30.749' and '2017-07-28 18:08:46.749' </msg>
<msg timestamp="20170728 18:07:45.779" level="INFO">${user_id_no} = ()</msg>
<status status="PASS" endtime="20170728 18:07:45.780" starttime="20170728 18:07:45.765"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${user_id_no}</arg>
</arguments>
<msg timestamp="20170728 18:07:45.784" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170728 18:07:45.786" starttime="20170728 18:07:45.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>ajb_account_transaction里是空的</arg>
</arguments>
<msg timestamp="20170728 18:07:45.789" level="INFO">ajb_account_transaction里是空的</msg>
<status status="PASS" endtime="20170728 18:07:45.791" starttime="20170728 18:07:45.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>调用艾佳币回收冻结，没有user_id,也不能创建新的账号。</arg>
</arguments>
<msg timestamp="20170728 18:07:45.795" level="INFO">调用艾佳币回收冻结，没有user_id,也不能创建新的账号。</msg>
<status status="PASS" endtime="20170728 18:07:45.797" starttime="20170728 18:07:45.793"></status>
</kw>
<status status="PASS" endtime="20170728 18:07:45.798" critical="yes" starttime="20170728 18:07:45.385"></status>
</test>
<status status="PASS" endtime="20170728 18:07:45.801" starttime="20170728 18:07:45.083"></status>
</suite>
<status status="PASS" endtime="20170728 18:07:45.809" starttime="20170728 18:07:45.078"></status>
</suite>
<status status="PASS" endtime="20170728 18:07:45.814" starttime="20170728 18:07:44.874"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="账户中心" pass="1">账户中心</stat>
<stat fail="0" id="s1-s1" name="艾佳币" pass="1">账户中心.艾佳币</stat>
<stat fail="0" id="s1-s1-s1" name="艾佳币回收冻结" pass="1">账户中心.艾佳币.艾佳币回收冻结</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
