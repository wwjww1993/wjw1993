<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170727 17:20:31.542" generator="Robot 3.0.2 (Python 2.7.8 on win32)">
<suite source="F:\logs and reports\账户中心" id="s1" name="账户中心">
<suite source="F:\logs and reports\账户中心\订单" id="s1-s1" name="订单">
<suite source="F:\logs and reports\账户中心\订单\订单支付冻结（线上）.txt" id="s1-s1-s1" name="订单支付冻结（线上）">
<test id="s1-s1-s1-t1" name="当输入ajbAmount为0其他输入正确参数的时候">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170727 17:20:32.110" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170727 17:20:32.290" starttime="20170727 17:20:32.086"></status>
</kw>
<status status="PASS" endtime="20170727 17:20:32.292" starttime="20170727 17:20:32.084"></status>
</kw>
<status status="PASS" endtime="20170727 17:20:32.294" starttime="20170727 17:20:32.082"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("8880888","32102151361500284867","1000000","6131","1","32102151361500284867","","2000","1","6","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170727 17:20:32.298" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("8880888","32102151361500284867","1000000","6131","1","32102151361500284867","","2000","1","6","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170727 17:20:32.631" starttime="20170727 17:20:32.296"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>1000000</arg>
<arg>32102151361500284867</arg>
<arg>0</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170727 17:20:32.635" level="INFO">${args11} = 1000000</msg>
<status status="PASS" endtime="20170727 17:20:32.636" starttime="20170727 17:20:32.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170727 17:20:32.639" level="INFO">${args22} = 32102151361500284867</msg>
<status status="PASS" endtime="20170727 17:20:32.640" starttime="20170727 17:20:32.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170727 17:20:32.643" level="INFO">${args33} = 0</msg>
<status status="PASS" endtime="20170727 17:20:32.643" starttime="20170727 17:20:32.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170727 17:20:32.646" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170727 17:20:32.647" starttime="20170727 17:20:32.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170727 17:20:32.649" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/freezePay</msg>
<status status="PASS" endtime="20170727 17:20:32.649" starttime="20170727 17:20:32.648"></status>
</kw>
<status status="PASS" endtime="20170727 17:20:32.650" starttime="20170727 17:20:32.633"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170727 17:20:32.654" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/freezePay</msg>
<status status="PASS" endtime="20170727 17:20:32.655" starttime="20170727 17:20:32.652"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170727 17:20:32.660" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170727 17:20:32.661" starttime="20170727 17:20:32.657"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170727 17:20:32.665" starttime="20170727 17:20:32.664"></status>
</kw>
<msg timestamp="20170727 17:20:32.666" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170727 17:20:32.667" starttime="20170727 17:20:32.663"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>user_id</arg>
</arguments>
<status status="PASS" endtime="20170727 17:20:32.670" starttime="20170727 17:20:32.669"></status>
</kw>
<msg timestamp="20170727 17:20:32.672" level="INFO">${args11_after} = user_id</msg>
<status status="PASS" endtime="20170727 17:20:32.674" starttime="20170727 17:20:32.668"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170727 17:20:32.679" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170727 17:20:32.917" starttime="20170727 17:20:32.678"></status>
</kw>
<status status="PASS" endtime="20170727 17:20:32.919" starttime="20170727 17:20:32.676"></status>
</kw>
<status status="PASS" endtime="20170727 17:20:32.920" starttime="20170727 17:20:32.675"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170727 17:20:32.924" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='1000000' and channel_no='1' </msg>
<msg timestamp="20170727 17:20:33.592" level="INFO">${database1} = ((9022, '32102151361499849640', 1000000, 6131, 1, '32102151361499849640', '20170712200245SVE038744', Decimal('2.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 12, 20, 3, 47), datetime.datetime(2017, 7, ...</msg>
<status status="PASS" endtime="20170727 17:20:33.594" starttime="20170727 17:20:32.922"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170727 17:20:33.596" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6131' </msg>
<msg timestamp="20170727 17:20:33.669" level="INFO">${database} = ((12445, 6131, Decimal('45171.00'), Decimal('173268.00'), Decimal('71901.00'), datetime.datetime(2017, 7, 12, 20, 3, 46), datetime.datetime(2017, 7, 27, 17, 20, 38), 0),)</msg>
<status status="PASS" endtime="20170727 17:20:33.670" starttime="20170727 17:20:33.595"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170727 17:20:33.672" level="INFO">${user_id_real} = 1000000</msg>
<status status="PASS" endtime="20170727 17:20:33.673" starttime="20170727 17:20:33.671"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170727 17:20:33.678" level="INFO">${account_id} = 6131</msg>
<status status="PASS" endtime="20170727 17:20:33.678" starttime="20170727 17:20:33.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170727 17:20:33.680" level="INFO">获得account_id值为：6131</msg>
<status status="PASS" endtime="20170727 17:20:33.681" starttime="20170727 17:20:33.679"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170727 17:20:33.683" level="INFO">${total_amount_before} = 45171.00</msg>
<status status="PASS" endtime="20170727 17:20:33.684" starttime="20170727 17:20:33.682"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170727 17:20:33.687" level="INFO">${balance_amount_before} = 173268.00</msg>
<status status="PASS" endtime="20170727 17:20:33.688" starttime="20170727 17:20:33.685"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170727 17:20:33.691" level="INFO">${frozen_amount_before} = 71901.00</msg>
<status status="PASS" endtime="20170727 17:20:33.692" starttime="20170727 17:20:33.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170727 17:20:33.695" level="INFO">${account_id} = 6131</msg>
<status status="PASS" endtime="20170727 17:20:33.696" starttime="20170727 17:20:33.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170727 17:20:33.699" level="INFO">${user_id_real} = 1000000</msg>
<status status="PASS" endtime="20170727 17:20:33.700" starttime="20170727 17:20:33.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170727 17:20:33.702" level="INFO">${total_amount_before} = 45171.00</msg>
<status status="PASS" endtime="20170727 17:20:33.703" starttime="20170727 17:20:33.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170727 17:20:33.708" level="INFO">${balance_amount_before} = 173268.00</msg>
<status status="PASS" endtime="20170727 17:20:33.708" starttime="20170727 17:20:33.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170727 17:20:33.711" level="INFO">${frozen_amount_before} = 71901.00</msg>
<status status="PASS" endtime="20170727 17:20:33.711" starttime="20170727 17:20:33.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170727 17:20:33.713" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170727 17:20:33.714" starttime="20170727 17:20:33.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170727 17:20:33.716" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170727 17:20:33.718" starttime="20170727 17:20:33.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170727 17:20:33.722" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/freezePay</msg>
<status status="PASS" endtime="20170727 17:20:33.723" starttime="20170727 17:20:33.720"></status>
</kw>
<status status="PASS" endtime="20170727 17:20:33.724" starttime="20170727 17:20:32.651"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Freeze Pay" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170727 17:20:33.900" starttime="20170727 17:20:33.730"></status>
</kw>
<msg timestamp="20170727 17:20:33.902" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170727 17:20:33.903" starttime="20170727 17:20:33.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170727 17:20:33.910" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170727 17:20:33.911" starttime="20170727 17:20:33.906"></status>
</kw>
<status status="PASS" endtime="20170727 17:20:33.913" starttime="20170727 17:20:33.725"></status>
</kw>
<kw name="字段验证" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170727 17:20:33.920" level="INFO">200</msg>
<status status="PASS" endtime="20170727 17:20:33.922" starttime="20170727 17:20:33.917"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170727 17:20:33.928" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 17:20:33.930" starttime="20170727 17:20:33.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170727 17:20:33.935" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170727 17:20:33.936" starttime="20170727 17:20:33.933"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170727 17:20:33.940" level="INFO">To JSON using : content={"data":null,"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170727 17:20:33.941" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170727 17:20:33.942" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': None, u'success': True}</msg>
<status status="PASS" endtime="20170727 17:20:33.943" starttime="20170727 17:20:33.938"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170727 17:20:33.945" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 17:20:33.946" starttime="20170727 17:20:33.944"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170727 17:20:33.948" starttime="20170727 17:20:33.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170727 17:20:33.950" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170727 17:20:33.951" starttime="20170727 17:20:33.949"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<assign>
<var>@{Link1}</var>
</assign>
<msg timestamp="20170727 17:20:33.953" level="INFO">@{Link1} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170727 17:20:33.954" starttime="20170727 17:20:33.952"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>"${value}" in @{Link1}</arg>
<arg>Get From Dictionary</arg>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${orderNum}</var>
</assign>
<msg timestamp="20170727 17:20:33.958" level="INFO">${orderNum} = None</msg>
<status status="PASS" endtime="20170727 17:20:33.959" starttime="20170727 17:20:33.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<msg timestamp="20170727 17:20:33.961" level="INFO">${orderNum} = None</msg>
<status status="PASS" endtime="20170727 17:20:33.962" starttime="20170727 17:20:33.960"></status>
</kw>
<status status="PASS" endtime="20170727 17:20:33.962" starttime="20170727 17:20:33.914"></status>
</kw>
<kw name="amount和表里的校验" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170727 17:20:33.968" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170727 17:20:34.140" starttime="20170727 17:20:33.967"></status>
</kw>
<status status="PASS" endtime="20170727 17:20:34.143" starttime="20170727 17:20:33.965"></status>
</kw>
<status status="PASS" endtime="20170727 17:20:34.145" starttime="20170727 17:20:33.964"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170727 17:20:34.149" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6131' </msg>
<msg timestamp="20170727 17:20:34.247" level="INFO">${user_id} = ((12445, 6131, Decimal('45171.00'), Decimal('173268.00'), Decimal('71901.00'), datetime.datetime(2017, 7, 12, 20, 3, 46), datetime.datetime(2017, 7, 27, 17, 20, 38), 0),)</msg>
<status status="PASS" endtime="20170727 17:20:34.249" starttime="20170727 17:20:34.147"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170727 17:20:34.255" starttime="20170727 17:20:34.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170727 17:20:34.259" level="INFO">total_amount数目没有变化</msg>
<status status="PASS" endtime="20170727 17:20:34.261" starttime="20170727 17:20:34.257"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170727 17:20:34.264" starttime="20170727 17:20:34.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170727 17:20:34.266" level="INFO">balance_amount数目没有变化</msg>
<status status="PASS" endtime="20170727 17:20:34.267" starttime="20170727 17:20:34.265"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170727 17:20:34.271" starttime="20170727 17:20:34.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170727 17:20:34.273" level="INFO">frozen_amount数目没有变化</msg>
<status status="PASS" endtime="20170727 17:20:34.274" starttime="20170727 17:20:34.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amounts的数据没有变化正确的</arg>
</arguments>
<msg timestamp="20170727 17:20:34.276" level="INFO">amounts的数据没有变化正确的</msg>
<status status="PASS" endtime="20170727 17:20:34.276" starttime="20170727 17:20:34.275"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170727 17:20:34.279" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 17:20:34.279" starttime="20170727 17:20:34.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount内容没有发生变化</arg>
</arguments>
<msg timestamp="20170727 17:20:34.281" level="INFO">表account_amount内容没有发生变化</msg>
<status status="PASS" endtime="20170727 17:20:34.282" starttime="20170727 17:20:34.280"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170727 17:20:34.284" level="INFO">${current_time} = 2017-07-27 17:20:34.284</msg>
<status status="PASS" endtime="20170727 17:20:34.284" starttime="20170727 17:20:34.283"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170727 17:20:34.293" level="INFO">${current_time_before_30} = 2017-07-27 17:19:34.284</msg>
<status status="PASS" endtime="20170727 17:20:34.294" starttime="20170727 17:20:34.287"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170727 17:20:34.298" level="INFO">${current_time_after_30} = 2017-07-27 17:21:39.284</msg>
<status status="PASS" endtime="20170727 17:20:34.300" starttime="20170727 17:20:34.297"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${bill_check}</var>
</assign>
<msg timestamp="20170727 17:20:34.302" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6131' and update_time between' 2017-07-27 17:19:34.284' and '2017-07-27 17:21:39.284' </msg>
<msg timestamp="20170727 17:20:34.529" level="INFO">${bill_check} = ()</msg>
<status status="PASS" endtime="20170727 17:20:34.530" starttime="20170727 17:20:34.301"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${bill_check}</arg>
</arguments>
<assign>
<var>${bill_check_length}</var>
</assign>
<msg timestamp="20170727 17:20:34.535" level="INFO">Length is 0</msg>
<msg timestamp="20170727 17:20:34.537" level="INFO">${bill_check_length} = 0</msg>
<status status="PASS" endtime="20170727 17:20:34.539" starttime="20170727 17:20:34.533"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${bill_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170727 17:20:34.544" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 17:20:34.545" starttime="20170727 17:20:34.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>account_unilateral_bill里的没有相关数据</arg>
</arguments>
<msg timestamp="20170727 17:20:34.549" level="INFO">account_unilateral_bill里的没有相关数据</msg>
<status status="PASS" endtime="20170727 17:20:34.551" starttime="20170727 17:20:34.547"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num ='${args11}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${transaction_check}</var>
</assign>
<msg timestamp="20170727 17:20:34.556" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num ='1000000' and update_time between' 2017-07-27 17:19:34.284' and '2017-07-27 17:21:39.284' </msg>
<msg timestamp="20170727 17:20:34.724" level="INFO">${transaction_check} = ()</msg>
<status status="PASS" endtime="20170727 17:20:34.725" starttime="20170727 17:20:34.553"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${transaction_check}</arg>
</arguments>
<assign>
<var>${transaction_check_length}</var>
</assign>
<msg timestamp="20170727 17:20:34.727" level="INFO">Length is 0</msg>
<msg timestamp="20170727 17:20:34.728" level="INFO">${transaction_check_length} = 0</msg>
<status status="PASS" endtime="20170727 17:20:34.729" starttime="20170727 17:20:34.726"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${transaction_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170727 17:20:34.731" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 17:20:34.731" starttime="20170727 17:20:34.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>ajb_account_transaction里的没有相关数据</arg>
</arguments>
<msg timestamp="20170727 17:20:34.733" level="INFO">ajb_account_transaction里的没有相关数据</msg>
<status status="PASS" endtime="20170727 17:20:34.734" starttime="20170727 17:20:34.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库表里数据调用接口前后没有发生变化</arg>
</arguments>
<msg timestamp="20170727 17:20:34.736" level="INFO">数据库表里数据调用接口前后没有发生变化</msg>
<status status="PASS" endtime="20170727 17:20:34.737" starttime="20170727 17:20:34.735"></status>
</kw>
<status status="PASS" endtime="20170727 17:20:34.739" starttime="20170727 17:20:33.963"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=8880888</arg>
</arguments>
<msg timestamp="20170727 17:20:34.741" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=8880888 </msg>
<status status="PASS" endtime="20170727 17:20:35.366" starttime="20170727 17:20:34.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当输入艾佳币的数量为0的时候，接口返回成功，但是数据不入库里</arg>
</arguments>
<msg timestamp="20170727 17:20:35.370" level="INFO">当输入艾佳币的数量为0的时候，接口返回成功，但是数据不入库里</msg>
<status status="PASS" endtime="20170727 17:20:35.373" starttime="20170727 17:20:35.368"></status>
</kw>
<status status="PASS" endtime="20170727 17:20:35.375" critical="yes" starttime="20170727 17:20:32.077"></status>
</test>
<test id="s1-s1-s1-t2" name="当ajbAmount为字符">
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("8880888","32102151361500284867","1000000","6131","1","32102151361500284867","","2000","1","6","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170727 17:20:35.385" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("8880888","32102151361500284867","1000000","6131","1","32102151361500284867","","2000","1","6","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170727 17:20:36.712" starttime="20170727 17:20:35.383"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>1000000</arg>
<arg>32102151361500284867</arg>
<arg>str</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170727 17:20:36.719" level="INFO">${args11} = 1000000</msg>
<status status="PASS" endtime="20170727 17:20:36.721" starttime="20170727 17:20:36.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170727 17:20:36.725" level="INFO">${args22} = 32102151361500284867</msg>
<status status="PASS" endtime="20170727 17:20:36.727" starttime="20170727 17:20:36.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170727 17:20:36.732" level="INFO">${args33} = str</msg>
<status status="PASS" endtime="20170727 17:20:36.734" starttime="20170727 17:20:36.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170727 17:20:36.739" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170727 17:20:36.741" starttime="20170727 17:20:36.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170727 17:20:36.746" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/freezePay</msg>
<status status="PASS" endtime="20170727 17:20:36.748" starttime="20170727 17:20:36.743"></status>
</kw>
<status status="PASS" endtime="20170727 17:20:36.750" starttime="20170727 17:20:36.714"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170727 17:20:36.757" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/freezePay</msg>
<status status="PASS" endtime="20170727 17:20:36.759" starttime="20170727 17:20:36.754"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170727 17:20:36.763" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170727 17:20:36.765" starttime="20170727 17:20:36.760"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170727 17:20:36.772" starttime="20170727 17:20:36.769"></status>
</kw>
<msg timestamp="20170727 17:20:36.774" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170727 17:20:36.776" starttime="20170727 17:20:36.766"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>user_id</arg>
</arguments>
<status status="PASS" endtime="20170727 17:20:36.785" starttime="20170727 17:20:36.782"></status>
</kw>
<msg timestamp="20170727 17:20:36.787" level="INFO">${args11_after} = user_id</msg>
<status status="PASS" endtime="20170727 17:20:36.789" starttime="20170727 17:20:36.778"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170727 17:20:36.798" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170727 17:20:36.839" starttime="20170727 17:20:36.796"></status>
</kw>
<status status="PASS" endtime="20170727 17:20:36.841" starttime="20170727 17:20:36.794"></status>
</kw>
<status status="PASS" endtime="20170727 17:20:36.843" starttime="20170727 17:20:36.792"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170727 17:20:36.848" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='1000000' and channel_no='1' </msg>
<msg timestamp="20170727 17:20:36.962" level="INFO">${database1} = ((9022, '32102151361499849640', 1000000, 6131, 1, '32102151361499849640', '20170712200245SVE038744', Decimal('2.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 12, 20, 3, 47), datetime.datetime(2017, 7, ...</msg>
<status status="PASS" endtime="20170727 17:20:36.964" starttime="20170727 17:20:36.845"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170727 17:20:36.969" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6131' </msg>
<msg timestamp="20170727 17:20:37.040" level="INFO">${database} = ((12445, 6131, Decimal('45171.00'), Decimal('173268.00'), Decimal('71901.00'), datetime.datetime(2017, 7, 12, 20, 3, 46), datetime.datetime(2017, 7, 27, 17, 20, 38), 0),)</msg>
<status status="PASS" endtime="20170727 17:20:37.040" starttime="20170727 17:20:36.966"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170727 17:20:37.043" level="INFO">${user_id_real} = 1000000</msg>
<status status="PASS" endtime="20170727 17:20:37.045" starttime="20170727 17:20:37.042"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170727 17:20:37.048" level="INFO">${account_id} = 6131</msg>
<status status="PASS" endtime="20170727 17:20:37.049" starttime="20170727 17:20:37.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170727 17:20:37.051" level="INFO">获得account_id值为：6131</msg>
<status status="PASS" endtime="20170727 17:20:37.052" starttime="20170727 17:20:37.050"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170727 17:20:37.055" level="INFO">${total_amount_before} = 45171.00</msg>
<status status="PASS" endtime="20170727 17:20:37.057" starttime="20170727 17:20:37.053"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170727 17:20:37.061" level="INFO">${balance_amount_before} = 173268.00</msg>
<status status="PASS" endtime="20170727 17:20:37.063" starttime="20170727 17:20:37.059"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170727 17:20:37.067" level="INFO">${frozen_amount_before} = 71901.00</msg>
<status status="PASS" endtime="20170727 17:20:37.068" starttime="20170727 17:20:37.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170727 17:20:37.073" level="INFO">${account_id} = 6131</msg>
<status status="PASS" endtime="20170727 17:20:37.074" starttime="20170727 17:20:37.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170727 17:20:37.078" level="INFO">${user_id_real} = 1000000</msg>
<status status="PASS" endtime="20170727 17:20:37.079" starttime="20170727 17:20:37.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170727 17:20:37.082" level="INFO">${total_amount_before} = 45171.00</msg>
<status status="PASS" endtime="20170727 17:20:37.082" starttime="20170727 17:20:37.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170727 17:20:37.087" level="INFO">${balance_amount_before} = 173268.00</msg>
<status status="PASS" endtime="20170727 17:20:37.088" starttime="20170727 17:20:37.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170727 17:20:37.091" level="INFO">${frozen_amount_before} = 71901.00</msg>
<status status="PASS" endtime="20170727 17:20:37.092" starttime="20170727 17:20:37.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170727 17:20:37.094" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170727 17:20:37.095" starttime="20170727 17:20:37.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170727 17:20:37.098" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170727 17:20:37.099" starttime="20170727 17:20:37.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170727 17:20:37.101" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/freezePay</msg>
<status status="PASS" endtime="20170727 17:20:37.102" starttime="20170727 17:20:37.100"></status>
</kw>
<status status="PASS" endtime="20170727 17:20:37.103" starttime="20170727 17:20:36.752"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Freeze Pay" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170727 17:20:37.166" starttime="20170727 17:20:37.110"></status>
</kw>
<msg timestamp="20170727 17:20:37.168" level="INFO">${data} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20170727 17:20:37.170" starttime="20170727 17:20:37.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170727 17:20:37.172" level="INFO">${data} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20170727 17:20:37.173" starttime="20170727 17:20:37.171"></status>
</kw>
<status status="PASS" endtime="20170727 17:20:37.174" starttime="20170727 17:20:37.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170727 17:20:37.178" level="INFO">400</msg>
<status status="PASS" endtime="20170727 17:20:37.179" starttime="20170727 17:20:37.176"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20170727 17:20:37.183" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 17:20:37.185" starttime="20170727 17:20:37.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>400由于语法格式有误，服务器无法理解此请求。</arg>
</arguments>
<msg timestamp="20170727 17:20:37.188" level="INFO">400由于语法格式有误，服务器无法理解此请求。</msg>
<status status="PASS" endtime="20170727 17:20:37.189" starttime="20170727 17:20:37.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170727 17:20:37.192" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170727 17:20:37.193" starttime="20170727 17:20:37.190"></status>
</kw>
<kw name="amount和表里的校验" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170727 17:20:37.200" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170727 17:20:37.292" starttime="20170727 17:20:37.199"></status>
</kw>
<status status="PASS" endtime="20170727 17:20:37.295" starttime="20170727 17:20:37.197"></status>
</kw>
<status status="PASS" endtime="20170727 17:20:37.296" starttime="20170727 17:20:37.196"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170727 17:20:37.298" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6131' </msg>
<msg timestamp="20170727 17:20:37.347" level="INFO">${user_id} = ((12445, 6131, Decimal('45171.00'), Decimal('173268.00'), Decimal('71901.00'), datetime.datetime(2017, 7, 12, 20, 3, 46), datetime.datetime(2017, 7, 27, 17, 20, 38), 0),)</msg>
<status status="PASS" endtime="20170727 17:20:37.348" starttime="20170727 17:20:37.297"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170727 17:20:37.353" starttime="20170727 17:20:37.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170727 17:20:37.357" level="INFO">total_amount数目没有变化</msg>
<status status="PASS" endtime="20170727 17:20:37.359" starttime="20170727 17:20:37.355"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170727 17:20:37.364" starttime="20170727 17:20:37.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170727 17:20:37.369" level="INFO">balance_amount数目没有变化</msg>
<status status="PASS" endtime="20170727 17:20:37.370" starttime="20170727 17:20:37.366"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170727 17:20:37.376" starttime="20170727 17:20:37.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170727 17:20:37.380" level="INFO">frozen_amount数目没有变化</msg>
<status status="PASS" endtime="20170727 17:20:37.381" starttime="20170727 17:20:37.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amounts的数据没有变化正确的</arg>
</arguments>
<msg timestamp="20170727 17:20:37.385" level="INFO">amounts的数据没有变化正确的</msg>
<status status="PASS" endtime="20170727 17:20:37.386" starttime="20170727 17:20:37.383"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170727 17:20:37.390" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 17:20:37.391" starttime="20170727 17:20:37.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount内容没有发生变化</arg>
</arguments>
<msg timestamp="20170727 17:20:37.394" level="INFO">表account_amount内容没有发生变化</msg>
<status status="PASS" endtime="20170727 17:20:37.395" starttime="20170727 17:20:37.393"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170727 17:20:37.398" level="INFO">${current_time} = 2017-07-27 17:20:37.398</msg>
<status status="PASS" endtime="20170727 17:20:37.400" starttime="20170727 17:20:37.397"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170727 17:20:37.407" level="INFO">${current_time_before_30} = 2017-07-27 17:19:37.398</msg>
<status status="PASS" endtime="20170727 17:20:37.408" starttime="20170727 17:20:37.404"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170727 17:20:37.413" level="INFO">${current_time_after_30} = 2017-07-27 17:21:42.398</msg>
<status status="PASS" endtime="20170727 17:20:37.414" starttime="20170727 17:20:37.410"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${bill_check}</var>
</assign>
<msg timestamp="20170727 17:20:37.418" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6131' and update_time between' 2017-07-27 17:19:37.398' and '2017-07-27 17:21:42.398' </msg>
<msg timestamp="20170727 17:20:37.480" level="INFO">${bill_check} = ()</msg>
<status status="PASS" endtime="20170727 17:20:37.481" starttime="20170727 17:20:37.416"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${bill_check}</arg>
</arguments>
<assign>
<var>${bill_check_length}</var>
</assign>
<msg timestamp="20170727 17:20:37.485" level="INFO">Length is 0</msg>
<msg timestamp="20170727 17:20:37.485" level="INFO">${bill_check_length} = 0</msg>
<status status="PASS" endtime="20170727 17:20:37.486" starttime="20170727 17:20:37.483"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${bill_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170727 17:20:37.489" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 17:20:37.490" starttime="20170727 17:20:37.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>account_unilateral_bill里的没有相关数据</arg>
</arguments>
<msg timestamp="20170727 17:20:37.494" level="INFO">account_unilateral_bill里的没有相关数据</msg>
<status status="PASS" endtime="20170727 17:20:37.495" starttime="20170727 17:20:37.493"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num ='${args11}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${transaction_check}</var>
</assign>
<msg timestamp="20170727 17:20:37.499" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num ='1000000' and update_time between' 2017-07-27 17:19:37.398' and '2017-07-27 17:21:42.398' </msg>
<msg timestamp="20170727 17:20:37.541" level="INFO">${transaction_check} = ()</msg>
<status status="PASS" endtime="20170727 17:20:37.541" starttime="20170727 17:20:37.498"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${transaction_check}</arg>
</arguments>
<assign>
<var>${transaction_check_length}</var>
</assign>
<msg timestamp="20170727 17:20:37.544" level="INFO">Length is 0</msg>
<msg timestamp="20170727 17:20:37.544" level="INFO">${transaction_check_length} = 0</msg>
<status status="PASS" endtime="20170727 17:20:37.545" starttime="20170727 17:20:37.542"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${transaction_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170727 17:20:37.547" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 17:20:37.548" starttime="20170727 17:20:37.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>ajb_account_transaction里的没有相关数据</arg>
</arguments>
<msg timestamp="20170727 17:20:37.550" level="INFO">ajb_account_transaction里的没有相关数据</msg>
<status status="PASS" endtime="20170727 17:20:37.551" starttime="20170727 17:20:37.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库表里数据调用接口前后没有发生变化</arg>
</arguments>
<msg timestamp="20170727 17:20:37.554" level="INFO">数据库表里数据调用接口前后没有发生变化</msg>
<status status="PASS" endtime="20170727 17:20:37.556" starttime="20170727 17:20:37.552"></status>
</kw>
<status status="PASS" endtime="20170727 17:20:37.558" starttime="20170727 17:20:37.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>输入已有的user_id和amount为字符的时候，语法错误，报400</arg>
</arguments>
<msg timestamp="20170727 17:20:37.561" level="INFO">输入已有的user_id和amount为字符的时候，语法错误，报400</msg>
<status status="PASS" endtime="20170727 17:20:37.561" starttime="20170727 17:20:37.559"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=8880888</arg>
</arguments>
<msg timestamp="20170727 17:20:37.565" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=8880888 </msg>
<status status="PASS" endtime="20170727 17:20:37.793" starttime="20170727 17:20:37.563"></status>
</kw>
<status status="PASS" endtime="20170727 17:20:37.795" critical="yes" starttime="20170727 17:20:35.378"></status>
</test>
<status status="PASS" endtime="20170727 17:20:37.797" starttime="20170727 17:20:31.782"></status>
</suite>
<status status="PASS" endtime="20170727 17:20:37.805" starttime="20170727 17:20:31.777"></status>
</suite>
<status status="PASS" endtime="20170727 17:20:37.811" starttime="20170727 17:20:31.580"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="账户中心" pass="2">账户中心</stat>
<stat fail="0" id="s1-s1" name="订单" pass="2">账户中心.订单</stat>
<stat fail="0" id="s1-s1-s1" name="订单支付冻结（线上）" pass="2">账户中心.订单.订单支付冻结（线上）</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
