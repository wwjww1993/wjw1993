<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170728 18:08:37.685" generator="Robot 3.0.2 (Python 2.7.8 on win32)">
<suite source="F:\logs and reports\账户中心" id="s1" name="账户中心">
<suite source="F:\logs and reports\账户中心\艾佳币" id="s1-s1" name="艾佳币">
<suite source="F:\logs and reports\账户中心\艾佳币\艾佳币回收冻结.txt" id="s1-s1-s1" name="艾佳币回收冻结">
<test id="s1-s1-s1-t1" name="输入木有的user_id和正确的amount参数">
<kw name="参数配置" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 18:08:38.249" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 18:08:38.749" starttime="20170728 18:08:38.222"></status>
</kw>
<status status="PASS" endtime="20170728 18:08:38.751" starttime="20170728 18:08:38.219"></status>
</kw>
<kw name="输入拥有不同类型账户的用户user_id" library="myResource">
<arguments>
<arg>100000</arg>
<arg>100000</arg>
<arg>123456781</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_user_account_id}</arg>
</arguments>
<msg timestamp="20170728 18:08:38.758" level="INFO">${boss_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170728 18:08:38.759" starttime="20170728 18:08:38.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_user_account_id}</arg>
</arguments>
<msg timestamp="20170728 18:08:38.762" level="INFO">${app_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170728 18:08:38.763" starttime="20170728 18:08:38.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${no_user_account_id}</arg>
</arguments>
<msg timestamp="20170728 18:08:38.766" level="INFO">${no_user_account_id} = 123456781</msg>
<status status="PASS" endtime="20170728 18:08:38.767" starttime="20170728 18:08:38.764"></status>
</kw>
<status status="PASS" endtime="20170728 18:08:38.768" starttime="20170728 18:08:38.753"></status>
</kw>
<status status="PASS" endtime="20170728 18:08:38.770" starttime="20170728 18:08:38.218"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>${no_user_account_id}</arg>
<arg>1</arg>
<arg>2</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 18:08:38.776" level="INFO">${args11} = 123456781</msg>
<status status="PASS" endtime="20170728 18:08:38.777" starttime="20170728 18:08:38.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 18:08:38.780" level="INFO">${args22} = 1</msg>
<status status="PASS" endtime="20170728 18:08:38.781" starttime="20170728 18:08:38.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 18:08:38.786" level="INFO">${args33} = 2</msg>
<status status="PASS" endtime="20170728 18:08:38.787" starttime="20170728 18:08:38.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 18:08:38.790" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 18:08:38.791" starttime="20170728 18:08:38.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 18:08:38.794" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</msg>
<status status="PASS" endtime="20170728 18:08:38.795" starttime="20170728 18:08:38.792"></status>
</kw>
<status status="PASS" endtime="20170728 18:08:38.796" starttime="20170728 18:08:38.772"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id ='${args11}'</arg>
</arguments>
<assign>
<var>${no_user_id}</var>
</assign>
<msg timestamp="20170728 18:08:38.801" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id ='123456781' </msg>
<msg timestamp="20170728 18:08:38.810" level="INFO">${no_user_id} = ()</msg>
<status status="PASS" endtime="20170728 18:08:38.811" starttime="20170728 18:08:38.799"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${no_user_id}</arg>
</arguments>
<msg timestamp="20170728 18:08:38.814" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170728 18:08:38.815" starttime="20170728 18:08:38.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>此user_id不存在</arg>
</arguments>
<msg timestamp="20170728 18:08:38.818" level="INFO">此user_id不存在</msg>
<status status="PASS" endtime="20170728 18:08:38.820" starttime="20170728 18:08:38.817"></status>
</kw>
<kw name="Data" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data_no_user_id}</var>
</assign>
<msg timestamp="20170728 18:08:38.840" level="INFO">${data_no_user_id} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 18:08:38.842" starttime="20170728 18:08:38.822"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data_no_user_id.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 18:08:38.846" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:08:38.848" starttime="20170728 18:08:38.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 18:08:38.851" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 18:08:38.853" starttime="20170728 18:08:38.850"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data_no_user_id.text}</arg>
</arguments>
<assign>
<var>${toJson1}</var>
</assign>
<msg timestamp="20170728 18:08:38.857" level="INFO">To JSON using : content={"data":{"orderNum":null},"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 18:08:38.858" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 18:08:38.860" level="INFO">${toJson1} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': {u'orderNum': None}, u'success': True}</msg>
<status status="PASS" endtime="20170728 18:08:38.861" starttime="20170728 18:08:38.855"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson1['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 18:08:38.864" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:08:38.866" starttime="20170728 18:08:38.862"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson1['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 18:08:38.871" starttime="20170728 18:08:38.868"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${toJson1['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${no_user_id_orderNum}</var>
</assign>
<msg timestamp="20170728 18:08:38.877" level="INFO">${no_user_id_orderNum} = None</msg>
<status status="PASS" endtime="20170728 18:08:38.879" starttime="20170728 18:08:38.874"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${no_user_id_orderNum}</arg>
</arguments>
<assign>
<var>${no_user_id_orderNum_length}</var>
</assign>
<msg timestamp="20170728 18:08:38.884" level="INFO">${no_user_id_orderNum_length} = None</msg>
<status status="PASS" endtime="20170728 18:08:38.885" starttime="20170728 18:08:38.881"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${no_user_id_orderNum_length}</arg>
<arg>None</arg>
</arguments>
<status status="PASS" endtime="20170728 18:08:38.891" starttime="20170728 18:08:38.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 18:08:38.895" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 18:08:38.896" starttime="20170728 18:08:38.893"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id ='${args11}'</arg>
</arguments>
<assign>
<var>${no_user_id_after}</var>
</assign>
<msg timestamp="20170728 18:08:38.900" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id ='123456781' </msg>
<msg timestamp="20170728 18:08:39.003" level="INFO">${no_user_id_after} = ()</msg>
<status status="PASS" endtime="20170728 18:08:39.004" starttime="20170728 18:08:38.898"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${no_user_id_after}</arg>
</arguments>
<msg timestamp="20170728 18:08:39.009" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170728 18:08:39.010" starttime="20170728 18:08:39.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>此用户不存在，调用接口也不能创建账户</arg>
</arguments>
<msg timestamp="20170728 18:08:39.013" level="INFO">此用户不存在，调用接口也不能创建账户</msg>
<status status="PASS" endtime="20170728 18:08:39.014" starttime="20170728 18:08:39.011"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time_no}</var>
</assign>
<msg timestamp="20170728 18:08:39.018" level="INFO">${current_time_no} = 2017-07-28 18:08:39.018</msg>
<status status="PASS" endtime="20170728 18:08:39.019" starttime="20170728 18:08:39.016"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_no}</arg>
<arg>15 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_301}</var>
</assign>
<msg timestamp="20170728 18:08:39.031" level="INFO">${current_time_before_301} = 2017-07-28 18:08:24.018</msg>
<status status="PASS" endtime="20170728 18:08:39.032" starttime="20170728 18:08:39.021"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_no}</arg>
<arg>61 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_302}</var>
</assign>
<msg timestamp="20170728 18:08:39.038" level="INFO">${current_time_after_302} = 2017-07-28 18:09:40.018</msg>
<status status="PASS" endtime="20170728 18:08:39.039" starttime="20170728 18:08:39.034"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where user_id ='${args11}' and update_time between' ${current_time_before_301}' and '${current_time_after_302}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 18:08:39.042" level="INFO">Executing : Query  |  select * from account_unilateral_bill where user_id ='123456781' and update_time between' 2017-07-28 18:08:24.018' and '2017-07-28 18:09:40.018' </msg>
<msg timestamp="20170728 18:08:39.053" level="INFO">${user_id} = ()</msg>
<status status="PASS" endtime="20170728 18:08:39.054" starttime="20170728 18:08:39.040"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${user_id}</arg>
</arguments>
<msg timestamp="20170728 18:08:39.058" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170728 18:08:39.060" starttime="20170728 18:08:39.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill里是空的</arg>
</arguments>
<msg timestamp="20170728 18:08:39.063" level="INFO">表account_unilateral_bill里是空的</msg>
<status status="PASS" endtime="20170728 18:08:39.064" starttime="20170728 18:08:39.061"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time_nouser}</var>
</assign>
<msg timestamp="20170728 18:08:39.067" level="INFO">${current_time_nouser} = 2017-07-28 18:08:39.067</msg>
<status status="PASS" endtime="20170728 18:08:39.068" starttime="20170728 18:08:39.065"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_nouser}</arg>
<arg>15 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_3011}</var>
</assign>
<msg timestamp="20170728 18:08:39.073" level="INFO">${current_time_before_3011} = 2017-07-28 18:08:24.067</msg>
<status status="PASS" endtime="20170728 18:08:39.074" starttime="20170728 18:08:39.070"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_nouser}</arg>
<arg>61 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_3022}</var>
</assign>
<msg timestamp="20170728 18:08:39.078" level="INFO">${current_time_after_3022} = 2017-07-28 18:09:40.067</msg>
<status status="PASS" endtime="20170728 18:08:39.079" starttime="20170728 18:08:39.076"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where user_id ='${args11}' and update_time between' ${current_time_before_3011}' and '${current_time_after_3022}'</arg>
</arguments>
<assign>
<var>${user_id_no}</var>
</assign>
<msg timestamp="20170728 18:08:39.084" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id ='123456781' and update_time between' 2017-07-28 18:08:24.067' and '2017-07-28 18:09:40.067' </msg>
<msg timestamp="20170728 18:08:39.095" level="INFO">${user_id_no} = ()</msg>
<status status="PASS" endtime="20170728 18:08:39.096" starttime="20170728 18:08:39.081"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${user_id_no}</arg>
</arguments>
<msg timestamp="20170728 18:08:39.100" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170728 18:08:39.101" starttime="20170728 18:08:39.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>ajb_account_transaction里是空的</arg>
</arguments>
<msg timestamp="20170728 18:08:39.103" level="INFO">ajb_account_transaction里是空的</msg>
<status status="PASS" endtime="20170728 18:08:39.104" starttime="20170728 18:08:39.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>调用艾佳币回收冻结，没有user_id,也不能创建新的账号。</arg>
</arguments>
<msg timestamp="20170728 18:08:39.106" level="INFO">调用艾佳币回收冻结，没有user_id,也不能创建新的账号。</msg>
<status status="PASS" endtime="20170728 18:08:39.107" starttime="20170728 18:08:39.105"></status>
</kw>
<status status="PASS" endtime="20170728 18:08:39.107" critical="yes" starttime="20170728 18:08:38.214"></status>
</test>
<status status="PASS" endtime="20170728 18:08:39.109" starttime="20170728 18:08:37.920"></status>
</suite>
<status status="PASS" endtime="20170728 18:08:39.116" starttime="20170728 18:08:37.916"></status>
</suite>
<status status="PASS" endtime="20170728 18:08:39.121" starttime="20170728 18:08:37.714"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="账户中心" pass="1">账户中心</stat>
<stat fail="0" id="s1-s1" name="艾佳币" pass="1">账户中心.艾佳币</stat>
<stat fail="0" id="s1-s1-s1" name="艾佳币回收冻结" pass="1">账户中心.艾佳币.艾佳币回收冻结</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
