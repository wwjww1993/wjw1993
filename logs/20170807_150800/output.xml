<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170807 15:14:00.625" generator="Robot 3.0.2 (Python 2.7.8 on win32)">
<suite source="F:\logs and reports\账户中心" id="s1" name="账户中心">
<suite source="F:\logs and reports\账户中心\订单" id="s1-s1" name="订单">
<suite source="F:\logs and reports\账户中心\订单\订单支付退款（线上）.txt" id="s1-s1-s1" name="订单支付退款（线上）">
<test id="s1-s1-s1-t1" name="艾佳币账户未过期，支付订单后取消顶大，解冻艾佳币，有效期大于15天的不延长">
<kw name="参数配置" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170807 15:14:01.077" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170807 15:14:01.108" starttime="20170807 15:14:01.062"></status>
</kw>
<status status="PASS" endtime="20170807 15:14:01.108" starttime="20170807 15:14:01.062"></status>
</kw>
<kw name="输入拥有不同类型账户的用户user_id" library="myResource">
<arguments>
<arg>100000</arg>
<arg>100000</arg>
<arg>123456781</arg>
<arg>http://192.168.1.31:10003</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:14:01.108" level="INFO">${boss_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170807 15:14:01.108" starttime="20170807 15:14:01.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:14:01.108" level="INFO">${app_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170807 15:14:01.108" starttime="20170807 15:14:01.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${no_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:14:01.108" level="INFO">${no_user_account_id} = 123456781</msg>
<status status="PASS" endtime="20170807 15:14:01.108" starttime="20170807 15:14:01.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${environment}</arg>
</arguments>
<msg timestamp="20170807 15:14:01.108" level="INFO">${environment} = http://192.168.1.31:10003</msg>
<status status="PASS" endtime="20170807 15:14:01.108" starttime="20170807 15:14:01.108"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${boss_user_account_id}' and channel_no=1</arg>
</arguments>
<assign>
<var>${boss_channel_no1}</var>
</assign>
<msg timestamp="20170807 15:14:01.108" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=1 </msg>
<msg timestamp="20170807 15:14:01.124" level="INFO">${boss_channel_no1} = ((17140, '1686241311501149903', 100000, 5755, 1, 2, 0, datetime.datetime(2017, 7, 27, 18, 4, 58), datetime.datetime(2017, 7, 27, 18, 4, 58)),)</msg>
<status status="PASS" endtime="20170807 15:14:01.124" starttime="20170807 15:14:01.108"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${boss_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${boss_channel_no}</var>
</assign>
<msg timestamp="20170807 15:14:01.124" level="INFO">${boss_channel_no} = 5755</msg>
<status status="PASS" endtime="20170807 15:14:01.124" starttime="20170807 15:14:01.124"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${app_user_account_id}' and channel_no=2</arg>
</arguments>
<assign>
<var>${app_channel_no1}</var>
</assign>
<msg timestamp="20170807 15:14:01.124" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=2 </msg>
<msg timestamp="20170807 15:14:01.140" level="INFO">${app_channel_no1} = ((17141, '1686241311501149931', 100000, 5756, 2, 2, 0, datetime.datetime(2017, 7, 27, 18, 28, 2), datetime.datetime(2017, 7, 27, 18, 28, 2)),)</msg>
<status status="PASS" endtime="20170807 15:14:01.140" starttime="20170807 15:14:01.124"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${app_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${app_channel_no}</var>
</assign>
<msg timestamp="20170807 15:14:01.140" level="INFO">${app_channel_no} = 5756</msg>
<status status="PASS" endtime="20170807 15:14:01.140" starttime="20170807 15:14:01.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_channel_no}</arg>
</arguments>
<msg timestamp="20170807 15:14:01.140" level="INFO">${boss_channel_no} = 5755</msg>
<status status="PASS" endtime="20170807 15:14:01.140" starttime="20170807 15:14:01.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_channel_no}</arg>
</arguments>
<msg timestamp="20170807 15:14:01.140" level="INFO">${app_channel_no} = 5756</msg>
<status status="PASS" endtime="20170807 15:14:01.140" starttime="20170807 15:14:01.140"></status>
</kw>
<status status="PASS" endtime="20170807 15:14:01.140" starttime="20170807 15:14:01.108"></status>
</kw>
<status status="PASS" endtime="20170807 15:14:01.140" starttime="20170807 15:14:01.062"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170807 15:14:01.140" level="INFO">${current_time} = 2017-08-07 15:14:01.140</msg>
<status status="PASS" endtime="20170807 15:14:01.140" starttime="20170807 15:14:01.140"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>20 days</arg>
</arguments>
<assign>
<var>${after_time}</var>
</assign>
<msg timestamp="20170807 15:14:01.155" level="INFO">${after_time} = 2017-08-27 15:14:01.140</msg>
<status status="PASS" endtime="20170807 15:14:01.155" starttime="20170807 15:14:01.140"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>10 days</arg>
</arguments>
<assign>
<var>${account_begin_time}</var>
</assign>
<msg timestamp="20170807 15:14:01.155" level="INFO">${account_begin_time} = 2017-07-28 15:14:01.140</msg>
<status status="PASS" endtime="20170807 15:14:01.155" starttime="20170807 15:14:01.155"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${after_time}</arg>
<arg>datetime</arg>
</arguments>
<assign>
<var>${after_time_check1}</var>
</assign>
<msg timestamp="20170807 15:14:01.155" level="INFO">${after_time_check1} = 2017-08-27 15:14:01.140000</msg>
<status status="PASS" endtime="20170807 15:14:01.155" starttime="20170807 15:14:01.155"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id="${boss_user_account_id}"</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170807 15:14:01.155" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id="100000" </msg>
<msg timestamp="20170807 15:14:01.171" level="INFO">${id} = ((17140, '1686241311501149903', 100000, 5755, 1, 2, 0, datetime.datetime(2017, 7, 27, 18, 4, 58), datetime.datetime(2017, 7, 27, 18, 4, 58)), (17141, '1686241311501149931', 100000, 5756, 2, 2, 0, date...</msg>
<status status="PASS" endtime="20170807 15:14:01.171" starttime="20170807 15:14:01.155"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_base where user_id="${boss_user_account_id}"</arg>
</arguments>
<msg timestamp="20170807 15:14:01.186" level="INFO">Executing : Execute SQL String  |  delete from account_base where user_id="100000" </msg>
<status status="PASS" endtime="20170807 15:14:01.280" starttime="20170807 15:14:01.171"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into account_base(id,user_id,role_type,account_type,account_status,account_begin_time,account_end_time,add_time,update_time,del_flag) values("${id[0][3]}","${boss_user_account_id}","1","2","2","${account_begin_time}","${after_time}","${account_begin_time}","${account_begin_time}","0");</arg>
</arguments>
<msg timestamp="20170807 15:14:01.296" level="INFO">Executing : Execute SQL String  |  insert into account_base(id,user_id,role_type,account_type,account_status,account_begin_time,account_end_time,add_time,update_time,del_flag) values("5755","100000","1","2","2","2017-07-28 15:14:01.140","2017-08-27 15:14:01.140","2017-07-28 15:14:01.140","2017-07-28 15:14:01.140","0"); </msg>
<status status="PASS" endtime="20170807 15:14:01.405" starttime="20170807 15:14:01.280"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into account_base(id,user_id,role_type,account_type,account_status,account_begin_time,account_end_time,add_time,update_time,del_flag) values("${id[1][3]}","${boss_user_account_id}","1","2","2","${account_begin_time}","${after_time}","${account_begin_time}","${account_begin_time}","0");</arg>
</arguments>
<msg timestamp="20170807 15:14:01.405" level="INFO">Executing : Execute SQL String  |  insert into account_base(id,user_id,role_type,account_type,account_status,account_begin_time,account_end_time,add_time,update_time,del_flag) values("5756","100000","1","2","2","2017-07-28 15:14:01.140","2017-08-27 15:14:01.140","2017-07-28 15:14:01.140","2017-07-28 15:14:01.140","0"); </msg>
<status status="PASS" endtime="20170807 15:14:01.498" starttime="20170807 15:14:01.405"></status>
</kw>
<kw name="清数据" library="myResource">
<arguments>
<arg>88800888</arg>
</arguments>
<kw name="参数配置" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170807 15:14:01.514" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170807 15:14:01.530" starttime="20170807 15:14:01.514"></status>
</kw>
<status status="PASS" endtime="20170807 15:14:01.530" starttime="20170807 15:14:01.514"></status>
</kw>
<kw name="输入拥有不同类型账户的用户user_id" library="myResource">
<arguments>
<arg>100000</arg>
<arg>100000</arg>
<arg>123456781</arg>
<arg>http://192.168.1.31:10003</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:14:01.545" level="INFO">${boss_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170807 15:14:01.545" starttime="20170807 15:14:01.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:14:01.545" level="INFO">${app_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170807 15:14:01.545" starttime="20170807 15:14:01.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${no_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:14:01.561" level="INFO">${no_user_account_id} = 123456781</msg>
<status status="PASS" endtime="20170807 15:14:01.561" starttime="20170807 15:14:01.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${environment}</arg>
</arguments>
<msg timestamp="20170807 15:14:01.561" level="INFO">${environment} = http://192.168.1.31:10003</msg>
<status status="PASS" endtime="20170807 15:14:01.561" starttime="20170807 15:14:01.561"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${boss_user_account_id}' and channel_no=1</arg>
</arguments>
<assign>
<var>${boss_channel_no1}</var>
</assign>
<msg timestamp="20170807 15:14:01.561" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=1 </msg>
<msg timestamp="20170807 15:14:01.576" level="INFO">${boss_channel_no1} = ((17140, '1686241311501149903', 100000, 5755, 1, 2, 0, datetime.datetime(2017, 7, 27, 18, 4, 58), datetime.datetime(2017, 7, 27, 18, 4, 58)),)</msg>
<status status="PASS" endtime="20170807 15:14:01.576" starttime="20170807 15:14:01.561"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${boss_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${boss_channel_no}</var>
</assign>
<msg timestamp="20170807 15:14:01.576" level="INFO">${boss_channel_no} = 5755</msg>
<status status="PASS" endtime="20170807 15:14:01.576" starttime="20170807 15:14:01.576"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${app_user_account_id}' and channel_no=2</arg>
</arguments>
<assign>
<var>${app_channel_no1}</var>
</assign>
<msg timestamp="20170807 15:14:01.576" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=2 </msg>
<msg timestamp="20170807 15:14:01.576" level="INFO">${app_channel_no1} = ((17141, '1686241311501149931', 100000, 5756, 2, 2, 0, datetime.datetime(2017, 7, 27, 18, 28, 2), datetime.datetime(2017, 7, 27, 18, 28, 2)),)</msg>
<status status="PASS" endtime="20170807 15:14:01.576" starttime="20170807 15:14:01.576"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${app_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${app_channel_no}</var>
</assign>
<msg timestamp="20170807 15:14:01.592" level="INFO">${app_channel_no} = 5756</msg>
<status status="PASS" endtime="20170807 15:14:01.592" starttime="20170807 15:14:01.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_channel_no}</arg>
</arguments>
<msg timestamp="20170807 15:14:01.592" level="INFO">${boss_channel_no} = 5755</msg>
<status status="PASS" endtime="20170807 15:14:01.592" starttime="20170807 15:14:01.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_channel_no}</arg>
</arguments>
<msg timestamp="20170807 15:14:01.592" level="INFO">${app_channel_no} = 5756</msg>
<status status="PASS" endtime="20170807 15:14:01.592" starttime="20170807 15:14:01.592"></status>
</kw>
<status status="PASS" endtime="20170807 15:14:01.592" starttime="20170807 15:14:01.530"></status>
</kw>
<status status="PASS" endtime="20170807 15:14:01.592" starttime="20170807 15:14:01.498"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170807 15:14:01.592" level="INFO">Executing : Query  |  select * from ajb_account_transaction where id=88800888 </msg>
<msg timestamp="20170807 15:14:01.608" level="INFO">${check} = ((88800888, '32102151361501122443', 100000, 5755, 1, '32102151361501122443', '', Decimal('2.00'), 1, 11, 2, 1, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)),)</msg>
<status status="PASS" endtime="20170807 15:14:01.608" starttime="20170807 15:14:01.592"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170807 15:14:01.608" level="INFO">Length is 1</msg>
<msg timestamp="20170807 15:14:01.608" level="INFO">${check_length} = 1</msg>
<status status="PASS" endtime="20170807 15:14:01.608" starttime="20170807 15:14:01.608"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} != 0</arg>
<arg>execute sql string</arg>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>数据库之前没有数据</arg>
</arguments>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<msg timestamp="20170807 15:14:01.608" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=88800888 </msg>
<status status="PASS" endtime="20170807 15:14:01.701" starttime="20170807 15:14:01.608"></status>
</kw>
<status status="PASS" endtime="20170807 15:14:01.701" starttime="20170807 15:14:01.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库里面的这条数据清理成功啦。</arg>
</arguments>
<msg timestamp="20170807 15:14:01.701" level="INFO">数据库里面的这条数据清理成功啦。</msg>
<status status="PASS" endtime="20170807 15:14:01.701" starttime="20170807 15:14:01.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_delete}</arg>
</arguments>
<msg timestamp="20170807 15:14:01.701" level="INFO">${id_delete} = 88800888</msg>
<status status="PASS" endtime="20170807 15:14:01.701" starttime="20170807 15:14:01.701"></status>
</kw>
<status status="PASS" endtime="20170807 15:14:01.701" starttime="20170807 15:14:01.498"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("${id_delete}","32102151361501122443","${boss_user_account_id}","${boss_channel_no}","1","32102151361501122443","","2","1","11","2","1","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170807 15:14:01.701" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("88800888","32102151361501122443","100000","5755","1","32102151361501122443","","2","1","11","2","1","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170807 15:14:01.748" starttime="20170807 15:14:01.701"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>32102151361501122443</arg>
<arg>${environment}/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170807 15:14:01.748" level="INFO">${args11} = 32102151361501122443</msg>
<status status="PASS" endtime="20170807 15:14:01.748" starttime="20170807 15:14:01.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170807 15:14:01.748" level="INFO">${args22} = </msg>
<status status="PASS" endtime="20170807 15:14:01.748" starttime="20170807 15:14:01.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170807 15:14:01.748" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170807 15:14:01.748" starttime="20170807 15:14:01.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170807 15:14:01.748" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170807 15:14:01.748" starttime="20170807 15:14:01.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170807 15:14:01.748" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</msg>
<status status="PASS" endtime="20170807 15:14:01.748" starttime="20170807 15:14:01.748"></status>
</kw>
<status status="PASS" endtime="20170807 15:14:01.748" starttime="20170807 15:14:01.748"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num='${args11}' and event_code=13</arg>
</arguments>
<assign>
<var>${user_id_refund}</var>
</assign>
<msg timestamp="20170807 15:14:01.748" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num='32102151361501122443' and event_code=13 </msg>
<msg timestamp="20170807 15:14:01.764" level="INFO">${user_id_refund} = ()</msg>
<status status="PASS" endtime="20170807 15:14:01.764" starttime="20170807 15:14:01.748"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${user_id_refund[0][2]}' and channel_no=1</arg>
</arguments>
<assign>
<var>${account_id_bos}</var>
</assign>
<msg timestamp="20170807 15:14:01.764" level="FAIL">Resolving variable '${user_id_refund[0][2]}' failed: IndexError: tuple index out of range</msg>
<status status="FAIL" endtime="20170807 15:14:01.764" starttime="20170807 15:14:01.764"></status>
</kw>
<status status="FAIL" endtime="20170807 15:14:01.764" critical="yes" starttime="20170807 15:14:01.046">Resolving variable '${user_id_refund[0][2]}' failed: IndexError: tuple index out of range</status>
</test>
<status status="FAIL" endtime="20170807 15:14:01.764" starttime="20170807 15:14:00.812"></status>
</suite>
<status status="FAIL" endtime="20170807 15:14:01.779" starttime="20170807 15:14:00.812"></status>
</suite>
<status status="FAIL" endtime="20170807 15:14:01.779" starttime="20170807 15:14:00.656"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="0">Critical Tests</stat>
<stat fail="1" pass="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="1" id="s1" name="账户中心" pass="0">账户中心</stat>
<stat fail="1" id="s1-s1" name="订单" pass="0">账户中心.订单</stat>
<stat fail="1" id="s1-s1-s1" name="订单支付退款（线上）" pass="0">账户中心.订单.订单支付退款（线上）</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
