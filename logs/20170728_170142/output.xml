<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170728 17:01:55.317" generator="Robot 3.0.2 (Python 2.7.8 on win32)">
<suite source="F:\logs and reports\账户中心" id="s1" name="账户中心">
<suite source="F:\logs and reports\账户中心\订单" id="s1-s1" name="订单">
<suite source="F:\logs and reports\账户中心\订单\订单取消支付（线上）.txt" id="s1-s1-s1" name="订单取消支付（线上）">
<test id="s1-s1-s1-t1" name="输入正确的订单冻结oderNum">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:01:55.862" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:01:55.874" starttime="20170728 17:01:55.837"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:55.875" starttime="20170728 17:01:55.835"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:55.876" starttime="20170728 17:01:55.834"></status>
</kw>
<kw name="清数据" library="myResource">
<arguments>
<arg>888888</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:01:55.881" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:01:55.892" starttime="20170728 17:01:55.881"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:55.893" starttime="20170728 17:01:55.880"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:55.894" starttime="20170728 17:01:55.879"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170728 17:01:55.896" level="INFO">Executing : Query  |  select * from ajb_account_transaction where id=888888 </msg>
<msg timestamp="20170728 17:01:55.902" level="INFO">${check} = ()</msg>
<status status="PASS" endtime="20170728 17:01:55.903" starttime="20170728 17:01:55.895"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170728 17:01:55.904" level="INFO">Length is 0</msg>
<msg timestamp="20170728 17:01:55.905" level="INFO">${check_length} = 0</msg>
<status status="PASS" endtime="20170728 17:01:55.905" starttime="20170728 17:01:55.904"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} != 0</arg>
<arg>execute sql string</arg>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>数据库之前没有数据</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库之前没有数据</arg>
</arguments>
<msg timestamp="20170728 17:01:55.908" level="INFO">数据库之前没有数据</msg>
<status status="PASS" endtime="20170728 17:01:55.908" starttime="20170728 17:01:55.907"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:55.909" starttime="20170728 17:01:55.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库里面的这条数据清理成功啦。</arg>
</arguments>
<msg timestamp="20170728 17:01:55.910" level="INFO">数据库里面的这条数据清理成功啦。</msg>
<status status="PASS" endtime="20170728 17:01:55.910" starttime="20170728 17:01:55.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_delete}</arg>
</arguments>
<msg timestamp="20170728 17:01:55.912" level="INFO">${id_delete} = 888888</msg>
<status status="PASS" endtime="20170728 17:01:55.912" starttime="20170728 17:01:55.911"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:55.913" starttime="20170728 17:01:55.877"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("${id_delete}","32102151361500975216","100000","6135","1","32102151361500012119","","2","1","11","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170728 17:01:55.914" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("888888","32102151361500975216","100000","6135","1","32102151361500012119","","2","1","11","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170728 17:01:56.057" starttime="20170728 17:01:55.913"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>32102151361500012119</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:01:56.059" level="INFO">${args11} = 32102151361500012119</msg>
<status status="PASS" endtime="20170728 17:01:56.060" starttime="20170728 17:01:56.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:01:56.061" level="INFO">${args22} = </msg>
<status status="PASS" endtime="20170728 17:01:56.061" starttime="20170728 17:01:56.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 17:01:56.063" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170728 17:01:56.063" starttime="20170728 17:01:56.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 17:01:56.064" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 17:01:56.065" starttime="20170728 17:01:56.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 17:01:56.067" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/cancelPay</msg>
<status status="PASS" endtime="20170728 17:01:56.068" starttime="20170728 17:01:56.065"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:56.068" starttime="20170728 17:01:56.058"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 17:01:56.070" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/cancelPay</msg>
<status status="PASS" endtime="20170728 17:01:56.071" starttime="20170728 17:01:56.069"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 17:01:56.072" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:01:56.073" starttime="20170728 17:01:56.072"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:56.075" starttime="20170728 17:01:56.074"></status>
</kw>
<msg timestamp="20170728 17:01:56.077" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:01:56.077" starttime="20170728 17:01:56.073"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>order_num</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:56.081" starttime="20170728 17:01:56.080"></status>
</kw>
<msg timestamp="20170728 17:01:56.082" level="INFO">${args11_after} = order_num</msg>
<status status="PASS" endtime="20170728 17:01:56.082" starttime="20170728 17:01:56.078"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:01:56.085" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:01:56.106" starttime="20170728 17:01:56.084"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:56.107" starttime="20170728 17:01:56.084"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:56.108" starttime="20170728 17:01:56.083"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 17:01:56.111" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num='32102151361500012119' and channel_no='1' </msg>
<msg timestamp="20170728 17:01:56.122" level="INFO">${database1} = ((9242, '32102151361500012119', 100000, 6135, 1, '32102151361500012119', '20170717133633HCE041747', Decimal('2000.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 17, 13, 36, 36), datetime.datetime(2017, ...</msg>
<status status="PASS" endtime="20170728 17:01:56.123" starttime="20170728 17:01:56.109"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 17:01:56.126" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 17:01:56.131" level="INFO">${database} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 2, 51), 0),)</msg>
<status status="PASS" endtime="20170728 17:01:56.131" starttime="20170728 17:01:56.124"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 17:01:56.133" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:01:56.133" starttime="20170728 17:01:56.132"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 17:01:56.134" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 17:01:56.135" starttime="20170728 17:01:56.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:01:56.137" level="INFO">获得account_id值为：6135</msg>
<status status="PASS" endtime="20170728 17:01:56.138" starttime="20170728 17:01:56.136"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 17:01:56.139" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:01:56.140" starttime="20170728 17:01:56.138"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 17:01:56.141" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:01:56.142" starttime="20170728 17:01:56.140"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 17:01:56.144" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:01:56.145" starttime="20170728 17:01:56.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:01:56.147" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 17:01:56.147" starttime="20170728 17:01:56.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 17:01:56.148" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:01:56.149" starttime="20170728 17:01:56.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:01:56.150" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:01:56.150" starttime="20170728 17:01:56.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:01:56.152" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:01:56.152" starttime="20170728 17:01:56.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:01:56.154" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:01:56.154" starttime="20170728 17:01:56.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:01:56.156" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:01:56.156" starttime="20170728 17:01:56.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 17:01:56.158" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:01:56.158" starttime="20170728 17:01:56.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 17:01:56.160" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/cancelPay</msg>
<status status="PASS" endtime="20170728 17:01:56.161" starttime="20170728 17:01:56.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170728 17:01:56.162" level="INFO">${database} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 2, 51), 0),)</msg>
<status status="PASS" endtime="20170728 17:01:56.162" starttime="20170728 17:01:56.161"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:56.163" starttime="20170728 17:01:56.069"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Ajb Withdraw Cancel" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:56.335" starttime="20170728 17:01:56.166"></status>
</kw>
<msg timestamp="20170728 17:01:56.339" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:01:56.340" starttime="20170728 17:01:56.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 17:01:56.343" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:01:56.344" starttime="20170728 17:01:56.341"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:56.345" starttime="20170728 17:01:56.163"></status>
</kw>
<kw name="字段验证" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 17:01:56.348" level="INFO">200</msg>
<status status="PASS" endtime="20170728 17:01:56.348" starttime="20170728 17:01:56.347"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 17:01:56.352" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:56.352" starttime="20170728 17:01:56.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 17:01:56.354" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 17:01:56.355" starttime="20170728 17:01:56.353"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 17:01:56.357" level="INFO">To JSON using : content={"data":null,"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 17:01:56.358" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 17:01:56.359" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': None, u'success': True}</msg>
<status status="PASS" endtime="20170728 17:01:56.360" starttime="20170728 17:01:56.356"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 17:01:56.363" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:56.363" starttime="20170728 17:01:56.361"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:56.367" starttime="20170728 17:01:56.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:01:56.369" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 17:01:56.369" starttime="20170728 17:01:56.368"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<assign>
<var>@{Link1}</var>
</assign>
<msg timestamp="20170728 17:01:56.372" level="INFO">@{Link1} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:01:56.372" starttime="20170728 17:01:56.370"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>"${value}" in @{Link1}</arg>
<arg>Get From Dictionary</arg>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${orderNum}</var>
</assign>
<msg timestamp="20170728 17:01:56.374" level="INFO">${orderNum} = None</msg>
<status status="PASS" endtime="20170728 17:01:56.374" starttime="20170728 17:01:56.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<msg timestamp="20170728 17:01:56.377" level="INFO">${orderNum} = None</msg>
<status status="PASS" endtime="20170728 17:01:56.377" starttime="20170728 17:01:56.375"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:56.378" starttime="20170728 17:01:56.345"></status>
</kw>
<kw name="确认取消的金额数" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:01:56.382" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:01:56.398" starttime="20170728 17:01:56.381"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:56.399" starttime="20170728 17:01:56.380"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:56.399" starttime="20170728 17:01:56.380"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>8</arg>
</arguments>
<assign>
<var>${event_code_judge}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>11</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:56.402" starttime="20170728 17:01:56.401"></status>
</kw>
<msg timestamp="20170728 17:01:56.403" level="INFO">${event_code_judge} = 11</msg>
<status status="PASS" endtime="20170728 17:01:56.403" starttime="20170728 17:01:56.400"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num ='${args11}' and event_code=${event_code_judge}</arg>
</arguments>
<assign>
<var>${search}</var>
</assign>
<msg timestamp="20170728 17:01:56.405" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num ='32102151361500012119' and event_code=11 </msg>
<msg timestamp="20170728 17:01:56.416" level="INFO">${search} = ((888888, '32102151361500975216', 100000, 6135, 1, '32102151361500012119', '', Decimal('2.00'), 1, 11, 2, 0, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)),)</msg>
<status status="PASS" endtime="20170728 17:01:56.416" starttime="20170728 17:01:56.404"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${search[0][7]}</arg>
</arguments>
<assign>
<var>${change_total_amount}</var>
</assign>
<msg timestamp="20170728 17:01:56.418" level="INFO">${change_total_amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:01:56.418" starttime="20170728 17:01:56.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${change_total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:01:56.420" level="INFO">${change_total_amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:01:56.421" starttime="20170728 17:01:56.419"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:56.422" starttime="20170728 17:01:56.379"></status>
</kw>
<kw name="表account_unilateral_bill的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_unilateral_bill</arg>
</arguments>
<msg timestamp="20170728 17:01:56.426" level="INFO">现在开始校验表account_unilateral_bill</msg>
<status status="PASS" endtime="20170728 17:01:56.427" starttime="20170728 17:01:56.425"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:01:56.431" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:01:56.459" starttime="20170728 17:01:56.430"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:56.460" starttime="20170728 17:01:56.429"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:56.461" starttime="20170728 17:01:56.428"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>account_unilateral_bill</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:01:56.465" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:01:56.473" starttime="20170728 17:01:56.464"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:56.474" starttime="20170728 17:01:56.463"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:56.474" starttime="20170728 17:01:56.462"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:01:56.476" level="INFO">${current_time} = 2017-07-28 17:01:56.476</msg>
<status status="PASS" endtime="20170728 17:01:56.477" starttime="20170728 17:01:56.475"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>0 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:01:56.483" level="INFO">${current_time_before_30} = 2017-07-28 17:01:56.476</msg>
<status status="PASS" endtime="20170728 17:01:56.484" starttime="20170728 17:01:56.477"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:01:56.487" level="INFO">${current_time_after_30} = 2017-07-28 17:03:36.476</msg>
<status status="PASS" endtime="20170728 17:01:56.488" starttime="20170728 17:01:56.485"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 17:01:56.491" level="INFO">Executing : Query  |  select * from account_unilateral_bill where user_id='100000' and update_time between' 2017-07-28 17:01:56.476' and '2017-07-28 17:03:36.476' </msg>
<msg timestamp="20170728 17:01:56.501" level="INFO">${updatetime} = ((7638, '32102151361501230403', 100000, 6135, '32102151361501230402', 1, 12, 2, Decimal('2.00'), None, datetime.datetime(2017, 7, 28, 17, 3, 1), datetime.datetime(2017, 7, 28, 17, 3, 1), 0),)</msg>
<status status="PASS" endtime="20170728 17:01:56.501" starttime="20170728 17:01:56.489"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 17:01:56.504" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 17:01:56.504" starttime="20170728 17:01:56.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 17:01:56.506" level="INFO">account_unilateral_bill表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 17:01:56.506" starttime="20170728 17:01:56.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 17:01:56.507" level="INFO">${current_time_before_30} = 2017-07-28 17:01:56.476</msg>
<status status="PASS" endtime="20170728 17:01:56.508" starttime="20170728 17:01:56.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 17:01:56.509" level="INFO">${current_time_after_30} = 2017-07-28 17:03:36.476</msg>
<status status="PASS" endtime="20170728 17:01:56.509" starttime="20170728 17:01:56.508"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:56.510" starttime="20170728 17:01:56.461"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id} 'and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:01:56.511" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6135 'and update_time between' 2017-07-28 17:01:56.476' and '2017-07-28 17:03:36.476' </msg>
<msg timestamp="20170728 17:01:56.517" level="INFO">${user_id} = ((7638, '32102151361501230403', 100000, 6135, '32102151361501230402', 1, 12, 2, Decimal('2.00'), None, datetime.datetime(2017, 7, 28, 17, 3, 1), datetime.datetime(2017, 7, 28, 17, 3, 1), 0),)</msg>
<status status="PASS" endtime="20170728 17:01:56.518" starttime="20170728 17:01:56.511"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170728 17:01:56.520" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:01:56.521" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:01:56.521" starttime="20170728 17:01:56.518"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:01:56.523" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:56.523" starttime="20170728 17:01:56.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:01:56.524" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:01:56.525" starttime="20170728 17:01:56.524"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:56.527" starttime="20170728 17:01:56.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:01:56.528" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:01:56.529" starttime="20170728 17:01:56.528"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170728 17:01:56.530" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:01:56.530" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:01:56.531" starttime="20170728 17:01:56.529"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:01:56.533" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:56.534" starttime="20170728 17:01:56.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:01:56.535" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:01:56.536" starttime="20170728 17:01:56.535"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:01:56.538" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:56.538" starttime="20170728 17:01:56.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 17:01:56.539" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 17:01:56.540" starttime="20170728 17:01:56.539"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>12</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:56.544" starttime="20170728 17:01:56.543"></status>
</kw>
<msg timestamp="20170728 17:01:56.544" level="INFO">${event_code} = 12</msg>
<status status="PASS" endtime="20170728 17:01:56.544" starttime="20170728 17:01:56.541"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:01:56.548" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:01:56.548" starttime="20170728 17:01:56.546"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:56.552" starttime="20170728 17:01:56.551"></status>
</kw>
<msg timestamp="20170728 17:01:56.553" level="INFO">${event_code_after} = 12</msg>
<status status="PASS" endtime="20170728 17:01:56.554" starttime="20170728 17:01:56.550"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:01:56.556" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:01:56.557" starttime="20170728 17:01:56.555"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:56.562" starttime="20170728 17:01:56.561"></status>
</kw>
<msg timestamp="20170728 17:01:56.562" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 17:01:56.562" starttime="20170728 17:01:56.558"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:56.566" starttime="20170728 17:01:56.565"></status>
</kw>
<msg timestamp="20170728 17:01:56.567" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:01:56.567" starttime="20170728 17:01:56.563"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:01:56.569" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:01:56.569" starttime="20170728 17:01:56.568"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>4</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:56.572" starttime="20170728 17:01:56.572"></status>
</kw>
<msg timestamp="20170728 17:01:56.573" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 17:01:56.573" starttime="20170728 17:01:56.570"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:56.576" starttime="20170728 17:01:56.575"></status>
</kw>
<msg timestamp="20170728 17:01:56.577" level="INFO">${total_amount} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:01:56.578" starttime="20170728 17:01:56.574"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${change_total_amount}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:56.581" starttime="20170728 17:01:56.580"></status>
</kw>
<msg timestamp="20170728 17:01:56.582" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:01:56.582" starttime="20170728 17:01:56.579"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:56.585" starttime="20170728 17:01:56.584"></status>
</kw>
<msg timestamp="20170728 17:01:56.585" level="INFO">${frozen_amount} = 826.0</msg>
<status status="PASS" endtime="20170728 17:01:56.586" starttime="20170728 17:01:56.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:01:56.587" level="INFO">${event_code} = 12</msg>
<status status="PASS" endtime="20170728 17:01:56.589" starttime="20170728 17:01:56.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:01:56.591" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 17:01:56.592" starttime="20170728 17:01:56.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:01:56.594" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 17:01:56.595" starttime="20170728 17:01:56.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:01:56.596" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:01:56.597" starttime="20170728 17:01:56.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:01:56.598" level="INFO">${total_amount} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:01:56.599" starttime="20170728 17:01:56.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:01:56.600" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:01:56.600" starttime="20170728 17:01:56.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:01:56.602" level="INFO">${frozen_amount} = 826.0</msg>
<status status="PASS" endtime="20170728 17:01:56.602" starttime="20170728 17:01:56.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:01:56.604" level="INFO">${event_code_after} = 12</msg>
<status status="PASS" endtime="20170728 17:01:56.604" starttime="20170728 17:01:56.603"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:56.605" starttime="20170728 17:01:56.540"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:01:56.606" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:56.606" starttime="20170728 17:01:56.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 17:01:56.608" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 17:01:56.608" starttime="20170728 17:01:56.607"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:01:56.610" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:56.611" starttime="20170728 17:01:56.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170728 17:01:56.613" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170728 17:01:56.613" starttime="20170728 17:01:56.612"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:56.616" starttime="20170728 17:01:56.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 17:01:56.618" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 17:01:56.618" starttime="20170728 17:01:56.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 17:01:56.620" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 17:01:56.621" starttime="20170728 17:01:56.619"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:01:56.622" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:56.622" starttime="20170728 17:01:56.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:01:56.624" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:01:56.624" starttime="20170728 17:01:56.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170728 17:01:56.627" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170728 17:01:56.627" starttime="20170728 17:01:56.626"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_unilateral}</var>
</assign>
<msg timestamp="20170728 17:01:56.629" level="INFO">${user_id[0][0]_unilateral} = 7638</msg>
<status status="PASS" endtime="20170728 17:01:56.629" starttime="20170728 17:01:56.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_unilateral}</arg>
</arguments>
<msg timestamp="20170728 17:01:56.631" level="INFO">${user_id[0][0]_unilateral} = 7638</msg>
<status status="PASS" endtime="20170728 17:01:56.631" starttime="20170728 17:01:56.630"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]_unilateral}'</arg>
</arguments>
<msg timestamp="20170728 17:01:56.632" level="INFO">Executing : Execute SQL String  |  delete from account_unilateral_bill where id ='7638' </msg>
<status status="PASS" endtime="20170728 17:01:56.680" starttime="20170728 17:01:56.631"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:56.681" starttime="20170728 17:01:56.423"></status>
</kw>
<kw name="表ajb_account_transaction" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170728 17:01:56.684" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170728 17:01:56.685" starttime="20170728 17:01:56.683"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:01:56.692" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:01:56.712" starttime="20170728 17:01:56.690"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:56.713" starttime="20170728 17:01:56.688"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:56.714" starttime="20170728 17:01:56.686"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>ajb_account_transaction</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:01:56.723" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:01:56.732" starttime="20170728 17:01:56.722"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:56.734" starttime="20170728 17:01:56.719"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:56.735" starttime="20170728 17:01:56.717"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:01:56.739" level="INFO">${current_time} = 2017-07-28 17:01:56.738</msg>
<status status="PASS" endtime="20170728 17:01:56.739" starttime="20170728 17:01:56.737"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>0 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:01:56.743" level="INFO">${current_time_before_30} = 2017-07-28 17:01:56.738</msg>
<status status="PASS" endtime="20170728 17:01:56.744" starttime="20170728 17:01:56.741"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:01:56.747" level="INFO">${current_time_after_30} = 2017-07-28 17:03:36.738</msg>
<status status="PASS" endtime="20170728 17:01:56.748" starttime="20170728 17:01:56.745"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 17:01:56.751" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and update_time between' 2017-07-28 17:01:56.738' and '2017-07-28 17:03:36.738' </msg>
<msg timestamp="20170728 17:01:56.763" level="INFO">${updatetime} = ((88889770, '32102151361501230401', 100000, 6135, 1, '32102151361500012119', None, Decimal('2.00'), 1, 12, 2, 0, datetime.datetime(2017, 7, 28, 17, 3, 1), datetime.datetime(2017, 7, 28, 17, 3, 1)),)</msg>
<status status="PASS" endtime="20170728 17:01:56.764" starttime="20170728 17:01:56.749"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 17:01:56.767" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 17:01:56.768" starttime="20170728 17:01:56.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 17:01:56.773" level="INFO">ajb_account_transaction表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 17:01:56.773" starttime="20170728 17:01:56.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 17:01:56.777" level="INFO">${current_time_before_30} = 2017-07-28 17:01:56.738</msg>
<status status="PASS" endtime="20170728 17:01:56.778" starttime="20170728 17:01:56.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 17:01:56.782" level="INFO">${current_time_after_30} = 2017-07-28 17:03:36.738</msg>
<status status="PASS" endtime="20170728 17:01:56.784" starttime="20170728 17:01:56.779"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:56.785" starttime="20170728 17:01:56.716"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:01:56.789" level="INFO">Executing : Query  |  select * from ajb_account_transaction where account_id ='6135' and update_time between' 2017-07-28 17:01:56.738' and '2017-07-28 17:03:36.738' </msg>
<msg timestamp="20170728 17:01:56.805" level="INFO">${user_id} = ((88889770, '32102151361501230401', 100000, 6135, 1, '32102151361500012119', None, Decimal('2.00'), 1, 12, 2, 0, datetime.datetime(2017, 7, 28, 17, 3, 1), datetime.datetime(2017, 7, 28, 17, 3, 1)),)</msg>
<status status="PASS" endtime="20170728 17:01:56.805" starttime="20170728 17:01:56.786"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 17:01:56.808" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:01:56.809" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:01:56.810" starttime="20170728 17:01:56.807"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:01:56.813" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:56.814" starttime="20170728 17:01:56.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:01:56.818" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:01:56.818" starttime="20170728 17:01:56.816"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:56.822" starttime="20170728 17:01:56.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:01:56.824" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:01:56.825" starttime="20170728 17:01:56.823"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:01:56.828" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:56.829" starttime="20170728 17:01:56.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no的值正确</arg>
</arguments>
<msg timestamp="20170728 17:01:56.832" level="INFO">channel_no的值正确</msg>
<status status="PASS" endtime="20170728 17:01:56.833" starttime="20170728 17:01:56.831"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${args11}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${orderNum}</arg>
</arguments>
<assign>
<var>${bill_order_num}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:56.839" starttime="20170728 17:01:56.838"></status>
</kw>
<msg timestamp="20170728 17:01:56.840" level="INFO">${bill_order_num} = 32102151361500012119</msg>
<status status="PASS" endtime="20170728 17:01:56.841" starttime="20170728 17:01:56.835"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>${bill_order_num}</arg>
</arguments>
<msg timestamp="20170728 17:01:56.869" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:56.869" starttime="20170728 17:01:56.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170728 17:01:56.872" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170728 17:01:56.873" starttime="20170728 17:01:56.871"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>12</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:56.884" starttime="20170728 17:01:56.882"></status>
</kw>
<msg timestamp="20170728 17:01:56.885" level="INFO">${event_code} = 12</msg>
<status status="PASS" endtime="20170728 17:01:56.886" starttime="20170728 17:01:56.877"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:01:56.891" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:01:56.891" starttime="20170728 17:01:56.888"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:56.896" starttime="20170728 17:01:56.895"></status>
</kw>
<msg timestamp="20170728 17:01:56.897" level="INFO">${event_code_after} = 12</msg>
<status status="PASS" endtime="20170728 17:01:56.898" starttime="20170728 17:01:56.892"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:01:56.901" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:01:56.901" starttime="20170728 17:01:56.899"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:56.908" starttime="20170728 17:01:56.907"></status>
</kw>
<msg timestamp="20170728 17:01:56.909" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 17:01:56.910" starttime="20170728 17:01:56.902"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:56.915" starttime="20170728 17:01:56.913"></status>
</kw>
<msg timestamp="20170728 17:01:56.916" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:01:56.916" starttime="20170728 17:01:56.911"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:01:56.919" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:01:56.920" starttime="20170728 17:01:56.918"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>4</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:56.927" starttime="20170728 17:01:56.925"></status>
</kw>
<msg timestamp="20170728 17:01:56.928" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 17:01:56.929" starttime="20170728 17:01:56.922"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:56.935" starttime="20170728 17:01:56.933"></status>
</kw>
<msg timestamp="20170728 17:01:56.937" level="INFO">${total_amount} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:01:56.938" starttime="20170728 17:01:56.930"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${change_total_amount}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:56.945" starttime="20170728 17:01:56.943"></status>
</kw>
<msg timestamp="20170728 17:01:56.946" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:01:56.947" starttime="20170728 17:01:56.940"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:56.954" starttime="20170728 17:01:56.951"></status>
</kw>
<msg timestamp="20170728 17:01:56.955" level="INFO">${frozen_amount} = 826.0</msg>
<status status="PASS" endtime="20170728 17:01:56.956" starttime="20170728 17:01:56.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:01:56.958" level="INFO">${event_code} = 12</msg>
<status status="PASS" endtime="20170728 17:01:56.959" starttime="20170728 17:01:56.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:01:56.962" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 17:01:56.963" starttime="20170728 17:01:56.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:01:56.965" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 17:01:56.966" starttime="20170728 17:01:56.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:01:56.970" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:01:56.971" starttime="20170728 17:01:56.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:01:56.975" level="INFO">${total_amount} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:01:56.976" starttime="20170728 17:01:56.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:01:56.980" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:01:56.981" starttime="20170728 17:01:56.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:01:56.985" level="INFO">${frozen_amount} = 826.0</msg>
<status status="PASS" endtime="20170728 17:01:56.986" starttime="20170728 17:01:56.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:01:56.990" level="INFO">${event_code_after} = 12</msg>
<status status="PASS" endtime="20170728 17:01:56.991" starttime="20170728 17:01:56.988"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:56.993" starttime="20170728 17:01:56.874"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170728 17:01:56.996" level="INFO">${pay_no_after} = None</msg>
<status status="PASS" endtime="20170728 17:01:56.997" starttime="20170728 17:01:56.994"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170728 17:01:57.000" level="INFO">Length is 4</msg>
<msg timestamp="20170728 17:01:57.001" level="INFO">${pay_no_after_length} = 4</msg>
<status status="PASS" endtime="20170728 17:01:57.001" starttime="20170728 17:01:56.998"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:01:57.006" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:57.007" starttime="20170728 17:01:57.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170728 17:01:57.009" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170728 17:01:57.010" starttime="20170728 17:01:57.008"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:57.014" starttime="20170728 17:01:57.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 17:01:57.017" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 17:01:57.018" starttime="20170728 17:01:57.015"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:01:57.022" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:57.022" starttime="20170728 17:01:57.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 17:01:57.025" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 17:01:57.026" starttime="20170728 17:01:57.024"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][9]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:01:57.029" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:57.030" starttime="20170728 17:01:57.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 17:01:57.032" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 17:01:57.033" starttime="20170728 17:01:57.031"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 17:01:57.037" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:57.038" starttime="20170728 17:01:57.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170728 17:01:57.041" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170728 17:01:57.042" starttime="20170728 17:01:57.039"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:01:57.045" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:57.047" starttime="20170728 17:01:57.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:01:57.052" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:01:57.054" starttime="20170728 17:01:57.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 17:01:57.057" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 17:01:57.058" starttime="20170728 17:01:57.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170728 17:01:57.061" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170728 17:01:57.062" starttime="20170728 17:01:57.060"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170728 17:01:57.064" level="INFO">${user_id[0][0]_transaction} = 88889770</msg>
<status status="PASS" endtime="20170728 17:01:57.065" starttime="20170728 17:01:57.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170728 17:01:57.069" level="INFO">${user_id[0][0]_transaction} = 88889770</msg>
<status status="PASS" endtime="20170728 17:01:57.070" starttime="20170728 17:01:57.067"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id[0][0]}'</arg>
</arguments>
<assign>
<var>${user_id_unilateral_delete1}</var>
</assign>
<msg timestamp="20170728 17:01:57.073" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88889770' </msg>
<msg timestamp="20170728 17:01:57.181" level="INFO">${user_id_unilateral_delete1} = None</msg>
<status status="PASS" endtime="20170728 17:01:57.182" starttime="20170728 17:01:57.071"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:57.183" starttime="20170728 17:01:56.682"></status>
</kw>
<kw name="表account_amount的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_amount</arg>
</arguments>
<msg timestamp="20170728 17:01:57.186" level="INFO">现在开始校验表account_amount</msg>
<status status="PASS" endtime="20170728 17:01:57.187" starttime="20170728 17:01:57.185"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:01:57.193" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:01:57.204" starttime="20170728 17:01:57.192"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:57.205" starttime="20170728 17:01:57.190"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:57.207" starttime="20170728 17:01:57.189"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time1}</var>
</assign>
<msg timestamp="20170728 17:01:57.210" level="INFO">${current_time1} = 2017-07-28 17:01:57.209</msg>
<status status="PASS" endtime="20170728 17:01:57.210" starttime="20170728 17:01:57.208"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_before_30}</var>
</assign>
<msg timestamp="20170728 17:01:57.214" level="INFO">${current_time1_before_30} = 2017-07-28 17:00:57.209</msg>
<status status="PASS" endtime="20170728 17:01:57.214" starttime="20170728 17:01:57.212"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_after_30}</var>
</assign>
<msg timestamp="20170728 17:01:57.218" level="INFO">${current_time1_after_30} = 2017-07-28 17:02:57.209</msg>
<status status="PASS" endtime="20170728 17:01:57.219" starttime="20170728 17:01:57.216"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:01:57.222" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 17:01:57.228" level="INFO">${user_id} = ((12449, 6135, Decimal('50423.00'), Decimal('49597.00'), Decimal('826.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 3, 1), 0),)</msg>
<status status="PASS" endtime="20170728 17:01:57.228" starttime="20170728 17:01:57.220"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>12</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:57.237" starttime="20170728 17:01:57.235"></status>
</kw>
<msg timestamp="20170728 17:01:57.238" level="INFO">${event_code} = 12</msg>
<status status="PASS" endtime="20170728 17:01:57.239" starttime="20170728 17:01:57.231"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:01:57.242" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:01:57.243" starttime="20170728 17:01:57.240"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:57.248" starttime="20170728 17:01:57.246"></status>
</kw>
<msg timestamp="20170728 17:01:57.248" level="INFO">${event_code_after} = 12</msg>
<status status="PASS" endtime="20170728 17:01:57.249" starttime="20170728 17:01:57.244"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:01:57.252" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:01:57.253" starttime="20170728 17:01:57.250"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:57.259" starttime="20170728 17:01:57.257"></status>
</kw>
<msg timestamp="20170728 17:01:57.260" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 17:01:57.260" starttime="20170728 17:01:57.255"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:57.265" starttime="20170728 17:01:57.264"></status>
</kw>
<msg timestamp="20170728 17:01:57.266" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:01:57.266" starttime="20170728 17:01:57.261"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:01:57.268" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:01:57.269" starttime="20170728 17:01:57.267"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>4</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:57.274" starttime="20170728 17:01:57.273"></status>
</kw>
<msg timestamp="20170728 17:01:57.274" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 17:01:57.275" starttime="20170728 17:01:57.271"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:57.279" starttime="20170728 17:01:57.277"></status>
</kw>
<msg timestamp="20170728 17:01:57.280" level="INFO">${total_amount} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:01:57.280" starttime="20170728 17:01:57.276"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${change_total_amount}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:57.283" starttime="20170728 17:01:57.282"></status>
</kw>
<msg timestamp="20170728 17:01:57.284" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:01:57.284" starttime="20170728 17:01:57.281"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:57.288" starttime="20170728 17:01:57.286"></status>
</kw>
<msg timestamp="20170728 17:01:57.289" level="INFO">${frozen_amount} = 826.0</msg>
<status status="PASS" endtime="20170728 17:01:57.290" starttime="20170728 17:01:57.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:01:57.291" level="INFO">${event_code} = 12</msg>
<status status="PASS" endtime="20170728 17:01:57.291" starttime="20170728 17:01:57.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:01:57.293" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 17:01:57.293" starttime="20170728 17:01:57.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:01:57.296" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 17:01:57.296" starttime="20170728 17:01:57.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:01:57.298" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:01:57.299" starttime="20170728 17:01:57.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:01:57.300" level="INFO">${total_amount} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:01:57.301" starttime="20170728 17:01:57.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:01:57.302" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:01:57.303" starttime="20170728 17:01:57.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:01:57.305" level="INFO">${frozen_amount} = 826.0</msg>
<status status="PASS" endtime="20170728 17:01:57.306" starttime="20170728 17:01:57.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:01:57.308" level="INFO">${event_code_after} = 12</msg>
<status status="PASS" endtime="20170728 17:01:57.308" starttime="20170728 17:01:57.307"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:57.308" starttime="20170728 17:01:57.229"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:57.310" starttime="20170728 17:01:57.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:01:57.313" level="INFO">total_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:01:57.314" starttime="20170728 17:01:57.312"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:01:57.317" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:57.318" starttime="20170728 17:01:57.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:01:57.321" level="INFO">balance_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:01:57.322" starttime="20170728 17:01:57.320"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:01:57.324" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:57.327" starttime="20170728 17:01:57.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:01:57.330" level="INFO">frozen_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:01:57.330" starttime="20170728 17:01:57.328"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:01:57.333" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:57.334" starttime="20170728 17:01:57.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:01:57.336" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:01:57.337" starttime="20170728 17:01:57.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:01:57.338" level="INFO">表account_amount校验成功！</msg>
<status status="PASS" endtime="20170728 17:01:57.339" starttime="20170728 17:01:57.338"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:57.340" starttime="20170728 17:01:57.184"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<msg timestamp="20170728 17:01:57.341" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=888888 </msg>
<status status="PASS" endtime="20170728 17:01:57.415" starttime="20170728 17:01:57.340"></status>
</kw>
<kw name="艾佳币恢复数目" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:01:57.419" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:01:57.429" starttime="20170728 17:01:57.418"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:57.430" starttime="20170728 17:01:57.417"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:57.431" starttime="20170728 17:01:57.416"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount \ SET total_amount=${database[0][2]},balance_amount=${database[0][3]},frozen_amount=${database[0][4]}where account_id="${account_id}";</arg>
</arguments>
<msg timestamp="20170728 17:01:57.433" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount  SET total_amount=50423.00,balance_amount=49595.00,frozen_amount=828.00where account_id="6135"; </msg>
<status status="PASS" endtime="20170728 17:01:57.490" starttime="20170728 17:01:57.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170728 17:01:57.491" level="INFO">成功</msg>
<status status="PASS" endtime="20170728 17:01:57.492" starttime="20170728 17:01:57.491"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:57.492" starttime="20170728 17:01:57.416"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:57.493" critical="yes" starttime="20170728 17:01:55.831"></status>
</test>
<status status="PASS" endtime="20170728 17:01:57.494" starttime="20170728 17:01:55.536"></status>
</suite>
<suite source="F:\logs and reports\账户中心\订单\订单支付冻结（线上）.txt" id="s1-s1-s2" name="订单支付冻结（线上）">
<test id="s1-s1-s2-t1" name="输入正确的userId和orderNum，ajbAmount的参数">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:01:57.522" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:01:57.531" starttime="20170728 17:01:57.521"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:57.533" starttime="20170728 17:01:57.520"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:57.534" starttime="20170728 17:01:57.519"></status>
</kw>
<kw name="清数据" library="myResource">
<arguments>
<arg>8880888</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:01:57.539" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:01:57.549" starttime="20170728 17:01:57.538"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:57.550" starttime="20170728 17:01:57.537"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:57.551" starttime="20170728 17:01:57.535"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170728 17:01:57.553" level="INFO">Executing : Query  |  select * from ajb_account_transaction where id=8880888 </msg>
<msg timestamp="20170728 17:01:57.560" level="INFO">${check} = ()</msg>
<status status="PASS" endtime="20170728 17:01:57.560" starttime="20170728 17:01:57.552"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170728 17:01:57.561" level="INFO">Length is 0</msg>
<msg timestamp="20170728 17:01:57.562" level="INFO">${check_length} = 0</msg>
<status status="PASS" endtime="20170728 17:01:57.562" starttime="20170728 17:01:57.561"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} != 0</arg>
<arg>execute sql string</arg>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>数据库之前没有数据</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库之前没有数据</arg>
</arguments>
<msg timestamp="20170728 17:01:57.565" level="INFO">数据库之前没有数据</msg>
<status status="PASS" endtime="20170728 17:01:57.566" starttime="20170728 17:01:57.565"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:57.566" starttime="20170728 17:01:57.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库里面的这条数据清理成功啦。</arg>
</arguments>
<msg timestamp="20170728 17:01:57.567" level="INFO">数据库里面的这条数据清理成功啦。</msg>
<status status="PASS" endtime="20170728 17:01:57.568" starttime="20170728 17:01:57.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_delete}</arg>
</arguments>
<msg timestamp="20170728 17:01:57.569" level="INFO">${id_delete} = 8880888</msg>
<status status="PASS" endtime="20170728 17:01:57.569" starttime="20170728 17:01:57.568"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:57.570" starttime="20170728 17:01:57.534"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("${id_delete}","32102151361500284867","100000","6135","1","32102151361500284867","","2000","1","6","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170728 17:01:57.571" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("8880888","32102151361500284867","100000","6135","1","32102151361500284867","","2000","1","6","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170728 17:01:57.647" starttime="20170728 17:01:57.571"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>100000</arg>
<arg>32102151361500284867</arg>
<arg>10</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:01:57.649" level="INFO">${args11} = 100000</msg>
<status status="PASS" endtime="20170728 17:01:57.650" starttime="20170728 17:01:57.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:01:57.651" level="INFO">${args22} = 32102151361500284867</msg>
<status status="PASS" endtime="20170728 17:01:57.652" starttime="20170728 17:01:57.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 17:01:57.653" level="INFO">${args33} = 10</msg>
<status status="PASS" endtime="20170728 17:01:57.654" starttime="20170728 17:01:57.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 17:01:57.655" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 17:01:57.655" starttime="20170728 17:01:57.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 17:01:57.657" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/freezePay</msg>
<status status="PASS" endtime="20170728 17:01:57.657" starttime="20170728 17:01:57.656"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:57.657" starttime="20170728 17:01:57.648"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 17:01:57.659" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/freezePay</msg>
<status status="PASS" endtime="20170728 17:01:57.660" starttime="20170728 17:01:57.659"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 17:01:57.662" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:01:57.662" starttime="20170728 17:01:57.661"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:57.664" starttime="20170728 17:01:57.664"></status>
</kw>
<msg timestamp="20170728 17:01:57.665" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:01:57.665" starttime="20170728 17:01:57.663"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>user_id</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:57.668" starttime="20170728 17:01:57.667"></status>
</kw>
<msg timestamp="20170728 17:01:57.668" level="INFO">${args11_after} = user_id</msg>
<status status="PASS" endtime="20170728 17:01:57.669" starttime="20170728 17:01:57.666"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:01:57.673" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:01:57.685" starttime="20170728 17:01:57.672"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:57.686" starttime="20170728 17:01:57.671"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:57.687" starttime="20170728 17:01:57.670"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 17:01:57.689" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and channel_no='1' </msg>
<msg timestamp="20170728 17:01:57.705" level="INFO">${database1} = ((9100, '32102151361499943857', 100000, 6135, 1, '32102151361499943857', '20170714000118SSP038852', Decimal('2.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, ...</msg>
<status status="PASS" endtime="20170728 17:01:57.705" starttime="20170728 17:01:57.687"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 17:01:57.707" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 17:01:57.711" level="INFO">${database} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 3, 2), 0),)</msg>
<status status="PASS" endtime="20170728 17:01:57.712" starttime="20170728 17:01:57.706"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 17:01:57.713" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:01:57.714" starttime="20170728 17:01:57.712"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 17:01:57.715" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 17:01:57.716" starttime="20170728 17:01:57.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:01:57.717" level="INFO">获得account_id值为：6135</msg>
<status status="PASS" endtime="20170728 17:01:57.717" starttime="20170728 17:01:57.716"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 17:01:57.719" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:01:57.719" starttime="20170728 17:01:57.718"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 17:01:57.722" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:01:57.722" starttime="20170728 17:01:57.720"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 17:01:57.725" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:01:57.726" starttime="20170728 17:01:57.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:01:57.727" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 17:01:57.727" starttime="20170728 17:01:57.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 17:01:57.729" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:01:57.729" starttime="20170728 17:01:57.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:01:57.730" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:01:57.731" starttime="20170728 17:01:57.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:01:57.734" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:01:57.735" starttime="20170728 17:01:57.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:01:57.739" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:01:57.739" starttime="20170728 17:01:57.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:01:57.740" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:01:57.741" starttime="20170728 17:01:57.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 17:01:57.742" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:01:57.743" starttime="20170728 17:01:57.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 17:01:57.744" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/freezePay</msg>
<status status="PASS" endtime="20170728 17:01:57.744" starttime="20170728 17:01:57.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170728 17:01:57.746" level="INFO">${database} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 3, 2), 0),)</msg>
<status status="PASS" endtime="20170728 17:01:57.746" starttime="20170728 17:01:57.745"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:57.747" starttime="20170728 17:01:57.658"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Freeze Pay" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:57.946" starttime="20170728 17:01:57.752"></status>
</kw>
<msg timestamp="20170728 17:01:57.948" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:01:57.949" starttime="20170728 17:01:57.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 17:01:57.954" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:01:57.956" starttime="20170728 17:01:57.951"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:57.960" starttime="20170728 17:01:57.748"></status>
</kw>
<kw name="字段验证" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 17:01:57.972" level="INFO">200</msg>
<status status="PASS" endtime="20170728 17:01:57.975" starttime="20170728 17:01:57.967"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 17:01:57.985" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:57.988" starttime="20170728 17:01:57.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 17:01:57.991" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 17:01:57.992" starttime="20170728 17:01:57.990"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 17:01:57.994" level="INFO">To JSON using : content={"data":null,"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 17:01:57.994" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 17:01:57.995" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': None, u'success': True}</msg>
<status status="PASS" endtime="20170728 17:01:57.996" starttime="20170728 17:01:57.993"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 17:01:57.998" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:57.998" starttime="20170728 17:01:57.997"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:58.001" starttime="20170728 17:01:57.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:01:58.003" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 17:01:58.003" starttime="20170728 17:01:58.002"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<assign>
<var>@{Link1}</var>
</assign>
<msg timestamp="20170728 17:01:58.005" level="INFO">@{Link1} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:01:58.006" starttime="20170728 17:01:58.004"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>"${value}" in @{Link1}</arg>
<arg>Get From Dictionary</arg>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${orderNum}</var>
</assign>
<msg timestamp="20170728 17:01:58.007" level="INFO">${orderNum} = None</msg>
<status status="PASS" endtime="20170728 17:01:58.008" starttime="20170728 17:01:58.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.009" level="INFO">${orderNum} = None</msg>
<status status="PASS" endtime="20170728 17:01:58.009" starttime="20170728 17:01:58.008"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:58.010" starttime="20170728 17:01:57.963"></status>
</kw>
<kw name="表account_unilateral_bill的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_unilateral_bill</arg>
</arguments>
<msg timestamp="20170728 17:01:58.012" level="INFO">现在开始校验表account_unilateral_bill</msg>
<status status="PASS" endtime="20170728 17:01:58.012" starttime="20170728 17:01:58.011"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:01:58.016" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:01:58.024" starttime="20170728 17:01:58.014"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:58.025" starttime="20170728 17:01:58.013"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:58.026" starttime="20170728 17:01:58.012"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>account_unilateral_bill</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:01:58.029" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:01:58.038" starttime="20170728 17:01:58.028"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:58.039" starttime="20170728 17:01:58.028"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:58.039" starttime="20170728 17:01:58.027"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:01:58.040" level="INFO">${current_time} = 2017-07-28 17:01:58.040</msg>
<status status="PASS" endtime="20170728 17:01:58.041" starttime="20170728 17:01:58.040"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>0 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:01:58.042" level="INFO">${current_time_before_30} = 2017-07-28 17:01:58.040</msg>
<status status="PASS" endtime="20170728 17:01:58.043" starttime="20170728 17:01:58.041"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:01:58.046" level="INFO">${current_time_after_30} = 2017-07-28 17:03:38.040</msg>
<status status="PASS" endtime="20170728 17:01:58.047" starttime="20170728 17:01:58.044"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 17:01:58.049" level="INFO">Executing : Query  |  select * from account_unilateral_bill where user_id='100000' and update_time between' 2017-07-28 17:01:58.040' and '2017-07-28 17:03:38.040' </msg>
<msg timestamp="20170728 17:01:58.059" level="INFO">${updatetime} = ((7639, '32102151361501230406', 100000, 6135, '32102151361501230405', 1, 11, 1, Decimal('10.00'), None, datetime.datetime(2017, 7, 28, 17, 3, 3), datetime.datetime(2017, 7, 28, 17, 3, 3), 0),)</msg>
<status status="PASS" endtime="20170728 17:01:58.059" starttime="20170728 17:01:58.048"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.060" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 17:01:58.061" starttime="20170728 17:01:58.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 17:01:58.063" level="INFO">account_unilateral_bill表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 17:01:58.064" starttime="20170728 17:01:58.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.065" level="INFO">${current_time_before_30} = 2017-07-28 17:01:58.040</msg>
<status status="PASS" endtime="20170728 17:01:58.065" starttime="20170728 17:01:58.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.067" level="INFO">${current_time_after_30} = 2017-07-28 17:03:38.040</msg>
<status status="PASS" endtime="20170728 17:01:58.067" starttime="20170728 17:01:58.066"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:58.068" starttime="20170728 17:01:58.026"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id} 'and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:01:58.070" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6135 'and update_time between' 2017-07-28 17:01:58.040' and '2017-07-28 17:03:38.040' </msg>
<msg timestamp="20170728 17:01:58.076" level="INFO">${user_id} = ((7639, '32102151361501230406', 100000, 6135, '32102151361501230405', 1, 11, 1, Decimal('10.00'), None, datetime.datetime(2017, 7, 28, 17, 3, 3), datetime.datetime(2017, 7, 28, 17, 3, 3), 0),)</msg>
<status status="PASS" endtime="20170728 17:01:58.077" starttime="20170728 17:01:58.068"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170728 17:01:58.079" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:01:58.079" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:01:58.080" starttime="20170728 17:01:58.078"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:01:58.081" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:58.081" starttime="20170728 17:01:58.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:01:58.082" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:01:58.083" starttime="20170728 17:01:58.082"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:58.084" starttime="20170728 17:01:58.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:01:58.085" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:01:58.086" starttime="20170728 17:01:58.085"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170728 17:01:58.088" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:01:58.088" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:01:58.089" starttime="20170728 17:01:58.087"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:01:58.090" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:58.090" starttime="20170728 17:01:58.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:01:58.091" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:01:58.092" starttime="20170728 17:01:58.091"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:01:58.094" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:58.094" starttime="20170728 17:01:58.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 17:01:58.096" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 17:01:58.096" starttime="20170728 17:01:58.095"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>11</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:58.101" starttime="20170728 17:01:58.100"></status>
</kw>
<msg timestamp="20170728 17:01:58.102" level="INFO">${event_code} = 11</msg>
<status status="PASS" endtime="20170728 17:01:58.103" starttime="20170728 17:01:58.098"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:01:58.105" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:01:58.106" starttime="20170728 17:01:58.104"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:58.110" starttime="20170728 17:01:58.109"></status>
</kw>
<msg timestamp="20170728 17:01:58.111" level="INFO">${event_code_after} = 11</msg>
<status status="PASS" endtime="20170728 17:01:58.111" starttime="20170728 17:01:58.107"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:01:58.113" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:01:58.113" starttime="20170728 17:01:58.112"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:58.116" starttime="20170728 17:01:58.115"></status>
</kw>
<msg timestamp="20170728 17:01:58.117" level="INFO">${command_type} = 1</msg>
<status status="PASS" endtime="20170728 17:01:58.117" starttime="20170728 17:01:58.114"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:58.120" starttime="20170728 17:01:58.119"></status>
</kw>
<msg timestamp="20170728 17:01:58.121" level="INFO">${amount} = 10</msg>
<status status="PASS" endtime="20170728 17:01:58.121" starttime="20170728 17:01:58.117"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:01:58.122" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:01:58.123" starttime="20170728 17:01:58.122"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>4</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:58.126" starttime="20170728 17:01:58.126"></status>
</kw>
<msg timestamp="20170728 17:01:58.127" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 17:01:58.127" starttime="20170728 17:01:58.124"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:58.130" starttime="20170728 17:01:58.129"></status>
</kw>
<msg timestamp="20170728 17:01:58.130" level="INFO">${total_amount} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:01:58.130" starttime="20170728 17:01:58.128"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${balance_amount_before}-${args33}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:58.134" starttime="20170728 17:01:58.133"></status>
</kw>
<msg timestamp="20170728 17:01:58.134" level="INFO">${balance_amount} = 49585.0</msg>
<status status="PASS" endtime="20170728 17:01:58.135" starttime="20170728 17:01:58.131"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${frozen_amount_before}+${args33}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:58.139" starttime="20170728 17:01:58.138"></status>
</kw>
<msg timestamp="20170728 17:01:58.139" level="INFO">${frozen_amount} = 838.0</msg>
<status status="PASS" endtime="20170728 17:01:58.140" starttime="20170728 17:01:58.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.141" level="INFO">${event_code} = 11</msg>
<status status="PASS" endtime="20170728 17:01:58.141" starttime="20170728 17:01:58.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.143" level="INFO">${command_type} = 1</msg>
<status status="PASS" endtime="20170728 17:01:58.144" starttime="20170728 17:01:58.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.146" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 17:01:58.147" starttime="20170728 17:01:58.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.149" level="INFO">${amount} = 10</msg>
<status status="PASS" endtime="20170728 17:01:58.149" starttime="20170728 17:01:58.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.150" level="INFO">${total_amount} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:01:58.151" starttime="20170728 17:01:58.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.153" level="INFO">${balance_amount} = 49585.0</msg>
<status status="PASS" endtime="20170728 17:01:58.154" starttime="20170728 17:01:58.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.155" level="INFO">${frozen_amount} = 838.0</msg>
<status status="PASS" endtime="20170728 17:01:58.156" starttime="20170728 17:01:58.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.157" level="INFO">${event_code_after} = 11</msg>
<status status="PASS" endtime="20170728 17:01:58.157" starttime="20170728 17:01:58.156"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:58.158" starttime="20170728 17:01:58.097"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.159" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:58.159" starttime="20170728 17:01:58.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 17:01:58.161" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 17:01:58.161" starttime="20170728 17:01:58.160"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.163" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:58.163" starttime="20170728 17:01:58.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170728 17:01:58.164" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170728 17:01:58.165" starttime="20170728 17:01:58.164"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.166" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:58.167" starttime="20170728 17:01:58.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 17:01:58.170" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 17:01:58.171" starttime="20170728 17:01:58.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 17:01:58.172" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 17:01:58.173" starttime="20170728 17:01:58.171"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:01:58.174" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:58.175" starttime="20170728 17:01:58.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:01:58.176" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:01:58.176" starttime="20170728 17:01:58.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170728 17:01:58.177" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170728 17:01:58.178" starttime="20170728 17:01:58.177"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_unilateral}</var>
</assign>
<msg timestamp="20170728 17:01:58.179" level="INFO">${user_id[0][0]_unilateral} = 7639</msg>
<status status="PASS" endtime="20170728 17:01:58.180" starttime="20170728 17:01:58.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_unilateral}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.181" level="INFO">${user_id[0][0]_unilateral} = 7639</msg>
<status status="PASS" endtime="20170728 17:01:58.181" starttime="20170728 17:01:58.180"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]_unilateral}'</arg>
</arguments>
<msg timestamp="20170728 17:01:58.182" level="INFO">Executing : Execute SQL String  |  delete from account_unilateral_bill where id ='7639' </msg>
<status status="PASS" endtime="20170728 17:01:58.273" starttime="20170728 17:01:58.182"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:58.274" starttime="20170728 17:01:58.010"></status>
</kw>
<kw name="表ajb_account_transaction" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170728 17:01:58.276" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170728 17:01:58.276" starttime="20170728 17:01:58.275"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:01:58.280" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:01:58.287" starttime="20170728 17:01:58.279"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:58.288" starttime="20170728 17:01:58.278"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:58.289" starttime="20170728 17:01:58.277"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>ajb_account_transaction</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:01:58.294" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:01:58.302" starttime="20170728 17:01:58.293"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:58.303" starttime="20170728 17:01:58.291"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:58.304" starttime="20170728 17:01:58.291"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:01:58.305" level="INFO">${current_time} = 2017-07-28 17:01:58.305</msg>
<status status="PASS" endtime="20170728 17:01:58.306" starttime="20170728 17:01:58.305"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>0 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:01:58.307" level="INFO">${current_time_before_30} = 2017-07-28 17:01:58.305</msg>
<status status="PASS" endtime="20170728 17:01:58.307" starttime="20170728 17:01:58.306"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:01:58.309" level="INFO">${current_time_after_30} = 2017-07-28 17:03:38.305</msg>
<status status="PASS" endtime="20170728 17:01:58.309" starttime="20170728 17:01:58.308"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 17:01:58.311" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and update_time between' 2017-07-28 17:01:58.305' and '2017-07-28 17:03:38.305' </msg>
<msg timestamp="20170728 17:01:58.324" level="INFO">${updatetime} = ((88889771, '32102151361501230404', 100000, 6135, 1, '32102151361500284867', None, Decimal('10.00'), 1, 11, 2, 0, datetime.datetime(2017, 7, 28, 17, 3, 3), datetime.datetime(2017, 7, 28, 17, 3, 3)),)</msg>
<status status="PASS" endtime="20170728 17:01:58.325" starttime="20170728 17:01:58.310"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.326" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 17:01:58.326" starttime="20170728 17:01:58.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 17:01:58.328" level="INFO">ajb_account_transaction表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 17:01:58.328" starttime="20170728 17:01:58.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.331" level="INFO">${current_time_before_30} = 2017-07-28 17:01:58.305</msg>
<status status="PASS" endtime="20170728 17:01:58.331" starttime="20170728 17:01:58.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.333" level="INFO">${current_time_after_30} = 2017-07-28 17:03:38.305</msg>
<status status="PASS" endtime="20170728 17:01:58.334" starttime="20170728 17:01:58.332"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:58.334" starttime="20170728 17:01:58.290"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:01:58.338" level="INFO">Executing : Query  |  select * from ajb_account_transaction where account_id ='6135' and update_time between' 2017-07-28 17:01:58.305' and '2017-07-28 17:03:38.305' </msg>
<msg timestamp="20170728 17:01:58.349" level="INFO">${user_id} = ((88889771, '32102151361501230404', 100000, 6135, 1, '32102151361500284867', None, Decimal('10.00'), 1, 11, 2, 0, datetime.datetime(2017, 7, 28, 17, 3, 3), datetime.datetime(2017, 7, 28, 17, 3, 3)),)</msg>
<status status="PASS" endtime="20170728 17:01:58.349" starttime="20170728 17:01:58.336"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 17:01:58.351" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:01:58.352" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:01:58.352" starttime="20170728 17:01:58.350"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:01:58.354" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:58.354" starttime="20170728 17:01:58.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:01:58.355" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:01:58.356" starttime="20170728 17:01:58.355"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:58.359" starttime="20170728 17:01:58.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:01:58.362" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:01:58.362" starttime="20170728 17:01:58.361"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.364" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:58.365" starttime="20170728 17:01:58.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no的值正确</arg>
</arguments>
<msg timestamp="20170728 17:01:58.366" level="INFO">channel_no的值正确</msg>
<status status="PASS" endtime="20170728 17:01:58.366" starttime="20170728 17:01:58.365"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${args11}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${orderNum}</arg>
</arguments>
<assign>
<var>${bill_order_num}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:58.369" starttime="20170728 17:01:58.368"></status>
</kw>
<msg timestamp="20170728 17:01:58.369" level="INFO">${bill_order_num} = 32102151361500284867</msg>
<status status="PASS" endtime="20170728 17:01:58.370" starttime="20170728 17:01:58.367"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>${bill_order_num}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.371" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:58.372" starttime="20170728 17:01:58.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170728 17:01:58.373" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170728 17:01:58.373" starttime="20170728 17:01:58.372"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>11</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:58.378" starttime="20170728 17:01:58.377"></status>
</kw>
<msg timestamp="20170728 17:01:58.379" level="INFO">${event_code} = 11</msg>
<status status="PASS" endtime="20170728 17:01:58.379" starttime="20170728 17:01:58.375"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:01:58.380" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:01:58.381" starttime="20170728 17:01:58.380"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:58.383" starttime="20170728 17:01:58.383"></status>
</kw>
<msg timestamp="20170728 17:01:58.384" level="INFO">${event_code_after} = 11</msg>
<status status="PASS" endtime="20170728 17:01:58.384" starttime="20170728 17:01:58.381"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:01:58.386" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:01:58.387" starttime="20170728 17:01:58.385"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:58.391" starttime="20170728 17:01:58.390"></status>
</kw>
<msg timestamp="20170728 17:01:58.392" level="INFO">${command_type} = 1</msg>
<status status="PASS" endtime="20170728 17:01:58.392" starttime="20170728 17:01:58.387"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:58.395" starttime="20170728 17:01:58.394"></status>
</kw>
<msg timestamp="20170728 17:01:58.395" level="INFO">${amount} = 10</msg>
<status status="PASS" endtime="20170728 17:01:58.395" starttime="20170728 17:01:58.393"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:01:58.397" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:01:58.397" starttime="20170728 17:01:58.396"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>4</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:58.399" starttime="20170728 17:01:58.399"></status>
</kw>
<msg timestamp="20170728 17:01:58.400" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 17:01:58.400" starttime="20170728 17:01:58.398"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:58.404" starttime="20170728 17:01:58.403"></status>
</kw>
<msg timestamp="20170728 17:01:58.404" level="INFO">${total_amount} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:01:58.405" starttime="20170728 17:01:58.401"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${balance_amount_before}-${args33}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:58.410" starttime="20170728 17:01:58.409"></status>
</kw>
<msg timestamp="20170728 17:01:58.410" level="INFO">${balance_amount} = 49585.0</msg>
<status status="PASS" endtime="20170728 17:01:58.410" starttime="20170728 17:01:58.405"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${frozen_amount_before}+${args33}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:58.413" starttime="20170728 17:01:58.413"></status>
</kw>
<msg timestamp="20170728 17:01:58.414" level="INFO">${frozen_amount} = 838.0</msg>
<status status="PASS" endtime="20170728 17:01:58.414" starttime="20170728 17:01:58.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.416" level="INFO">${event_code} = 11</msg>
<status status="PASS" endtime="20170728 17:01:58.416" starttime="20170728 17:01:58.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.417" level="INFO">${command_type} = 1</msg>
<status status="PASS" endtime="20170728 17:01:58.418" starttime="20170728 17:01:58.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.420" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 17:01:58.421" starttime="20170728 17:01:58.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.423" level="INFO">${amount} = 10</msg>
<status status="PASS" endtime="20170728 17:01:58.423" starttime="20170728 17:01:58.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.425" level="INFO">${total_amount} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:01:58.425" starttime="20170728 17:01:58.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.427" level="INFO">${balance_amount} = 49585.0</msg>
<status status="PASS" endtime="20170728 17:01:58.427" starttime="20170728 17:01:58.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.429" level="INFO">${frozen_amount} = 838.0</msg>
<status status="PASS" endtime="20170728 17:01:58.429" starttime="20170728 17:01:58.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.431" level="INFO">${event_code_after} = 11</msg>
<status status="PASS" endtime="20170728 17:01:58.431" starttime="20170728 17:01:58.430"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:58.432" starttime="20170728 17:01:58.373"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170728 17:01:58.435" level="INFO">${pay_no_after} = None</msg>
<status status="PASS" endtime="20170728 17:01:58.435" starttime="20170728 17:01:58.434"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170728 17:01:58.437" level="INFO">Length is 4</msg>
<msg timestamp="20170728 17:01:58.438" level="INFO">${pay_no_after_length} = 4</msg>
<status status="PASS" endtime="20170728 17:01:58.438" starttime="20170728 17:01:58.436"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.439" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:58.440" starttime="20170728 17:01:58.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170728 17:01:58.441" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170728 17:01:58.441" starttime="20170728 17:01:58.440"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.442" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:58.443" starttime="20170728 17:01:58.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 17:01:58.444" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 17:01:58.444" starttime="20170728 17:01:58.443"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:01:58.446" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:58.446" starttime="20170728 17:01:58.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 17:01:58.447" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 17:01:58.448" starttime="20170728 17:01:58.447"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][9]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.449" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:58.449" starttime="20170728 17:01:58.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 17:01:58.451" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 17:01:58.452" starttime="20170728 17:01:58.451"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 17:01:58.454" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:58.454" starttime="20170728 17:01:58.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170728 17:01:58.455" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170728 17:01:58.456" starttime="20170728 17:01:58.455"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:01:58.457" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:58.457" starttime="20170728 17:01:58.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:01:58.459" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:01:58.459" starttime="20170728 17:01:58.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 17:01:58.460" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 17:01:58.460" starttime="20170728 17:01:58.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170728 17:01:58.461" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170728 17:01:58.462" starttime="20170728 17:01:58.461"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170728 17:01:58.463" level="INFO">${user_id[0][0]_transaction} = 88889771</msg>
<status status="PASS" endtime="20170728 17:01:58.463" starttime="20170728 17:01:58.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.465" level="INFO">${user_id[0][0]_transaction} = 88889771</msg>
<status status="PASS" endtime="20170728 17:01:58.465" starttime="20170728 17:01:58.464"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id[0][0]}'</arg>
</arguments>
<assign>
<var>${user_id_unilateral_delete1}</var>
</assign>
<msg timestamp="20170728 17:01:58.466" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88889771' </msg>
<msg timestamp="20170728 17:01:58.516" level="INFO">${user_id_unilateral_delete1} = None</msg>
<status status="PASS" endtime="20170728 17:01:58.517" starttime="20170728 17:01:58.466"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:58.518" starttime="20170728 17:01:58.274"></status>
</kw>
<kw name="表account_amount的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_amount</arg>
</arguments>
<msg timestamp="20170728 17:01:58.521" level="INFO">现在开始校验表account_amount</msg>
<status status="PASS" endtime="20170728 17:01:58.522" starttime="20170728 17:01:58.521"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:01:58.524" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:01:58.536" starttime="20170728 17:01:58.524"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:58.537" starttime="20170728 17:01:58.523"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:58.538" starttime="20170728 17:01:58.522"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time1}</var>
</assign>
<msg timestamp="20170728 17:01:58.539" level="INFO">${current_time1} = 2017-07-28 17:01:58.539</msg>
<status status="PASS" endtime="20170728 17:01:58.540" starttime="20170728 17:01:58.539"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_before_30}</var>
</assign>
<msg timestamp="20170728 17:01:58.542" level="INFO">${current_time1_before_30} = 2017-07-28 17:00:58.539</msg>
<status status="PASS" endtime="20170728 17:01:58.542" starttime="20170728 17:01:58.540"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_after_30}</var>
</assign>
<msg timestamp="20170728 17:01:58.546" level="INFO">${current_time1_after_30} = 2017-07-28 17:02:58.539</msg>
<status status="PASS" endtime="20170728 17:01:58.547" starttime="20170728 17:01:58.544"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:01:58.549" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 17:01:58.554" level="INFO">${user_id} = ((12449, 6135, Decimal('50423.00'), Decimal('49585.00'), Decimal('838.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 3, 3), 0),)</msg>
<status status="PASS" endtime="20170728 17:01:58.554" starttime="20170728 17:01:58.548"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>11</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:58.559" starttime="20170728 17:01:58.558"></status>
</kw>
<msg timestamp="20170728 17:01:58.560" level="INFO">${event_code} = 11</msg>
<status status="PASS" endtime="20170728 17:01:58.560" starttime="20170728 17:01:58.556"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:01:58.562" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:01:58.563" starttime="20170728 17:01:58.561"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:58.566" starttime="20170728 17:01:58.565"></status>
</kw>
<msg timestamp="20170728 17:01:58.566" level="INFO">${event_code_after} = 11</msg>
<status status="PASS" endtime="20170728 17:01:58.566" starttime="20170728 17:01:58.564"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:01:58.568" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:01:58.568" starttime="20170728 17:01:58.567"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:58.572" starttime="20170728 17:01:58.571"></status>
</kw>
<msg timestamp="20170728 17:01:58.573" level="INFO">${command_type} = 1</msg>
<status status="PASS" endtime="20170728 17:01:58.574" starttime="20170728 17:01:58.569"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:58.578" starttime="20170728 17:01:58.577"></status>
</kw>
<msg timestamp="20170728 17:01:58.578" level="INFO">${amount} = 10</msg>
<status status="PASS" endtime="20170728 17:01:58.578" starttime="20170728 17:01:58.575"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:01:58.580" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:01:58.580" starttime="20170728 17:01:58.579"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>4</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:58.582" starttime="20170728 17:01:58.582"></status>
</kw>
<msg timestamp="20170728 17:01:58.583" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 17:01:58.583" starttime="20170728 17:01:58.581"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:58.587" starttime="20170728 17:01:58.586"></status>
</kw>
<msg timestamp="20170728 17:01:58.587" level="INFO">${total_amount} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:01:58.588" starttime="20170728 17:01:58.584"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${balance_amount_before}-${args33}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:58.593" starttime="20170728 17:01:58.592"></status>
</kw>
<msg timestamp="20170728 17:01:58.594" level="INFO">${balance_amount} = 49585.0</msg>
<status status="PASS" endtime="20170728 17:01:58.594" starttime="20170728 17:01:58.590"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${frozen_amount_before}+${args33}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:58.597" starttime="20170728 17:01:58.596"></status>
</kw>
<msg timestamp="20170728 17:01:58.597" level="INFO">${frozen_amount} = 838.0</msg>
<status status="PASS" endtime="20170728 17:01:58.598" starttime="20170728 17:01:58.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.599" level="INFO">${event_code} = 11</msg>
<status status="PASS" endtime="20170728 17:01:58.599" starttime="20170728 17:01:58.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.601" level="INFO">${command_type} = 1</msg>
<status status="PASS" endtime="20170728 17:01:58.601" starttime="20170728 17:01:58.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.603" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 17:01:58.604" starttime="20170728 17:01:58.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.605" level="INFO">${amount} = 10</msg>
<status status="PASS" endtime="20170728 17:01:58.605" starttime="20170728 17:01:58.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.608" level="INFO">${total_amount} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:01:58.609" starttime="20170728 17:01:58.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.611" level="INFO">${balance_amount} = 49585.0</msg>
<status status="PASS" endtime="20170728 17:01:58.612" starttime="20170728 17:01:58.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.615" level="INFO">${frozen_amount} = 838.0</msg>
<status status="PASS" endtime="20170728 17:01:58.615" starttime="20170728 17:01:58.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.618" level="INFO">${event_code_after} = 11</msg>
<status status="PASS" endtime="20170728 17:01:58.619" starttime="20170728 17:01:58.616"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:58.619" starttime="20170728 17:01:58.555"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:58.623" starttime="20170728 17:01:58.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:01:58.625" level="INFO">total_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:01:58.625" starttime="20170728 17:01:58.624"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.627" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:58.627" starttime="20170728 17:01:58.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:01:58.628" level="INFO">balance_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:01:58.629" starttime="20170728 17:01:58.628"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.630" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:58.631" starttime="20170728 17:01:58.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:01:58.632" level="INFO">frozen_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:01:58.632" starttime="20170728 17:01:58.631"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:01:58.633" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:58.634" starttime="20170728 17:01:58.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:01:58.636" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:01:58.637" starttime="20170728 17:01:58.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:01:58.639" level="INFO">表account_amount校验成功！</msg>
<status status="PASS" endtime="20170728 17:01:58.639" starttime="20170728 17:01:58.638"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:58.640" starttime="20170728 17:01:58.519"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.641" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=8880888 </msg>
<status status="PASS" endtime="20170728 17:01:58.703" starttime="20170728 17:01:58.640"></status>
</kw>
<kw name="艾佳币恢复数目" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:01:58.706" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:01:58.713" starttime="20170728 17:01:58.706"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:58.714" starttime="20170728 17:01:58.705"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:58.715" starttime="20170728 17:01:58.704"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount \ SET total_amount=${database[0][2]},balance_amount=${database[0][3]},frozen_amount=${database[0][4]}where account_id="${account_id}";</arg>
</arguments>
<msg timestamp="20170728 17:01:58.716" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount  SET total_amount=50423.00,balance_amount=49595.00,frozen_amount=828.00where account_id="6135"; </msg>
<status status="PASS" endtime="20170728 17:01:58.781" starttime="20170728 17:01:58.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170728 17:01:58.783" level="INFO">成功</msg>
<status status="PASS" endtime="20170728 17:01:58.783" starttime="20170728 17:01:58.782"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:58.784" starttime="20170728 17:01:58.704"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:58.784" critical="yes" starttime="20170728 17:01:57.515"></status>
</test>
<test id="s1-s1-s2-t2" name="当输入ajbAmount为0其他输入正确参数的时候">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:01:58.793" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:01:58.804" starttime="20170728 17:01:58.792"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:58.805" starttime="20170728 17:01:58.791"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:58.805" starttime="20170728 17:01:58.790"></status>
</kw>
<kw name="清数据" library="myResource">
<arguments>
<arg>8880888</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:01:58.810" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:01:58.817" starttime="20170728 17:01:58.809"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:58.819" starttime="20170728 17:01:58.808"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:58.820" starttime="20170728 17:01:58.807"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170728 17:01:58.822" level="INFO">Executing : Query  |  select * from ajb_account_transaction where id=8880888 </msg>
<msg timestamp="20170728 17:01:58.828" level="INFO">${check} = ()</msg>
<status status="PASS" endtime="20170728 17:01:58.828" starttime="20170728 17:01:58.822"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170728 17:01:58.830" level="INFO">Length is 0</msg>
<msg timestamp="20170728 17:01:58.830" level="INFO">${check_length} = 0</msg>
<status status="PASS" endtime="20170728 17:01:58.831" starttime="20170728 17:01:58.829"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} != 0</arg>
<arg>execute sql string</arg>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>数据库之前没有数据</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库之前没有数据</arg>
</arguments>
<msg timestamp="20170728 17:01:58.833" level="INFO">数据库之前没有数据</msg>
<status status="PASS" endtime="20170728 17:01:58.833" starttime="20170728 17:01:58.832"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:58.833" starttime="20170728 17:01:58.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库里面的这条数据清理成功啦。</arg>
</arguments>
<msg timestamp="20170728 17:01:58.835" level="INFO">数据库里面的这条数据清理成功啦。</msg>
<status status="PASS" endtime="20170728 17:01:58.836" starttime="20170728 17:01:58.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_delete}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.837" level="INFO">${id_delete} = 8880888</msg>
<status status="PASS" endtime="20170728 17:01:58.838" starttime="20170728 17:01:58.836"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:58.839" starttime="20170728 17:01:58.806"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("${id_delete}","32102151361500284867","100000","6135","1","32102151361500284867","","2000","1","6","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170728 17:01:58.842" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("8880888","32102151361500284867","100000","6135","1","32102151361500284867","","2000","1","6","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170728 17:01:58.950" starttime="20170728 17:01:58.840"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>100000</arg>
<arg>32102151361500284867</arg>
<arg>0</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.957" level="INFO">${args11} = 100000</msg>
<status status="PASS" endtime="20170728 17:01:58.958" starttime="20170728 17:01:58.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.962" level="INFO">${args22} = 32102151361500284867</msg>
<status status="PASS" endtime="20170728 17:01:58.962" starttime="20170728 17:01:58.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.965" level="INFO">${args33} = 0</msg>
<status status="PASS" endtime="20170728 17:01:58.967" starttime="20170728 17:01:58.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.969" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 17:01:58.970" starttime="20170728 17:01:58.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 17:01:58.973" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/freezePay</msg>
<status status="PASS" endtime="20170728 17:01:58.973" starttime="20170728 17:01:58.971"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:58.974" starttime="20170728 17:01:58.952"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 17:01:58.978" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/freezePay</msg>
<status status="PASS" endtime="20170728 17:01:58.979" starttime="20170728 17:01:58.977"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 17:01:58.981" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:01:58.981" starttime="20170728 17:01:58.979"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:58.985" starttime="20170728 17:01:58.984"></status>
</kw>
<msg timestamp="20170728 17:01:58.986" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:01:58.987" starttime="20170728 17:01:58.983"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>user_id</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:58.990" starttime="20170728 17:01:58.989"></status>
</kw>
<msg timestamp="20170728 17:01:58.991" level="INFO">${args11_after} = user_id</msg>
<status status="PASS" endtime="20170728 17:01:58.992" starttime="20170728 17:01:58.987"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:01:58.995" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:01:59.001" starttime="20170728 17:01:58.994"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:59.003" starttime="20170728 17:01:58.993"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:59.003" starttime="20170728 17:01:58.992"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 17:01:59.005" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and channel_no='1' </msg>
<msg timestamp="20170728 17:01:59.021" level="INFO">${database1} = ((9100, '32102151361499943857', 100000, 6135, 1, '32102151361499943857', '20170714000118SSP038852', Decimal('2.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, ...</msg>
<status status="PASS" endtime="20170728 17:01:59.022" starttime="20170728 17:01:59.004"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 17:01:59.023" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 17:01:59.029" level="INFO">${database} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 3, 4), 0),)</msg>
<status status="PASS" endtime="20170728 17:01:59.029" starttime="20170728 17:01:59.023"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 17:01:59.031" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:01:59.032" starttime="20170728 17:01:59.030"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 17:01:59.033" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 17:01:59.033" starttime="20170728 17:01:59.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:01:59.036" level="INFO">获得account_id值为：6135</msg>
<status status="PASS" endtime="20170728 17:01:59.036" starttime="20170728 17:01:59.034"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 17:01:59.038" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:01:59.038" starttime="20170728 17:01:59.037"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 17:01:59.040" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:01:59.040" starttime="20170728 17:01:59.039"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 17:01:59.042" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:01:59.043" starttime="20170728 17:01:59.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:01:59.045" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 17:01:59.045" starttime="20170728 17:01:59.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 17:01:59.048" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:01:59.048" starttime="20170728 17:01:59.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:01:59.050" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:01:59.050" starttime="20170728 17:01:59.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:01:59.053" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:01:59.053" starttime="20170728 17:01:59.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:01:59.054" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:01:59.055" starttime="20170728 17:01:59.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:01:59.056" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:01:59.056" starttime="20170728 17:01:59.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 17:01:59.058" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:01:59.058" starttime="20170728 17:01:59.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 17:01:59.059" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/freezePay</msg>
<status status="PASS" endtime="20170728 17:01:59.060" starttime="20170728 17:01:59.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170728 17:01:59.061" level="INFO">${database} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 3, 4), 0),)</msg>
<status status="PASS" endtime="20170728 17:01:59.061" starttime="20170728 17:01:59.060"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:59.063" starttime="20170728 17:01:58.975"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Freeze Pay" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:59.084" starttime="20170728 17:01:59.066"></status>
</kw>
<msg timestamp="20170728 17:01:59.086" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:01:59.086" starttime="20170728 17:01:59.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 17:01:59.090" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:01:59.090" starttime="20170728 17:01:59.088"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:59.091" starttime="20170728 17:01:59.063"></status>
</kw>
<kw name="字段验证" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 17:01:59.093" level="INFO">200</msg>
<status status="PASS" endtime="20170728 17:01:59.093" starttime="20170728 17:01:59.092"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 17:01:59.094" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:59.095" starttime="20170728 17:01:59.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 17:01:59.096" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 17:01:59.096" starttime="20170728 17:01:59.095"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 17:01:59.098" level="INFO">To JSON using : content={"data":null,"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 17:01:59.098" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 17:01:59.099" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': None, u'success': True}</msg>
<status status="PASS" endtime="20170728 17:01:59.099" starttime="20170728 17:01:59.097"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 17:01:59.101" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:59.102" starttime="20170728 17:01:59.100"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:59.104" starttime="20170728 17:01:59.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:01:59.107" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 17:01:59.108" starttime="20170728 17:01:59.106"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<assign>
<var>@{Link1}</var>
</assign>
<msg timestamp="20170728 17:01:59.111" level="INFO">@{Link1} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:01:59.111" starttime="20170728 17:01:59.109"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>"${value}" in @{Link1}</arg>
<arg>Get From Dictionary</arg>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${orderNum}</var>
</assign>
<msg timestamp="20170728 17:01:59.114" level="INFO">${orderNum} = None</msg>
<status status="PASS" endtime="20170728 17:01:59.115" starttime="20170728 17:01:59.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<msg timestamp="20170728 17:01:59.116" level="INFO">${orderNum} = None</msg>
<status status="PASS" endtime="20170728 17:01:59.116" starttime="20170728 17:01:59.115"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:59.117" starttime="20170728 17:01:59.091"></status>
</kw>
<kw name="amount和表里的校验" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:01:59.123" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:01:59.132" starttime="20170728 17:01:59.122"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:59.133" starttime="20170728 17:01:59.121"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:59.133" starttime="20170728 17:01:59.119"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:01:59.136" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 17:01:59.141" level="INFO">${user_id} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 3, 4), 0),)</msg>
<status status="PASS" endtime="20170728 17:01:59.141" starttime="20170728 17:01:59.134"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:59.143" starttime="20170728 17:01:59.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 17:01:59.144" level="INFO">total_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 17:01:59.144" starttime="20170728 17:01:59.143"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:59.146" starttime="20170728 17:01:59.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 17:01:59.147" level="INFO">balance_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 17:01:59.148" starttime="20170728 17:01:59.147"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:59.149" starttime="20170728 17:01:59.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 17:01:59.150" level="INFO">frozen_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 17:01:59.151" starttime="20170728 17:01:59.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amounts的数据没有变化正确的</arg>
</arguments>
<msg timestamp="20170728 17:01:59.152" level="INFO">amounts的数据没有变化正确的</msg>
<status status="PASS" endtime="20170728 17:01:59.153" starttime="20170728 17:01:59.151"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:01:59.155" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:59.155" starttime="20170728 17:01:59.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount内容没有发生变化</arg>
</arguments>
<msg timestamp="20170728 17:01:59.157" level="INFO">表account_amount内容没有发生变化</msg>
<status status="PASS" endtime="20170728 17:01:59.157" starttime="20170728 17:01:59.156"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:01:59.158" level="INFO">${current_time} = 2017-07-28 17:01:59.158</msg>
<status status="PASS" endtime="20170728 17:01:59.159" starttime="20170728 17:01:59.158"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:01:59.160" level="INFO">${current_time_before_30} = 2017-07-28 17:00:59.158</msg>
<status status="PASS" endtime="20170728 17:01:59.161" starttime="20170728 17:01:59.159"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:01:59.162" level="INFO">${current_time_after_30} = 2017-07-28 17:03:04.158</msg>
<status status="PASS" endtime="20170728 17:01:59.162" starttime="20170728 17:01:59.161"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${bill_check}</var>
</assign>
<msg timestamp="20170728 17:01:59.164" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6135' and update_time between' 2017-07-28 17:00:59.158' and '2017-07-28 17:03:04.158' </msg>
<msg timestamp="20170728 17:01:59.170" level="INFO">${bill_check} = ()</msg>
<status status="PASS" endtime="20170728 17:01:59.170" starttime="20170728 17:01:59.163"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${bill_check}</arg>
</arguments>
<assign>
<var>${bill_check_length}</var>
</assign>
<msg timestamp="20170728 17:01:59.173" level="INFO">Length is 0</msg>
<msg timestamp="20170728 17:01:59.173" level="INFO">${bill_check_length} = 0</msg>
<status status="PASS" endtime="20170728 17:01:59.174" starttime="20170728 17:01:59.171"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${bill_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:01:59.176" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:59.177" starttime="20170728 17:01:59.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>account_unilateral_bill里的没有相关数据</arg>
</arguments>
<msg timestamp="20170728 17:01:59.179" level="INFO">account_unilateral_bill里的没有相关数据</msg>
<status status="PASS" endtime="20170728 17:01:59.179" starttime="20170728 17:01:59.178"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num ='${args11}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${transaction_check}</var>
</assign>
<msg timestamp="20170728 17:01:59.181" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num ='100000' and update_time between' 2017-07-28 17:00:59.158' and '2017-07-28 17:03:04.158' </msg>
<msg timestamp="20170728 17:01:59.191" level="INFO">${transaction_check} = ()</msg>
<status status="PASS" endtime="20170728 17:01:59.192" starttime="20170728 17:01:59.180"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${transaction_check}</arg>
</arguments>
<assign>
<var>${transaction_check_length}</var>
</assign>
<msg timestamp="20170728 17:01:59.193" level="INFO">Length is 0</msg>
<msg timestamp="20170728 17:01:59.194" level="INFO">${transaction_check_length} = 0</msg>
<status status="PASS" endtime="20170728 17:01:59.194" starttime="20170728 17:01:59.192"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${transaction_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:01:59.195" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:59.196" starttime="20170728 17:01:59.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>ajb_account_transaction里的没有相关数据</arg>
</arguments>
<msg timestamp="20170728 17:01:59.197" level="INFO">ajb_account_transaction里的没有相关数据</msg>
<status status="PASS" endtime="20170728 17:01:59.197" starttime="20170728 17:01:59.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库表里数据调用接口前后没有发生变化</arg>
</arguments>
<msg timestamp="20170728 17:01:59.199" level="INFO">数据库表里数据调用接口前后没有发生变化</msg>
<status status="PASS" endtime="20170728 17:01:59.199" starttime="20170728 17:01:59.198"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:59.200" starttime="20170728 17:01:59.118"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<msg timestamp="20170728 17:01:59.202" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=8880888 </msg>
<status status="PASS" endtime="20170728 17:01:59.283" starttime="20170728 17:01:59.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当输入艾佳币的数量为0的时候，接口返回成功，但是数据不入库里</arg>
</arguments>
<msg timestamp="20170728 17:01:59.289" level="INFO">当输入艾佳币的数量为0的时候，接口返回成功，但是数据不入库里</msg>
<status status="PASS" endtime="20170728 17:01:59.291" starttime="20170728 17:01:59.286"></status>
</kw>
<kw name="艾佳币恢复数目" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:01:59.308" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:01:59.319" starttime="20170728 17:01:59.305"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:59.321" starttime="20170728 17:01:59.302"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:59.322" starttime="20170728 17:01:59.298"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount \ SET total_amount=${database[0][2]},balance_amount=${database[0][3]},frozen_amount=${database[0][4]}where account_id="${account_id}";</arg>
</arguments>
<msg timestamp="20170728 17:01:59.324" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount  SET total_amount=50423.00,balance_amount=49595.00,frozen_amount=828.00where account_id="6135"; </msg>
<status status="PASS" endtime="20170728 17:01:59.356" starttime="20170728 17:01:59.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170728 17:01:59.359" level="INFO">成功</msg>
<status status="PASS" endtime="20170728 17:01:59.360" starttime="20170728 17:01:59.357"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:59.361" starttime="20170728 17:01:59.294"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:59.362" critical="yes" starttime="20170728 17:01:58.786"></status>
</test>
<test id="s1-s1-s2-t3" name="当ajbAmount为字符">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:01:59.374" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:01:59.381" starttime="20170728 17:01:59.372"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:59.382" starttime="20170728 17:01:59.370"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:59.383" starttime="20170728 17:01:59.369"></status>
</kw>
<kw name="清数据" library="myResource">
<arguments>
<arg>8880888</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:01:59.391" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:01:59.398" starttime="20170728 17:01:59.390"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:59.398" starttime="20170728 17:01:59.388"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:59.399" starttime="20170728 17:01:59.386"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170728 17:01:59.401" level="INFO">Executing : Query  |  select * from ajb_account_transaction where id=8880888 </msg>
<msg timestamp="20170728 17:01:59.407" level="INFO">${check} = ()</msg>
<status status="PASS" endtime="20170728 17:01:59.407" starttime="20170728 17:01:59.400"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170728 17:01:59.409" level="INFO">Length is 0</msg>
<msg timestamp="20170728 17:01:59.410" level="INFO">${check_length} = 0</msg>
<status status="PASS" endtime="20170728 17:01:59.410" starttime="20170728 17:01:59.408"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} != 0</arg>
<arg>execute sql string</arg>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>数据库之前没有数据</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库之前没有数据</arg>
</arguments>
<msg timestamp="20170728 17:01:59.412" level="INFO">数据库之前没有数据</msg>
<status status="PASS" endtime="20170728 17:01:59.412" starttime="20170728 17:01:59.412"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:59.413" starttime="20170728 17:01:59.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库里面的这条数据清理成功啦。</arg>
</arguments>
<msg timestamp="20170728 17:01:59.414" level="INFO">数据库里面的这条数据清理成功啦。</msg>
<status status="PASS" endtime="20170728 17:01:59.414" starttime="20170728 17:01:59.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_delete}</arg>
</arguments>
<msg timestamp="20170728 17:01:59.416" level="INFO">${id_delete} = 8880888</msg>
<status status="PASS" endtime="20170728 17:01:59.417" starttime="20170728 17:01:59.415"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:59.418" starttime="20170728 17:01:59.383"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("${id_delete}","32102151361500284867","100000","6135","1","32102151361500284867","","2000","1","6","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170728 17:01:59.421" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("8880888","32102151361500284867","100000","6135","1","32102151361500284867","","2000","1","6","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170728 17:01:59.473" starttime="20170728 17:01:59.419"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>100000</arg>
<arg>32102151361500284867</arg>
<arg>str</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:01:59.476" level="INFO">${args11} = 100000</msg>
<status status="PASS" endtime="20170728 17:01:59.476" starttime="20170728 17:01:59.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:01:59.478" level="INFO">${args22} = 32102151361500284867</msg>
<status status="PASS" endtime="20170728 17:01:59.479" starttime="20170728 17:01:59.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 17:01:59.482" level="INFO">${args33} = str</msg>
<status status="PASS" endtime="20170728 17:01:59.483" starttime="20170728 17:01:59.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 17:01:59.486" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 17:01:59.486" starttime="20170728 17:01:59.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 17:01:59.489" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/freezePay</msg>
<status status="PASS" endtime="20170728 17:01:59.490" starttime="20170728 17:01:59.488"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:59.491" starttime="20170728 17:01:59.474"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 17:01:59.496" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/freezePay</msg>
<status status="PASS" endtime="20170728 17:01:59.496" starttime="20170728 17:01:59.494"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 17:01:59.499" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:01:59.500" starttime="20170728 17:01:59.498"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:59.504" starttime="20170728 17:01:59.503"></status>
</kw>
<msg timestamp="20170728 17:01:59.504" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:01:59.505" starttime="20170728 17:01:59.501"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>user_id</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:59.507" starttime="20170728 17:01:59.506"></status>
</kw>
<msg timestamp="20170728 17:01:59.508" level="INFO">${args11_after} = user_id</msg>
<status status="PASS" endtime="20170728 17:01:59.508" starttime="20170728 17:01:59.505"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:01:59.511" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:01:59.520" starttime="20170728 17:01:59.510"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:59.521" starttime="20170728 17:01:59.509"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:59.522" starttime="20170728 17:01:59.508"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 17:01:59.523" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and channel_no='1' </msg>
<msg timestamp="20170728 17:01:59.540" level="INFO">${database1} = ((9100, '32102151361499943857', 100000, 6135, 1, '32102151361499943857', '20170714000118SSP038852', Decimal('2.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, ...</msg>
<status status="PASS" endtime="20170728 17:01:59.541" starttime="20170728 17:01:59.522"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 17:01:59.543" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 17:01:59.549" level="INFO">${database} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 3, 4), 0),)</msg>
<status status="PASS" endtime="20170728 17:01:59.550" starttime="20170728 17:01:59.541"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 17:01:59.552" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:01:59.552" starttime="20170728 17:01:59.550"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 17:01:59.554" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 17:01:59.555" starttime="20170728 17:01:59.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:01:59.558" level="INFO">获得account_id值为：6135</msg>
<status status="PASS" endtime="20170728 17:01:59.558" starttime="20170728 17:01:59.556"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 17:01:59.561" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:01:59.561" starttime="20170728 17:01:59.559"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 17:01:59.565" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:01:59.566" starttime="20170728 17:01:59.563"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 17:01:59.569" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:01:59.569" starttime="20170728 17:01:59.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:01:59.573" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 17:01:59.574" starttime="20170728 17:01:59.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 17:01:59.576" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:01:59.577" starttime="20170728 17:01:59.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:01:59.580" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:01:59.581" starttime="20170728 17:01:59.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:01:59.584" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:01:59.585" starttime="20170728 17:01:59.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:01:59.588" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:01:59.589" starttime="20170728 17:01:59.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:01:59.593" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:01:59.593" starttime="20170728 17:01:59.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 17:01:59.595" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:01:59.596" starttime="20170728 17:01:59.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 17:01:59.598" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/freezePay</msg>
<status status="PASS" endtime="20170728 17:01:59.599" starttime="20170728 17:01:59.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170728 17:01:59.602" level="INFO">${database} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 3, 4), 0),)</msg>
<status status="PASS" endtime="20170728 17:01:59.602" starttime="20170728 17:01:59.600"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:59.604" starttime="20170728 17:01:59.492"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Freeze Pay" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:59.641" starttime="20170728 17:01:59.611"></status>
</kw>
<msg timestamp="20170728 17:01:59.642" level="INFO">${data} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20170728 17:01:59.643" starttime="20170728 17:01:59.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 17:01:59.645" level="INFO">${data} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20170728 17:01:59.646" starttime="20170728 17:01:59.644"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:59.647" starttime="20170728 17:01:59.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 17:01:59.649" level="INFO">400</msg>
<status status="PASS" endtime="20170728 17:01:59.649" starttime="20170728 17:01:59.648"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20170728 17:01:59.652" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:59.653" starttime="20170728 17:01:59.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>400由于语法格式有误，服务器无法理解此请求。</arg>
</arguments>
<msg timestamp="20170728 17:01:59.655" level="INFO">400由于语法格式有误，服务器无法理解此请求。</msg>
<status status="PASS" endtime="20170728 17:01:59.655" starttime="20170728 17:01:59.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 17:01:59.657" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 17:01:59.657" starttime="20170728 17:01:59.656"></status>
</kw>
<kw name="amount和表里的校验" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:01:59.661" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:01:59.674" starttime="20170728 17:01:59.660"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:59.674" starttime="20170728 17:01:59.660"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:59.675" starttime="20170728 17:01:59.659"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:01:59.676" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 17:01:59.681" level="INFO">${user_id} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 3, 4), 0),)</msg>
<status status="PASS" endtime="20170728 17:01:59.681" starttime="20170728 17:01:59.676"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:59.683" starttime="20170728 17:01:59.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 17:01:59.684" level="INFO">total_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 17:01:59.685" starttime="20170728 17:01:59.683"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:59.687" starttime="20170728 17:01:59.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 17:01:59.690" level="INFO">balance_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 17:01:59.690" starttime="20170728 17:01:59.689"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:01:59.692" starttime="20170728 17:01:59.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 17:01:59.693" level="INFO">frozen_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 17:01:59.693" starttime="20170728 17:01:59.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amounts的数据没有变化正确的</arg>
</arguments>
<msg timestamp="20170728 17:01:59.694" level="INFO">amounts的数据没有变化正确的</msg>
<status status="PASS" endtime="20170728 17:01:59.695" starttime="20170728 17:01:59.694"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:01:59.696" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:59.697" starttime="20170728 17:01:59.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount内容没有发生变化</arg>
</arguments>
<msg timestamp="20170728 17:01:59.699" level="INFO">表account_amount内容没有发生变化</msg>
<status status="PASS" endtime="20170728 17:01:59.700" starttime="20170728 17:01:59.699"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:01:59.702" level="INFO">${current_time} = 2017-07-28 17:01:59.702</msg>
<status status="PASS" endtime="20170728 17:01:59.702" starttime="20170728 17:01:59.700"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:01:59.704" level="INFO">${current_time_before_30} = 2017-07-28 17:00:59.702</msg>
<status status="PASS" endtime="20170728 17:01:59.704" starttime="20170728 17:01:59.703"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:01:59.706" level="INFO">${current_time_after_30} = 2017-07-28 17:03:04.702</msg>
<status status="PASS" endtime="20170728 17:01:59.707" starttime="20170728 17:01:59.705"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${bill_check}</var>
</assign>
<msg timestamp="20170728 17:01:59.708" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6135' and update_time between' 2017-07-28 17:00:59.702' and '2017-07-28 17:03:04.702' </msg>
<msg timestamp="20170728 17:01:59.714" level="INFO">${bill_check} = ()</msg>
<status status="PASS" endtime="20170728 17:01:59.715" starttime="20170728 17:01:59.707"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${bill_check}</arg>
</arguments>
<assign>
<var>${bill_check_length}</var>
</assign>
<msg timestamp="20170728 17:01:59.716" level="INFO">Length is 0</msg>
<msg timestamp="20170728 17:01:59.717" level="INFO">${bill_check_length} = 0</msg>
<status status="PASS" endtime="20170728 17:01:59.717" starttime="20170728 17:01:59.715"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${bill_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:01:59.719" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:59.720" starttime="20170728 17:01:59.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>account_unilateral_bill里的没有相关数据</arg>
</arguments>
<msg timestamp="20170728 17:01:59.721" level="INFO">account_unilateral_bill里的没有相关数据</msg>
<status status="PASS" endtime="20170728 17:01:59.721" starttime="20170728 17:01:59.720"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num ='${args11}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${transaction_check}</var>
</assign>
<msg timestamp="20170728 17:01:59.723" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num ='100000' and update_time between' 2017-07-28 17:00:59.702' and '2017-07-28 17:03:04.702' </msg>
<msg timestamp="20170728 17:01:59.733" level="INFO">${transaction_check} = ()</msg>
<status status="PASS" endtime="20170728 17:01:59.734" starttime="20170728 17:01:59.722"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${transaction_check}</arg>
</arguments>
<assign>
<var>${transaction_check_length}</var>
</assign>
<msg timestamp="20170728 17:01:59.736" level="INFO">Length is 0</msg>
<msg timestamp="20170728 17:01:59.736" level="INFO">${transaction_check_length} = 0</msg>
<status status="PASS" endtime="20170728 17:01:59.737" starttime="20170728 17:01:59.735"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${transaction_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:01:59.739" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:01:59.740" starttime="20170728 17:01:59.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>ajb_account_transaction里的没有相关数据</arg>
</arguments>
<msg timestamp="20170728 17:01:59.741" level="INFO">ajb_account_transaction里的没有相关数据</msg>
<status status="PASS" endtime="20170728 17:01:59.742" starttime="20170728 17:01:59.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库表里数据调用接口前后没有发生变化</arg>
</arguments>
<msg timestamp="20170728 17:01:59.743" level="INFO">数据库表里数据调用接口前后没有发生变化</msg>
<status status="PASS" endtime="20170728 17:01:59.743" starttime="20170728 17:01:59.742"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:59.744" starttime="20170728 17:01:59.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>输入已有的user_id和amount为字符的时候，语法错误，报400</arg>
</arguments>
<msg timestamp="20170728 17:01:59.745" level="INFO">输入已有的user_id和amount为字符的时候，语法错误，报400</msg>
<status status="PASS" endtime="20170728 17:01:59.745" starttime="20170728 17:01:59.744"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<msg timestamp="20170728 17:01:59.746" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=8880888 </msg>
<status status="PASS" endtime="20170728 17:01:59.791" starttime="20170728 17:01:59.746"></status>
</kw>
<kw name="艾佳币恢复数目" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:01:59.799" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:01:59.807" starttime="20170728 17:01:59.797"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:59.808" starttime="20170728 17:01:59.796"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:59.810" starttime="20170728 17:01:59.794"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount \ SET total_amount=${database[0][2]},balance_amount=${database[0][3]},frozen_amount=${database[0][4]}where account_id="${account_id}";</arg>
</arguments>
<msg timestamp="20170728 17:01:59.812" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount  SET total_amount=50423.00,balance_amount=49595.00,frozen_amount=828.00where account_id="6135"; </msg>
<status status="PASS" endtime="20170728 17:01:59.817" starttime="20170728 17:01:59.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170728 17:01:59.819" level="INFO">成功</msg>
<status status="PASS" endtime="20170728 17:01:59.819" starttime="20170728 17:01:59.818"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:59.820" starttime="20170728 17:01:59.792"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:59.821" critical="yes" starttime="20170728 17:01:59.364"></status>
</test>
<status status="PASS" endtime="20170728 17:01:59.822" starttime="20170728 17:01:57.499"></status>
</suite>
<suite source="F:\logs and reports\账户中心\订单\订单支付退款（线上）.txt" id="s1-s1-s3" name="订单支付退款（线上）">
<test id="s1-s1-s3-t1" name="输入参数全部正确">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:01:59.856" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:01:59.866" starttime="20170728 17:01:59.855"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:59.867" starttime="20170728 17:01:59.854"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:59.867" starttime="20170728 17:01:59.853"></status>
</kw>
<kw name="清数据" library="myResource">
<arguments>
<arg>888888</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:01:59.871" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:01:59.878" starttime="20170728 17:01:59.870"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:59.879" starttime="20170728 17:01:59.870"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:59.879" starttime="20170728 17:01:59.869"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170728 17:01:59.881" level="INFO">Executing : Query  |  select * from ajb_account_transaction where id=888888 </msg>
<msg timestamp="20170728 17:01:59.885" level="INFO">${check} = ()</msg>
<status status="PASS" endtime="20170728 17:01:59.885" starttime="20170728 17:01:59.880"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170728 17:01:59.889" level="INFO">Length is 0</msg>
<msg timestamp="20170728 17:01:59.890" level="INFO">${check_length} = 0</msg>
<status status="PASS" endtime="20170728 17:01:59.890" starttime="20170728 17:01:59.887"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} != 0</arg>
<arg>execute sql string</arg>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>数据库之前没有数据</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库之前没有数据</arg>
</arguments>
<msg timestamp="20170728 17:01:59.892" level="INFO">数据库之前没有数据</msg>
<status status="PASS" endtime="20170728 17:01:59.893" starttime="20170728 17:01:59.892"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:59.893" starttime="20170728 17:01:59.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库里面的这条数据清理成功啦。</arg>
</arguments>
<msg timestamp="20170728 17:01:59.894" level="INFO">数据库里面的这条数据清理成功啦。</msg>
<status status="PASS" endtime="20170728 17:01:59.895" starttime="20170728 17:01:59.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_delete}</arg>
</arguments>
<msg timestamp="20170728 17:01:59.896" level="INFO">${id_delete} = 888888</msg>
<status status="PASS" endtime="20170728 17:01:59.896" starttime="20170728 17:01:59.895"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:59.897" starttime="20170728 17:01:59.868"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("${id_delete}","32102151361500885834","100000","6135","1","32102151361500885834","","2","1","13","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170728 17:01:59.898" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("888888","32102151361500885834","100000","6135","1","32102151361500885834","","2","1","13","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170728 17:01:59.950" starttime="20170728 17:01:59.897"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>32102151361500885834</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:01:59.953" level="INFO">${args11} = 32102151361500885834</msg>
<status status="PASS" endtime="20170728 17:01:59.953" starttime="20170728 17:01:59.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:01:59.955" level="INFO">${args22} = </msg>
<status status="PASS" endtime="20170728 17:01:59.955" starttime="20170728 17:01:59.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 17:01:59.956" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170728 17:01:59.957" starttime="20170728 17:01:59.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 17:01:59.958" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 17:01:59.958" starttime="20170728 17:01:59.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 17:01:59.960" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</msg>
<status status="PASS" endtime="20170728 17:01:59.960" starttime="20170728 17:01:59.959"></status>
</kw>
<status status="PASS" endtime="20170728 17:01:59.960" starttime="20170728 17:01:59.951"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num='${args11}' and event_code=13</arg>
</arguments>
<assign>
<var>${user_id_refund}</var>
</assign>
<msg timestamp="20170728 17:01:59.963" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num='32102151361500885834' and event_code=13 </msg>
<msg timestamp="20170728 17:01:59.972" level="INFO">${user_id_refund} = ((888888, '32102151361500885834', 100000, 6135, 1, '32102151361500885834', '', Decimal('2.00'), 1, 13, 2, 0, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)),)</msg>
<status status="PASS" endtime="20170728 17:01:59.972" starttime="20170728 17:01:59.961"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${user_id_refund[0][2]}' and channel_no=1</arg>
</arguments>
<assign>
<var>${account_id_bos}</var>
</assign>
<msg timestamp="20170728 17:01:59.974" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=1 </msg>
<msg timestamp="20170728 17:01:59.982" level="INFO">${account_id_bos} = ((6090, '32102151361499943856', 100000, 6135, 1, 2, 0, datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 13, 23, 57, 26)),)</msg>
<status status="PASS" endtime="20170728 17:01:59.982" starttime="20170728 17:01:59.973"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_id_bos[0][3]}</arg>
</arguments>
<assign>
<var>${account_id_boss}</var>
</assign>
<msg timestamp="20170728 17:01:59.984" level="INFO">${account_id_boss} = 6135</msg>
<status status="PASS" endtime="20170728 17:01:59.985" starttime="20170728 17:01:59.983"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${user_id_refund[0][2]}' and channel_no=2</arg>
</arguments>
<assign>
<var>${account_id_ap}</var>
</assign>
<msg timestamp="20170728 17:01:59.986" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=2 </msg>
<msg timestamp="20170728 17:01:59.994" level="INFO">${account_id_ap} = ((100000000010L, '32102151361501206852', 100000, 6273, 2, 2, 0, datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 10, 46, 53)),)</msg>
<status status="PASS" endtime="20170728 17:01:59.994" starttime="20170728 17:01:59.985"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_id_ap[0][3]}</arg>
</arguments>
<assign>
<var>${account_id_app}</var>
</assign>
<msg timestamp="20170728 17:01:59.996" level="INFO">${account_id_app} = 6273</msg>
<status status="PASS" endtime="20170728 17:01:59.996" starttime="20170728 17:01:59.995"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_boss}'</arg>
</arguments>
<assign>
<var>${amount_boss}</var>
</assign>
<msg timestamp="20170728 17:01:59.997" level="INFO">Executing : Query  |  select * from account_amount where account_id='6135' </msg>
<msg timestamp="20170728 17:02:00.002" level="INFO">${amount_boss} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 3, 4), 0),)</msg>
<status status="PASS" endtime="20170728 17:02:00.003" starttime="20170728 17:01:59.997"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_app}'</arg>
</arguments>
<assign>
<var>${amount_app}</var>
</assign>
<msg timestamp="20170728 17:02:00.004" level="INFO">Executing : Query  |  select * from account_amount where account_id='6273' </msg>
<msg timestamp="20170728 17:02:00.011" level="INFO">${amount_app} = ((12587, 6273, Decimal('50425.00'), Decimal('49595.00'), Decimal('830.00'), datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 16, 43, 53), 0),)</msg>
<status status="PASS" endtime="20170728 17:02:00.012" starttime="20170728 17:02:00.004"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 17:02:00.014" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</msg>
<status status="PASS" endtime="20170728 17:02:00.014" starttime="20170728 17:02:00.013"></status>
</kw>
<kw name="Ajb Withdraw Cancel" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170728 17:02:00.323" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:02:00.323" starttime="20170728 17:02:00.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 17:02:00.325" level="INFO">200</msg>
<status status="PASS" endtime="20170728 17:02:00.325" starttime="20170728 17:02:00.324"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 17:02:00.327" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:00.327" starttime="20170728 17:02:00.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 17:02:00.328" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 17:02:00.329" starttime="20170728 17:02:00.328"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 17:02:00.330" level="INFO">To JSON using : content={"data":null,"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 17:02:00.330" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 17:02:00.331" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': None, u'success': True}</msg>
<status status="PASS" endtime="20170728 17:02:00.331" starttime="20170728 17:02:00.329"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 17:02:00.332" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:00.333" starttime="20170728 17:02:00.332"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:00.335" starttime="20170728 17:02:00.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:02:00.337" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 17:02:00.338" starttime="20170728 17:02:00.336"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:02:00.339" level="INFO">${current_time} = 2017-07-28 17:02:00.339</msg>
<status status="PASS" endtime="20170728 17:02:00.340" starttime="20170728 17:02:00.338"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>5 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:02:00.341" level="INFO">${current_time_before_30} = 2017-07-28 17:01:55.339</msg>
<status status="PASS" endtime="20170728 17:02:00.342" starttime="20170728 17:02:00.340"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:02:00.343" level="INFO">${current_time_after_30} = 2017-07-28 17:03:40.339</msg>
<status status="PASS" endtime="20170728 17:02:00.344" starttime="20170728 17:02:00.342"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where event_code=14 and user_id='${user_id_refund[0][2]}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:02:00.345" level="INFO">Executing : Query  |  select * from account_unilateral_bill where event_code=14 and user_id='100000' and update_time between' 2017-07-28 17:01:55.339' and '2017-07-28 17:03:40.339' </msg>
<msg timestamp="20170728 17:02:00.358" level="INFO">${user_id} = ((7641, '32102151361501230410', 100000, 6135, '32102151361501230408', 1, 14, 3, Decimal('2.00'), None, datetime.datetime(2017, 7, 28, 17, 3, 5), datetime.datetime(2017, 7, 28, 17, 3, 5), 0),)</msg>
<status status="PASS" endtime="20170728 17:02:00.358" starttime="20170728 17:02:00.344"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170728 17:02:00.361" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:02:00.361" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:02:00.362" starttime="20170728 17:02:00.360"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:02:00.363" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:00.363" starttime="20170728 17:02:00.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:02:00.365" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:02:00.365" starttime="20170728 17:02:00.364"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_refund[0][2]}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:00.368" starttime="20170728 17:02:00.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:02:00.370" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:02:00.370" starttime="20170728 17:02:00.369"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170728 17:02:00.372" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:02:00.372" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:02:00.373" starttime="20170728 17:02:00.371"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:02:00.374" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:00.374" starttime="20170728 17:02:00.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:02:00.375" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:02:00.376" starttime="20170728 17:02:00.375"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:02:00.377" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:00.377" starttime="20170728 17:02:00.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 17:02:00.378" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 17:02:00.379" starttime="20170728 17:02:00.378"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>14</arg>
</arguments>
<msg timestamp="20170728 17:02:00.380" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:00.380" starttime="20170728 17:02:00.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 17:02:00.382" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 17:02:00.382" starttime="20170728 17:02:00.381"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20170728 17:02:00.383" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:00.384" starttime="20170728 17:02:00.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170728 17:02:00.385" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170728 17:02:00.386" starttime="20170728 17:02:00.385"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:00.389" starttime="20170728 17:02:00.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 17:02:00.391" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 17:02:00.392" starttime="20170728 17:02:00.390"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:02:00.393" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:00.393" starttime="20170728 17:02:00.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:02:00.394" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:02:00.395" starttime="20170728 17:02:00.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170728 17:02:00.396" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170728 17:02:00.396" starttime="20170728 17:02:00.395"></status>
</kw>
<kw name="Conn Mysql" library="wjwTestLibrary">
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]}'</arg>
</arguments>
<assign>
<var>${user_id_unilateral_delete}</var>
</assign>
<msg timestamp="20170728 17:02:00.466" level="INFO">${user_id_unilateral_delete} = ()</msg>
<status status="PASS" endtime="20170728 17:02:00.468" starttime="20170728 17:02:00.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170728 17:02:00.470" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170728 17:02:00.470" starttime="20170728 17:02:00.469"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time1}</var>
</assign>
<msg timestamp="20170728 17:02:00.472" level="INFO">${current_time1} = 2017-07-28 17:02:00.471</msg>
<status status="PASS" endtime="20170728 17:02:00.472" starttime="20170728 17:02:00.471"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>5 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_301}</var>
</assign>
<msg timestamp="20170728 17:02:00.473" level="INFO">${current_time_before_301} = 2017-07-28 17:01:55.471</msg>
<status status="PASS" endtime="20170728 17:02:00.474" starttime="20170728 17:02:00.472"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_301}</var>
</assign>
<msg timestamp="20170728 17:02:00.475" level="INFO">${current_time_after_301} = 2017-07-28 17:03:40.471</msg>
<status status="PASS" endtime="20170728 17:02:00.476" starttime="20170728 17:02:00.474"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where event_code=14 and user_id='${user_id_refund[0][2]}' and update_time between' ${current_time_before_301}' and '${current_time_after_301}'</arg>
</arguments>
<assign>
<var>${user_id1}</var>
</assign>
<msg timestamp="20170728 17:02:00.478" level="INFO">Executing : Query  |  select * from ajb_account_transaction where event_code=14 and user_id='100000' and update_time between' 2017-07-28 17:01:55.471' and '2017-07-28 17:03:40.471' </msg>
<msg timestamp="20170728 17:02:00.489" level="INFO">${user_id1} = ((88889772, '32102151361501230407', 100000, 6135, 1, '32102151361500885834', '20170728170302GST051681', Decimal('2.00'), 1, 14, 2, 0, datetime.datetime(2017, 7, 28, 17, 3, 5), datetime.datetime(2017, ...</msg>
<status status="PASS" endtime="20170728 17:02:00.489" starttime="20170728 17:02:00.477"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id1[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 17:02:00.491" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:02:00.491" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:02:00.491" starttime="20170728 17:02:00.490"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:02:00.493" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:00.493" starttime="20170728 17:02:00.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:02:00.494" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:02:00.495" starttime="20170728 17:02:00.494"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][2]}</arg>
<arg>${user_id_refund[0][2]}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:00.496" starttime="20170728 17:02:00.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:02:00.497" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:02:00.498" starttime="20170728 17:02:00.497"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][5]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:02:00.499" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:00.499" starttime="20170728 17:02:00.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170728 17:02:00.502" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170728 17:02:00.503" starttime="20170728 17:02:00.501"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id1[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170728 17:02:00.504" level="INFO">${pay_no_after} = 20170728170302GST051681</msg>
<status status="PASS" endtime="20170728 17:02:00.504" starttime="20170728 17:02:00.503"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170728 17:02:00.506" level="INFO">Length is 23</msg>
<msg timestamp="20170728 17:02:00.506" level="INFO">${pay_no_after_length} = 23</msg>
<status status="PASS" endtime="20170728 17:02:00.506" starttime="20170728 17:02:00.505"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>23</arg>
</arguments>
<msg timestamp="20170728 17:02:00.508" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:00.508" starttime="20170728 17:02:00.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170728 17:02:00.509" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170728 17:02:00.510" starttime="20170728 17:02:00.509"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][7]}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:00.511" starttime="20170728 17:02:00.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 17:02:00.513" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 17:02:00.514" starttime="20170728 17:02:00.512"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:02:00.515" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:00.515" starttime="20170728 17:02:00.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 17:02:00.517" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 17:02:00.517" starttime="20170728 17:02:00.516"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][9]}</arg>
<arg>14</arg>
</arguments>
<msg timestamp="20170728 17:02:00.519" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:00.519" starttime="20170728 17:02:00.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 17:02:00.520" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 17:02:00.521" starttime="20170728 17:02:00.520"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 17:02:00.522" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:00.522" starttime="20170728 17:02:00.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170728 17:02:00.524" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170728 17:02:00.524" starttime="20170728 17:02:00.523"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:02:00.525" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:00.527" starttime="20170728 17:02:00.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:02:00.529" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:02:00.529" starttime="20170728 17:02:00.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170728 17:02:00.530" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170728 17:02:00.531" starttime="20170728 17:02:00.530"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170728 17:02:00.532" level="INFO">${user_id[0][0]_transaction} = 7641</msg>
<status status="PASS" endtime="20170728 17:02:00.533" starttime="20170728 17:02:00.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170728 17:02:00.535" level="INFO">${user_id[0][0]_transaction} = 7641</msg>
<status status="PASS" endtime="20170728 17:02:00.535" starttime="20170728 17:02:00.533"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id1[0][0]}'</arg>
</arguments>
<msg timestamp="20170728 17:02:00.537" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88889772' </msg>
<status status="PASS" endtime="20170728 17:02:00.635" starttime="20170728 17:02:00.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>检验表account_amount</arg>
</arguments>
<msg timestamp="20170728 17:02:00.638" level="INFO">检验表account_amount</msg>
<status status="PASS" endtime="20170728 17:02:00.638" starttime="20170728 17:02:00.636"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_app}'</arg>
</arguments>
<assign>
<var>${amount_app_after}</var>
</assign>
<msg timestamp="20170728 17:02:00.639" level="INFO">Executing : Query  |  select * from account_amount where account_id='6273' </msg>
<msg timestamp="20170728 17:02:00.644" level="INFO">${amount_app_after} = ((12587, 6273, Decimal('50425.00'), Decimal('49595.00'), Decimal('830.00'), datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 16, 43, 53), 0),)</msg>
<status status="PASS" endtime="20170728 17:02:00.644" starttime="20170728 17:02:00.639"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_boss}'</arg>
</arguments>
<assign>
<var>${amount_boss_after}</var>
</assign>
<msg timestamp="20170728 17:02:00.645" level="INFO">Executing : Query  |  select * from account_amount where account_id='6135' </msg>
<msg timestamp="20170728 17:02:00.650" level="INFO">${amount_boss_after} = ((12449, 6135, Decimal('50425.00'), Decimal('49597.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 3, 5), 0),)</msg>
<status status="PASS" endtime="20170728 17:02:00.650" starttime="20170728 17:02:00.645"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${amount_boss_after[0][2]}+${amount_app_after[0][2]}-${amount_boss[0][2]}-${amount_app[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_check}</var>
</assign>
<msg timestamp="20170728 17:02:00.652" level="INFO">${total_amount_check} = 2.0</msg>
<status status="PASS" endtime="20170728 17:02:00.653" starttime="20170728 17:02:00.651"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${total_amount_check}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<msg timestamp="20170728 17:02:00.654" level="INFO">Argument types are:
&lt;type 'float'&gt;
&lt;class 'decimal.Decimal'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:00.655" starttime="20170728 17:02:00.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount正确</arg>
</arguments>
<msg timestamp="20170728 17:02:00.656" level="INFO">total_amount正确</msg>
<status status="PASS" endtime="20170728 17:02:00.656" starttime="20170728 17:02:00.655"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${amount_boss_after[0][3]}+${amount_app_after[0][3]}-${amount_boss[0][3]}-${amount_app[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_check}</var>
</assign>
<msg timestamp="20170728 17:02:00.658" level="INFO">${balance_amount_check} = 2.0</msg>
<status status="PASS" endtime="20170728 17:02:00.658" starttime="20170728 17:02:00.657"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${balance_amount_check}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<msg timestamp="20170728 17:02:00.660" level="INFO">Argument types are:
&lt;type 'float'&gt;
&lt;class 'decimal.Decimal'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:00.661" starttime="20170728 17:02:00.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount正确</arg>
</arguments>
<msg timestamp="20170728 17:02:00.662" level="INFO">balance_amount正确</msg>
<status status="PASS" endtime="20170728 17:02:00.662" starttime="20170728 17:02:00.661"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${amount_boss[0][4]}+${amount_app[0][4]}-${amount_boss_after[0][4]}-${amount_app_after[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_check}</var>
</assign>
<msg timestamp="20170728 17:02:00.664" level="INFO">${frozen_amount_check} = 0.0</msg>
<status status="PASS" endtime="20170728 17:02:00.664" starttime="20170728 17:02:00.662"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${frozen_amount_check}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:02:00.666" level="INFO">Argument types are:
&lt;type 'float'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:00.666" starttime="20170728 17:02:00.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount正确</arg>
</arguments>
<msg timestamp="20170728 17:02:00.668" level="INFO">frozen_amount正确</msg>
<status status="PASS" endtime="20170728 17:02:00.669" starttime="20170728 17:02:00.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>检验表account_amount成功</arg>
</arguments>
<msg timestamp="20170728 17:02:00.671" level="INFO">检验表account_amount成功</msg>
<status status="PASS" endtime="20170728 17:02:00.671" starttime="20170728 17:02:00.670"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<msg timestamp="20170728 17:02:00.673" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=888888 </msg>
<status status="PASS" endtime="20170728 17:02:00.795" starttime="20170728 17:02:00.672"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount SET total_amount =${amount_boss[0][2]},balance_amount=${amount_boss[0][3]},frozen_amount=${amount_boss[0][4]} where account_id="${account_id_boss}";</arg>
</arguments>
<msg timestamp="20170728 17:02:00.801" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount SET total_amount =50423.00,balance_amount=49595.00,frozen_amount=828.00 where account_id="6135"; </msg>
<status status="PASS" endtime="20170728 17:02:00.846" starttime="20170728 17:02:00.797"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount SET total_amount=${amount_boss[0][2]},balance_amount=${amount_boss[0][3]},frozen_amount=${amount_boss[0][4]} where account_id="${account_id_app}";</arg>
</arguments>
<msg timestamp="20170728 17:02:00.848" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount SET total_amount=50423.00,balance_amount=49595.00,frozen_amount=828.00 where account_id="6273"; </msg>
<status status="PASS" endtime="20170728 17:02:00.887" starttime="20170728 17:02:00.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170728 17:02:00.889" level="INFO">成功</msg>
<status status="PASS" endtime="20170728 17:02:00.890" starttime="20170728 17:02:00.889"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:00.890" critical="yes" starttime="20170728 17:01:59.849"></status>
</test>
<test id="s1-s1-s3-t2" name="输入库里面标记删除的订单号">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:02:00.897" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:02:00.909" starttime="20170728 17:02:00.896"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:00.909" starttime="20170728 17:02:00.895"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:00.910" starttime="20170728 17:02:00.895"></status>
</kw>
<kw name="清数据" library="myResource">
<arguments>
<arg>88800888</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:02:00.913" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:02:00.923" starttime="20170728 17:02:00.913"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:00.924" starttime="20170728 17:02:00.912"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:00.924" starttime="20170728 17:02:00.911"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170728 17:02:00.926" level="INFO">Executing : Query  |  select * from ajb_account_transaction where id=88800888 </msg>
<msg timestamp="20170728 17:02:00.934" level="INFO">${check} = ()</msg>
<status status="PASS" endtime="20170728 17:02:00.935" starttime="20170728 17:02:00.925"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170728 17:02:00.937" level="INFO">Length is 0</msg>
<msg timestamp="20170728 17:02:00.937" level="INFO">${check_length} = 0</msg>
<status status="PASS" endtime="20170728 17:02:00.937" starttime="20170728 17:02:00.936"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} != 0</arg>
<arg>execute sql string</arg>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>数据库之前没有数据</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库之前没有数据</arg>
</arguments>
<msg timestamp="20170728 17:02:00.940" level="INFO">数据库之前没有数据</msg>
<status status="PASS" endtime="20170728 17:02:00.940" starttime="20170728 17:02:00.939"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:00.941" starttime="20170728 17:02:00.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库里面的这条数据清理成功啦。</arg>
</arguments>
<msg timestamp="20170728 17:02:00.942" level="INFO">数据库里面的这条数据清理成功啦。</msg>
<status status="PASS" endtime="20170728 17:02:00.942" starttime="20170728 17:02:00.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_delete}</arg>
</arguments>
<msg timestamp="20170728 17:02:00.943" level="INFO">${id_delete} = 88800888</msg>
<status status="PASS" endtime="20170728 17:02:00.944" starttime="20170728 17:02:00.943"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:00.944" starttime="20170728 17:02:00.910"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("${id_delete}","32102151361501122443","100000","6135","1","32102151361501122443","","2","1","11","2","1","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170728 17:02:00.945" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("88800888","32102151361501122443","100000","6135","1","32102151361501122443","","2","1","11","2","1","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170728 17:02:00.988" starttime="20170728 17:02:00.945"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>32102151361501122443</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:02:00.991" level="INFO">${args11} = 32102151361501122443</msg>
<status status="PASS" endtime="20170728 17:02:00.992" starttime="20170728 17:02:00.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:02:00.995" level="INFO">${args22} = </msg>
<status status="PASS" endtime="20170728 17:02:00.995" starttime="20170728 17:02:00.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 17:02:00.997" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170728 17:02:00.998" starttime="20170728 17:02:00.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 17:02:01.000" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 17:02:01.000" starttime="20170728 17:02:00.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 17:02:01.002" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</msg>
<status status="PASS" endtime="20170728 17:02:01.002" starttime="20170728 17:02:01.001"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:01.003" starttime="20170728 17:02:00.989"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 17:02:01.005" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</msg>
<status status="PASS" endtime="20170728 17:02:01.005" starttime="20170728 17:02:01.004"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 17:02:01.007" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:02:01.008" starttime="20170728 17:02:01.006"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:01.012" starttime="20170728 17:02:01.011"></status>
</kw>
<msg timestamp="20170728 17:02:01.013" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:02:01.013" starttime="20170728 17:02:01.009"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>order_num</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:01.015" starttime="20170728 17:02:01.015"></status>
</kw>
<msg timestamp="20170728 17:02:01.016" level="INFO">${args11_after} = order_num</msg>
<status status="PASS" endtime="20170728 17:02:01.016" starttime="20170728 17:02:01.014"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:02:01.020" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:02:01.029" starttime="20170728 17:02:01.019"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:01.029" starttime="20170728 17:02:01.018"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:01.030" starttime="20170728 17:02:01.017"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 17:02:01.032" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num='32102151361501122443' and channel_no='1' </msg>
<msg timestamp="20170728 17:02:01.044" level="INFO">${database1} = ((88800888, '32102151361501122443', 100000, 6135, 1, '32102151361501122443', '', Decimal('2.00'), 1, 11, 2, 1, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)),)</msg>
<status status="PASS" endtime="20170728 17:02:01.044" starttime="20170728 17:02:01.031"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 17:02:01.046" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 17:02:01.052" level="INFO">${database} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 3, 6), 0),)</msg>
<status status="PASS" endtime="20170728 17:02:01.053" starttime="20170728 17:02:01.045"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 17:02:01.054" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:02:01.054" starttime="20170728 17:02:01.053"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 17:02:01.056" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 17:02:01.056" starttime="20170728 17:02:01.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:02:01.057" level="INFO">获得account_id值为：6135</msg>
<status status="PASS" endtime="20170728 17:02:01.058" starttime="20170728 17:02:01.057"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 17:02:01.060" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:02:01.060" starttime="20170728 17:02:01.059"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 17:02:01.062" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:02:01.062" starttime="20170728 17:02:01.061"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 17:02:01.063" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:02:01.064" starttime="20170728 17:02:01.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:02:01.065" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 17:02:01.066" starttime="20170728 17:02:01.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 17:02:01.067" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:02:01.068" starttime="20170728 17:02:01.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:02:01.069" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:02:01.069" starttime="20170728 17:02:01.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:02:01.071" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:02:01.071" starttime="20170728 17:02:01.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:02:01.072" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:02:01.073" starttime="20170728 17:02:01.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:02:01.074" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:02:01.075" starttime="20170728 17:02:01.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 17:02:01.076" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:02:01.077" starttime="20170728 17:02:01.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 17:02:01.078" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</msg>
<status status="PASS" endtime="20170728 17:02:01.079" starttime="20170728 17:02:01.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170728 17:02:01.080" level="INFO">${database} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 3, 6), 0),)</msg>
<status status="PASS" endtime="20170728 17:02:01.081" starttime="20170728 17:02:01.079"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:01.081" starttime="20170728 17:02:01.003"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Ajb Withdraw Cancel" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:01.105" starttime="20170728 17:02:01.084"></status>
</kw>
<msg timestamp="20170728 17:02:01.107" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:02:01.108" starttime="20170728 17:02:01.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 17:02:01.110" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:02:01.110" starttime="20170728 17:02:01.109"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:01.111" starttime="20170728 17:02:01.082"></status>
</kw>
<kw name="错误时字段验证" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 17:02:01.113" level="INFO">200</msg>
<status status="PASS" endtime="20170728 17:02:01.114" starttime="20170728 17:02:01.112"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 17:02:01.115" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:01.116" starttime="20170728 17:02:01.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 17:02:01.119" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 17:02:01.119" starttime="20170728 17:02:01.118"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 17:02:01.121" level="INFO">To JSON using : content={"data":null,"msg":"订单退款结算失败","code":0,"success":false} </msg>
<msg timestamp="20170728 17:02:01.121" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 17:02:01.122" level="INFO">${toJson} = {u'msg': u'\u8ba2\u5355\u9000\u6b3e\u7ed3\u7b97\u5931\u8d25', u'code': 0, u'data': None, u'success': False}</msg>
<status status="PASS" endtime="20170728 17:02:01.122" starttime="20170728 17:02:01.120"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>False</arg>
</arguments>
<msg timestamp="20170728 17:02:01.123" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:01.124" starttime="20170728 17:02:01.122"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['data']}</arg>
<arg>None</arg>
</arguments>
<msg timestamp="20170728 17:02:01.125" level="INFO">Argument types are:
&lt;type 'NoneType'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:01.125" starttime="20170728 17:02:01.124"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${toJson['code']}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:02:01.127" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:01.127" starttime="20170728 17:02:01.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:02:01.128" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 17:02:01.129" starttime="20170728 17:02:01.128"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:01.129" starttime="20170728 17:02:01.112"></status>
</kw>
<kw name="amount和表里的校验" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:02:01.132" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:02:01.142" starttime="20170728 17:02:01.132"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:01.143" starttime="20170728 17:02:01.131"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:01.143" starttime="20170728 17:02:01.130"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:02:01.145" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 17:02:01.150" level="INFO">${user_id} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 3, 6), 0),)</msg>
<status status="PASS" endtime="20170728 17:02:01.150" starttime="20170728 17:02:01.144"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:01.153" starttime="20170728 17:02:01.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 17:02:01.154" level="INFO">total_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 17:02:01.154" starttime="20170728 17:02:01.153"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:01.156" starttime="20170728 17:02:01.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 17:02:01.157" level="INFO">balance_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 17:02:01.157" starttime="20170728 17:02:01.156"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:01.159" starttime="20170728 17:02:01.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 17:02:01.160" level="INFO">frozen_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 17:02:01.160" starttime="20170728 17:02:01.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amounts的数据没有变化正确的</arg>
</arguments>
<msg timestamp="20170728 17:02:01.161" level="INFO">amounts的数据没有变化正确的</msg>
<status status="PASS" endtime="20170728 17:02:01.162" starttime="20170728 17:02:01.161"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:02:01.163" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:01.164" starttime="20170728 17:02:01.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount内容没有发生变化</arg>
</arguments>
<msg timestamp="20170728 17:02:01.166" level="INFO">表account_amount内容没有发生变化</msg>
<status status="PASS" endtime="20170728 17:02:01.167" starttime="20170728 17:02:01.165"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:02:01.169" level="INFO">${current_time} = 2017-07-28 17:02:01.169</msg>
<status status="PASS" endtime="20170728 17:02:01.170" starttime="20170728 17:02:01.168"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:02:01.171" level="INFO">${current_time_before_30} = 2017-07-28 17:01:01.169</msg>
<status status="PASS" endtime="20170728 17:02:01.172" starttime="20170728 17:02:01.170"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:02:01.173" level="INFO">${current_time_after_30} = 2017-07-28 17:03:06.169</msg>
<status status="PASS" endtime="20170728 17:02:01.174" starttime="20170728 17:02:01.172"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${bill_check}</var>
</assign>
<msg timestamp="20170728 17:02:01.175" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6135' and update_time between' 2017-07-28 17:01:01.169' and '2017-07-28 17:03:06.169' </msg>
<msg timestamp="20170728 17:02:01.181" level="INFO">${bill_check} = ()</msg>
<status status="PASS" endtime="20170728 17:02:01.181" starttime="20170728 17:02:01.174"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${bill_check}</arg>
</arguments>
<assign>
<var>${bill_check_length}</var>
</assign>
<msg timestamp="20170728 17:02:01.184" level="INFO">Length is 0</msg>
<msg timestamp="20170728 17:02:01.184" level="INFO">${bill_check_length} = 0</msg>
<status status="PASS" endtime="20170728 17:02:01.185" starttime="20170728 17:02:01.182"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${bill_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:02:01.186" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:01.187" starttime="20170728 17:02:01.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>account_unilateral_bill里的没有相关数据</arg>
</arguments>
<msg timestamp="20170728 17:02:01.188" level="INFO">account_unilateral_bill里的没有相关数据</msg>
<status status="PASS" endtime="20170728 17:02:01.189" starttime="20170728 17:02:01.187"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num ='${args11}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${transaction_check}</var>
</assign>
<msg timestamp="20170728 17:02:01.190" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num ='32102151361501122443' and update_time between' 2017-07-28 17:01:01.169' and '2017-07-28 17:03:06.169' </msg>
<msg timestamp="20170728 17:02:01.201" level="INFO">${transaction_check} = ()</msg>
<status status="PASS" endtime="20170728 17:02:01.202" starttime="20170728 17:02:01.189"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${transaction_check}</arg>
</arguments>
<assign>
<var>${transaction_check_length}</var>
</assign>
<msg timestamp="20170728 17:02:01.203" level="INFO">Length is 0</msg>
<msg timestamp="20170728 17:02:01.204" level="INFO">${transaction_check_length} = 0</msg>
<status status="PASS" endtime="20170728 17:02:01.204" starttime="20170728 17:02:01.203"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${transaction_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:02:01.205" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:01.206" starttime="20170728 17:02:01.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>ajb_account_transaction里的没有相关数据</arg>
</arguments>
<msg timestamp="20170728 17:02:01.207" level="INFO">ajb_account_transaction里的没有相关数据</msg>
<status status="PASS" endtime="20170728 17:02:01.207" starttime="20170728 17:02:01.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库表里数据调用接口前后没有发生变化</arg>
</arguments>
<msg timestamp="20170728 17:02:01.209" level="INFO">数据库表里数据调用接口前后没有发生变化</msg>
<status status="PASS" endtime="20170728 17:02:01.209" starttime="20170728 17:02:01.208"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:01.210" starttime="20170728 17:02:01.130"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<msg timestamp="20170728 17:02:01.212" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=88800888 </msg>
<status status="PASS" endtime="20170728 17:02:01.302" starttime="20170728 17:02:01.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当订单号为库里面标记删除的时候，接口返回失败</arg>
</arguments>
<msg timestamp="20170728 17:02:01.309" level="INFO">当订单号为库里面标记删除的时候，接口返回失败</msg>
<status status="PASS" endtime="20170728 17:02:01.310" starttime="20170728 17:02:01.306"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:01.312" critical="yes" starttime="20170728 17:02:00.892"></status>
</test>
<status status="PASS" endtime="20170728 17:02:01.317" starttime="20170728 17:01:59.831"></status>
</suite>
<suite source="F:\logs and reports\账户中心\订单\订单确认支付（线上）.txt" id="s1-s1-s4" name="订单确认支付（线上）">
<test id="s1-s1-s4-t1" name="输入的参数全部正确">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:02:01.365" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:02:01.376" starttime="20170728 17:02:01.364"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:01.377" starttime="20170728 17:02:01.363"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:01.378" starttime="20170728 17:02:01.361"></status>
</kw>
<kw name="清数据" library="myResource">
<arguments>
<arg>888888</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:02:01.382" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:02:01.390" starttime="20170728 17:02:01.381"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:01.391" starttime="20170728 17:02:01.379"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:01.391" starttime="20170728 17:02:01.379"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170728 17:02:01.393" level="INFO">Executing : Query  |  select * from ajb_account_transaction where id=888888 </msg>
<msg timestamp="20170728 17:02:01.402" level="INFO">${check} = ()</msg>
<status status="PASS" endtime="20170728 17:02:01.403" starttime="20170728 17:02:01.392"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170728 17:02:01.404" level="INFO">Length is 0</msg>
<msg timestamp="20170728 17:02:01.404" level="INFO">${check_length} = 0</msg>
<status status="PASS" endtime="20170728 17:02:01.405" starttime="20170728 17:02:01.403"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} != 0</arg>
<arg>execute sql string</arg>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>数据库之前没有数据</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库之前没有数据</arg>
</arguments>
<msg timestamp="20170728 17:02:01.407" level="INFO">数据库之前没有数据</msg>
<status status="PASS" endtime="20170728 17:02:01.407" starttime="20170728 17:02:01.406"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:01.408" starttime="20170728 17:02:01.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库里面的这条数据清理成功啦。</arg>
</arguments>
<msg timestamp="20170728 17:02:01.409" level="INFO">数据库里面的这条数据清理成功啦。</msg>
<status status="PASS" endtime="20170728 17:02:01.409" starttime="20170728 17:02:01.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_delete}</arg>
</arguments>
<msg timestamp="20170728 17:02:01.411" level="INFO">${id_delete} = 888888</msg>
<status status="PASS" endtime="20170728 17:02:01.411" starttime="20170728 17:02:01.410"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:01.411" starttime="20170728 17:02:01.378"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("${id_delete}","32102151361500975216","100000","6135","1","32102151361500012119","","2","1","11","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170728 17:02:01.414" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("888888","32102151361500975216","100000","6135","1","32102151361500012119","","2","1","11","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170728 17:02:01.457" starttime="20170728 17:02:01.413"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>32102151361500012119</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:02:01.460" level="INFO">${args11} = 32102151361500012119</msg>
<status status="PASS" endtime="20170728 17:02:01.460" starttime="20170728 17:02:01.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:02:01.461" level="INFO">${args22} = </msg>
<status status="PASS" endtime="20170728 17:02:01.462" starttime="20170728 17:02:01.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 17:02:01.465" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170728 17:02:01.466" starttime="20170728 17:02:01.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 17:02:01.469" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 17:02:01.469" starttime="20170728 17:02:01.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 17:02:01.471" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/confirmPay</msg>
<status status="PASS" endtime="20170728 17:02:01.471" starttime="20170728 17:02:01.470"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:01.472" starttime="20170728 17:02:01.458"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 17:02:01.474" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/confirmPay</msg>
<status status="PASS" endtime="20170728 17:02:01.474" starttime="20170728 17:02:01.473"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 17:02:01.477" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:02:01.478" starttime="20170728 17:02:01.476"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:01.481" starttime="20170728 17:02:01.480"></status>
</kw>
<msg timestamp="20170728 17:02:01.482" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:02:01.482" starttime="20170728 17:02:01.479"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>order_num</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:01.485" starttime="20170728 17:02:01.485"></status>
</kw>
<msg timestamp="20170728 17:02:01.486" level="INFO">${args11_after} = order_num</msg>
<status status="PASS" endtime="20170728 17:02:01.486" starttime="20170728 17:02:01.483"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:02:01.490" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:02:01.497" starttime="20170728 17:02:01.489"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:01.498" starttime="20170728 17:02:01.488"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:01.499" starttime="20170728 17:02:01.487"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 17:02:01.501" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num='32102151361500012119' and channel_no='1' </msg>
<msg timestamp="20170728 17:02:01.512" level="INFO">${database1} = ((9242, '32102151361500012119', 100000, 6135, 1, '32102151361500012119', '20170717133633HCE041747', Decimal('2000.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 17, 13, 36, 36), datetime.datetime(2017, ...</msg>
<status status="PASS" endtime="20170728 17:02:01.512" starttime="20170728 17:02:01.499"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 17:02:01.514" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 17:02:01.519" level="INFO">${database} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 3, 6), 0),)</msg>
<status status="PASS" endtime="20170728 17:02:01.519" starttime="20170728 17:02:01.513"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 17:02:01.521" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:02:01.521" starttime="20170728 17:02:01.520"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 17:02:01.524" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 17:02:01.524" starttime="20170728 17:02:01.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:02:01.526" level="INFO">获得account_id值为：6135</msg>
<status status="PASS" endtime="20170728 17:02:01.526" starttime="20170728 17:02:01.525"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 17:02:01.527" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:02:01.528" starttime="20170728 17:02:01.527"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 17:02:01.529" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:02:01.529" starttime="20170728 17:02:01.528"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 17:02:01.531" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:02:01.531" starttime="20170728 17:02:01.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:02:01.533" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 17:02:01.533" starttime="20170728 17:02:01.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 17:02:01.536" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:02:01.536" starttime="20170728 17:02:01.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:02:01.537" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:02:01.538" starttime="20170728 17:02:01.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:02:01.541" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:02:01.541" starttime="20170728 17:02:01.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:02:01.544" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:02:01.545" starttime="20170728 17:02:01.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:02:01.547" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:02:01.547" starttime="20170728 17:02:01.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 17:02:01.550" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:02:01.551" starttime="20170728 17:02:01.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 17:02:01.553" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/confirmPay</msg>
<status status="PASS" endtime="20170728 17:02:01.554" starttime="20170728 17:02:01.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170728 17:02:01.556" level="INFO">${database} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 3, 6), 0),)</msg>
<status status="PASS" endtime="20170728 17:02:01.557" starttime="20170728 17:02:01.555"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:01.557" starttime="20170728 17:02:01.472"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Ajb Withdraw Cancel" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:01.730" starttime="20170728 17:02:01.560"></status>
</kw>
<msg timestamp="20170728 17:02:01.731" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:02:01.732" starttime="20170728 17:02:01.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 17:02:01.733" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:02:01.734" starttime="20170728 17:02:01.732"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:01.735" starttime="20170728 17:02:01.558"></status>
</kw>
<kw name="字段验证" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 17:02:01.737" level="INFO">200</msg>
<status status="PASS" endtime="20170728 17:02:01.737" starttime="20170728 17:02:01.736"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 17:02:01.739" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:01.739" starttime="20170728 17:02:01.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 17:02:01.740" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 17:02:01.741" starttime="20170728 17:02:01.740"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 17:02:01.742" level="INFO">To JSON using : content={"data":null,"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 17:02:01.742" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 17:02:01.743" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': None, u'success': True}</msg>
<status status="PASS" endtime="20170728 17:02:01.743" starttime="20170728 17:02:01.741"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 17:02:01.744" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:01.745" starttime="20170728 17:02:01.744"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:01.747" starttime="20170728 17:02:01.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:02:01.749" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 17:02:01.750" starttime="20170728 17:02:01.748"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<assign>
<var>@{Link1}</var>
</assign>
<msg timestamp="20170728 17:02:01.752" level="INFO">@{Link1} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:02:01.752" starttime="20170728 17:02:01.751"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>"${value}" in @{Link1}</arg>
<arg>Get From Dictionary</arg>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${orderNum}</var>
</assign>
<msg timestamp="20170728 17:02:01.754" level="INFO">${orderNum} = None</msg>
<status status="PASS" endtime="20170728 17:02:01.754" starttime="20170728 17:02:01.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<msg timestamp="20170728 17:02:01.755" level="INFO">${orderNum} = None</msg>
<status status="PASS" endtime="20170728 17:02:01.755" starttime="20170728 17:02:01.754"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:01.756" starttime="20170728 17:02:01.736"></status>
</kw>
<kw name="确认取消的金额数" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:02:01.760" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:02:01.767" starttime="20170728 17:02:01.759"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:01.768" starttime="20170728 17:02:01.758"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:01.768" starttime="20170728 17:02:01.757"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>8</arg>
</arguments>
<assign>
<var>${event_code_judge}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>11</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:01.771" starttime="20170728 17:02:01.770"></status>
</kw>
<msg timestamp="20170728 17:02:01.773" level="INFO">${event_code_judge} = 11</msg>
<status status="PASS" endtime="20170728 17:02:01.774" starttime="20170728 17:02:01.769"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num ='${args11}' and event_code=${event_code_judge}</arg>
</arguments>
<assign>
<var>${search}</var>
</assign>
<msg timestamp="20170728 17:02:01.775" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num ='32102151361500012119' and event_code=11 </msg>
<msg timestamp="20170728 17:02:01.785" level="INFO">${search} = ((888888, '32102151361500975216', 100000, 6135, 1, '32102151361500012119', '', Decimal('2.00'), 1, 11, 2, 0, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)),)</msg>
<status status="PASS" endtime="20170728 17:02:01.786" starttime="20170728 17:02:01.774"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${search[0][7]}</arg>
</arguments>
<assign>
<var>${change_total_amount}</var>
</assign>
<msg timestamp="20170728 17:02:01.789" level="INFO">${change_total_amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:02:01.790" starttime="20170728 17:02:01.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${change_total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:02:01.792" level="INFO">${change_total_amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:02:01.792" starttime="20170728 17:02:01.791"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:01.793" starttime="20170728 17:02:01.756"></status>
</kw>
<kw name="退款确认的account_unilateral_bill的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_unilateral_bill</arg>
</arguments>
<msg timestamp="20170728 17:02:01.796" level="INFO">现在开始校验表account_unilateral_bill</msg>
<status status="PASS" endtime="20170728 17:02:01.796" starttime="20170728 17:02:01.795"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:02:01.801" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:02:01.836" starttime="20170728 17:02:01.799"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:01.838" starttime="20170728 17:02:01.798"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:01.839" starttime="20170728 17:02:01.797"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>account_unilateral_bill</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:02:01.843" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:02:01.863" starttime="20170728 17:02:01.843"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:01.864" starttime="20170728 17:02:01.842"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:01.864" starttime="20170728 17:02:01.841"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:02:01.866" level="INFO">${current_time} = 2017-07-28 17:02:01.866</msg>
<status status="PASS" endtime="20170728 17:02:01.866" starttime="20170728 17:02:01.865"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>0 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:02:01.869" level="INFO">${current_time_before_30} = 2017-07-28 17:02:01.866</msg>
<status status="PASS" endtime="20170728 17:02:01.869" starttime="20170728 17:02:01.868"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:02:01.871" level="INFO">${current_time_after_30} = 2017-07-28 17:03:41.866</msg>
<status status="PASS" endtime="20170728 17:02:01.871" starttime="20170728 17:02:01.870"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 17:02:01.873" level="INFO">Executing : Query  |  select * from account_unilateral_bill where user_id='100000' and update_time between' 2017-07-28 17:02:01.866' and '2017-07-28 17:03:41.866' </msg>
<msg timestamp="20170728 17:02:01.886" level="INFO">${updatetime} = ((7642, '32102151361501230413', 100000, 6135, '32102151361501230412', 1, 13, 2, Decimal('2.00'), None, datetime.datetime(2017, 7, 28, 17, 3, 7), datetime.datetime(2017, 7, 28, 17, 3, 7), 0), (7643, '3...</msg>
<status status="PASS" endtime="20170728 17:02:01.887" starttime="20170728 17:02:01.872"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 17:02:01.888" level="INFO">Length is 2</msg>
<status status="PASS" endtime="20170728 17:02:01.889" starttime="20170728 17:02:01.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 17:02:01.890" level="INFO">account_unilateral_bill表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 17:02:01.890" starttime="20170728 17:02:01.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 17:02:01.892" level="INFO">${current_time_before_30} = 2017-07-28 17:02:01.866</msg>
<status status="PASS" endtime="20170728 17:02:01.892" starttime="20170728 17:02:01.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 17:02:01.893" level="INFO">${current_time_after_30} = 2017-07-28 17:03:41.866</msg>
<status status="PASS" endtime="20170728 17:02:01.894" starttime="20170728 17:02:01.893"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:01.894" starttime="20170728 17:02:01.840"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id} 'and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:02:01.896" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6135 'and update_time between' 2017-07-28 17:02:01.866' and '2017-07-28 17:03:41.866' </msg>
<msg timestamp="20170728 17:02:01.902" level="INFO">${user_id} = ((7642, '32102151361501230413', 100000, 6135, '32102151361501230412', 1, 13, 2, Decimal('2.00'), None, datetime.datetime(2017, 7, 28, 17, 3, 7), datetime.datetime(2017, 7, 28, 17, 3, 7), 0), (7643, '3...</msg>
<status status="PASS" endtime="20170728 17:02:01.903" starttime="20170728 17:02:01.895"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170728 17:02:01.905" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:02:01.905" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:02:01.905" starttime="20170728 17:02:01.904"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[1][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length2}</var>
</assign>
<msg timestamp="20170728 17:02:01.907" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:02:01.907" level="INFO">${bill_no_length2} = 20</msg>
<status status="PASS" endtime="20170728 17:02:01.908" starttime="20170728 17:02:01.906"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:02:01.909" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:01.909" starttime="20170728 17:02:01.908"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>${bill_no_length2}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:01.911" starttime="20170728 17:02:01.910"></status>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<doc>Fails if the given objects are equal.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
<arg>${user_id[1][1]}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:01.912" starttime="20170728 17:02:01.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，且不是相同bill_no,此时校验成功</arg>
</arguments>
<msg timestamp="20170728 17:02:01.915" level="INFO">bill_no的数据长度正确，且不是相同bill_no,此时校验成功</msg>
<status status="PASS" endtime="20170728 17:02:01.916" starttime="20170728 17:02:01.914"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:01.919" starttime="20170728 17:02:01.917"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id[1][2]}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:01.921" starttime="20170728 17:02:01.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:02:01.923" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:02:01.923" starttime="20170728 17:02:01.922"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170728 17:02:01.925" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:02:01.925" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:02:01.925" starttime="20170728 17:02:01.924"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:02:01.927" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:01.927" starttime="20170728 17:02:01.926"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${user_id[1][4]}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:01.929" starttime="20170728 17:02:01.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，且此时是同一个command_no,校验成功</arg>
</arguments>
<msg timestamp="20170728 17:02:01.931" level="INFO">commandl_no的数据长度正确，且此时是同一个command_no,校验成功</msg>
<status status="PASS" endtime="20170728 17:02:01.932" starttime="20170728 17:02:01.930"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:02:01.935" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:01.936" starttime="20170728 17:02:01.933"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>${user_id[1][5]}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:01.937" starttime="20170728 17:02:01.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 17:02:01.939" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 17:02:01.939" starttime="20170728 17:02:01.938"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>13</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:01.943" starttime="20170728 17:02:01.942"></status>
</kw>
<msg timestamp="20170728 17:02:01.944" level="INFO">${event_code} = 13</msg>
<status status="PASS" endtime="20170728 17:02:01.944" starttime="20170728 17:02:01.940"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:02:01.945" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:02:01.946" starttime="20170728 17:02:01.945"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:01.948" starttime="20170728 17:02:01.947"></status>
</kw>
<msg timestamp="20170728 17:02:01.949" level="INFO">${event_code_after} = 13</msg>
<status status="PASS" endtime="20170728 17:02:01.950" starttime="20170728 17:02:01.946"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:02:01.952" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:02:01.952" starttime="20170728 17:02:01.950"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:01.955" starttime="20170728 17:02:01.955"></status>
</kw>
<msg timestamp="20170728 17:02:01.956" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 17:02:01.956" starttime="20170728 17:02:01.953"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:01.958" starttime="20170728 17:02:01.958"></status>
</kw>
<msg timestamp="20170728 17:02:01.959" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:02:01.959" starttime="20170728 17:02:01.957"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:02:01.961" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:02:01.962" starttime="20170728 17:02:01.960"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:01.964" starttime="20170728 17:02:01.963"></status>
</kw>
<msg timestamp="20170728 17:02:01.965" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:02:01.965" starttime="20170728 17:02:01.962"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${total_amount_before}-${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:01.969" starttime="20170728 17:02:01.968"></status>
</kw>
<msg timestamp="20170728 17:02:01.969" level="INFO">${total_amount} = 50421.0</msg>
<status status="PASS" endtime="20170728 17:02:01.970" starttime="20170728 17:02:01.966"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:01.974" starttime="20170728 17:02:01.973"></status>
</kw>
<msg timestamp="20170728 17:02:01.974" level="INFO">${balance_amount} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:02:01.975" starttime="20170728 17:02:01.970"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:01.981" starttime="20170728 17:02:01.979"></status>
</kw>
<msg timestamp="20170728 17:02:01.982" level="INFO">${frozen_amount} = 826.0</msg>
<status status="PASS" endtime="20170728 17:02:01.982" starttime="20170728 17:02:01.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:02:01.984" level="INFO">${event_code} = 13</msg>
<status status="PASS" endtime="20170728 17:02:01.985" starttime="20170728 17:02:01.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:02:01.986" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 17:02:01.987" starttime="20170728 17:02:01.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:02:01.989" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:02:01.989" starttime="20170728 17:02:01.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:02:01.991" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:02:01.991" starttime="20170728 17:02:01.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:02:01.993" level="INFO">${total_amount} = 50421.0</msg>
<status status="PASS" endtime="20170728 17:02:01.993" starttime="20170728 17:02:01.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:02:01.995" level="INFO">${balance_amount} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:02:01.996" starttime="20170728 17:02:01.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:02:01.997" level="INFO">${frozen_amount} = 826.0</msg>
<status status="PASS" endtime="20170728 17:02:01.998" starttime="20170728 17:02:01.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:02:02.000" level="INFO">${event_code_after} = 13</msg>
<status status="PASS" endtime="20170728 17:02:02.000" starttime="20170728 17:02:01.998"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:02.001" starttime="20170728 17:02:01.939"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:02:02.003" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:02.003" starttime="20170728 17:02:02.002"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>${user_id[1][6]}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:02.005" starttime="20170728 17:02:02.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 17:02:02.006" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 17:02:02.007" starttime="20170728 17:02:02.005"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:02:02.009" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:02.010" starttime="20170728 17:02:02.008"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[1][7]}</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20170728 17:02:02.011" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:02.012" starttime="20170728 17:02:02.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type俩者值正确</arg>
</arguments>
<msg timestamp="20170728 17:02:02.013" level="INFO">command_type俩者值正确</msg>
<status status="PASS" endtime="20170728 17:02:02.013" starttime="20170728 17:02:02.012"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:02.014" starttime="20170728 17:02:02.014"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>0-${amount}</arg>
</arguments>
<assign>
<var>${amount_after}</var>
</assign>
<msg timestamp="20170728 17:02:02.017" level="INFO">${amount_after} = -2.0</msg>
<status status="PASS" endtime="20170728 17:02:02.017" starttime="20170728 17:02:02.015"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${user_id[1][8]}</arg>
<arg>${amount_after}</arg>
</arguments>
<msg timestamp="20170728 17:02:02.019" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:02.019" starttime="20170728 17:02:02.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 17:02:02.020" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 17:02:02.021" starttime="20170728 17:02:02.020"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${user_id[0][10]}</arg>
<arg>${user_id[0][11]}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:02.023" starttime="20170728 17:02:02.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 17:02:02.025" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 17:02:02.026" starttime="20170728 17:02:02.024"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${user_id[0][10]}</arg>
<arg>${user_id[0][10]}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:02.028" starttime="20170728 17:02:02.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>则调用艾佳币回收确认的接口时，则直接同时发生解冻和转账俩步</arg>
</arguments>
<msg timestamp="20170728 17:02:02.029" level="INFO">则调用艾佳币回收确认的接口时，则直接同时发生解冻和转账俩步</msg>
<status status="PASS" endtime="20170728 17:02:02.029" starttime="20170728 17:02:02.028"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:02:02.031" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:02.031" starttime="20170728 17:02:02.030"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>${user_id[1][12]}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:02.033" starttime="20170728 17:02:02.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:02:02.035" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:02:02.035" starttime="20170728 17:02:02.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170728 17:02:02.038" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170728 17:02:02.038" starttime="20170728 17:02:02.036"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${user_id[1][0]}</arg>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>@{delete_unilateral_bill}</var>
</assign>
<msg timestamp="20170728 17:02:02.040" level="INFO">@{delete_unilateral_bill} = [ 7643 | 7642 ]</msg>
<status status="PASS" endtime="20170728 17:02:02.041" starttime="20170728 17:02:02.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{delete_unilateral_bill}</arg>
</arguments>
<msg timestamp="20170728 17:02:02.043" level="INFO">@{delete_unilateral_bill} = [ 7643 | 7642 ]</msg>
<status status="PASS" endtime="20170728 17:02:02.044" starttime="20170728 17:02:02.042"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[1][0]}'</arg>
</arguments>
<msg timestamp="20170728 17:02:02.045" level="INFO">Executing : Execute SQL String  |  delete from account_unilateral_bill where id ='7643' </msg>
<status status="PASS" endtime="20170728 17:02:02.088" starttime="20170728 17:02:02.045"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]}'</arg>
</arguments>
<msg timestamp="20170728 17:02:02.091" level="INFO">Executing : Execute SQL String  |  delete from account_unilateral_bill where id ='7642' </msg>
<status status="PASS" endtime="20170728 17:02:02.142" starttime="20170728 17:02:02.089"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:02.143" starttime="20170728 17:02:01.794"></status>
</kw>
<kw name="表ajb_account_transaction" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170728 17:02:02.145" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170728 17:02:02.145" starttime="20170728 17:02:02.144"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:02:02.149" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:02:02.157" starttime="20170728 17:02:02.148"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:02.157" starttime="20170728 17:02:02.147"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:02.158" starttime="20170728 17:02:02.146"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>ajb_account_transaction</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:02:02.164" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:02:02.172" starttime="20170728 17:02:02.163"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:02.173" starttime="20170728 17:02:02.160"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:02.174" starttime="20170728 17:02:02.159"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:02:02.177" level="INFO">${current_time} = 2017-07-28 17:02:02.176</msg>
<status status="PASS" endtime="20170728 17:02:02.177" starttime="20170728 17:02:02.175"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>0 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:02:02.179" level="INFO">${current_time_before_30} = 2017-07-28 17:02:02.176</msg>
<status status="PASS" endtime="20170728 17:02:02.179" starttime="20170728 17:02:02.178"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:02:02.181" level="INFO">${current_time_after_30} = 2017-07-28 17:03:42.176</msg>
<status status="PASS" endtime="20170728 17:02:02.182" starttime="20170728 17:02:02.179"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 17:02:02.184" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and update_time between' 2017-07-28 17:02:02.176' and '2017-07-28 17:03:42.176' </msg>
<msg timestamp="20170728 17:02:02.201" level="INFO">${updatetime} = ((88889773, '32102151361501230411', 100000, 6135, 1, '32102151361500012119', '20170728170304YDT051682', Decimal('2.00'), 1, 13, 2, 0, datetime.datetime(2017, 7, 28, 17, 3, 7), datetime.datetime(2017, ...</msg>
<status status="PASS" endtime="20170728 17:02:02.202" starttime="20170728 17:02:02.183"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 17:02:02.203" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 17:02:02.204" starttime="20170728 17:02:02.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 17:02:02.206" level="INFO">ajb_account_transaction表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 17:02:02.207" starttime="20170728 17:02:02.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 17:02:02.210" level="INFO">${current_time_before_30} = 2017-07-28 17:02:02.176</msg>
<status status="PASS" endtime="20170728 17:02:02.211" starttime="20170728 17:02:02.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 17:02:02.215" level="INFO">${current_time_after_30} = 2017-07-28 17:03:42.176</msg>
<status status="PASS" endtime="20170728 17:02:02.216" starttime="20170728 17:02:02.213"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:02.217" starttime="20170728 17:02:02.159"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:02:02.220" level="INFO">Executing : Query  |  select * from ajb_account_transaction where account_id ='6135' and update_time between' 2017-07-28 17:02:02.176' and '2017-07-28 17:03:42.176' </msg>
<msg timestamp="20170728 17:02:02.233" level="INFO">${user_id} = ((88889773, '32102151361501230411', 100000, 6135, 1, '32102151361500012119', '20170728170304YDT051682', Decimal('2.00'), 1, 13, 2, 0, datetime.datetime(2017, 7, 28, 17, 3, 7), datetime.datetime(2017, ...</msg>
<status status="PASS" endtime="20170728 17:02:02.234" starttime="20170728 17:02:02.218"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 17:02:02.237" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:02:02.237" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:02:02.238" starttime="20170728 17:02:02.235"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:02:02.239" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:02.240" starttime="20170728 17:02:02.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:02:02.242" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:02:02.242" starttime="20170728 17:02:02.241"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:02.246" starttime="20170728 17:02:02.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:02:02.248" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:02:02.249" starttime="20170728 17:02:02.247"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:02:02.252" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:02.253" starttime="20170728 17:02:02.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no的值正确</arg>
</arguments>
<msg timestamp="20170728 17:02:02.256" level="INFO">channel_no的值正确</msg>
<status status="PASS" endtime="20170728 17:02:02.257" starttime="20170728 17:02:02.255"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${args11}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${orderNum}</arg>
</arguments>
<assign>
<var>${bill_order_num}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:02.263" starttime="20170728 17:02:02.261"></status>
</kw>
<msg timestamp="20170728 17:02:02.264" level="INFO">${bill_order_num} = 32102151361500012119</msg>
<status status="PASS" endtime="20170728 17:02:02.264" starttime="20170728 17:02:02.259"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>${bill_order_num}</arg>
</arguments>
<msg timestamp="20170728 17:02:02.267" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:02.268" starttime="20170728 17:02:02.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170728 17:02:02.270" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170728 17:02:02.271" starttime="20170728 17:02:02.269"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>13</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:02.286" starttime="20170728 17:02:02.285"></status>
</kw>
<msg timestamp="20170728 17:02:02.287" level="INFO">${event_code} = 13</msg>
<status status="PASS" endtime="20170728 17:02:02.288" starttime="20170728 17:02:02.274"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:02:02.293" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:02:02.293" starttime="20170728 17:02:02.291"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:02.300" starttime="20170728 17:02:02.298"></status>
</kw>
<msg timestamp="20170728 17:02:02.301" level="INFO">${event_code_after} = 13</msg>
<status status="PASS" endtime="20170728 17:02:02.302" starttime="20170728 17:02:02.295"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:02:02.305" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:02:02.305" starttime="20170728 17:02:02.303"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:02.315" starttime="20170728 17:02:02.313"></status>
</kw>
<msg timestamp="20170728 17:02:02.317" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 17:02:02.319" starttime="20170728 17:02:02.307"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:02.326" starttime="20170728 17:02:02.325"></status>
</kw>
<msg timestamp="20170728 17:02:02.328" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:02:02.330" starttime="20170728 17:02:02.322"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:02:02.339" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:02:02.341" starttime="20170728 17:02:02.333"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:02.346" starttime="20170728 17:02:02.345"></status>
</kw>
<msg timestamp="20170728 17:02:02.348" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:02:02.349" starttime="20170728 17:02:02.342"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${total_amount_before}-${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:02.359" starttime="20170728 17:02:02.357"></status>
</kw>
<msg timestamp="20170728 17:02:02.361" level="INFO">${total_amount} = 50421.0</msg>
<status status="PASS" endtime="20170728 17:02:02.361" starttime="20170728 17:02:02.353"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:02.370" starttime="20170728 17:02:02.369"></status>
</kw>
<msg timestamp="20170728 17:02:02.371" level="INFO">${balance_amount} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:02:02.372" starttime="20170728 17:02:02.363"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:02.378" starttime="20170728 17:02:02.376"></status>
</kw>
<msg timestamp="20170728 17:02:02.379" level="INFO">${frozen_amount} = 826.0</msg>
<status status="PASS" endtime="20170728 17:02:02.380" starttime="20170728 17:02:02.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:02:02.383" level="INFO">${event_code} = 13</msg>
<status status="PASS" endtime="20170728 17:02:02.385" starttime="20170728 17:02:02.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:02:02.388" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 17:02:02.389" starttime="20170728 17:02:02.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:02:02.392" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:02:02.393" starttime="20170728 17:02:02.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:02:02.397" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:02:02.398" starttime="20170728 17:02:02.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:02:02.401" level="INFO">${total_amount} = 50421.0</msg>
<status status="PASS" endtime="20170728 17:02:02.402" starttime="20170728 17:02:02.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:02:02.405" level="INFO">${balance_amount} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:02:02.406" starttime="20170728 17:02:02.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:02:02.409" level="INFO">${frozen_amount} = 826.0</msg>
<status status="PASS" endtime="20170728 17:02:02.409" starttime="20170728 17:02:02.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:02:02.415" level="INFO">${event_code_after} = 13</msg>
<status status="PASS" endtime="20170728 17:02:02.417" starttime="20170728 17:02:02.412"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:02.418" starttime="20170728 17:02:02.272"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170728 17:02:02.422" level="INFO">${pay_no_after} = 20170728170304YDT051682</msg>
<status status="PASS" endtime="20170728 17:02:02.422" starttime="20170728 17:02:02.420"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170728 17:02:02.425" level="INFO">Length is 23</msg>
<msg timestamp="20170728 17:02:02.426" level="INFO">${pay_no_after_length} = 23</msg>
<status status="PASS" endtime="20170728 17:02:02.427" starttime="20170728 17:02:02.424"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:02:02.431" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:02.432" starttime="20170728 17:02:02.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170728 17:02:02.435" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170728 17:02:02.436" starttime="20170728 17:02:02.434"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:02.439" starttime="20170728 17:02:02.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 17:02:02.441" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 17:02:02.442" starttime="20170728 17:02:02.440"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:02:02.445" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:02.446" starttime="20170728 17:02:02.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 17:02:02.450" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 17:02:02.451" starttime="20170728 17:02:02.448"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][9]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:02:02.456" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:02.457" starttime="20170728 17:02:02.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 17:02:02.459" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 17:02:02.460" starttime="20170728 17:02:02.458"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 17:02:02.462" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:02.463" starttime="20170728 17:02:02.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170728 17:02:02.466" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170728 17:02:02.467" starttime="20170728 17:02:02.464"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:02:02.470" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:02.471" starttime="20170728 17:02:02.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:02:02.475" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:02:02.477" starttime="20170728 17:02:02.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 17:02:02.480" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 17:02:02.480" starttime="20170728 17:02:02.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170728 17:02:02.483" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170728 17:02:02.484" starttime="20170728 17:02:02.482"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170728 17:02:02.487" level="INFO">${user_id[0][0]_transaction} = 88889773</msg>
<status status="PASS" endtime="20170728 17:02:02.488" starttime="20170728 17:02:02.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170728 17:02:02.491" level="INFO">${user_id[0][0]_transaction} = 88889773</msg>
<status status="PASS" endtime="20170728 17:02:02.491" starttime="20170728 17:02:02.489"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id[0][0]}'</arg>
</arguments>
<assign>
<var>${user_id_unilateral_delete1}</var>
</assign>
<msg timestamp="20170728 17:02:02.496" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88889773' </msg>
<msg timestamp="20170728 17:02:02.534" level="INFO">${user_id_unilateral_delete1} = None</msg>
<status status="PASS" endtime="20170728 17:02:02.536" starttime="20170728 17:02:02.493"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:02.537" starttime="20170728 17:02:02.144"></status>
</kw>
<kw name="表account_amount的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_amount</arg>
</arguments>
<msg timestamp="20170728 17:02:02.542" level="INFO">现在开始校验表account_amount</msg>
<status status="PASS" endtime="20170728 17:02:02.543" starttime="20170728 17:02:02.541"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:02:02.550" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:02:02.560" starttime="20170728 17:02:02.548"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:02.561" starttime="20170728 17:02:02.546"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:02.563" starttime="20170728 17:02:02.544"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time1}</var>
</assign>
<msg timestamp="20170728 17:02:02.565" level="INFO">${current_time1} = 2017-07-28 17:02:02.565</msg>
<status status="PASS" endtime="20170728 17:02:02.566" starttime="20170728 17:02:02.564"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_before_30}</var>
</assign>
<msg timestamp="20170728 17:02:02.569" level="INFO">${current_time1_before_30} = 2017-07-28 17:01:02.565</msg>
<status status="PASS" endtime="20170728 17:02:02.570" starttime="20170728 17:02:02.567"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_after_30}</var>
</assign>
<msg timestamp="20170728 17:02:02.573" level="INFO">${current_time1_after_30} = 2017-07-28 17:03:02.565</msg>
<status status="PASS" endtime="20170728 17:02:02.574" starttime="20170728 17:02:02.571"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:02:02.577" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 17:02:02.584" level="INFO">${user_id} = ((12449, 6135, Decimal('50421.00'), Decimal('49595.00'), Decimal('826.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 3, 7), 0),)</msg>
<status status="PASS" endtime="20170728 17:02:02.585" starttime="20170728 17:02:02.575"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>13</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:02.594" starttime="20170728 17:02:02.593"></status>
</kw>
<msg timestamp="20170728 17:02:02.595" level="INFO">${event_code} = 13</msg>
<status status="PASS" endtime="20170728 17:02:02.596" starttime="20170728 17:02:02.589"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:02:02.600" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:02:02.601" starttime="20170728 17:02:02.597"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:02.606" starttime="20170728 17:02:02.605"></status>
</kw>
<msg timestamp="20170728 17:02:02.608" level="INFO">${event_code_after} = 13</msg>
<status status="PASS" endtime="20170728 17:02:02.608" starttime="20170728 17:02:02.602"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:02:02.612" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:02:02.612" starttime="20170728 17:02:02.610"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:02.620" starttime="20170728 17:02:02.618"></status>
</kw>
<msg timestamp="20170728 17:02:02.621" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 17:02:02.621" starttime="20170728 17:02:02.614"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:02.627" starttime="20170728 17:02:02.625"></status>
</kw>
<msg timestamp="20170728 17:02:02.628" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:02:02.628" starttime="20170728 17:02:02.622"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:02:02.631" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:02:02.632" starttime="20170728 17:02:02.629"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:02.639" starttime="20170728 17:02:02.637"></status>
</kw>
<msg timestamp="20170728 17:02:02.640" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:02:02.640" starttime="20170728 17:02:02.633"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${total_amount_before}-${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:02.647" starttime="20170728 17:02:02.645"></status>
</kw>
<msg timestamp="20170728 17:02:02.648" level="INFO">${total_amount} = 50421.0</msg>
<status status="PASS" endtime="20170728 17:02:02.649" starttime="20170728 17:02:02.642"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:02.656" starttime="20170728 17:02:02.655"></status>
</kw>
<msg timestamp="20170728 17:02:02.657" level="INFO">${balance_amount} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:02:02.658" starttime="20170728 17:02:02.651"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:02.665" starttime="20170728 17:02:02.663"></status>
</kw>
<msg timestamp="20170728 17:02:02.667" level="INFO">${frozen_amount} = 826.0</msg>
<status status="PASS" endtime="20170728 17:02:02.668" starttime="20170728 17:02:02.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:02:02.671" level="INFO">${event_code} = 13</msg>
<status status="PASS" endtime="20170728 17:02:02.672" starttime="20170728 17:02:02.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:02:02.676" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 17:02:02.677" starttime="20170728 17:02:02.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:02:02.681" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:02:02.682" starttime="20170728 17:02:02.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:02:02.685" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:02:02.686" starttime="20170728 17:02:02.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:02:02.689" level="INFO">${total_amount} = 50421.0</msg>
<status status="PASS" endtime="20170728 17:02:02.689" starttime="20170728 17:02:02.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:02:02.693" level="INFO">${balance_amount} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:02:02.694" starttime="20170728 17:02:02.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:02:02.696" level="INFO">${frozen_amount} = 826.0</msg>
<status status="PASS" endtime="20170728 17:02:02.697" starttime="20170728 17:02:02.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:02:02.700" level="INFO">${event_code_after} = 13</msg>
<status status="PASS" endtime="20170728 17:02:02.701" starttime="20170728 17:02:02.698"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:02.702" starttime="20170728 17:02:02.587"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:02:02.705" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:02.706" starttime="20170728 17:02:02.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:02:02.709" level="INFO">total_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:02:02.710" starttime="20170728 17:02:02.708"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:02.713" starttime="20170728 17:02:02.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:02:02.715" level="INFO">balance_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:02:02.716" starttime="20170728 17:02:02.714"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:02:02.719" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:02.720" starttime="20170728 17:02:02.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:02:02.722" level="INFO">frozen_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:02:02.723" starttime="20170728 17:02:02.721"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:02:02.728" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:02.729" starttime="20170728 17:02:02.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:02:02.731" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:02:02.732" starttime="20170728 17:02:02.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:02:02.735" level="INFO">表account_amount校验成功！</msg>
<status status="PASS" endtime="20170728 17:02:02.736" starttime="20170728 17:02:02.734"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:02.737" starttime="20170728 17:02:02.539"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<msg timestamp="20170728 17:02:02.741" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=888888 </msg>
<status status="PASS" endtime="20170728 17:02:02.787" starttime="20170728 17:02:02.739"></status>
</kw>
<kw name="艾佳币恢复数目" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:02:02.793" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:02:02.803" starttime="20170728 17:02:02.792"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:02.804" starttime="20170728 17:02:02.791"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:02.805" starttime="20170728 17:02:02.790"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount \ SET total_amount=${database[0][2]},balance_amount=${database[0][3]},frozen_amount=${database[0][4]}where account_id="${account_id}";</arg>
</arguments>
<msg timestamp="20170728 17:02:02.807" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount  SET total_amount=50423.00,balance_amount=49595.00,frozen_amount=828.00where account_id="6135"; </msg>
<status status="PASS" endtime="20170728 17:02:02.856" starttime="20170728 17:02:02.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170728 17:02:02.858" level="INFO">成功</msg>
<status status="PASS" endtime="20170728 17:02:02.859" starttime="20170728 17:02:02.857"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:02.859" starttime="20170728 17:02:02.788"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:02.860" critical="yes" starttime="20170728 17:02:01.358"></status>
</test>
<status status="PASS" endtime="20170728 17:02:02.861" starttime="20170728 17:02:01.329"></status>
</suite>
<status status="PASS" endtime="20170728 17:02:02.871" starttime="20170728 17:01:55.531"></status>
</suite>
<status status="PASS" endtime="20170728 17:02:02.880" starttime="20170728 17:01:55.344"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="7">Critical Tests</stat>
<stat fail="0" pass="7">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="账户中心" pass="7">账户中心</stat>
<stat fail="0" id="s1-s1" name="订单" pass="7">账户中心.订单</stat>
<stat fail="0" id="s1-s1-s1" name="订单取消支付（线上）" pass="1">账户中心.订单.订单取消支付（线上）</stat>
<stat fail="0" id="s1-s1-s2" name="订单支付冻结（线上）" pass="3">账户中心.订单.订单支付冻结（线上）</stat>
<stat fail="0" id="s1-s1-s3" name="订单支付退款（线上）" pass="2">账户中心.订单.订单支付退款（线上）</stat>
<stat fail="0" id="s1-s1-s4" name="订单确认支付（线上）" pass="1">账户中心.订单.订单确认支付（线上）</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
