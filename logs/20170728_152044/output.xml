<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170728 15:22:55.668" generator="Robot 3.0.2 (Python 2.7.8 on win32)">
<suite source="F:\logs and reports\账户中心" id="s1" name="账户中心">
<suite source="F:\logs and reports\账户中心\订单" id="s1-s1" name="订单">
<suite source="F:\logs and reports\账户中心\订单\订单支付退款（线上）.txt" id="s1-s1-s1" name="订单支付退款（线上）">
<test id="s1-s1-s1-t1" name="输入参数全部正确">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:22:56.198" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:22:56.214" starttime="20170728 15:22:56.175"></status>
</kw>
<status status="PASS" endtime="20170728 15:22:56.216" starttime="20170728 15:22:56.173"></status>
</kw>
<status status="PASS" endtime="20170728 15:22:56.217" starttime="20170728 15:22:56.171"></status>
</kw>
<kw name="清数据" library="myResource">
<arguments>
<arg>888888</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:22:56.223" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:22:56.230" starttime="20170728 15:22:56.222"></status>
</kw>
<status status="PASS" endtime="20170728 15:22:56.232" starttime="20170728 15:22:56.221"></status>
</kw>
<status status="PASS" endtime="20170728 15:22:56.233" starttime="20170728 15:22:56.219"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170728 15:22:56.237" level="INFO">Executing : Query  |  select * from ajb_account_transaction where id=888888 </msg>
<msg timestamp="20170728 15:22:56.244" level="INFO">${check} = ()</msg>
<status status="PASS" endtime="20170728 15:22:56.245" starttime="20170728 15:22:56.234"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170728 15:22:56.247" level="INFO">Length is 0</msg>
<msg timestamp="20170728 15:22:56.248" level="INFO">${check_length} = 0</msg>
<status status="PASS" endtime="20170728 15:22:56.249" starttime="20170728 15:22:56.246"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} != 0</arg>
<arg>execute sql string</arg>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>数据库之前没有数据</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库之前没有数据</arg>
</arguments>
<msg timestamp="20170728 15:22:56.252" level="INFO">数据库之前没有数据</msg>
<status status="PASS" endtime="20170728 15:22:56.253" starttime="20170728 15:22:56.251"></status>
</kw>
<status status="PASS" endtime="20170728 15:22:56.254" starttime="20170728 15:22:56.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库里面的这条数据清理成功啦。</arg>
</arguments>
<msg timestamp="20170728 15:22:56.256" level="INFO">数据库里面的这条数据清理成功啦。</msg>
<status status="PASS" endtime="20170728 15:22:56.256" starttime="20170728 15:22:56.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_delete}</arg>
</arguments>
<msg timestamp="20170728 15:22:56.259" level="INFO">${id_delete} = 888888</msg>
<status status="PASS" endtime="20170728 15:22:56.261" starttime="20170728 15:22:56.258"></status>
</kw>
<status status="PASS" endtime="20170728 15:22:56.262" starttime="20170728 15:22:56.218"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("${id_delete}","32102151361500885834","1000000","6131","1","32102151361500885834","","2","1","13","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170728 15:22:56.265" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("888888","32102151361500885834","1000000","6131","1","32102151361500885834","","2","1","13","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170728 15:22:56.364" starttime="20170728 15:22:56.264"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>32102151361500885834</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 15:22:56.371" level="INFO">${args11} = 32102151361500885834</msg>
<status status="PASS" endtime="20170728 15:22:56.373" starttime="20170728 15:22:56.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 15:22:56.378" level="INFO">${args22} = </msg>
<status status="PASS" endtime="20170728 15:22:56.379" starttime="20170728 15:22:56.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 15:22:56.384" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170728 15:22:56.387" starttime="20170728 15:22:56.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 15:22:56.392" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 15:22:56.393" starttime="20170728 15:22:56.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 15:22:56.398" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</msg>
<status status="PASS" endtime="20170728 15:22:56.400" starttime="20170728 15:22:56.396"></status>
</kw>
<status status="PASS" endtime="20170728 15:22:56.402" starttime="20170728 15:22:56.366"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num='${args11}' and event_code=13</arg>
</arguments>
<assign>
<var>${user_id_refund}</var>
</assign>
<msg timestamp="20170728 15:22:56.408" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num='32102151361500885834' and event_code=13 </msg>
<msg timestamp="20170728 15:22:56.422" level="INFO">${user_id_refund} = ((888888, '32102151361500885834', 1000000, 6131, 1, '32102151361500885834', '', Decimal('2.00'), 1, 13, 2, 0, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)),)</msg>
<status status="PASS" endtime="20170728 15:22:56.423" starttime="20170728 15:22:56.405"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${user_id_refund[0][2]}' and channel_no=1</arg>
</arguments>
<assign>
<var>${account_id_bos}</var>
</assign>
<msg timestamp="20170728 15:22:56.429" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='1000000' and channel_no=1 </msg>
<msg timestamp="20170728 15:22:56.443" level="INFO">${account_id_bos} = ((6086, '32102151361499849639', 1000000, 6131, 1, 2, 0, datetime.datetime(2017, 7, 12, 20, 3, 46), datetime.datetime(2017, 7, 12, 20, 3, 46)), (100000000000L, '32102151361499849639', 1000000, 6131, 1,...</msg>
<status status="PASS" endtime="20170728 15:22:56.445" starttime="20170728 15:22:56.426"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_id_bos[0][3]}</arg>
</arguments>
<assign>
<var>${account_id_boss}</var>
</assign>
<msg timestamp="20170728 15:22:56.450" level="INFO">${account_id_boss} = 6131</msg>
<status status="PASS" endtime="20170728 15:22:56.451" starttime="20170728 15:22:56.447"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${user_id_refund[0][2]}' and channel_no=2</arg>
</arguments>
<assign>
<var>${account_id_ap}</var>
</assign>
<msg timestamp="20170728 15:22:56.456" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='1000000' and channel_no=2 </msg>
<msg timestamp="20170728 15:22:56.478" level="INFO">${account_id_ap} = ((10212, '32102151361500285171', 1000000, 6161, 2, 2, 0, datetime.datetime(2017, 7, 19, 17, 6, 7), datetime.datetime(2017, 7, 19, 17, 6, 7)),)</msg>
<status status="PASS" endtime="20170728 15:22:56.480" starttime="20170728 15:22:56.453"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_id_ap[0][3]}</arg>
</arguments>
<assign>
<var>${account_id_app}</var>
</assign>
<msg timestamp="20170728 15:22:56.485" level="INFO">${account_id_app} = 6161</msg>
<status status="PASS" endtime="20170728 15:22:56.486" starttime="20170728 15:22:56.482"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_boss}'</arg>
</arguments>
<assign>
<var>${amount_boss}</var>
</assign>
<msg timestamp="20170728 15:22:56.491" level="INFO">Executing : Query  |  select * from account_amount where account_id='6131' </msg>
<msg timestamp="20170728 15:22:56.503" level="INFO">${amount_boss} = ((12445, 6131, Decimal('50418.00'), Decimal('49596.00'), Decimal('822.00'), datetime.datetime(2017, 7, 12, 20, 3, 46), datetime.datetime(2017, 7, 28, 14, 27, 14), 0),)</msg>
<status status="PASS" endtime="20170728 15:22:56.504" starttime="20170728 15:22:56.488"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_app}'</arg>
</arguments>
<assign>
<var>${amount_app}</var>
</assign>
<msg timestamp="20170728 15:22:56.508" level="INFO">Executing : Query  |  select * from account_amount where account_id='6161' </msg>
<msg timestamp="20170728 15:22:56.517" level="INFO">${amount_app} = ((12475, 6161, Decimal('50420.00'), Decimal('49598.00'), Decimal('822.00'), datetime.datetime(2017, 7, 19, 17, 6, 7), datetime.datetime(2017, 7, 28, 14, 34, 37), 0),)</msg>
<status status="PASS" endtime="20170728 15:22:56.518" starttime="20170728 15:22:56.506"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 15:22:56.523" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</msg>
<status status="PASS" endtime="20170728 15:22:56.524" starttime="20170728 15:22:56.520"></status>
</kw>
<kw name="Ajb Withdraw Cancel" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170728 15:22:56.864" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 15:22:56.865" starttime="20170728 15:22:56.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 15:22:56.867" level="INFO">200</msg>
<status status="PASS" endtime="20170728 15:22:56.868" starttime="20170728 15:22:56.866"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 15:22:56.870" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:22:56.870" starttime="20170728 15:22:56.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 15:22:56.872" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 15:22:56.872" starttime="20170728 15:22:56.871"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 15:22:56.876" level="INFO">To JSON using : content={"data":null,"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 15:22:56.876" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 15:22:56.877" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': None, u'success': True}</msg>
<status status="PASS" endtime="20170728 15:22:56.878" starttime="20170728 15:22:56.874"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 15:22:56.880" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:22:56.881" starttime="20170728 15:22:56.879"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 15:22:56.883" starttime="20170728 15:22:56.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 15:22:56.884" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 15:22:56.885" starttime="20170728 15:22:56.884"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 15:22:56.888" level="INFO">${current_time} = 2017-07-28 15:22:56.888</msg>
<status status="PASS" endtime="20170728 15:22:56.889" starttime="20170728 15:22:56.887"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>15 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 15:22:56.898" level="INFO">${current_time_before_30} = 2017-07-28 15:22:41.888</msg>
<status status="PASS" endtime="20170728 15:22:56.899" starttime="20170728 15:22:56.890"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 15:22:56.903" level="INFO">${current_time_after_30} = 2017-07-28 15:24:01.888</msg>
<status status="PASS" endtime="20170728 15:22:56.904" starttime="20170728 15:22:56.901"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where channel_no=14 and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 15:22:56.906" level="INFO">Executing : Query  |  select * from account_unilateral_bill where channel_no=14 and update_time between' 2017-07-28 15:22:41.888' and '2017-07-28 15:24:01.888' </msg>
<msg timestamp="20170728 15:22:56.912" level="FAIL">InternalError: (1054, u"Unknown column 'channel_no' in 'where clause'")</msg>
<status status="FAIL" endtime="20170728 15:22:56.913" starttime="20170728 15:22:56.905"></status>
</kw>
<status status="FAIL" endtime="20170728 15:22:56.914" critical="yes" starttime="20170728 15:22:56.167">InternalError: (1054, u"Unknown column 'channel_no' in 'where clause'")</status>
</test>
<status status="FAIL" endtime="20170728 15:22:56.916" starttime="20170728 15:22:55.885"></status>
</suite>
<status status="FAIL" endtime="20170728 15:22:56.922" starttime="20170728 15:22:55.881"></status>
</suite>
<status status="FAIL" endtime="20170728 15:22:56.925" starttime="20170728 15:22:55.697"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="0">Critical Tests</stat>
<stat fail="1" pass="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="1" id="s1" name="账户中心" pass="0">账户中心</stat>
<stat fail="1" id="s1-s1" name="订单" pass="0">账户中心.订单</stat>
<stat fail="1" id="s1-s1-s1" name="订单支付退款（线上）" pass="0">账户中心.订单.订单支付退款（线上）</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
