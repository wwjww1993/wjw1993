<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170728 15:24:32.621" generator="Robot 3.0.2 (Python 2.7.8 on win32)">
<suite source="F:\logs and reports\账户中心" id="s1" name="账户中心">
<suite source="F:\logs and reports\账户中心\订单" id="s1-s1" name="订单">
<suite source="F:\logs and reports\账户中心\订单\订单支付退款（线上）.txt" id="s1-s1-s1" name="订单支付退款（线上）">
<test id="s1-s1-s1-t1" name="输入参数全部正确">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:24:33.143" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:24:33.162" starttime="20170728 15:24:33.123"></status>
</kw>
<status status="PASS" endtime="20170728 15:24:33.163" starttime="20170728 15:24:33.121"></status>
</kw>
<status status="PASS" endtime="20170728 15:24:33.164" starttime="20170728 15:24:33.119"></status>
</kw>
<kw name="清数据" library="myResource">
<arguments>
<arg>888888</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:24:33.169" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:24:33.178" starttime="20170728 15:24:33.168"></status>
</kw>
<status status="PASS" endtime="20170728 15:24:33.179" starttime="20170728 15:24:33.166"></status>
</kw>
<status status="PASS" endtime="20170728 15:24:33.180" starttime="20170728 15:24:33.165"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170728 15:24:33.182" level="INFO">Executing : Query  |  select * from ajb_account_transaction where id=888888 </msg>
<msg timestamp="20170728 15:24:33.190" level="INFO">${check} = ((888888, '32102151361500885834', 1000000, 6131, 1, '32102151361500885834', '', Decimal('2.00'), 1, 13, 2, 0, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)),)</msg>
<status status="PASS" endtime="20170728 15:24:33.191" starttime="20170728 15:24:33.181"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170728 15:24:33.193" level="INFO">Length is 1</msg>
<msg timestamp="20170728 15:24:33.193" level="INFO">${check_length} = 1</msg>
<status status="PASS" endtime="20170728 15:24:33.194" starttime="20170728 15:24:33.192"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} != 0</arg>
<arg>execute sql string</arg>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>数据库之前没有数据</arg>
</arguments>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<msg timestamp="20170728 15:24:33.197" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=888888 </msg>
<status status="PASS" endtime="20170728 15:24:33.261" starttime="20170728 15:24:33.196"></status>
</kw>
<status status="PASS" endtime="20170728 15:24:33.264" starttime="20170728 15:24:33.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库里面的这条数据清理成功啦。</arg>
</arguments>
<msg timestamp="20170728 15:24:33.269" level="INFO">数据库里面的这条数据清理成功啦。</msg>
<status status="PASS" endtime="20170728 15:24:33.270" starttime="20170728 15:24:33.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_delete}</arg>
</arguments>
<msg timestamp="20170728 15:24:33.274" level="INFO">${id_delete} = 888888</msg>
<status status="PASS" endtime="20170728 15:24:33.275" starttime="20170728 15:24:33.272"></status>
</kw>
<status status="PASS" endtime="20170728 15:24:33.276" starttime="20170728 15:24:33.164"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("${id_delete}","32102151361500885834","1000000","6131","1","32102151361500885834","","2","1","13","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170728 15:24:33.279" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("888888","32102151361500885834","1000000","6131","1","32102151361500885834","","2","1","13","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170728 15:24:33.385" starttime="20170728 15:24:33.278"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>32102151361500885834</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 15:24:33.393" level="INFO">${args11} = 32102151361500885834</msg>
<status status="PASS" endtime="20170728 15:24:33.394" starttime="20170728 15:24:33.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 15:24:33.397" level="INFO">${args22} = </msg>
<status status="PASS" endtime="20170728 15:24:33.397" starttime="20170728 15:24:33.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 15:24:33.402" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170728 15:24:33.403" starttime="20170728 15:24:33.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 15:24:33.406" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 15:24:33.408" starttime="20170728 15:24:33.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 15:24:33.411" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</msg>
<status status="PASS" endtime="20170728 15:24:33.412" starttime="20170728 15:24:33.410"></status>
</kw>
<status status="PASS" endtime="20170728 15:24:33.413" starttime="20170728 15:24:33.387"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num='${args11}' and event_code=13</arg>
</arguments>
<assign>
<var>${user_id_refund}</var>
</assign>
<msg timestamp="20170728 15:24:33.416" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num='32102151361500885834' and event_code=13 </msg>
<msg timestamp="20170728 15:24:33.445" level="INFO">${user_id_refund} = ((888888, '32102151361500885834', 1000000, 6131, 1, '32102151361500885834', '', Decimal('2.00'), 1, 13, 2, 0, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)),)</msg>
<status status="PASS" endtime="20170728 15:24:33.446" starttime="20170728 15:24:33.414"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${user_id_refund[0][2]}' and channel_no=1</arg>
</arguments>
<assign>
<var>${account_id_bos}</var>
</assign>
<msg timestamp="20170728 15:24:33.448" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='1000000' and channel_no=1 </msg>
<msg timestamp="20170728 15:24:33.472" level="INFO">${account_id_bos} = ((6086, '32102151361499849639', 1000000, 6131, 1, 2, 0, datetime.datetime(2017, 7, 12, 20, 3, 46), datetime.datetime(2017, 7, 12, 20, 3, 46)), (100000000000L, '32102151361499849639', 1000000, 6131, 1,...</msg>
<status status="PASS" endtime="20170728 15:24:33.473" starttime="20170728 15:24:33.446"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_id_bos[0][3]}</arg>
</arguments>
<assign>
<var>${account_id_boss}</var>
</assign>
<msg timestamp="20170728 15:24:33.475" level="INFO">${account_id_boss} = 6131</msg>
<status status="PASS" endtime="20170728 15:24:33.476" starttime="20170728 15:24:33.474"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${user_id_refund[0][2]}' and channel_no=2</arg>
</arguments>
<assign>
<var>${account_id_ap}</var>
</assign>
<msg timestamp="20170728 15:24:33.478" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='1000000' and channel_no=2 </msg>
<msg timestamp="20170728 15:24:33.505" level="INFO">${account_id_ap} = ((10212, '32102151361500285171', 1000000, 6161, 2, 2, 0, datetime.datetime(2017, 7, 19, 17, 6, 7), datetime.datetime(2017, 7, 19, 17, 6, 7)),)</msg>
<status status="PASS" endtime="20170728 15:24:33.507" starttime="20170728 15:24:33.477"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_id_ap[0][3]}</arg>
</arguments>
<assign>
<var>${account_id_app}</var>
</assign>
<msg timestamp="20170728 15:24:33.509" level="INFO">${account_id_app} = 6161</msg>
<status status="PASS" endtime="20170728 15:24:33.509" starttime="20170728 15:24:33.508"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_boss}'</arg>
</arguments>
<assign>
<var>${amount_boss}</var>
</assign>
<msg timestamp="20170728 15:24:33.511" level="INFO">Executing : Query  |  select * from account_amount where account_id='6131' </msg>
<msg timestamp="20170728 15:24:33.537" level="INFO">${amount_boss} = ((12445, 6131, Decimal('50418.00'), Decimal('49596.00'), Decimal('822.00'), datetime.datetime(2017, 7, 12, 20, 3, 46), datetime.datetime(2017, 7, 28, 14, 27, 14), 0),)</msg>
<status status="PASS" endtime="20170728 15:24:33.538" starttime="20170728 15:24:33.510"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_app}'</arg>
</arguments>
<assign>
<var>${amount_app}</var>
</assign>
<msg timestamp="20170728 15:24:33.541" level="INFO">Executing : Query  |  select * from account_amount where account_id='6161' </msg>
<msg timestamp="20170728 15:24:33.560" level="INFO">${amount_app} = ((12475, 6161, Decimal('50422.00'), Decimal('49600.00'), Decimal('822.00'), datetime.datetime(2017, 7, 19, 17, 6, 7), datetime.datetime(2017, 7, 28, 15, 24, 2), 0),)</msg>
<status status="PASS" endtime="20170728 15:24:33.561" starttime="20170728 15:24:33.539"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 15:24:33.563" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</msg>
<status status="PASS" endtime="20170728 15:24:33.564" starttime="20170728 15:24:33.562"></status>
</kw>
<kw name="Ajb Withdraw Cancel" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170728 15:24:34.629" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 15:24:34.630" starttime="20170728 15:24:33.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 15:24:34.632" level="INFO">200</msg>
<status status="PASS" endtime="20170728 15:24:34.633" starttime="20170728 15:24:34.631"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 15:24:34.635" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:24:34.636" starttime="20170728 15:24:34.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 15:24:34.639" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 15:24:34.640" starttime="20170728 15:24:34.638"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 15:24:34.643" level="INFO">To JSON using : content={"data":null,"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 15:24:34.643" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 15:24:34.644" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': None, u'success': True}</msg>
<status status="PASS" endtime="20170728 15:24:34.645" starttime="20170728 15:24:34.641"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 15:24:34.648" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:24:34.649" starttime="20170728 15:24:34.647"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 15:24:34.652" starttime="20170728 15:24:34.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 15:24:34.656" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 15:24:34.658" starttime="20170728 15:24:34.654"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 15:24:34.661" level="INFO">${current_time} = 2017-07-28 15:24:34.661</msg>
<status status="PASS" endtime="20170728 15:24:34.661" starttime="20170728 15:24:34.659"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>15 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 15:24:34.668" level="INFO">${current_time_before_30} = 2017-07-28 15:24:19.661</msg>
<status status="PASS" endtime="20170728 15:24:34.669" starttime="20170728 15:24:34.662"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 15:24:34.673" level="INFO">${current_time_after_30} = 2017-07-28 15:25:39.661</msg>
<status status="PASS" endtime="20170728 15:24:34.674" starttime="20170728 15:24:34.670"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where event_code=14 and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 15:24:34.676" level="INFO">Executing : Query  |  select * from account_unilateral_bill where event_code=14 and update_time between' 2017-07-28 15:24:19.661' and '2017-07-28 15:25:39.661' </msg>
<msg timestamp="20170728 15:24:34.728" level="INFO">${user_id} = ((6909, '32102151361501207704', 1, 2, '32102151361501207703', 1, 14, 3, Decimal('-2.00'), None, datetime.datetime(2017, 7, 28, 15, 25, 39), datetime.datetime(2017, 7, 28, 15, 25, 39), 0), (6910, '3210...</msg>
<status status="PASS" endtime="20170728 15:24:34.729" starttime="20170728 15:24:34.675"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170728 15:24:34.731" level="INFO">Length is 20</msg>
<msg timestamp="20170728 15:24:34.731" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170728 15:24:34.732" starttime="20170728 15:24:34.730"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 15:24:34.735" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:24:34.736" starttime="20170728 15:24:34.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 15:24:34.737" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 15:24:34.738" starttime="20170728 15:24:34.737"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_refund[0][2]}</arg>
</arguments>
<msg timestamp="20170728 15:24:34.740" level="FAIL">1 != 1000000</msg>
<status status="FAIL" endtime="20170728 15:24:34.741" starttime="20170728 15:24:34.739"></status>
</kw>
<status status="FAIL" endtime="20170728 15:24:34.742" critical="yes" starttime="20170728 15:24:33.116">1 != 1000000</status>
</test>
<status status="FAIL" endtime="20170728 15:24:34.743" starttime="20170728 15:24:32.847"></status>
</suite>
<status status="FAIL" endtime="20170728 15:24:34.752" starttime="20170728 15:24:32.842"></status>
</suite>
<status status="FAIL" endtime="20170728 15:24:34.757" starttime="20170728 15:24:32.653"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="0">Critical Tests</stat>
<stat fail="1" pass="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="1" id="s1" name="账户中心" pass="0">账户中心</stat>
<stat fail="1" id="s1-s1" name="订单" pass="0">账户中心.订单</stat>
<stat fail="1" id="s1-s1-s1" name="订单支付退款（线上）" pass="0">账户中心.订单.订单支付退款（线上）</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
