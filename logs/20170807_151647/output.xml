<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170807 15:17:02.678" generator="Robot 3.0.2 (Python 2.7.8 on win32)">
<suite source="F:\logs and reports\账户中心" id="s1" name="账户中心">
<suite source="F:\logs and reports\账户中心\订单" id="s1-s1" name="订单">
<suite source="F:\logs and reports\账户中心\订单\订单支付退款（线上）.txt" id="s1-s1-s1" name="订单支付退款（线上）">
<test id="s1-s1-s1-t1" name="APP订单退款时调用，输入正确的订单号，交易已经完成退款，艾佳币退回用户账户">
<kw name="参数配置" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170807 15:17:03.099" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170807 15:17:03.146" starttime="20170807 15:17:03.083"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:03.146" starttime="20170807 15:17:03.083"></status>
</kw>
<kw name="输入拥有不同类型账户的用户user_id" library="myResource">
<arguments>
<arg>100000</arg>
<arg>100000</arg>
<arg>123456781</arg>
<arg>http://192.168.1.31:10003</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:17:03.146" level="INFO">${boss_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170807 15:17:03.146" starttime="20170807 15:17:03.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:17:03.146" level="INFO">${app_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170807 15:17:03.146" starttime="20170807 15:17:03.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${no_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:17:03.146" level="INFO">${no_user_account_id} = 123456781</msg>
<status status="PASS" endtime="20170807 15:17:03.146" starttime="20170807 15:17:03.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${environment}</arg>
</arguments>
<msg timestamp="20170807 15:17:03.146" level="INFO">${environment} = http://192.168.1.31:10003</msg>
<status status="PASS" endtime="20170807 15:17:03.146" starttime="20170807 15:17:03.146"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${boss_user_account_id}' and channel_no=1</arg>
</arguments>
<assign>
<var>${boss_channel_no1}</var>
</assign>
<msg timestamp="20170807 15:17:03.146" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=1 </msg>
<msg timestamp="20170807 15:17:03.161" level="INFO">${boss_channel_no1} = ((17140, '1686241311501149903', 100000, 5755, 1, 2, 0, datetime.datetime(2017, 7, 27, 18, 4, 58), datetime.datetime(2017, 7, 27, 18, 4, 58)),)</msg>
<status status="PASS" endtime="20170807 15:17:03.161" starttime="20170807 15:17:03.146"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${boss_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${boss_channel_no}</var>
</assign>
<msg timestamp="20170807 15:17:03.161" level="INFO">${boss_channel_no} = 5755</msg>
<status status="PASS" endtime="20170807 15:17:03.161" starttime="20170807 15:17:03.161"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${app_user_account_id}' and channel_no=2</arg>
</arguments>
<assign>
<var>${app_channel_no1}</var>
</assign>
<msg timestamp="20170807 15:17:03.161" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=2 </msg>
<msg timestamp="20170807 15:17:03.193" level="INFO">${app_channel_no1} = ((17141, '1686241311501149931', 100000, 5756, 2, 2, 0, datetime.datetime(2017, 7, 27, 18, 28, 2), datetime.datetime(2017, 7, 27, 18, 28, 2)),)</msg>
<status status="PASS" endtime="20170807 15:17:03.193" starttime="20170807 15:17:03.161"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${app_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${app_channel_no}</var>
</assign>
<msg timestamp="20170807 15:17:03.193" level="INFO">${app_channel_no} = 5756</msg>
<status status="PASS" endtime="20170807 15:17:03.193" starttime="20170807 15:17:03.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_channel_no}</arg>
</arguments>
<msg timestamp="20170807 15:17:03.193" level="INFO">${boss_channel_no} = 5755</msg>
<status status="PASS" endtime="20170807 15:17:03.193" starttime="20170807 15:17:03.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_channel_no}</arg>
</arguments>
<msg timestamp="20170807 15:17:03.193" level="INFO">${app_channel_no} = 5756</msg>
<status status="PASS" endtime="20170807 15:17:03.193" starttime="20170807 15:17:03.193"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:03.193" starttime="20170807 15:17:03.146"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:03.193" starttime="20170807 15:17:03.083"></status>
</kw>
<kw name="清数据" library="myResource">
<arguments>
<arg>888888</arg>
</arguments>
<kw name="参数配置" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170807 15:17:03.208" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170807 15:17:03.224" starttime="20170807 15:17:03.208"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:03.224" starttime="20170807 15:17:03.193"></status>
</kw>
<kw name="输入拥有不同类型账户的用户user_id" library="myResource">
<arguments>
<arg>100000</arg>
<arg>100000</arg>
<arg>123456781</arg>
<arg>http://192.168.1.31:10003</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:17:03.224" level="INFO">${boss_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170807 15:17:03.224" starttime="20170807 15:17:03.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:17:03.224" level="INFO">${app_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170807 15:17:03.224" starttime="20170807 15:17:03.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${no_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:17:03.224" level="INFO">${no_user_account_id} = 123456781</msg>
<status status="PASS" endtime="20170807 15:17:03.224" starttime="20170807 15:17:03.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${environment}</arg>
</arguments>
<msg timestamp="20170807 15:17:03.224" level="INFO">${environment} = http://192.168.1.31:10003</msg>
<status status="PASS" endtime="20170807 15:17:03.224" starttime="20170807 15:17:03.224"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${boss_user_account_id}' and channel_no=1</arg>
</arguments>
<assign>
<var>${boss_channel_no1}</var>
</assign>
<msg timestamp="20170807 15:17:03.224" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=1 </msg>
<msg timestamp="20170807 15:17:03.239" level="INFO">${boss_channel_no1} = ((17140, '1686241311501149903', 100000, 5755, 1, 2, 0, datetime.datetime(2017, 7, 27, 18, 4, 58), datetime.datetime(2017, 7, 27, 18, 4, 58)),)</msg>
<status status="PASS" endtime="20170807 15:17:03.239" starttime="20170807 15:17:03.224"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${boss_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${boss_channel_no}</var>
</assign>
<msg timestamp="20170807 15:17:03.239" level="INFO">${boss_channel_no} = 5755</msg>
<status status="PASS" endtime="20170807 15:17:03.239" starttime="20170807 15:17:03.239"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${app_user_account_id}' and channel_no=2</arg>
</arguments>
<assign>
<var>${app_channel_no1}</var>
</assign>
<msg timestamp="20170807 15:17:03.239" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=2 </msg>
<msg timestamp="20170807 15:17:03.255" level="INFO">${app_channel_no1} = ((17141, '1686241311501149931', 100000, 5756, 2, 2, 0, datetime.datetime(2017, 7, 27, 18, 28, 2), datetime.datetime(2017, 7, 27, 18, 28, 2)),)</msg>
<status status="PASS" endtime="20170807 15:17:03.255" starttime="20170807 15:17:03.239"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${app_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${app_channel_no}</var>
</assign>
<msg timestamp="20170807 15:17:03.255" level="INFO">${app_channel_no} = 5756</msg>
<status status="PASS" endtime="20170807 15:17:03.255" starttime="20170807 15:17:03.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_channel_no}</arg>
</arguments>
<msg timestamp="20170807 15:17:03.255" level="INFO">${boss_channel_no} = 5755</msg>
<status status="PASS" endtime="20170807 15:17:03.255" starttime="20170807 15:17:03.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_channel_no}</arg>
</arguments>
<msg timestamp="20170807 15:17:03.255" level="INFO">${app_channel_no} = 5756</msg>
<status status="PASS" endtime="20170807 15:17:03.255" starttime="20170807 15:17:03.255"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:03.255" starttime="20170807 15:17:03.224"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:03.255" starttime="20170807 15:17:03.193"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170807 15:17:03.255" level="INFO">Executing : Query  |  select * from ajb_account_transaction where id=888888 </msg>
<msg timestamp="20170807 15:17:03.271" level="INFO">${check} = ()</msg>
<status status="PASS" endtime="20170807 15:17:03.271" starttime="20170807 15:17:03.255"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170807 15:17:03.271" level="INFO">Length is 0</msg>
<msg timestamp="20170807 15:17:03.286" level="INFO">${check_length} = 0</msg>
<status status="PASS" endtime="20170807 15:17:03.286" starttime="20170807 15:17:03.271"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} != 0</arg>
<arg>execute sql string</arg>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>数据库之前没有数据</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库之前没有数据</arg>
</arguments>
<msg timestamp="20170807 15:17:03.286" level="INFO">数据库之前没有数据</msg>
<status status="PASS" endtime="20170807 15:17:03.286" starttime="20170807 15:17:03.286"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:03.286" starttime="20170807 15:17:03.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库里面的这条数据清理成功啦。</arg>
</arguments>
<msg timestamp="20170807 15:17:03.286" level="INFO">数据库里面的这条数据清理成功啦。</msg>
<status status="PASS" endtime="20170807 15:17:03.286" starttime="20170807 15:17:03.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_delete}</arg>
</arguments>
<msg timestamp="20170807 15:17:03.286" level="INFO">${id_delete} = 888888</msg>
<status status="PASS" endtime="20170807 15:17:03.286" starttime="20170807 15:17:03.286"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:03.286" starttime="20170807 15:17:03.193"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("${id_delete}","32102151361500885834","${boss_user_account_id}","${boss_channel_no}","1","32102151361500885834","","2","1","13","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170807 15:17:03.286" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("888888","32102151361500885834","100000","5755","1","32102151361500885834","","2","1","13","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170807 15:17:03.395" starttime="20170807 15:17:03.286"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>32102151361500885834</arg>
<arg>${environment}/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170807 15:17:03.411" level="INFO">${args11} = 32102151361500885834</msg>
<status status="PASS" endtime="20170807 15:17:03.411" starttime="20170807 15:17:03.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170807 15:17:03.411" level="INFO">${args22} = </msg>
<status status="PASS" endtime="20170807 15:17:03.411" starttime="20170807 15:17:03.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170807 15:17:03.411" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170807 15:17:03.411" starttime="20170807 15:17:03.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170807 15:17:03.411" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170807 15:17:03.427" starttime="20170807 15:17:03.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170807 15:17:03.427" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</msg>
<status status="PASS" endtime="20170807 15:17:03.427" starttime="20170807 15:17:03.427"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:03.427" starttime="20170807 15:17:03.395"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num='${args11}' and event_code=13</arg>
</arguments>
<assign>
<var>${user_id_refund}</var>
</assign>
<msg timestamp="20170807 15:17:03.427" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num='32102151361500885834' and event_code=13 </msg>
<msg timestamp="20170807 15:17:03.442" level="INFO">${user_id_refund} = ((888888, '32102151361500885834', 100000, 5755, 1, '32102151361500885834', '', Decimal('2.00'), 1, 13, 2, 0, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)),)</msg>
<status status="PASS" endtime="20170807 15:17:03.442" starttime="20170807 15:17:03.427"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${user_id_refund[0][2]}' and channel_no=1</arg>
</arguments>
<assign>
<var>${account_id_bos}</var>
</assign>
<msg timestamp="20170807 15:17:03.442" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=1 </msg>
<msg timestamp="20170807 15:17:03.458" level="INFO">${account_id_bos} = ((17140, '1686241311501149903', 100000, 5755, 1, 2, 0, datetime.datetime(2017, 7, 27, 18, 4, 58), datetime.datetime(2017, 7, 27, 18, 4, 58)),)</msg>
<status status="PASS" endtime="20170807 15:17:03.458" starttime="20170807 15:17:03.442"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_id_bos[0][3]}</arg>
</arguments>
<assign>
<var>${account_id_boss}</var>
</assign>
<msg timestamp="20170807 15:17:03.458" level="INFO">${account_id_boss} = 5755</msg>
<status status="PASS" endtime="20170807 15:17:03.458" starttime="20170807 15:17:03.458"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${user_id_refund[0][2]}' and channel_no=2</arg>
</arguments>
<assign>
<var>${account_id_ap}</var>
</assign>
<msg timestamp="20170807 15:17:03.458" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=2 </msg>
<msg timestamp="20170807 15:17:03.473" level="INFO">${account_id_ap} = ((17141, '1686241311501149931', 100000, 5756, 2, 2, 0, datetime.datetime(2017, 7, 27, 18, 28, 2), datetime.datetime(2017, 7, 27, 18, 28, 2)),)</msg>
<status status="PASS" endtime="20170807 15:17:03.473" starttime="20170807 15:17:03.458"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_id_ap[0][3]}</arg>
</arguments>
<assign>
<var>${account_id_app}</var>
</assign>
<msg timestamp="20170807 15:17:03.473" level="INFO">${account_id_app} = 5756</msg>
<status status="PASS" endtime="20170807 15:17:03.473" starttime="20170807 15:17:03.473"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_boss}'</arg>
</arguments>
<assign>
<var>${amount_boss}</var>
</assign>
<msg timestamp="20170807 15:17:03.489" level="INFO">Executing : Query  |  select * from account_amount where account_id='5755' </msg>
<msg timestamp="20170807 15:17:03.505" level="INFO">${amount_boss} = ((17178, 5755, Decimal('78.00'), Decimal('68.00'), Decimal('10.00'), datetime.datetime(2017, 7, 27, 18, 4, 58), datetime.datetime(2017, 8, 7, 15, 17, 8), 0),)</msg>
<status status="PASS" endtime="20170807 15:17:03.505" starttime="20170807 15:17:03.489"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_app}'</arg>
</arguments>
<assign>
<var>${amount_app}</var>
</assign>
<msg timestamp="20170807 15:17:03.505" level="INFO">Executing : Query  |  select * from account_amount where account_id='5756' </msg>
<msg timestamp="20170807 15:17:03.505" level="INFO">${amount_app} = ((17179, 5756, Decimal('78.00'), Decimal('68.00'), Decimal('10.00'), datetime.datetime(2017, 7, 27, 18, 28, 2), datetime.datetime(2017, 8, 7, 15, 8, 4), 0),)</msg>
<status status="PASS" endtime="20170807 15:17:03.505" starttime="20170807 15:17:03.505"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170807 15:17:03.505" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</msg>
<status status="PASS" endtime="20170807 15:17:03.505" starttime="20170807 15:17:03.505"></status>
</kw>
<kw name="Ajb Withdraw Cancel" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170807 15:17:03.832" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170807 15:17:03.832" starttime="20170807 15:17:03.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170807 15:17:03.832" level="INFO">200</msg>
<status status="PASS" endtime="20170807 15:17:03.832" starttime="20170807 15:17:03.832"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170807 15:17:03.832" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:03.832" starttime="20170807 15:17:03.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170807 15:17:03.832" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170807 15:17:03.832" starttime="20170807 15:17:03.832"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170807 15:17:03.832" level="INFO">To JSON using : content={"data":null,"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170807 15:17:03.848" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170807 15:17:03.848" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': None, u'success': True}</msg>
<status status="PASS" endtime="20170807 15:17:03.848" starttime="20170807 15:17:03.832"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170807 15:17:03.848" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:03.848" starttime="20170807 15:17:03.848"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170807 15:17:03.848" starttime="20170807 15:17:03.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170807 15:17:03.848" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170807 15:17:03.848" starttime="20170807 15:17:03.848"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170807 15:17:03.848" level="INFO">${current_time} = 2017-08-07 15:17:03.848</msg>
<status status="PASS" endtime="20170807 15:17:03.848" starttime="20170807 15:17:03.848"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>5 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170807 15:17:03.863" level="INFO">${current_time_before_30} = 2017-08-07 15:16:58.848</msg>
<status status="PASS" endtime="20170807 15:17:03.863" starttime="20170807 15:17:03.848"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170807 15:17:03.863" level="INFO">${current_time_after_30} = 2017-08-07 15:18:43.848</msg>
<status status="PASS" endtime="20170807 15:17:03.863" starttime="20170807 15:17:03.863"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where event_code=14 and user_id='${user_id_refund[0][2]}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170807 15:17:03.863" level="INFO">Executing : Query  |  select * from account_unilateral_bill where event_code=14 and user_id='100000' and update_time between' 2017-08-07 15:16:58.848' and '2017-08-07 15:18:43.848' </msg>
<msg timestamp="20170807 15:17:03.910" level="INFO">${user_id} = ((25606, '32102151361501755168', 100000, 5755, '32102151361501755166', 1, 14, 3, Decimal('2.00'), None, datetime.datetime(2017, 8, 7, 15, 17, 20), datetime.datetime(2017, 8, 7, 15, 17, 20), 0),)</msg>
<status status="PASS" endtime="20170807 15:17:03.910" starttime="20170807 15:17:03.863"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170807 15:17:03.910" level="INFO">Length is 20</msg>
<msg timestamp="20170807 15:17:03.910" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170807 15:17:03.910" starttime="20170807 15:17:03.910"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170807 15:17:03.910" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:03.910" starttime="20170807 15:17:03.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170807 15:17:03.926" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170807 15:17:03.926" starttime="20170807 15:17:03.926"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_refund[0][2]}</arg>
</arguments>
<status status="PASS" endtime="20170807 15:17:03.926" starttime="20170807 15:17:03.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170807 15:17:03.926" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170807 15:17:03.926" starttime="20170807 15:17:03.926"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170807 15:17:03.926" level="INFO">Length is 20</msg>
<msg timestamp="20170807 15:17:03.926" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170807 15:17:03.926" starttime="20170807 15:17:03.926"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170807 15:17:03.926" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:03.926" starttime="20170807 15:17:03.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170807 15:17:03.926" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170807 15:17:03.926" starttime="20170807 15:17:03.926"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170807 15:17:03.926" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:03.926" starttime="20170807 15:17:03.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170807 15:17:03.926" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170807 15:17:03.926" starttime="20170807 15:17:03.926"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>14</arg>
</arguments>
<msg timestamp="20170807 15:17:03.926" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:03.926" starttime="20170807 15:17:03.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170807 15:17:03.926" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170807 15:17:03.941" starttime="20170807 15:17:03.926"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20170807 15:17:03.941" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:03.941" starttime="20170807 15:17:03.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170807 15:17:03.941" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170807 15:17:03.941" starttime="20170807 15:17:03.941"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<status status="PASS" endtime="20170807 15:17:03.941" starttime="20170807 15:17:03.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170807 15:17:03.941" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170807 15:17:03.941" starttime="20170807 15:17:03.941"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170807 15:17:03.941" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:03.941" starttime="20170807 15:17:03.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170807 15:17:03.941" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170807 15:17:03.941" starttime="20170807 15:17:03.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170807 15:17:03.941" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170807 15:17:03.941" starttime="20170807 15:17:03.941"></status>
</kw>
<kw name="Conn Mysql" library="wjwTestLibrary">
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]}'</arg>
</arguments>
<assign>
<var>${user_id_unilateral_delete}</var>
</assign>
<msg timestamp="20170807 15:17:04.019" level="INFO">${user_id_unilateral_delete} = ()</msg>
<status status="PASS" endtime="20170807 15:17:04.019" starttime="20170807 15:17:03.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170807 15:17:04.035" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170807 15:17:04.035" starttime="20170807 15:17:04.019"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time1}</var>
</assign>
<msg timestamp="20170807 15:17:04.035" level="INFO">${current_time1} = 2017-08-07 15:17:04.035</msg>
<status status="PASS" endtime="20170807 15:17:04.035" starttime="20170807 15:17:04.035"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>5 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_301}</var>
</assign>
<msg timestamp="20170807 15:17:04.035" level="INFO">${current_time_before_301} = 2017-08-07 15:16:59.035</msg>
<status status="PASS" endtime="20170807 15:17:04.035" starttime="20170807 15:17:04.035"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_301}</var>
</assign>
<msg timestamp="20170807 15:17:04.035" level="INFO">${current_time_after_301} = 2017-08-07 15:18:44.035</msg>
<status status="PASS" endtime="20170807 15:17:04.035" starttime="20170807 15:17:04.035"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where event_code=14 and user_id='${user_id_refund[0][2]}' and update_time between' ${current_time_before_301}' and '${current_time_after_301}'</arg>
</arguments>
<assign>
<var>${user_id1}</var>
</assign>
<msg timestamp="20170807 15:17:04.035" level="INFO">Executing : Query  |  select * from ajb_account_transaction where event_code=14 and user_id='100000' and update_time between' 2017-08-07 15:16:59.035' and '2017-08-07 15:18:44.035' </msg>
<msg timestamp="20170807 15:17:04.066" level="INFO">${user_id1} = ((88888995, '32102151361501755165', 100000, 5755, 1, '32102151361500885834', '20170807151717JCO012730', Decimal('2.00'), 1, 14, 2, 0, datetime.datetime(2017, 8, 7, 15, 17, 20), datetime.datetime(2017,...</msg>
<status status="PASS" endtime="20170807 15:17:04.066" starttime="20170807 15:17:04.035"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id1[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170807 15:17:04.066" level="INFO">Length is 20</msg>
<msg timestamp="20170807 15:17:04.066" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170807 15:17:04.066" starttime="20170807 15:17:04.066"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170807 15:17:04.066" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:04.066" starttime="20170807 15:17:04.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170807 15:17:04.066" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170807 15:17:04.066" starttime="20170807 15:17:04.066"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][2]}</arg>
<arg>${user_id_refund[0][2]}</arg>
</arguments>
<status status="PASS" endtime="20170807 15:17:04.066" starttime="20170807 15:17:04.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170807 15:17:04.066" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170807 15:17:04.066" starttime="20170807 15:17:04.066"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][5]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170807 15:17:04.066" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:04.066" starttime="20170807 15:17:04.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170807 15:17:04.066" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170807 15:17:04.082" starttime="20170807 15:17:04.066"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id1[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170807 15:17:04.082" level="INFO">${pay_no_after} = 20170807151717JCO012730</msg>
<status status="PASS" endtime="20170807 15:17:04.082" starttime="20170807 15:17:04.082"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170807 15:17:04.082" level="INFO">Length is 23</msg>
<msg timestamp="20170807 15:17:04.082" level="INFO">${pay_no_after_length} = 23</msg>
<status status="PASS" endtime="20170807 15:17:04.082" starttime="20170807 15:17:04.082"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>23</arg>
</arguments>
<msg timestamp="20170807 15:17:04.082" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:04.082" starttime="20170807 15:17:04.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170807 15:17:04.082" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170807 15:17:04.082" starttime="20170807 15:17:04.082"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][7]}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<status status="PASS" endtime="20170807 15:17:04.082" starttime="20170807 15:17:04.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170807 15:17:04.082" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170807 15:17:04.082" starttime="20170807 15:17:04.082"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170807 15:17:04.082" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:04.082" starttime="20170807 15:17:04.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170807 15:17:04.097" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170807 15:17:04.097" starttime="20170807 15:17:04.082"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][9]}</arg>
<arg>14</arg>
</arguments>
<msg timestamp="20170807 15:17:04.097" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:04.097" starttime="20170807 15:17:04.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170807 15:17:04.097" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170807 15:17:04.097" starttime="20170807 15:17:04.097"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170807 15:17:04.097" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:04.097" starttime="20170807 15:17:04.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170807 15:17:04.097" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170807 15:17:04.113" starttime="20170807 15:17:04.097"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170807 15:17:04.113" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:04.113" starttime="20170807 15:17:04.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170807 15:17:04.113" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170807 15:17:04.113" starttime="20170807 15:17:04.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170807 15:17:04.113" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170807 15:17:04.113" starttime="20170807 15:17:04.113"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170807 15:17:04.113" level="INFO">${user_id[0][0]_transaction} = 25606</msg>
<status status="PASS" endtime="20170807 15:17:04.113" starttime="20170807 15:17:04.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170807 15:17:04.129" level="INFO">${user_id[0][0]_transaction} = 25606</msg>
<status status="PASS" endtime="20170807 15:17:04.129" starttime="20170807 15:17:04.129"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id1[0][0]}'</arg>
</arguments>
<msg timestamp="20170807 15:17:04.129" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88888995' </msg>
<status status="PASS" endtime="20170807 15:17:04.191" starttime="20170807 15:17:04.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>检验表account_amount</arg>
</arguments>
<msg timestamp="20170807 15:17:04.191" level="INFO">检验表account_amount</msg>
<status status="PASS" endtime="20170807 15:17:04.191" starttime="20170807 15:17:04.191"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_app}'</arg>
</arguments>
<assign>
<var>${amount_app_after}</var>
</assign>
<msg timestamp="20170807 15:17:04.207" level="INFO">Executing : Query  |  select * from account_amount where account_id='5756' </msg>
<msg timestamp="20170807 15:17:04.207" level="INFO">${amount_app_after} = ((17179, 5756, Decimal('78.00'), Decimal('68.00'), Decimal('10.00'), datetime.datetime(2017, 7, 27, 18, 28, 2), datetime.datetime(2017, 8, 7, 15, 8, 4), 0),)</msg>
<status status="PASS" endtime="20170807 15:17:04.207" starttime="20170807 15:17:04.207"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_boss}'</arg>
</arguments>
<assign>
<var>${amount_boss_after}</var>
</assign>
<msg timestamp="20170807 15:17:04.222" level="INFO">Executing : Query  |  select * from account_amount where account_id='5755' </msg>
<msg timestamp="20170807 15:17:04.238" level="INFO">${amount_boss_after} = ((17178, 5755, Decimal('80.00'), Decimal('70.00'), Decimal('10.00'), datetime.datetime(2017, 7, 27, 18, 4, 58), datetime.datetime(2017, 8, 7, 15, 17, 20), 0),)</msg>
<status status="PASS" endtime="20170807 15:17:04.238" starttime="20170807 15:17:04.222"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${amount_boss_after[0][2]}+${amount_app_after[0][2]}-${amount_boss[0][2]}-${amount_app[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_check}</var>
</assign>
<msg timestamp="20170807 15:17:04.238" level="INFO">${total_amount_check} = 2.0</msg>
<status status="PASS" endtime="20170807 15:17:04.238" starttime="20170807 15:17:04.238"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${total_amount_check}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<msg timestamp="20170807 15:17:04.238" level="INFO">Argument types are:
&lt;type 'float'&gt;
&lt;class 'decimal.Decimal'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:04.238" starttime="20170807 15:17:04.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount正确</arg>
</arguments>
<msg timestamp="20170807 15:17:04.238" level="INFO">total_amount正确</msg>
<status status="PASS" endtime="20170807 15:17:04.238" starttime="20170807 15:17:04.238"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${amount_boss_after[0][3]}+${amount_app_after[0][3]}-${amount_boss[0][3]}-${amount_app[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_check}</var>
</assign>
<msg timestamp="20170807 15:17:04.253" level="INFO">${balance_amount_check} = 2.0</msg>
<status status="PASS" endtime="20170807 15:17:04.253" starttime="20170807 15:17:04.238"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${balance_amount_check}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<msg timestamp="20170807 15:17:04.253" level="INFO">Argument types are:
&lt;type 'float'&gt;
&lt;class 'decimal.Decimal'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:04.253" starttime="20170807 15:17:04.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount正确</arg>
</arguments>
<msg timestamp="20170807 15:17:04.253" level="INFO">balance_amount正确</msg>
<status status="PASS" endtime="20170807 15:17:04.253" starttime="20170807 15:17:04.253"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${amount_boss[0][4]}+${amount_app[0][4]}-${amount_boss_after[0][4]}-${amount_app_after[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_check}</var>
</assign>
<msg timestamp="20170807 15:17:04.253" level="INFO">${frozen_amount_check} = 0.0</msg>
<status status="PASS" endtime="20170807 15:17:04.253" starttime="20170807 15:17:04.253"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${frozen_amount_check}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170807 15:17:04.269" level="INFO">Argument types are:
&lt;type 'float'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:04.269" starttime="20170807 15:17:04.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount正确</arg>
</arguments>
<msg timestamp="20170807 15:17:04.269" level="INFO">frozen_amount正确</msg>
<status status="PASS" endtime="20170807 15:17:04.269" starttime="20170807 15:17:04.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>检验表account_amount成功</arg>
</arguments>
<msg timestamp="20170807 15:17:04.269" level="INFO">检验表account_amount成功</msg>
<status status="PASS" endtime="20170807 15:17:04.269" starttime="20170807 15:17:04.269"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<msg timestamp="20170807 15:17:04.269" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=888888 </msg>
<status status="PASS" endtime="20170807 15:17:04.316" starttime="20170807 15:17:04.269"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount SET total_amount =${amount_boss[0][2]},balance_amount=${amount_boss[0][3]},frozen_amount=${amount_boss[0][4]} where account_id="${account_id_boss}";</arg>
</arguments>
<msg timestamp="20170807 15:17:04.316" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount SET total_amount =78.00,balance_amount=68.00,frozen_amount=10.00 where account_id="5755"; </msg>
<status status="PASS" endtime="20170807 15:17:04.363" starttime="20170807 15:17:04.316"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount SET total_amount=${amount_boss[0][2]},balance_amount=${amount_boss[0][3]},frozen_amount=${amount_boss[0][4]} where account_id="${account_id_app}";</arg>
</arguments>
<msg timestamp="20170807 15:17:04.363" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount SET total_amount=78.00,balance_amount=68.00,frozen_amount=10.00 where account_id="5756"; </msg>
<status status="PASS" endtime="20170807 15:17:04.378" starttime="20170807 15:17:04.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170807 15:17:04.378" level="INFO">成功</msg>
<status status="PASS" endtime="20170807 15:17:04.378" starttime="20170807 15:17:04.378"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:04.378" critical="yes" starttime="20170807 15:17:03.083"></status>
</test>
<test id="s1-s1-s1-t2" name="APP订单退款时调用，输入库里面标记删除的订单号，接口返回失败，数据没有入库">
<kw name="参数配置" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170807 15:17:04.394" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170807 15:17:04.409" starttime="20170807 15:17:04.394"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:04.409" starttime="20170807 15:17:04.394"></status>
</kw>
<kw name="输入拥有不同类型账户的用户user_id" library="myResource">
<arguments>
<arg>100000</arg>
<arg>100000</arg>
<arg>123456781</arg>
<arg>http://192.168.1.31:10003</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:17:04.409" level="INFO">${boss_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170807 15:17:04.409" starttime="20170807 15:17:04.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:17:04.409" level="INFO">${app_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170807 15:17:04.409" starttime="20170807 15:17:04.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${no_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:17:04.409" level="INFO">${no_user_account_id} = 123456781</msg>
<status status="PASS" endtime="20170807 15:17:04.409" starttime="20170807 15:17:04.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${environment}</arg>
</arguments>
<msg timestamp="20170807 15:17:04.409" level="INFO">${environment} = http://192.168.1.31:10003</msg>
<status status="PASS" endtime="20170807 15:17:04.409" starttime="20170807 15:17:04.409"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${boss_user_account_id}' and channel_no=1</arg>
</arguments>
<assign>
<var>${boss_channel_no1}</var>
</assign>
<msg timestamp="20170807 15:17:04.425" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=1 </msg>
<msg timestamp="20170807 15:17:04.441" level="INFO">${boss_channel_no1} = ((17140, '1686241311501149903', 100000, 5755, 1, 2, 0, datetime.datetime(2017, 7, 27, 18, 4, 58), datetime.datetime(2017, 7, 27, 18, 4, 58)),)</msg>
<status status="PASS" endtime="20170807 15:17:04.441" starttime="20170807 15:17:04.409"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${boss_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${boss_channel_no}</var>
</assign>
<msg timestamp="20170807 15:17:04.441" level="INFO">${boss_channel_no} = 5755</msg>
<status status="PASS" endtime="20170807 15:17:04.441" starttime="20170807 15:17:04.441"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${app_user_account_id}' and channel_no=2</arg>
</arguments>
<assign>
<var>${app_channel_no1}</var>
</assign>
<msg timestamp="20170807 15:17:04.441" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=2 </msg>
<msg timestamp="20170807 15:17:04.456" level="INFO">${app_channel_no1} = ((17141, '1686241311501149931', 100000, 5756, 2, 2, 0, datetime.datetime(2017, 7, 27, 18, 28, 2), datetime.datetime(2017, 7, 27, 18, 28, 2)),)</msg>
<status status="PASS" endtime="20170807 15:17:04.456" starttime="20170807 15:17:04.441"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${app_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${app_channel_no}</var>
</assign>
<msg timestamp="20170807 15:17:04.456" level="INFO">${app_channel_no} = 5756</msg>
<status status="PASS" endtime="20170807 15:17:04.456" starttime="20170807 15:17:04.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_channel_no}</arg>
</arguments>
<msg timestamp="20170807 15:17:04.456" level="INFO">${boss_channel_no} = 5755</msg>
<status status="PASS" endtime="20170807 15:17:04.456" starttime="20170807 15:17:04.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_channel_no}</arg>
</arguments>
<msg timestamp="20170807 15:17:04.456" level="INFO">${app_channel_no} = 5756</msg>
<status status="PASS" endtime="20170807 15:17:04.456" starttime="20170807 15:17:04.456"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:04.456" starttime="20170807 15:17:04.409"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:04.456" starttime="20170807 15:17:04.394"></status>
</kw>
<kw name="清数据" library="myResource">
<arguments>
<arg>88800888</arg>
</arguments>
<kw name="参数配置" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170807 15:17:04.456" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170807 15:17:04.503" starttime="20170807 15:17:04.456"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:04.503" starttime="20170807 15:17:04.456"></status>
</kw>
<kw name="输入拥有不同类型账户的用户user_id" library="myResource">
<arguments>
<arg>100000</arg>
<arg>100000</arg>
<arg>123456781</arg>
<arg>http://192.168.1.31:10003</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:17:04.519" level="INFO">${boss_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170807 15:17:04.519" starttime="20170807 15:17:04.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:17:04.519" level="INFO">${app_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170807 15:17:04.519" starttime="20170807 15:17:04.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${no_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:17:04.519" level="INFO">${no_user_account_id} = 123456781</msg>
<status status="PASS" endtime="20170807 15:17:04.534" starttime="20170807 15:17:04.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${environment}</arg>
</arguments>
<msg timestamp="20170807 15:17:04.534" level="INFO">${environment} = http://192.168.1.31:10003</msg>
<status status="PASS" endtime="20170807 15:17:04.534" starttime="20170807 15:17:04.534"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${boss_user_account_id}' and channel_no=1</arg>
</arguments>
<assign>
<var>${boss_channel_no1}</var>
</assign>
<msg timestamp="20170807 15:17:04.534" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=1 </msg>
<msg timestamp="20170807 15:17:04.550" level="INFO">${boss_channel_no1} = ((17140, '1686241311501149903', 100000, 5755, 1, 2, 0, datetime.datetime(2017, 7, 27, 18, 4, 58), datetime.datetime(2017, 7, 27, 18, 4, 58)),)</msg>
<status status="PASS" endtime="20170807 15:17:04.550" starttime="20170807 15:17:04.534"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${boss_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${boss_channel_no}</var>
</assign>
<msg timestamp="20170807 15:17:04.550" level="INFO">${boss_channel_no} = 5755</msg>
<status status="PASS" endtime="20170807 15:17:04.550" starttime="20170807 15:17:04.550"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${app_user_account_id}' and channel_no=2</arg>
</arguments>
<assign>
<var>${app_channel_no1}</var>
</assign>
<msg timestamp="20170807 15:17:04.550" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=2 </msg>
<msg timestamp="20170807 15:17:04.550" level="INFO">${app_channel_no1} = ((17141, '1686241311501149931', 100000, 5756, 2, 2, 0, datetime.datetime(2017, 7, 27, 18, 28, 2), datetime.datetime(2017, 7, 27, 18, 28, 2)),)</msg>
<status status="PASS" endtime="20170807 15:17:04.550" starttime="20170807 15:17:04.550"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${app_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${app_channel_no}</var>
</assign>
<msg timestamp="20170807 15:17:04.565" level="INFO">${app_channel_no} = 5756</msg>
<status status="PASS" endtime="20170807 15:17:04.565" starttime="20170807 15:17:04.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_channel_no}</arg>
</arguments>
<msg timestamp="20170807 15:17:04.565" level="INFO">${boss_channel_no} = 5755</msg>
<status status="PASS" endtime="20170807 15:17:04.565" starttime="20170807 15:17:04.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_channel_no}</arg>
</arguments>
<msg timestamp="20170807 15:17:04.565" level="INFO">${app_channel_no} = 5756</msg>
<status status="PASS" endtime="20170807 15:17:04.565" starttime="20170807 15:17:04.565"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:04.565" starttime="20170807 15:17:04.503"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:04.565" starttime="20170807 15:17:04.456"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170807 15:17:04.565" level="INFO">Executing : Query  |  select * from ajb_account_transaction where id=88800888 </msg>
<msg timestamp="20170807 15:17:04.581" level="INFO">${check} = ((88800888, '32102151361501122443', 100000, 5755, 1, '32102151361501122443', '', Decimal('2.00'), 1, 11, 2, 1, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)),)</msg>
<status status="PASS" endtime="20170807 15:17:04.581" starttime="20170807 15:17:04.565"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170807 15:17:04.581" level="INFO">Length is 1</msg>
<msg timestamp="20170807 15:17:04.581" level="INFO">${check_length} = 1</msg>
<status status="PASS" endtime="20170807 15:17:04.581" starttime="20170807 15:17:04.581"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} != 0</arg>
<arg>execute sql string</arg>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>数据库之前没有数据</arg>
</arguments>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<msg timestamp="20170807 15:17:04.581" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=88800888 </msg>
<status status="PASS" endtime="20170807 15:17:04.690" starttime="20170807 15:17:04.581"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:04.690" starttime="20170807 15:17:04.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库里面的这条数据清理成功啦。</arg>
</arguments>
<msg timestamp="20170807 15:17:04.690" level="INFO">数据库里面的这条数据清理成功啦。</msg>
<status status="PASS" endtime="20170807 15:17:04.690" starttime="20170807 15:17:04.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_delete}</arg>
</arguments>
<msg timestamp="20170807 15:17:04.690" level="INFO">${id_delete} = 88800888</msg>
<status status="PASS" endtime="20170807 15:17:04.690" starttime="20170807 15:17:04.690"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:04.690" starttime="20170807 15:17:04.456"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("${id_delete}","32102151361501122443","${boss_user_account_id}","${boss_channel_no}","1","32102151361501122443","","2","1","11","2","1","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170807 15:17:04.706" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("88800888","32102151361501122443","100000","5755","1","32102151361501122443","","2","1","11","2","1","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170807 15:17:04.753" starttime="20170807 15:17:04.706"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>32102151361501122443</arg>
<arg>${environment}/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170807 15:17:04.753" level="INFO">${args11} = 32102151361501122443</msg>
<status status="PASS" endtime="20170807 15:17:04.753" starttime="20170807 15:17:04.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170807 15:17:04.768" level="INFO">${args22} = </msg>
<status status="PASS" endtime="20170807 15:17:04.768" starttime="20170807 15:17:04.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170807 15:17:04.768" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170807 15:17:04.768" starttime="20170807 15:17:04.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170807 15:17:04.768" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170807 15:17:04.768" starttime="20170807 15:17:04.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170807 15:17:04.768" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</msg>
<status status="PASS" endtime="20170807 15:17:04.768" starttime="20170807 15:17:04.768"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:04.768" starttime="20170807 15:17:04.753"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170807 15:17:04.784" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</msg>
<status status="PASS" endtime="20170807 15:17:04.784" starttime="20170807 15:17:04.768"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170807 15:17:04.784" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170807 15:17:04.784" starttime="20170807 15:17:04.784"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170807 15:17:04.784" starttime="20170807 15:17:04.784"></status>
</kw>
<msg timestamp="20170807 15:17:04.784" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170807 15:17:04.784" starttime="20170807 15:17:04.784"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>order_num</arg>
</arguments>
<status status="PASS" endtime="20170807 15:17:04.784" starttime="20170807 15:17:04.784"></status>
</kw>
<msg timestamp="20170807 15:17:04.784" level="INFO">${args11_after} = order_num</msg>
<status status="PASS" endtime="20170807 15:17:04.784" starttime="20170807 15:17:04.784"></status>
</kw>
<kw name="参数配置" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170807 15:17:04.799" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170807 15:17:04.815" starttime="20170807 15:17:04.799"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:04.815" starttime="20170807 15:17:04.799"></status>
</kw>
<kw name="输入拥有不同类型账户的用户user_id" library="myResource">
<arguments>
<arg>100000</arg>
<arg>100000</arg>
<arg>123456781</arg>
<arg>http://192.168.1.31:10003</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:17:04.815" level="INFO">${boss_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170807 15:17:04.815" starttime="20170807 15:17:04.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:17:04.815" level="INFO">${app_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170807 15:17:04.815" starttime="20170807 15:17:04.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${no_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:17:04.815" level="INFO">${no_user_account_id} = 123456781</msg>
<status status="PASS" endtime="20170807 15:17:04.815" starttime="20170807 15:17:04.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${environment}</arg>
</arguments>
<msg timestamp="20170807 15:17:04.815" level="INFO">${environment} = http://192.168.1.31:10003</msg>
<status status="PASS" endtime="20170807 15:17:04.815" starttime="20170807 15:17:04.815"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${boss_user_account_id}' and channel_no=1</arg>
</arguments>
<assign>
<var>${boss_channel_no1}</var>
</assign>
<msg timestamp="20170807 15:17:04.815" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=1 </msg>
<msg timestamp="20170807 15:17:04.831" level="INFO">${boss_channel_no1} = ((17140, '1686241311501149903', 100000, 5755, 1, 2, 0, datetime.datetime(2017, 7, 27, 18, 4, 58), datetime.datetime(2017, 7, 27, 18, 4, 58)),)</msg>
<status status="PASS" endtime="20170807 15:17:04.831" starttime="20170807 15:17:04.815"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${boss_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${boss_channel_no}</var>
</assign>
<msg timestamp="20170807 15:17:04.831" level="INFO">${boss_channel_no} = 5755</msg>
<status status="PASS" endtime="20170807 15:17:04.831" starttime="20170807 15:17:04.831"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${app_user_account_id}' and channel_no=2</arg>
</arguments>
<assign>
<var>${app_channel_no1}</var>
</assign>
<msg timestamp="20170807 15:17:04.831" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=2 </msg>
<msg timestamp="20170807 15:17:04.877" level="INFO">${app_channel_no1} = ((17141, '1686241311501149931', 100000, 5756, 2, 2, 0, datetime.datetime(2017, 7, 27, 18, 28, 2), datetime.datetime(2017, 7, 27, 18, 28, 2)),)</msg>
<status status="PASS" endtime="20170807 15:17:04.877" starttime="20170807 15:17:04.831"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${app_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${app_channel_no}</var>
</assign>
<msg timestamp="20170807 15:17:04.877" level="INFO">${app_channel_no} = 5756</msg>
<status status="PASS" endtime="20170807 15:17:04.877" starttime="20170807 15:17:04.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_channel_no}</arg>
</arguments>
<msg timestamp="20170807 15:17:04.877" level="INFO">${boss_channel_no} = 5755</msg>
<status status="PASS" endtime="20170807 15:17:04.877" starttime="20170807 15:17:04.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_channel_no}</arg>
</arguments>
<msg timestamp="20170807 15:17:04.893" level="INFO">${app_channel_no} = 5756</msg>
<status status="PASS" endtime="20170807 15:17:04.893" starttime="20170807 15:17:04.877"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:04.893" starttime="20170807 15:17:04.815"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:04.893" starttime="20170807 15:17:04.799"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170807 15:17:04.893" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num='32102151361501122443' and channel_no='1' </msg>
<msg timestamp="20170807 15:17:04.909" level="INFO">${database1} = ((88800888, '32102151361501122443', 100000, 5755, 1, '32102151361501122443', '', Decimal('2.00'), 1, 11, 2, 1, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)),)</msg>
<status status="PASS" endtime="20170807 15:17:04.909" starttime="20170807 15:17:04.893"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170807 15:17:04.909" level="INFO">Executing : Query  |  select * from account_amount where account_id ='5755' </msg>
<msg timestamp="20170807 15:17:04.924" level="INFO">${database} = ((17178, 5755, Decimal('78.00'), Decimal('68.00'), Decimal('10.00'), datetime.datetime(2017, 7, 27, 18, 4, 58), datetime.datetime(2017, 8, 7, 15, 17, 21), 0),)</msg>
<status status="PASS" endtime="20170807 15:17:04.924" starttime="20170807 15:17:04.909"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170807 15:17:04.924" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170807 15:17:04.924" starttime="20170807 15:17:04.924"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170807 15:17:04.924" level="INFO">${account_id} = 5755</msg>
<status status="PASS" endtime="20170807 15:17:04.924" starttime="20170807 15:17:04.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170807 15:17:04.924" level="INFO">获得account_id值为：5755</msg>
<status status="PASS" endtime="20170807 15:17:04.924" starttime="20170807 15:17:04.924"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170807 15:17:04.924" level="INFO">${total_amount_before} = 78.00</msg>
<status status="PASS" endtime="20170807 15:17:04.924" starttime="20170807 15:17:04.924"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170807 15:17:04.940" level="INFO">${balance_amount_before} = 68.00</msg>
<status status="PASS" endtime="20170807 15:17:04.940" starttime="20170807 15:17:04.924"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170807 15:17:04.940" level="INFO">${frozen_amount_before} = 10.00</msg>
<status status="PASS" endtime="20170807 15:17:04.940" starttime="20170807 15:17:04.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170807 15:17:04.940" level="INFO">${account_id} = 5755</msg>
<status status="PASS" endtime="20170807 15:17:04.940" starttime="20170807 15:17:04.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170807 15:17:04.940" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170807 15:17:04.940" starttime="20170807 15:17:04.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170807 15:17:04.940" level="INFO">${total_amount_before} = 78.00</msg>
<status status="PASS" endtime="20170807 15:17:04.940" starttime="20170807 15:17:04.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170807 15:17:04.940" level="INFO">${balance_amount_before} = 68.00</msg>
<status status="PASS" endtime="20170807 15:17:04.940" starttime="20170807 15:17:04.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170807 15:17:04.940" level="INFO">${frozen_amount_before} = 10.00</msg>
<status status="PASS" endtime="20170807 15:17:04.940" starttime="20170807 15:17:04.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170807 15:17:04.940" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170807 15:17:04.940" starttime="20170807 15:17:04.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170807 15:17:04.940" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170807 15:17:04.940" starttime="20170807 15:17:04.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170807 15:17:04.940" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</msg>
<status status="PASS" endtime="20170807 15:17:04.955" starttime="20170807 15:17:04.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170807 15:17:04.955" level="INFO">${database} = ((17178, 5755, Decimal('78.00'), Decimal('68.00'), Decimal('10.00'), datetime.datetime(2017, 7, 27, 18, 4, 58), datetime.datetime(2017, 8, 7, 15, 17, 21), 0),)</msg>
<status status="PASS" endtime="20170807 15:17:04.955" starttime="20170807 15:17:04.955"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:04.955" starttime="20170807 15:17:04.768"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Ajb Withdraw Cancel" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170807 15:17:04.987" starttime="20170807 15:17:04.955"></status>
</kw>
<msg timestamp="20170807 15:17:04.987" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170807 15:17:04.987" starttime="20170807 15:17:04.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170807 15:17:04.987" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170807 15:17:04.987" starttime="20170807 15:17:04.987"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:04.987" starttime="20170807 15:17:04.955"></status>
</kw>
<kw name="错误时字段验证" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170807 15:17:04.987" level="INFO">200</msg>
<status status="PASS" endtime="20170807 15:17:04.987" starttime="20170807 15:17:04.987"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170807 15:17:05.002" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:05.002" starttime="20170807 15:17:04.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170807 15:17:05.002" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170807 15:17:05.002" starttime="20170807 15:17:05.002"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170807 15:17:05.002" level="INFO">To JSON using : content={"data":null,"msg":"订单退款结算失败","code":0,"success":false} </msg>
<msg timestamp="20170807 15:17:05.002" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170807 15:17:05.002" level="INFO">${toJson} = {u'msg': u'\u8ba2\u5355\u9000\u6b3e\u7ed3\u7b97\u5931\u8d25', u'code': 0, u'data': None, u'success': False}</msg>
<status status="PASS" endtime="20170807 15:17:05.002" starttime="20170807 15:17:05.002"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>False</arg>
</arguments>
<msg timestamp="20170807 15:17:05.002" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:05.002" starttime="20170807 15:17:05.002"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['data']}</arg>
<arg>None</arg>
</arguments>
<msg timestamp="20170807 15:17:05.002" level="INFO">Argument types are:
&lt;type 'NoneType'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:05.002" starttime="20170807 15:17:05.002"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${toJson['code']}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170807 15:17:05.002" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:05.002" starttime="20170807 15:17:05.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170807 15:17:05.002" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170807 15:17:05.002" starttime="20170807 15:17:05.002"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:05.002" starttime="20170807 15:17:04.987"></status>
</kw>
<kw name="amount和表里的校验" library="myResource">
<kw name="参数配置" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170807 15:17:05.002" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170807 15:17:05.033" starttime="20170807 15:17:05.002"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:05.033" starttime="20170807 15:17:05.002"></status>
</kw>
<kw name="输入拥有不同类型账户的用户user_id" library="myResource">
<arguments>
<arg>100000</arg>
<arg>100000</arg>
<arg>123456781</arg>
<arg>http://192.168.1.31:10003</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:17:05.033" level="INFO">${boss_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170807 15:17:05.033" starttime="20170807 15:17:05.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:17:05.033" level="INFO">${app_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170807 15:17:05.033" starttime="20170807 15:17:05.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${no_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:17:05.033" level="INFO">${no_user_account_id} = 123456781</msg>
<status status="PASS" endtime="20170807 15:17:05.033" starttime="20170807 15:17:05.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${environment}</arg>
</arguments>
<msg timestamp="20170807 15:17:05.033" level="INFO">${environment} = http://192.168.1.31:10003</msg>
<status status="PASS" endtime="20170807 15:17:05.033" starttime="20170807 15:17:05.033"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${boss_user_account_id}' and channel_no=1</arg>
</arguments>
<assign>
<var>${boss_channel_no1}</var>
</assign>
<msg timestamp="20170807 15:17:05.049" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=1 </msg>
<msg timestamp="20170807 15:17:05.049" level="INFO">${boss_channel_no1} = ((17140, '1686241311501149903', 100000, 5755, 1, 2, 0, datetime.datetime(2017, 7, 27, 18, 4, 58), datetime.datetime(2017, 7, 27, 18, 4, 58)),)</msg>
<status status="PASS" endtime="20170807 15:17:05.065" starttime="20170807 15:17:05.033"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${boss_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${boss_channel_no}</var>
</assign>
<msg timestamp="20170807 15:17:05.065" level="INFO">${boss_channel_no} = 5755</msg>
<status status="PASS" endtime="20170807 15:17:05.065" starttime="20170807 15:17:05.065"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${app_user_account_id}' and channel_no=2</arg>
</arguments>
<assign>
<var>${app_channel_no1}</var>
</assign>
<msg timestamp="20170807 15:17:05.065" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=2 </msg>
<msg timestamp="20170807 15:17:05.065" level="INFO">${app_channel_no1} = ((17141, '1686241311501149931', 100000, 5756, 2, 2, 0, datetime.datetime(2017, 7, 27, 18, 28, 2), datetime.datetime(2017, 7, 27, 18, 28, 2)),)</msg>
<status status="PASS" endtime="20170807 15:17:05.065" starttime="20170807 15:17:05.065"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${app_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${app_channel_no}</var>
</assign>
<msg timestamp="20170807 15:17:05.080" level="INFO">${app_channel_no} = 5756</msg>
<status status="PASS" endtime="20170807 15:17:05.080" starttime="20170807 15:17:05.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_channel_no}</arg>
</arguments>
<msg timestamp="20170807 15:17:05.080" level="INFO">${boss_channel_no} = 5755</msg>
<status status="PASS" endtime="20170807 15:17:05.080" starttime="20170807 15:17:05.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_channel_no}</arg>
</arguments>
<msg timestamp="20170807 15:17:05.080" level="INFO">${app_channel_no} = 5756</msg>
<status status="PASS" endtime="20170807 15:17:05.080" starttime="20170807 15:17:05.080"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:05.080" starttime="20170807 15:17:05.033"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:05.080" starttime="20170807 15:17:05.002"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170807 15:17:05.080" level="INFO">Executing : Query  |  select * from account_amount where account_id ='5755' </msg>
<msg timestamp="20170807 15:17:05.111" level="INFO">${user_id} = ((17178, 5755, Decimal('78.00'), Decimal('68.00'), Decimal('10.00'), datetime.datetime(2017, 7, 27, 18, 4, 58), datetime.datetime(2017, 8, 7, 15, 17, 21), 0),)</msg>
<status status="PASS" endtime="20170807 15:17:05.111" starttime="20170807 15:17:05.080"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170807 15:17:05.111" starttime="20170807 15:17:05.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170807 15:17:05.111" level="INFO">total_amount数目没有变化</msg>
<status status="PASS" endtime="20170807 15:17:05.111" starttime="20170807 15:17:05.111"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170807 15:17:05.111" starttime="20170807 15:17:05.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170807 15:17:05.111" level="INFO">balance_amount数目没有变化</msg>
<status status="PASS" endtime="20170807 15:17:05.111" starttime="20170807 15:17:05.111"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170807 15:17:05.127" starttime="20170807 15:17:05.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170807 15:17:05.127" level="INFO">frozen_amount数目没有变化</msg>
<status status="PASS" endtime="20170807 15:17:05.127" starttime="20170807 15:17:05.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amounts的数据没有变化正确的</arg>
</arguments>
<msg timestamp="20170807 15:17:05.127" level="INFO">amounts的数据没有变化正确的</msg>
<status status="PASS" endtime="20170807 15:17:05.127" starttime="20170807 15:17:05.127"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170807 15:17:05.127" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:05.127" starttime="20170807 15:17:05.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount内容没有发生变化</arg>
</arguments>
<msg timestamp="20170807 15:17:05.127" level="INFO">表account_amount内容没有发生变化</msg>
<status status="PASS" endtime="20170807 15:17:05.127" starttime="20170807 15:17:05.127"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170807 15:17:05.127" level="INFO">${current_time} = 2017-08-07 15:17:05.127</msg>
<status status="PASS" endtime="20170807 15:17:05.127" starttime="20170807 15:17:05.127"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170807 15:17:05.127" level="INFO">${current_time_before_30} = 2017-08-07 15:16:05.127</msg>
<status status="PASS" endtime="20170807 15:17:05.127" starttime="20170807 15:17:05.127"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170807 15:17:05.127" level="INFO">${current_time_after_30} = 2017-08-07 15:18:10.127</msg>
<status status="PASS" endtime="20170807 15:17:05.127" starttime="20170807 15:17:05.127"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${bill_check}</var>
</assign>
<msg timestamp="20170807 15:17:05.127" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='5755' and update_time between' 2017-08-07 15:16:05.127' and '2017-08-07 15:18:10.127' </msg>
<msg timestamp="20170807 15:17:05.143" level="INFO">${bill_check} = ()</msg>
<status status="PASS" endtime="20170807 15:17:05.143" starttime="20170807 15:17:05.127"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${bill_check}</arg>
</arguments>
<assign>
<var>${bill_check_length}</var>
</assign>
<msg timestamp="20170807 15:17:05.143" level="INFO">Length is 0</msg>
<msg timestamp="20170807 15:17:05.158" level="INFO">${bill_check_length} = 0</msg>
<status status="PASS" endtime="20170807 15:17:05.158" starttime="20170807 15:17:05.143"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${bill_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170807 15:17:05.158" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:05.158" starttime="20170807 15:17:05.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>account_unilateral_bill里的没有相关数据</arg>
</arguments>
<msg timestamp="20170807 15:17:05.158" level="INFO">account_unilateral_bill里的没有相关数据</msg>
<status status="PASS" endtime="20170807 15:17:05.158" starttime="20170807 15:17:05.158"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num ='${args11}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${transaction_check}</var>
</assign>
<msg timestamp="20170807 15:17:05.158" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num ='32102151361501122443' and update_time between' 2017-08-07 15:16:05.127' and '2017-08-07 15:18:10.127' </msg>
<msg timestamp="20170807 15:17:05.174" level="INFO">${transaction_check} = ()</msg>
<status status="PASS" endtime="20170807 15:17:05.174" starttime="20170807 15:17:05.158"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${transaction_check}</arg>
</arguments>
<assign>
<var>${transaction_check_length}</var>
</assign>
<msg timestamp="20170807 15:17:05.189" level="INFO">Length is 0</msg>
<msg timestamp="20170807 15:17:05.189" level="INFO">${transaction_check_length} = 0</msg>
<status status="PASS" endtime="20170807 15:17:05.189" starttime="20170807 15:17:05.174"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${transaction_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170807 15:17:05.189" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:05.189" starttime="20170807 15:17:05.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>ajb_account_transaction里的没有相关数据</arg>
</arguments>
<msg timestamp="20170807 15:17:05.189" level="INFO">ajb_account_transaction里的没有相关数据</msg>
<status status="PASS" endtime="20170807 15:17:05.189" starttime="20170807 15:17:05.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库表里数据调用接口前后没有发生变化</arg>
</arguments>
<msg timestamp="20170807 15:17:05.189" level="INFO">数据库表里数据调用接口前后没有发生变化</msg>
<status status="PASS" endtime="20170807 15:17:05.189" starttime="20170807 15:17:05.189"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:05.189" starttime="20170807 15:17:05.002"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<msg timestamp="20170807 15:17:05.189" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=88800888 </msg>
<status status="PASS" endtime="20170807 15:17:05.267" starttime="20170807 15:17:05.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当订单号为库里面标记删除的时候，接口返回失败</arg>
</arguments>
<msg timestamp="20170807 15:17:05.267" level="INFO">当订单号为库里面标记删除的时候，接口返回失败</msg>
<status status="PASS" endtime="20170807 15:17:05.267" starttime="20170807 15:17:05.267"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:05.267" critical="yes" starttime="20170807 15:17:04.378"></status>
</test>
<test id="s1-s1-s1-t3" name="艾佳币账户未过期，支付订单后取消顶大，解冻艾佳币，有效期小于15天的延长15天">
<kw name="参数配置" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170807 15:17:05.299" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170807 15:17:05.330" starttime="20170807 15:17:05.299"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:05.330" starttime="20170807 15:17:05.299"></status>
</kw>
<kw name="输入拥有不同类型账户的用户user_id" library="myResource">
<arguments>
<arg>100000</arg>
<arg>100000</arg>
<arg>123456781</arg>
<arg>http://192.168.1.31:10003</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:17:05.330" level="INFO">${boss_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170807 15:17:05.330" starttime="20170807 15:17:05.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:17:05.330" level="INFO">${app_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170807 15:17:05.330" starttime="20170807 15:17:05.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${no_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:17:05.330" level="INFO">${no_user_account_id} = 123456781</msg>
<status status="PASS" endtime="20170807 15:17:05.330" starttime="20170807 15:17:05.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${environment}</arg>
</arguments>
<msg timestamp="20170807 15:17:05.330" level="INFO">${environment} = http://192.168.1.31:10003</msg>
<status status="PASS" endtime="20170807 15:17:05.330" starttime="20170807 15:17:05.330"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${boss_user_account_id}' and channel_no=1</arg>
</arguments>
<assign>
<var>${boss_channel_no1}</var>
</assign>
<msg timestamp="20170807 15:17:05.330" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=1 </msg>
<msg timestamp="20170807 15:17:05.361" level="INFO">${boss_channel_no1} = ((17140, '1686241311501149903', 100000, 5755, 1, 2, 0, datetime.datetime(2017, 7, 27, 18, 4, 58), datetime.datetime(2017, 7, 27, 18, 4, 58)),)</msg>
<status status="PASS" endtime="20170807 15:17:05.361" starttime="20170807 15:17:05.330"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${boss_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${boss_channel_no}</var>
</assign>
<msg timestamp="20170807 15:17:05.361" level="INFO">${boss_channel_no} = 5755</msg>
<status status="PASS" endtime="20170807 15:17:05.361" starttime="20170807 15:17:05.361"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${app_user_account_id}' and channel_no=2</arg>
</arguments>
<assign>
<var>${app_channel_no1}</var>
</assign>
<msg timestamp="20170807 15:17:05.361" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=2 </msg>
<msg timestamp="20170807 15:17:05.377" level="INFO">${app_channel_no1} = ((17141, '1686241311501149931', 100000, 5756, 2, 2, 0, datetime.datetime(2017, 7, 27, 18, 28, 2), datetime.datetime(2017, 7, 27, 18, 28, 2)),)</msg>
<status status="PASS" endtime="20170807 15:17:05.377" starttime="20170807 15:17:05.361"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${app_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${app_channel_no}</var>
</assign>
<msg timestamp="20170807 15:17:05.377" level="INFO">${app_channel_no} = 5756</msg>
<status status="PASS" endtime="20170807 15:17:05.377" starttime="20170807 15:17:05.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_channel_no}</arg>
</arguments>
<msg timestamp="20170807 15:17:05.377" level="INFO">${boss_channel_no} = 5755</msg>
<status status="PASS" endtime="20170807 15:17:05.377" starttime="20170807 15:17:05.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_channel_no}</arg>
</arguments>
<msg timestamp="20170807 15:17:05.377" level="INFO">${app_channel_no} = 5756</msg>
<status status="PASS" endtime="20170807 15:17:05.377" starttime="20170807 15:17:05.377"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:05.377" starttime="20170807 15:17:05.330"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:05.377" starttime="20170807 15:17:05.299"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170807 15:17:05.377" level="INFO">${current_time} = 2017-08-07 15:17:05.377</msg>
<status status="PASS" endtime="20170807 15:17:05.377" starttime="20170807 15:17:05.377"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>1 days</arg>
</arguments>
<assign>
<var>${after_time}</var>
</assign>
<msg timestamp="20170807 15:17:05.392" level="INFO">${after_time} = 2017-08-08 15:17:05.377</msg>
<status status="PASS" endtime="20170807 15:17:05.392" starttime="20170807 15:17:05.392"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>10 days</arg>
</arguments>
<assign>
<var>${account_begin_time}</var>
</assign>
<msg timestamp="20170807 15:17:05.392" level="INFO">${account_begin_time} = 2017-07-28 15:17:05.377</msg>
<status status="PASS" endtime="20170807 15:17:05.392" starttime="20170807 15:17:05.392"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>15 days</arg>
</arguments>
<assign>
<var>${after_time_check1}</var>
</assign>
<msg timestamp="20170807 15:17:05.392" level="INFO">${after_time_check1} = 2017-08-22 15:17:05.377</msg>
<status status="PASS" endtime="20170807 15:17:05.392" starttime="20170807 15:17:05.392"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${after_time_check1}</arg>
<arg>datetime</arg>
</arguments>
<assign>
<var>${after_time_check}</var>
</assign>
<msg timestamp="20170807 15:17:05.392" level="INFO">${after_time_check} = 2017-08-22 15:17:05.377000</msg>
<status status="PASS" endtime="20170807 15:17:05.392" starttime="20170807 15:17:05.392"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id="${boss_user_account_id}"</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170807 15:17:05.392" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id="100000" </msg>
<msg timestamp="20170807 15:17:05.423" level="INFO">${id} = ((17140, '1686241311501149903', 100000, 5755, 1, 2, 0, datetime.datetime(2017, 7, 27, 18, 4, 58), datetime.datetime(2017, 7, 27, 18, 4, 58)), (17141, '1686241311501149931', 100000, 5756, 2, 2, 0, date...</msg>
<status status="PASS" endtime="20170807 15:17:05.423" starttime="20170807 15:17:05.392"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_base where user_id="${boss_user_account_id}"</arg>
</arguments>
<msg timestamp="20170807 15:17:05.423" level="INFO">Executing : Execute SQL String  |  delete from account_base where user_id="100000" </msg>
<status status="PASS" endtime="20170807 15:17:05.470" starttime="20170807 15:17:05.423"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into account_base(id,user_id,role_type,account_type,account_status,account_begin_time,account_end_time,add_time,update_time,del_flag) values("${id[0][3]}","${boss_user_account_id}","1","2","2","${account_begin_time}","${after_time}","${account_begin_time}","${account_begin_time}","0");</arg>
</arguments>
<msg timestamp="20170807 15:17:05.470" level="INFO">Executing : Execute SQL String  |  insert into account_base(id,user_id,role_type,account_type,account_status,account_begin_time,account_end_time,add_time,update_time,del_flag) values("5755","100000","1","2","2","2017-07-28 15:17:05.377","2017-08-08 15:17:05.377","2017-07-28 15:17:05.377","2017-07-28 15:17:05.377","0"); </msg>
<status status="PASS" endtime="20170807 15:17:05.517" starttime="20170807 15:17:05.470"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into account_base(id,user_id,role_type,account_type,account_status,account_begin_time,account_end_time,add_time,update_time,del_flag) values("${id[1][3]}","${boss_user_account_id}","1","2","2","${account_begin_time}","${after_time}","${account_begin_time}","${account_begin_time}","0");</arg>
</arguments>
<msg timestamp="20170807 15:17:05.533" level="INFO">Executing : Execute SQL String  |  insert into account_base(id,user_id,role_type,account_type,account_status,account_begin_time,account_end_time,add_time,update_time,del_flag) values("5756","100000","1","2","2","2017-07-28 15:17:05.377","2017-08-08 15:17:05.377","2017-07-28 15:17:05.377","2017-07-28 15:17:05.377","0"); </msg>
<status status="PASS" endtime="20170807 15:17:05.579" starttime="20170807 15:17:05.517"></status>
</kw>
<kw name="清数据" library="myResource">
<arguments>
<arg>888888</arg>
</arguments>
<kw name="参数配置" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170807 15:17:05.595" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170807 15:17:05.611" starttime="20170807 15:17:05.595"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:05.611" starttime="20170807 15:17:05.579"></status>
</kw>
<kw name="输入拥有不同类型账户的用户user_id" library="myResource">
<arguments>
<arg>100000</arg>
<arg>100000</arg>
<arg>123456781</arg>
<arg>http://192.168.1.31:10003</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:17:05.626" level="INFO">${boss_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170807 15:17:05.626" starttime="20170807 15:17:05.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:17:05.626" level="INFO">${app_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170807 15:17:05.626" starttime="20170807 15:17:05.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${no_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:17:05.626" level="INFO">${no_user_account_id} = 123456781</msg>
<status status="PASS" endtime="20170807 15:17:05.626" starttime="20170807 15:17:05.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${environment}</arg>
</arguments>
<msg timestamp="20170807 15:17:05.626" level="INFO">${environment} = http://192.168.1.31:10003</msg>
<status status="PASS" endtime="20170807 15:17:05.626" starttime="20170807 15:17:05.626"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${boss_user_account_id}' and channel_no=1</arg>
</arguments>
<assign>
<var>${boss_channel_no1}</var>
</assign>
<msg timestamp="20170807 15:17:05.626" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=1 </msg>
<msg timestamp="20170807 15:17:05.642" level="INFO">${boss_channel_no1} = ((17140, '1686241311501149903', 100000, 5755, 1, 2, 0, datetime.datetime(2017, 7, 27, 18, 4, 58), datetime.datetime(2017, 7, 27, 18, 4, 58)),)</msg>
<status status="PASS" endtime="20170807 15:17:05.642" starttime="20170807 15:17:05.626"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${boss_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${boss_channel_no}</var>
</assign>
<msg timestamp="20170807 15:17:05.642" level="INFO">${boss_channel_no} = 5755</msg>
<status status="PASS" endtime="20170807 15:17:05.642" starttime="20170807 15:17:05.642"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${app_user_account_id}' and channel_no=2</arg>
</arguments>
<assign>
<var>${app_channel_no1}</var>
</assign>
<msg timestamp="20170807 15:17:05.642" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=2 </msg>
<msg timestamp="20170807 15:17:05.657" level="INFO">${app_channel_no1} = ((17141, '1686241311501149931', 100000, 5756, 2, 2, 0, datetime.datetime(2017, 7, 27, 18, 28, 2), datetime.datetime(2017, 7, 27, 18, 28, 2)),)</msg>
<status status="PASS" endtime="20170807 15:17:05.657" starttime="20170807 15:17:05.642"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${app_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${app_channel_no}</var>
</assign>
<msg timestamp="20170807 15:17:05.657" level="INFO">${app_channel_no} = 5756</msg>
<status status="PASS" endtime="20170807 15:17:05.657" starttime="20170807 15:17:05.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_channel_no}</arg>
</arguments>
<msg timestamp="20170807 15:17:05.657" level="INFO">${boss_channel_no} = 5755</msg>
<status status="PASS" endtime="20170807 15:17:05.657" starttime="20170807 15:17:05.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_channel_no}</arg>
</arguments>
<msg timestamp="20170807 15:17:05.657" level="INFO">${app_channel_no} = 5756</msg>
<status status="PASS" endtime="20170807 15:17:05.657" starttime="20170807 15:17:05.657"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:05.657" starttime="20170807 15:17:05.611"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:05.657" starttime="20170807 15:17:05.579"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170807 15:17:05.657" level="INFO">Executing : Query  |  select * from ajb_account_transaction where id=888888 </msg>
<msg timestamp="20170807 15:17:05.673" level="INFO">${check} = ()</msg>
<status status="PASS" endtime="20170807 15:17:05.673" starttime="20170807 15:17:05.657"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170807 15:17:05.673" level="INFO">Length is 0</msg>
<msg timestamp="20170807 15:17:05.673" level="INFO">${check_length} = 0</msg>
<status status="PASS" endtime="20170807 15:17:05.673" starttime="20170807 15:17:05.673"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} != 0</arg>
<arg>execute sql string</arg>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>数据库之前没有数据</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库之前没有数据</arg>
</arguments>
<msg timestamp="20170807 15:17:05.673" level="INFO">数据库之前没有数据</msg>
<status status="PASS" endtime="20170807 15:17:05.673" starttime="20170807 15:17:05.673"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:05.673" starttime="20170807 15:17:05.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库里面的这条数据清理成功啦。</arg>
</arguments>
<msg timestamp="20170807 15:17:05.673" level="INFO">数据库里面的这条数据清理成功啦。</msg>
<status status="PASS" endtime="20170807 15:17:05.673" starttime="20170807 15:17:05.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_delete}</arg>
</arguments>
<msg timestamp="20170807 15:17:05.673" level="INFO">${id_delete} = 888888</msg>
<status status="PASS" endtime="20170807 15:17:05.673" starttime="20170807 15:17:05.673"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:05.673" starttime="20170807 15:17:05.579"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("${id_delete}","32102151361500885834","${boss_user_account_id}","${boss_channel_no}","1","32102151361500885834","","2","1","13","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170807 15:17:05.689" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("888888","32102151361500885834","100000","5755","1","32102151361500885834","","2","1","13","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170807 15:17:05.767" starttime="20170807 15:17:05.689"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>32102151361500885834</arg>
<arg>${environment}/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170807 15:17:05.782" level="INFO">${args11} = 32102151361500885834</msg>
<status status="PASS" endtime="20170807 15:17:05.782" starttime="20170807 15:17:05.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170807 15:17:05.782" level="INFO">${args22} = </msg>
<status status="PASS" endtime="20170807 15:17:05.782" starttime="20170807 15:17:05.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170807 15:17:05.782" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170807 15:17:05.782" starttime="20170807 15:17:05.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170807 15:17:05.798" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170807 15:17:05.798" starttime="20170807 15:17:05.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170807 15:17:05.798" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</msg>
<status status="PASS" endtime="20170807 15:17:05.798" starttime="20170807 15:17:05.798"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:05.798" starttime="20170807 15:17:05.767"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num='${args11}' and event_code=13</arg>
</arguments>
<assign>
<var>${user_id_refund}</var>
</assign>
<msg timestamp="20170807 15:17:05.798" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num='32102151361500885834' and event_code=13 </msg>
<msg timestamp="20170807 15:17:05.813" level="INFO">${user_id_refund} = ((888888, '32102151361500885834', 100000, 5755, 1, '32102151361500885834', '', Decimal('2.00'), 1, 13, 2, 0, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)),)</msg>
<status status="PASS" endtime="20170807 15:17:05.813" starttime="20170807 15:17:05.798"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${user_id_refund[0][2]}' and channel_no=1</arg>
</arguments>
<assign>
<var>${account_id_bos}</var>
</assign>
<msg timestamp="20170807 15:17:05.813" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=1 </msg>
<msg timestamp="20170807 15:17:05.876" level="INFO">${account_id_bos} = ((17140, '1686241311501149903', 100000, 5755, 1, 2, 0, datetime.datetime(2017, 7, 27, 18, 4, 58), datetime.datetime(2017, 7, 27, 18, 4, 58)),)</msg>
<status status="PASS" endtime="20170807 15:17:05.876" starttime="20170807 15:17:05.813"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_id_bos[0][3]}</arg>
</arguments>
<assign>
<var>${account_id_boss}</var>
</assign>
<msg timestamp="20170807 15:17:05.876" level="INFO">${account_id_boss} = 5755</msg>
<status status="PASS" endtime="20170807 15:17:05.876" starttime="20170807 15:17:05.876"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${user_id_refund[0][2]}' and channel_no=2</arg>
</arguments>
<assign>
<var>${account_id_ap}</var>
</assign>
<msg timestamp="20170807 15:17:05.876" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=2 </msg>
<msg timestamp="20170807 15:17:05.891" level="INFO">${account_id_ap} = ((17141, '1686241311501149931', 100000, 5756, 2, 2, 0, datetime.datetime(2017, 7, 27, 18, 28, 2), datetime.datetime(2017, 7, 27, 18, 28, 2)),)</msg>
<status status="PASS" endtime="20170807 15:17:05.891" starttime="20170807 15:17:05.876"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_id_ap[0][3]}</arg>
</arguments>
<assign>
<var>${account_id_app}</var>
</assign>
<msg timestamp="20170807 15:17:05.891" level="INFO">${account_id_app} = 5756</msg>
<status status="PASS" endtime="20170807 15:17:05.891" starttime="20170807 15:17:05.891"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_boss}'</arg>
</arguments>
<assign>
<var>${amount_boss}</var>
</assign>
<msg timestamp="20170807 15:17:05.891" level="INFO">Executing : Query  |  select * from account_amount where account_id='5755' </msg>
<msg timestamp="20170807 15:17:05.907" level="INFO">${amount_boss} = ((17178, 5755, Decimal('78.00'), Decimal('68.00'), Decimal('10.00'), datetime.datetime(2017, 7, 27, 18, 4, 58), datetime.datetime(2017, 8, 7, 15, 17, 21), 0),)</msg>
<status status="PASS" endtime="20170807 15:17:05.907" starttime="20170807 15:17:05.891"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_app}'</arg>
</arguments>
<assign>
<var>${amount_app}</var>
</assign>
<msg timestamp="20170807 15:17:05.907" level="INFO">Executing : Query  |  select * from account_amount where account_id='5756' </msg>
<msg timestamp="20170807 15:17:05.907" level="INFO">${amount_app} = ((17179, 5756, Decimal('78.00'), Decimal('68.00'), Decimal('10.00'), datetime.datetime(2017, 7, 27, 18, 28, 2), datetime.datetime(2017, 8, 7, 15, 8, 4), 0),)</msg>
<status status="PASS" endtime="20170807 15:17:05.907" starttime="20170807 15:17:05.907"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170807 15:17:05.907" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</msg>
<status status="PASS" endtime="20170807 15:17:05.907" starttime="20170807 15:17:05.907"></status>
</kw>
<kw name="Ajb Withdraw Cancel" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170807 15:17:06.297" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170807 15:17:06.297" starttime="20170807 15:17:05.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170807 15:17:06.297" level="INFO">200</msg>
<status status="PASS" endtime="20170807 15:17:06.297" starttime="20170807 15:17:06.297"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170807 15:17:06.313" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:06.313" starttime="20170807 15:17:06.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170807 15:17:06.313" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170807 15:17:06.313" starttime="20170807 15:17:06.313"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170807 15:17:06.313" level="INFO">To JSON using : content={"data":null,"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170807 15:17:06.313" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170807 15:17:06.313" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': None, u'success': True}</msg>
<status status="PASS" endtime="20170807 15:17:06.313" starttime="20170807 15:17:06.313"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170807 15:17:06.328" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:06.328" starttime="20170807 15:17:06.328"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170807 15:17:06.328" starttime="20170807 15:17:06.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170807 15:17:06.328" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170807 15:17:06.328" starttime="20170807 15:17:06.328"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170807 15:17:06.328" level="INFO">${current_time} = 2017-08-07 15:17:06.328</msg>
<status status="PASS" endtime="20170807 15:17:06.328" starttime="20170807 15:17:06.328"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>5 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170807 15:17:06.328" level="INFO">${current_time_before_30} = 2017-08-07 15:17:01.328</msg>
<status status="PASS" endtime="20170807 15:17:06.328" starttime="20170807 15:17:06.328"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170807 15:17:06.328" level="INFO">${current_time_after_30} = 2017-08-07 15:18:46.328</msg>
<status status="PASS" endtime="20170807 15:17:06.328" starttime="20170807 15:17:06.328"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where event_code=14 and user_id='${user_id_refund[0][2]}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170807 15:17:06.344" level="INFO">Executing : Query  |  select * from account_unilateral_bill where event_code=14 and user_id='100000' and update_time between' 2017-08-07 15:17:01.328' and '2017-08-07 15:18:46.328' </msg>
<msg timestamp="20170807 15:17:06.391" level="INFO">${user_id} = ((25608, '32102151361501755172', 100000, 5755, '32102151361501755170', 1, 14, 3, Decimal('2.00'), None, datetime.datetime(2017, 8, 7, 15, 17, 23), datetime.datetime(2017, 8, 7, 15, 17, 23), 0),)</msg>
<status status="PASS" endtime="20170807 15:17:06.391" starttime="20170807 15:17:06.344"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170807 15:17:06.391" level="INFO">Length is 20</msg>
<msg timestamp="20170807 15:17:06.391" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170807 15:17:06.391" starttime="20170807 15:17:06.391"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170807 15:17:06.391" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:06.391" starttime="20170807 15:17:06.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170807 15:17:06.391" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170807 15:17:06.391" starttime="20170807 15:17:06.391"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_refund[0][2]}</arg>
</arguments>
<status status="PASS" endtime="20170807 15:17:06.391" starttime="20170807 15:17:06.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170807 15:17:06.391" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170807 15:17:06.391" starttime="20170807 15:17:06.391"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170807 15:17:06.406" level="INFO">Length is 20</msg>
<msg timestamp="20170807 15:17:06.406" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170807 15:17:06.406" starttime="20170807 15:17:06.406"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170807 15:17:06.406" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:06.406" starttime="20170807 15:17:06.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170807 15:17:06.406" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170807 15:17:06.406" starttime="20170807 15:17:06.406"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170807 15:17:06.406" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:06.406" starttime="20170807 15:17:06.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170807 15:17:06.406" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170807 15:17:06.406" starttime="20170807 15:17:06.406"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>14</arg>
</arguments>
<msg timestamp="20170807 15:17:06.406" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:06.406" starttime="20170807 15:17:06.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170807 15:17:06.422" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170807 15:17:06.422" starttime="20170807 15:17:06.422"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20170807 15:17:06.422" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:06.422" starttime="20170807 15:17:06.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170807 15:17:06.422" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170807 15:17:06.422" starttime="20170807 15:17:06.422"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<status status="PASS" endtime="20170807 15:17:06.422" starttime="20170807 15:17:06.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170807 15:17:06.422" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170807 15:17:06.422" starttime="20170807 15:17:06.422"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170807 15:17:06.422" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:06.422" starttime="20170807 15:17:06.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170807 15:17:06.422" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170807 15:17:06.422" starttime="20170807 15:17:06.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170807 15:17:06.422" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170807 15:17:06.422" starttime="20170807 15:17:06.422"></status>
</kw>
<kw name="Conn Mysql" library="wjwTestLibrary">
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]}'</arg>
</arguments>
<assign>
<var>${user_id_unilateral_delete}</var>
</assign>
<msg timestamp="20170807 15:17:06.484" level="INFO">${user_id_unilateral_delete} = ()</msg>
<status status="PASS" endtime="20170807 15:17:06.484" starttime="20170807 15:17:06.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170807 15:17:06.484" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170807 15:17:06.484" starttime="20170807 15:17:06.484"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time1}</var>
</assign>
<msg timestamp="20170807 15:17:06.484" level="INFO">${current_time1} = 2017-08-07 15:17:06.484</msg>
<status status="PASS" endtime="20170807 15:17:06.484" starttime="20170807 15:17:06.484"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>5 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_301}</var>
</assign>
<msg timestamp="20170807 15:17:06.484" level="INFO">${current_time_before_301} = 2017-08-07 15:17:01.484</msg>
<status status="PASS" endtime="20170807 15:17:06.484" starttime="20170807 15:17:06.484"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_301}</var>
</assign>
<msg timestamp="20170807 15:17:06.484" level="INFO">${current_time_after_301} = 2017-08-07 15:18:46.484</msg>
<status status="PASS" endtime="20170807 15:17:06.484" starttime="20170807 15:17:06.484"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where event_code=14 and user_id='${user_id_refund[0][2]}' and update_time between' ${current_time_before_301}' and '${current_time_after_301}'</arg>
</arguments>
<assign>
<var>${user_id1}</var>
</assign>
<msg timestamp="20170807 15:17:06.484" level="INFO">Executing : Query  |  select * from ajb_account_transaction where event_code=14 and user_id='100000' and update_time between' 2017-08-07 15:17:01.484' and '2017-08-07 15:18:46.484' </msg>
<msg timestamp="20170807 15:17:06.515" level="INFO">${user_id1} = ((88888996, '32102151361501755169', 100000, 5755, 1, '32102151361500885834', '20170807151719EZZ012731', Decimal('2.00'), 1, 14, 2, 0, datetime.datetime(2017, 8, 7, 15, 17, 22), datetime.datetime(2017,...</msg>
<status status="PASS" endtime="20170807 15:17:06.515" starttime="20170807 15:17:06.484"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id1[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170807 15:17:06.515" level="INFO">Length is 20</msg>
<msg timestamp="20170807 15:17:06.515" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170807 15:17:06.515" starttime="20170807 15:17:06.515"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170807 15:17:06.515" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:06.515" starttime="20170807 15:17:06.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170807 15:17:06.515" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170807 15:17:06.515" starttime="20170807 15:17:06.515"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][2]}</arg>
<arg>${user_id_refund[0][2]}</arg>
</arguments>
<status status="PASS" endtime="20170807 15:17:06.515" starttime="20170807 15:17:06.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170807 15:17:06.515" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170807 15:17:06.515" starttime="20170807 15:17:06.515"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][5]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170807 15:17:06.515" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:06.515" starttime="20170807 15:17:06.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170807 15:17:06.515" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170807 15:17:06.515" starttime="20170807 15:17:06.515"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id1[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170807 15:17:06.531" level="INFO">${pay_no_after} = 20170807151719EZZ012731</msg>
<status status="PASS" endtime="20170807 15:17:06.531" starttime="20170807 15:17:06.531"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170807 15:17:06.531" level="INFO">Length is 23</msg>
<msg timestamp="20170807 15:17:06.531" level="INFO">${pay_no_after_length} = 23</msg>
<status status="PASS" endtime="20170807 15:17:06.531" starttime="20170807 15:17:06.531"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>23</arg>
</arguments>
<msg timestamp="20170807 15:17:06.531" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:06.531" starttime="20170807 15:17:06.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170807 15:17:06.531" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170807 15:17:06.531" starttime="20170807 15:17:06.531"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][7]}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<status status="PASS" endtime="20170807 15:17:06.531" starttime="20170807 15:17:06.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170807 15:17:06.531" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170807 15:17:06.531" starttime="20170807 15:17:06.531"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170807 15:17:06.531" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:06.531" starttime="20170807 15:17:06.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170807 15:17:06.531" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170807 15:17:06.531" starttime="20170807 15:17:06.531"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][9]}</arg>
<arg>14</arg>
</arguments>
<msg timestamp="20170807 15:17:06.531" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:06.531" starttime="20170807 15:17:06.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170807 15:17:06.531" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170807 15:17:06.547" starttime="20170807 15:17:06.531"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170807 15:17:06.547" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:06.547" starttime="20170807 15:17:06.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170807 15:17:06.547" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170807 15:17:06.547" starttime="20170807 15:17:06.547"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170807 15:17:06.547" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:06.547" starttime="20170807 15:17:06.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170807 15:17:06.547" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170807 15:17:06.547" starttime="20170807 15:17:06.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170807 15:17:06.547" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170807 15:17:06.547" starttime="20170807 15:17:06.547"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170807 15:17:06.547" level="INFO">${user_id[0][0]_transaction} = 25608</msg>
<status status="PASS" endtime="20170807 15:17:06.547" starttime="20170807 15:17:06.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170807 15:17:06.547" level="INFO">${user_id[0][0]_transaction} = 25608</msg>
<status status="PASS" endtime="20170807 15:17:06.547" starttime="20170807 15:17:06.547"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id1[0][0]}'</arg>
</arguments>
<msg timestamp="20170807 15:17:06.547" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88888996' </msg>
<status status="PASS" endtime="20170807 15:17:06.593" starttime="20170807 15:17:06.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>检验表account_amount</arg>
</arguments>
<msg timestamp="20170807 15:17:06.593" level="INFO">检验表account_amount</msg>
<status status="PASS" endtime="20170807 15:17:06.593" starttime="20170807 15:17:06.593"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_app}'</arg>
</arguments>
<assign>
<var>${amount_app_after}</var>
</assign>
<msg timestamp="20170807 15:17:06.593" level="INFO">Executing : Query  |  select * from account_amount where account_id='5756' </msg>
<msg timestamp="20170807 15:17:06.609" level="INFO">${amount_app_after} = ((17179, 5756, Decimal('78.00'), Decimal('68.00'), Decimal('10.00'), datetime.datetime(2017, 7, 27, 18, 28, 2), datetime.datetime(2017, 8, 7, 15, 8, 4), 0),)</msg>
<status status="PASS" endtime="20170807 15:17:06.609" starttime="20170807 15:17:06.593"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_boss}'</arg>
</arguments>
<assign>
<var>${amount_boss_after}</var>
</assign>
<msg timestamp="20170807 15:17:06.609" level="INFO">Executing : Query  |  select * from account_amount where account_id='5755' </msg>
<msg timestamp="20170807 15:17:06.625" level="INFO">${amount_boss_after} = ((17178, 5755, Decimal('80.00'), Decimal('70.00'), Decimal('10.00'), datetime.datetime(2017, 7, 27, 18, 4, 58), datetime.datetime(2017, 8, 7, 15, 17, 23), 0),)</msg>
<status status="PASS" endtime="20170807 15:17:06.625" starttime="20170807 15:17:06.609"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${amount_boss_after[0][2]}+${amount_app_after[0][2]}-${amount_boss[0][2]}-${amount_app[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_check}</var>
</assign>
<msg timestamp="20170807 15:17:06.625" level="INFO">${total_amount_check} = 2.0</msg>
<status status="PASS" endtime="20170807 15:17:06.625" starttime="20170807 15:17:06.625"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${total_amount_check}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<msg timestamp="20170807 15:17:06.625" level="INFO">Argument types are:
&lt;type 'float'&gt;
&lt;class 'decimal.Decimal'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:06.625" starttime="20170807 15:17:06.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount正确</arg>
</arguments>
<msg timestamp="20170807 15:17:06.625" level="INFO">total_amount正确</msg>
<status status="PASS" endtime="20170807 15:17:06.625" starttime="20170807 15:17:06.625"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${amount_boss_after[0][3]}+${amount_app_after[0][3]}-${amount_boss[0][3]}-${amount_app[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_check}</var>
</assign>
<msg timestamp="20170807 15:17:06.625" level="INFO">${balance_amount_check} = 2.0</msg>
<status status="PASS" endtime="20170807 15:17:06.625" starttime="20170807 15:17:06.625"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${balance_amount_check}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<msg timestamp="20170807 15:17:06.640" level="INFO">Argument types are:
&lt;type 'float'&gt;
&lt;class 'decimal.Decimal'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:06.640" starttime="20170807 15:17:06.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount正确</arg>
</arguments>
<msg timestamp="20170807 15:17:06.640" level="INFO">balance_amount正确</msg>
<status status="PASS" endtime="20170807 15:17:06.640" starttime="20170807 15:17:06.640"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${amount_boss[0][4]}+${amount_app[0][4]}-${amount_boss_after[0][4]}-${amount_app_after[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_check}</var>
</assign>
<msg timestamp="20170807 15:17:06.640" level="INFO">${frozen_amount_check} = 0.0</msg>
<status status="PASS" endtime="20170807 15:17:06.640" starttime="20170807 15:17:06.640"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${frozen_amount_check}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170807 15:17:06.640" level="INFO">Argument types are:
&lt;type 'float'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:06.640" starttime="20170807 15:17:06.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount正确</arg>
</arguments>
<msg timestamp="20170807 15:17:06.640" level="INFO">frozen_amount正确</msg>
<status status="PASS" endtime="20170807 15:17:06.640" starttime="20170807 15:17:06.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>检验表account_amount成功</arg>
</arguments>
<msg timestamp="20170807 15:17:06.640" level="INFO">检验表account_amount成功</msg>
<status status="PASS" endtime="20170807 15:17:06.640" starttime="20170807 15:17:06.640"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<msg timestamp="20170807 15:17:06.640" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=888888 </msg>
<status status="PASS" endtime="20170807 15:17:06.718" starttime="20170807 15:17:06.640"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount SET total_amount =${amount_boss[0][2]},balance_amount=${amount_boss[0][3]},frozen_amount=${amount_boss[0][4]} where account_id="${account_id_boss}";</arg>
</arguments>
<msg timestamp="20170807 15:17:06.718" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount SET total_amount =78.00,balance_amount=68.00,frozen_amount=10.00 where account_id="5755"; </msg>
<status status="PASS" endtime="20170807 15:17:06.765" starttime="20170807 15:17:06.718"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount SET total_amount=${amount_boss[0][2]},balance_amount=${amount_boss[0][3]},frozen_amount=${amount_boss[0][4]} where account_id="${account_id_app}";</arg>
</arguments>
<msg timestamp="20170807 15:17:06.765" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount SET total_amount=78.00,balance_amount=68.00,frozen_amount=10.00 where account_id="5756"; </msg>
<status status="PASS" endtime="20170807 15:17:06.781" starttime="20170807 15:17:06.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170807 15:17:06.781" level="INFO">成功</msg>
<status status="PASS" endtime="20170807 15:17:06.781" starttime="20170807 15:17:06.781"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_base where user_id="${boss_user_account_id}"</arg>
</arguments>
<assign>
<var>${after_time_after}</var>
</assign>
<msg timestamp="20170807 15:17:06.796" level="INFO">Executing : Query  |  select * from account_base where user_id="100000" </msg>
<msg timestamp="20170807 15:17:06.796" level="INFO">${after_time_after} = ((5755, 100000, 1, 2, 2, datetime.datetime(2017, 7, 28, 15, 17, 5), datetime.datetime(2017, 8, 22, 23, 59, 59), datetime.datetime(2017, 7, 28, 15, 17, 5), datetime.datetime(2017, 8, 7, 15, 17, 23), 0)...</msg>
<status status="PASS" endtime="20170807 15:17:06.796" starttime="20170807 15:17:06.781"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${after_time_after[0][6]}</arg>
<arg>${after_time_after[1][6]}</arg>
</arguments>
<status status="PASS" endtime="20170807 15:17:06.796" starttime="20170807 15:17:06.796"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${after_time_after[0][6]}</arg>
<arg>datetime</arg>
</arguments>
<assign>
<var>${after_time_after1}</var>
</assign>
<msg timestamp="20170807 15:17:06.812" level="INFO">${after_time_after1} = 2017-08-22 23:59:59</msg>
<status status="PASS" endtime="20170807 15:17:06.812" starttime="20170807 15:17:06.796"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${after_time_check1}</arg>
<arg>datetime</arg>
</arguments>
<assign>
<var>${after_time_check}</var>
</assign>
<msg timestamp="20170807 15:17:06.812" level="INFO">${after_time_check} = 2017-08-22 15:17:05.377000</msg>
<status status="PASS" endtime="20170807 15:17:06.812" starttime="20170807 15:17:06.812"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${after_time_after1.month}</arg>
<arg>${after_time_check.month}</arg>
</arguments>
<status status="PASS" endtime="20170807 15:17:06.812" starttime="20170807 15:17:06.812"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${after_time_after1.day}</arg>
<arg>${after_time_check.day}</arg>
</arguments>
<status status="PASS" endtime="20170807 15:17:06.812" starttime="20170807 15:17:06.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>账户未过期，且有效期小于15天的时候，有效期延长15天</arg>
</arguments>
<msg timestamp="20170807 15:17:06.812" level="INFO">账户未过期，且有效期小于15天的时候，有效期延长15天</msg>
<status status="PASS" endtime="20170807 15:17:06.812" starttime="20170807 15:17:06.812"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:06.812" critical="yes" starttime="20170807 15:17:05.283"></status>
</test>
<test id="s1-s1-s1-t4" name="艾佳币账户未过期，支付订单后取消顶大，解冻艾佳币，有效期大于15天的不延长">
<kw name="参数配置" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170807 15:17:06.843" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170807 15:17:06.905" starttime="20170807 15:17:06.843"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:06.905" starttime="20170807 15:17:06.843"></status>
</kw>
<kw name="输入拥有不同类型账户的用户user_id" library="myResource">
<arguments>
<arg>100000</arg>
<arg>100000</arg>
<arg>123456781</arg>
<arg>http://192.168.1.31:10003</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:17:06.905" level="INFO">${boss_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170807 15:17:06.905" starttime="20170807 15:17:06.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:17:06.905" level="INFO">${app_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170807 15:17:06.905" starttime="20170807 15:17:06.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${no_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:17:06.905" level="INFO">${no_user_account_id} = 123456781</msg>
<status status="PASS" endtime="20170807 15:17:06.905" starttime="20170807 15:17:06.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${environment}</arg>
</arguments>
<msg timestamp="20170807 15:17:06.921" level="INFO">${environment} = http://192.168.1.31:10003</msg>
<status status="PASS" endtime="20170807 15:17:06.921" starttime="20170807 15:17:06.905"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${boss_user_account_id}' and channel_no=1</arg>
</arguments>
<assign>
<var>${boss_channel_no1}</var>
</assign>
<msg timestamp="20170807 15:17:06.921" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=1 </msg>
<msg timestamp="20170807 15:17:06.937" level="INFO">${boss_channel_no1} = ((17140, '1686241311501149903', 100000, 5755, 1, 2, 0, datetime.datetime(2017, 7, 27, 18, 4, 58), datetime.datetime(2017, 7, 27, 18, 4, 58)),)</msg>
<status status="PASS" endtime="20170807 15:17:06.937" starttime="20170807 15:17:06.921"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${boss_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${boss_channel_no}</var>
</assign>
<msg timestamp="20170807 15:17:06.937" level="INFO">${boss_channel_no} = 5755</msg>
<status status="PASS" endtime="20170807 15:17:06.937" starttime="20170807 15:17:06.937"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${app_user_account_id}' and channel_no=2</arg>
</arguments>
<assign>
<var>${app_channel_no1}</var>
</assign>
<msg timestamp="20170807 15:17:06.937" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=2 </msg>
<msg timestamp="20170807 15:17:06.952" level="INFO">${app_channel_no1} = ((17141, '1686241311501149931', 100000, 5756, 2, 2, 0, datetime.datetime(2017, 7, 27, 18, 28, 2), datetime.datetime(2017, 7, 27, 18, 28, 2)),)</msg>
<status status="PASS" endtime="20170807 15:17:06.952" starttime="20170807 15:17:06.937"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${app_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${app_channel_no}</var>
</assign>
<msg timestamp="20170807 15:17:06.952" level="INFO">${app_channel_no} = 5756</msg>
<status status="PASS" endtime="20170807 15:17:06.952" starttime="20170807 15:17:06.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_channel_no}</arg>
</arguments>
<msg timestamp="20170807 15:17:06.952" level="INFO">${boss_channel_no} = 5755</msg>
<status status="PASS" endtime="20170807 15:17:06.952" starttime="20170807 15:17:06.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_channel_no}</arg>
</arguments>
<msg timestamp="20170807 15:17:06.952" level="INFO">${app_channel_no} = 5756</msg>
<status status="PASS" endtime="20170807 15:17:06.952" starttime="20170807 15:17:06.952"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:06.968" starttime="20170807 15:17:06.905"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:06.968" starttime="20170807 15:17:06.843"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170807 15:17:06.968" level="INFO">${current_time} = 2017-08-07 15:17:06.968</msg>
<status status="PASS" endtime="20170807 15:17:06.968" starttime="20170807 15:17:06.968"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>20 days</arg>
</arguments>
<assign>
<var>${after_time}</var>
</assign>
<msg timestamp="20170807 15:17:06.968" level="INFO">${after_time} = 2017-08-27 15:17:06.968</msg>
<status status="PASS" endtime="20170807 15:17:06.968" starttime="20170807 15:17:06.968"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>10 days</arg>
</arguments>
<assign>
<var>${account_begin_time}</var>
</assign>
<msg timestamp="20170807 15:17:06.968" level="INFO">${account_begin_time} = 2017-07-28 15:17:06.968</msg>
<status status="PASS" endtime="20170807 15:17:06.968" starttime="20170807 15:17:06.968"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${after_time}</arg>
<arg>datetime</arg>
</arguments>
<assign>
<var>${after_time_check1}</var>
</assign>
<msg timestamp="20170807 15:17:06.968" level="INFO">${after_time_check1} = 2017-08-27 15:17:06.968000</msg>
<status status="PASS" endtime="20170807 15:17:06.968" starttime="20170807 15:17:06.968"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id="${boss_user_account_id}"</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170807 15:17:06.968" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id="100000" </msg>
<msg timestamp="20170807 15:17:06.983" level="INFO">${id} = ((17140, '1686241311501149903', 100000, 5755, 1, 2, 0, datetime.datetime(2017, 7, 27, 18, 4, 58), datetime.datetime(2017, 7, 27, 18, 4, 58)), (17141, '1686241311501149931', 100000, 5756, 2, 2, 0, date...</msg>
<status status="PASS" endtime="20170807 15:17:06.983" starttime="20170807 15:17:06.968"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_base where user_id="${boss_user_account_id}"</arg>
</arguments>
<msg timestamp="20170807 15:17:06.983" level="INFO">Executing : Execute SQL String  |  delete from account_base where user_id="100000" </msg>
<status status="PASS" endtime="20170807 15:17:07.015" starttime="20170807 15:17:06.983"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into account_base(id,user_id,role_type,account_type,account_status,account_begin_time,account_end_time,add_time,update_time,del_flag) values("${id[0][3]}","${boss_user_account_id}","1","2","2","${account_begin_time}","${after_time}","${account_begin_time}","${account_begin_time}","0");</arg>
</arguments>
<msg timestamp="20170807 15:17:07.030" level="INFO">Executing : Execute SQL String  |  insert into account_base(id,user_id,role_type,account_type,account_status,account_begin_time,account_end_time,add_time,update_time,del_flag) values("5755","100000","1","2","2","2017-07-28 15:17:06.968","2017-08-27 15:17:06.968","2017-07-28 15:17:06.968","2017-07-28 15:17:06.968","0"); </msg>
<status status="PASS" endtime="20170807 15:17:07.061" starttime="20170807 15:17:07.015"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into account_base(id,user_id,role_type,account_type,account_status,account_begin_time,account_end_time,add_time,update_time,del_flag) values("${id[1][3]}","${boss_user_account_id}","1","2","2","${account_begin_time}","${after_time}","${account_begin_time}","${account_begin_time}","0");</arg>
</arguments>
<msg timestamp="20170807 15:17:07.061" level="INFO">Executing : Execute SQL String  |  insert into account_base(id,user_id,role_type,account_type,account_status,account_begin_time,account_end_time,add_time,update_time,del_flag) values("5756","100000","1","2","2","2017-07-28 15:17:06.968","2017-08-27 15:17:06.968","2017-07-28 15:17:06.968","2017-07-28 15:17:06.968","0"); </msg>
<status status="PASS" endtime="20170807 15:17:07.155" starttime="20170807 15:17:07.061"></status>
</kw>
<kw name="清数据" library="myResource">
<arguments>
<arg>888888</arg>
</arguments>
<kw name="参数配置" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170807 15:17:07.155" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170807 15:17:07.171" starttime="20170807 15:17:07.155"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:07.171" starttime="20170807 15:17:07.155"></status>
</kw>
<kw name="输入拥有不同类型账户的用户user_id" library="myResource">
<arguments>
<arg>100000</arg>
<arg>100000</arg>
<arg>123456781</arg>
<arg>http://192.168.1.31:10003</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:17:07.186" level="INFO">${boss_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170807 15:17:07.186" starttime="20170807 15:17:07.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:17:07.186" level="INFO">${app_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170807 15:17:07.186" starttime="20170807 15:17:07.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${no_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:17:07.186" level="INFO">${no_user_account_id} = 123456781</msg>
<status status="PASS" endtime="20170807 15:17:07.186" starttime="20170807 15:17:07.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${environment}</arg>
</arguments>
<msg timestamp="20170807 15:17:07.186" level="INFO">${environment} = http://192.168.1.31:10003</msg>
<status status="PASS" endtime="20170807 15:17:07.186" starttime="20170807 15:17:07.186"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${boss_user_account_id}' and channel_no=1</arg>
</arguments>
<assign>
<var>${boss_channel_no1}</var>
</assign>
<msg timestamp="20170807 15:17:07.186" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=1 </msg>
<msg timestamp="20170807 15:17:07.202" level="INFO">${boss_channel_no1} = ((17140, '1686241311501149903', 100000, 5755, 1, 2, 0, datetime.datetime(2017, 7, 27, 18, 4, 58), datetime.datetime(2017, 7, 27, 18, 4, 58)),)</msg>
<status status="PASS" endtime="20170807 15:17:07.202" starttime="20170807 15:17:07.186"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${boss_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${boss_channel_no}</var>
</assign>
<msg timestamp="20170807 15:17:07.202" level="INFO">${boss_channel_no} = 5755</msg>
<status status="PASS" endtime="20170807 15:17:07.202" starttime="20170807 15:17:07.202"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${app_user_account_id}' and channel_no=2</arg>
</arguments>
<assign>
<var>${app_channel_no1}</var>
</assign>
<msg timestamp="20170807 15:17:07.202" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=2 </msg>
<msg timestamp="20170807 15:17:07.217" level="INFO">${app_channel_no1} = ((17141, '1686241311501149931', 100000, 5756, 2, 2, 0, datetime.datetime(2017, 7, 27, 18, 28, 2), datetime.datetime(2017, 7, 27, 18, 28, 2)),)</msg>
<status status="PASS" endtime="20170807 15:17:07.217" starttime="20170807 15:17:07.202"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${app_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${app_channel_no}</var>
</assign>
<msg timestamp="20170807 15:17:07.217" level="INFO">${app_channel_no} = 5756</msg>
<status status="PASS" endtime="20170807 15:17:07.217" starttime="20170807 15:17:07.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_channel_no}</arg>
</arguments>
<msg timestamp="20170807 15:17:07.233" level="INFO">${boss_channel_no} = 5755</msg>
<status status="PASS" endtime="20170807 15:17:07.233" starttime="20170807 15:17:07.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_channel_no}</arg>
</arguments>
<msg timestamp="20170807 15:17:07.233" level="INFO">${app_channel_no} = 5756</msg>
<status status="PASS" endtime="20170807 15:17:07.233" starttime="20170807 15:17:07.233"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:07.233" starttime="20170807 15:17:07.171"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:07.233" starttime="20170807 15:17:07.155"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170807 15:17:07.233" level="INFO">Executing : Query  |  select * from ajb_account_transaction where id=888888 </msg>
<msg timestamp="20170807 15:17:07.249" level="INFO">${check} = ()</msg>
<status status="PASS" endtime="20170807 15:17:07.249" starttime="20170807 15:17:07.233"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170807 15:17:07.249" level="INFO">Length is 0</msg>
<msg timestamp="20170807 15:17:07.249" level="INFO">${check_length} = 0</msg>
<status status="PASS" endtime="20170807 15:17:07.249" starttime="20170807 15:17:07.249"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} != 0</arg>
<arg>execute sql string</arg>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>数据库之前没有数据</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库之前没有数据</arg>
</arguments>
<msg timestamp="20170807 15:17:07.249" level="INFO">数据库之前没有数据</msg>
<status status="PASS" endtime="20170807 15:17:07.249" starttime="20170807 15:17:07.249"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:07.249" starttime="20170807 15:17:07.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库里面的这条数据清理成功啦。</arg>
</arguments>
<msg timestamp="20170807 15:17:07.249" level="INFO">数据库里面的这条数据清理成功啦。</msg>
<status status="PASS" endtime="20170807 15:17:07.249" starttime="20170807 15:17:07.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_delete}</arg>
</arguments>
<msg timestamp="20170807 15:17:07.249" level="INFO">${id_delete} = 888888</msg>
<status status="PASS" endtime="20170807 15:17:07.249" starttime="20170807 15:17:07.249"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:07.249" starttime="20170807 15:17:07.155"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("${id_delete}","32102151361500885834","${boss_user_account_id}","${boss_channel_no}","1","32102151361500885834","","2","1","13","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170807 15:17:07.264" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("888888","32102151361500885834","100000","5755","1","32102151361500885834","","2","1","13","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170807 15:17:07.327" starttime="20170807 15:17:07.264"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>32102151361500885834</arg>
<arg>${environment}/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170807 15:17:07.342" level="INFO">${args11} = 32102151361500885834</msg>
<status status="PASS" endtime="20170807 15:17:07.342" starttime="20170807 15:17:07.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170807 15:17:07.342" level="INFO">${args22} = </msg>
<status status="PASS" endtime="20170807 15:17:07.342" starttime="20170807 15:17:07.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170807 15:17:07.358" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170807 15:17:07.358" starttime="20170807 15:17:07.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170807 15:17:07.358" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170807 15:17:07.358" starttime="20170807 15:17:07.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170807 15:17:07.358" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</msg>
<status status="PASS" endtime="20170807 15:17:07.373" starttime="20170807 15:17:07.358"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:07.373" starttime="20170807 15:17:07.342"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num='${args11}' and event_code=13</arg>
</arguments>
<assign>
<var>${user_id_refund}</var>
</assign>
<msg timestamp="20170807 15:17:07.373" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num='32102151361500885834' and event_code=13 </msg>
<msg timestamp="20170807 15:17:07.420" level="INFO">${user_id_refund} = ((888888, '32102151361500885834', 100000, 5755, 1, '32102151361500885834', '', Decimal('2.00'), 1, 13, 2, 0, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)),)</msg>
<status status="PASS" endtime="20170807 15:17:07.420" starttime="20170807 15:17:07.373"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${user_id_refund[0][2]}' and channel_no=1</arg>
</arguments>
<assign>
<var>${account_id_bos}</var>
</assign>
<msg timestamp="20170807 15:17:07.420" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=1 </msg>
<msg timestamp="20170807 15:17:07.467" level="INFO">${account_id_bos} = ((17140, '1686241311501149903', 100000, 5755, 1, 2, 0, datetime.datetime(2017, 7, 27, 18, 4, 58), datetime.datetime(2017, 7, 27, 18, 4, 58)),)</msg>
<status status="PASS" endtime="20170807 15:17:07.467" starttime="20170807 15:17:07.420"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_id_bos[0][3]}</arg>
</arguments>
<assign>
<var>${account_id_boss}</var>
</assign>
<msg timestamp="20170807 15:17:07.467" level="INFO">${account_id_boss} = 5755</msg>
<status status="PASS" endtime="20170807 15:17:07.467" starttime="20170807 15:17:07.467"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${user_id_refund[0][2]}' and channel_no=2</arg>
</arguments>
<assign>
<var>${account_id_ap}</var>
</assign>
<msg timestamp="20170807 15:17:07.467" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=2 </msg>
<msg timestamp="20170807 15:17:07.498" level="INFO">${account_id_ap} = ((17141, '1686241311501149931', 100000, 5756, 2, 2, 0, datetime.datetime(2017, 7, 27, 18, 28, 2), datetime.datetime(2017, 7, 27, 18, 28, 2)),)</msg>
<status status="PASS" endtime="20170807 15:17:07.498" starttime="20170807 15:17:07.467"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_id_ap[0][3]}</arg>
</arguments>
<assign>
<var>${account_id_app}</var>
</assign>
<msg timestamp="20170807 15:17:07.498" level="INFO">${account_id_app} = 5756</msg>
<status status="PASS" endtime="20170807 15:17:07.498" starttime="20170807 15:17:07.498"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_boss}'</arg>
</arguments>
<assign>
<var>${amount_boss}</var>
</assign>
<msg timestamp="20170807 15:17:07.498" level="INFO">Executing : Query  |  select * from account_amount where account_id='5755' </msg>
<msg timestamp="20170807 15:17:07.529" level="INFO">${amount_boss} = ((17178, 5755, Decimal('78.00'), Decimal('68.00'), Decimal('10.00'), datetime.datetime(2017, 7, 27, 18, 4, 58), datetime.datetime(2017, 8, 7, 15, 17, 23), 0),)</msg>
<status status="PASS" endtime="20170807 15:17:07.529" starttime="20170807 15:17:07.498"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_app}'</arg>
</arguments>
<assign>
<var>${amount_app}</var>
</assign>
<msg timestamp="20170807 15:17:07.529" level="INFO">Executing : Query  |  select * from account_amount where account_id='5756' </msg>
<msg timestamp="20170807 15:17:07.561" level="INFO">${amount_app} = ((17179, 5756, Decimal('78.00'), Decimal('68.00'), Decimal('10.00'), datetime.datetime(2017, 7, 27, 18, 28, 2), datetime.datetime(2017, 8, 7, 15, 8, 4), 0),)</msg>
<status status="PASS" endtime="20170807 15:17:07.561" starttime="20170807 15:17:07.529"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170807 15:17:07.561" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</msg>
<status status="PASS" endtime="20170807 15:17:07.561" starttime="20170807 15:17:07.561"></status>
</kw>
<kw name="Ajb Withdraw Cancel" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170807 15:17:07.935" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170807 15:17:07.935" starttime="20170807 15:17:07.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170807 15:17:07.935" level="INFO">200</msg>
<status status="PASS" endtime="20170807 15:17:07.935" starttime="20170807 15:17:07.935"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170807 15:17:07.935" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:07.935" starttime="20170807 15:17:07.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170807 15:17:07.951" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170807 15:17:07.951" starttime="20170807 15:17:07.935"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170807 15:17:07.951" level="INFO">To JSON using : content={"data":null,"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170807 15:17:07.951" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170807 15:17:07.951" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': None, u'success': True}</msg>
<status status="PASS" endtime="20170807 15:17:07.951" starttime="20170807 15:17:07.951"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170807 15:17:07.951" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:07.966" starttime="20170807 15:17:07.951"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170807 15:17:07.966" starttime="20170807 15:17:07.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170807 15:17:07.966" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170807 15:17:07.966" starttime="20170807 15:17:07.966"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170807 15:17:07.982" level="INFO">${current_time} = 2017-08-07 15:17:07.982</msg>
<status status="PASS" endtime="20170807 15:17:07.982" starttime="20170807 15:17:07.966"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>5 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170807 15:17:07.982" level="INFO">${current_time_before_30} = 2017-08-07 15:17:02.982</msg>
<status status="PASS" endtime="20170807 15:17:07.982" starttime="20170807 15:17:07.982"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170807 15:17:07.982" level="INFO">${current_time_after_30} = 2017-08-07 15:18:47.982</msg>
<status status="PASS" endtime="20170807 15:17:07.982" starttime="20170807 15:17:07.982"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where event_code=14 and user_id='${user_id_refund[0][2]}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170807 15:17:07.982" level="INFO">Executing : Query  |  select * from account_unilateral_bill where event_code=14 and user_id='100000' and update_time between' 2017-08-07 15:17:02.982' and '2017-08-07 15:18:47.982' </msg>
<msg timestamp="20170807 15:17:08.013" level="INFO">${user_id} = ((25610, '32102151361501755176', 100000, 5755, '32102151361501755174', 1, 14, 3, Decimal('2.00'), None, datetime.datetime(2017, 8, 7, 15, 17, 24), datetime.datetime(2017, 8, 7, 15, 17, 24), 0),)</msg>
<status status="PASS" endtime="20170807 15:17:08.013" starttime="20170807 15:17:07.982"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170807 15:17:08.013" level="INFO">Length is 20</msg>
<msg timestamp="20170807 15:17:08.013" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170807 15:17:08.013" starttime="20170807 15:17:08.013"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170807 15:17:08.013" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:08.013" starttime="20170807 15:17:08.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170807 15:17:08.013" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170807 15:17:08.013" starttime="20170807 15:17:08.013"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_refund[0][2]}</arg>
</arguments>
<status status="PASS" endtime="20170807 15:17:08.013" starttime="20170807 15:17:08.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170807 15:17:08.013" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170807 15:17:08.013" starttime="20170807 15:17:08.013"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170807 15:17:08.013" level="INFO">Length is 20</msg>
<msg timestamp="20170807 15:17:08.013" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170807 15:17:08.013" starttime="20170807 15:17:08.013"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170807 15:17:08.029" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:08.029" starttime="20170807 15:17:08.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170807 15:17:08.029" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170807 15:17:08.029" starttime="20170807 15:17:08.029"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170807 15:17:08.029" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:08.029" starttime="20170807 15:17:08.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170807 15:17:08.029" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170807 15:17:08.029" starttime="20170807 15:17:08.029"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>14</arg>
</arguments>
<msg timestamp="20170807 15:17:08.029" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:08.029" starttime="20170807 15:17:08.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170807 15:17:08.029" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170807 15:17:08.029" starttime="20170807 15:17:08.029"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20170807 15:17:08.029" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:08.029" starttime="20170807 15:17:08.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170807 15:17:08.029" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170807 15:17:08.029" starttime="20170807 15:17:08.029"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<status status="PASS" endtime="20170807 15:17:08.029" starttime="20170807 15:17:08.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170807 15:17:08.044" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170807 15:17:08.044" starttime="20170807 15:17:08.044"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170807 15:17:08.044" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:08.044" starttime="20170807 15:17:08.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170807 15:17:08.044" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170807 15:17:08.044" starttime="20170807 15:17:08.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170807 15:17:08.044" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170807 15:17:08.044" starttime="20170807 15:17:08.044"></status>
</kw>
<kw name="Conn Mysql" library="wjwTestLibrary">
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]}'</arg>
</arguments>
<assign>
<var>${user_id_unilateral_delete}</var>
</assign>
<msg timestamp="20170807 15:17:08.091" level="INFO">${user_id_unilateral_delete} = ()</msg>
<status status="PASS" endtime="20170807 15:17:08.091" starttime="20170807 15:17:08.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170807 15:17:08.091" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170807 15:17:08.091" starttime="20170807 15:17:08.091"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time1}</var>
</assign>
<msg timestamp="20170807 15:17:08.091" level="INFO">${current_time1} = 2017-08-07 15:17:08.091</msg>
<status status="PASS" endtime="20170807 15:17:08.091" starttime="20170807 15:17:08.091"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>5 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_301}</var>
</assign>
<msg timestamp="20170807 15:17:08.091" level="INFO">${current_time_before_301} = 2017-08-07 15:17:03.091</msg>
<status status="PASS" endtime="20170807 15:17:08.091" starttime="20170807 15:17:08.091"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_301}</var>
</assign>
<msg timestamp="20170807 15:17:08.107" level="INFO">${current_time_after_301} = 2017-08-07 15:18:48.091</msg>
<status status="PASS" endtime="20170807 15:17:08.107" starttime="20170807 15:17:08.091"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where event_code=14 and user_id='${user_id_refund[0][2]}' and update_time between' ${current_time_before_301}' and '${current_time_after_301}'</arg>
</arguments>
<assign>
<var>${user_id1}</var>
</assign>
<msg timestamp="20170807 15:17:08.107" level="INFO">Executing : Query  |  select * from ajb_account_transaction where event_code=14 and user_id='100000' and update_time between' 2017-08-07 15:17:03.091' and '2017-08-07 15:18:48.091' </msg>
<msg timestamp="20170807 15:17:08.122" level="INFO">${user_id1} = ((88888997, '32102151361501755173', 100000, 5755, 1, '32102151361500885834', '20170807151721EQZ012732', Decimal('2.00'), 1, 14, 2, 0, datetime.datetime(2017, 8, 7, 15, 17, 24), datetime.datetime(2017,...</msg>
<status status="PASS" endtime="20170807 15:17:08.122" starttime="20170807 15:17:08.107"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id1[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170807 15:17:08.122" level="INFO">Length is 20</msg>
<msg timestamp="20170807 15:17:08.122" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170807 15:17:08.122" starttime="20170807 15:17:08.122"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170807 15:17:08.122" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:08.122" starttime="20170807 15:17:08.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170807 15:17:08.122" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170807 15:17:08.122" starttime="20170807 15:17:08.122"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][2]}</arg>
<arg>${user_id_refund[0][2]}</arg>
</arguments>
<status status="PASS" endtime="20170807 15:17:08.122" starttime="20170807 15:17:08.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170807 15:17:08.122" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170807 15:17:08.122" starttime="20170807 15:17:08.122"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][5]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170807 15:17:08.138" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:08.138" starttime="20170807 15:17:08.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170807 15:17:08.138" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170807 15:17:08.138" starttime="20170807 15:17:08.138"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id1[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170807 15:17:08.138" level="INFO">${pay_no_after} = 20170807151721EQZ012732</msg>
<status status="PASS" endtime="20170807 15:17:08.138" starttime="20170807 15:17:08.138"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170807 15:17:08.138" level="INFO">Length is 23</msg>
<msg timestamp="20170807 15:17:08.138" level="INFO">${pay_no_after_length} = 23</msg>
<status status="PASS" endtime="20170807 15:17:08.138" starttime="20170807 15:17:08.138"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>23</arg>
</arguments>
<msg timestamp="20170807 15:17:08.138" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:08.138" starttime="20170807 15:17:08.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170807 15:17:08.138" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170807 15:17:08.138" starttime="20170807 15:17:08.138"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][7]}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<status status="PASS" endtime="20170807 15:17:08.138" starttime="20170807 15:17:08.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170807 15:17:08.138" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170807 15:17:08.138" starttime="20170807 15:17:08.138"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170807 15:17:08.138" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:08.138" starttime="20170807 15:17:08.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170807 15:17:08.153" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170807 15:17:08.153" starttime="20170807 15:17:08.153"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][9]}</arg>
<arg>14</arg>
</arguments>
<msg timestamp="20170807 15:17:08.153" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:08.153" starttime="20170807 15:17:08.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170807 15:17:08.153" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170807 15:17:08.153" starttime="20170807 15:17:08.153"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170807 15:17:08.153" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:08.153" starttime="20170807 15:17:08.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170807 15:17:08.153" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170807 15:17:08.153" starttime="20170807 15:17:08.153"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170807 15:17:08.153" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:08.153" starttime="20170807 15:17:08.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170807 15:17:08.153" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170807 15:17:08.153" starttime="20170807 15:17:08.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170807 15:17:08.153" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170807 15:17:08.153" starttime="20170807 15:17:08.153"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170807 15:17:08.153" level="INFO">${user_id[0][0]_transaction} = 25610</msg>
<status status="PASS" endtime="20170807 15:17:08.153" starttime="20170807 15:17:08.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170807 15:17:08.169" level="INFO">${user_id[0][0]_transaction} = 25610</msg>
<status status="PASS" endtime="20170807 15:17:08.169" starttime="20170807 15:17:08.153"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id1[0][0]}'</arg>
</arguments>
<msg timestamp="20170807 15:17:08.169" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88888997' </msg>
<status status="PASS" endtime="20170807 15:17:08.200" starttime="20170807 15:17:08.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>检验表account_amount</arg>
</arguments>
<msg timestamp="20170807 15:17:08.200" level="INFO">检验表account_amount</msg>
<status status="PASS" endtime="20170807 15:17:08.200" starttime="20170807 15:17:08.200"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_app}'</arg>
</arguments>
<assign>
<var>${amount_app_after}</var>
</assign>
<msg timestamp="20170807 15:17:08.200" level="INFO">Executing : Query  |  select * from account_amount where account_id='5756' </msg>
<msg timestamp="20170807 15:17:08.216" level="INFO">${amount_app_after} = ((17179, 5756, Decimal('78.00'), Decimal('68.00'), Decimal('10.00'), datetime.datetime(2017, 7, 27, 18, 28, 2), datetime.datetime(2017, 8, 7, 15, 8, 4), 0),)</msg>
<status status="PASS" endtime="20170807 15:17:08.216" starttime="20170807 15:17:08.200"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_boss}'</arg>
</arguments>
<assign>
<var>${amount_boss_after}</var>
</assign>
<msg timestamp="20170807 15:17:08.216" level="INFO">Executing : Query  |  select * from account_amount where account_id='5755' </msg>
<msg timestamp="20170807 15:17:08.232" level="INFO">${amount_boss_after} = ((17178, 5755, Decimal('80.00'), Decimal('70.00'), Decimal('10.00'), datetime.datetime(2017, 7, 27, 18, 4, 58), datetime.datetime(2017, 8, 7, 15, 17, 24), 0),)</msg>
<status status="PASS" endtime="20170807 15:17:08.232" starttime="20170807 15:17:08.216"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${amount_boss_after[0][2]}+${amount_app_after[0][2]}-${amount_boss[0][2]}-${amount_app[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_check}</var>
</assign>
<msg timestamp="20170807 15:17:08.232" level="INFO">${total_amount_check} = 2.0</msg>
<status status="PASS" endtime="20170807 15:17:08.232" starttime="20170807 15:17:08.232"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${total_amount_check}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<msg timestamp="20170807 15:17:08.232" level="INFO">Argument types are:
&lt;type 'float'&gt;
&lt;class 'decimal.Decimal'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:08.232" starttime="20170807 15:17:08.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount正确</arg>
</arguments>
<msg timestamp="20170807 15:17:08.232" level="INFO">total_amount正确</msg>
<status status="PASS" endtime="20170807 15:17:08.232" starttime="20170807 15:17:08.232"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${amount_boss_after[0][3]}+${amount_app_after[0][3]}-${amount_boss[0][3]}-${amount_app[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_check}</var>
</assign>
<msg timestamp="20170807 15:17:08.232" level="INFO">${balance_amount_check} = 2.0</msg>
<status status="PASS" endtime="20170807 15:17:08.232" starttime="20170807 15:17:08.232"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${balance_amount_check}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<msg timestamp="20170807 15:17:08.232" level="INFO">Argument types are:
&lt;type 'float'&gt;
&lt;class 'decimal.Decimal'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:08.232" starttime="20170807 15:17:08.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount正确</arg>
</arguments>
<msg timestamp="20170807 15:17:08.232" level="INFO">balance_amount正确</msg>
<status status="PASS" endtime="20170807 15:17:08.232" starttime="20170807 15:17:08.232"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${amount_boss[0][4]}+${amount_app[0][4]}-${amount_boss_after[0][4]}-${amount_app_after[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_check}</var>
</assign>
<msg timestamp="20170807 15:17:08.232" level="INFO">${frozen_amount_check} = 0.0</msg>
<status status="PASS" endtime="20170807 15:17:08.232" starttime="20170807 15:17:08.232"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${frozen_amount_check}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170807 15:17:08.232" level="INFO">Argument types are:
&lt;type 'float'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:08.232" starttime="20170807 15:17:08.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount正确</arg>
</arguments>
<msg timestamp="20170807 15:17:08.248" level="INFO">frozen_amount正确</msg>
<status status="PASS" endtime="20170807 15:17:08.248" starttime="20170807 15:17:08.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>检验表account_amount成功</arg>
</arguments>
<msg timestamp="20170807 15:17:08.248" level="INFO">检验表account_amount成功</msg>
<status status="PASS" endtime="20170807 15:17:08.248" starttime="20170807 15:17:08.248"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<msg timestamp="20170807 15:17:08.248" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=888888 </msg>
<status status="PASS" endtime="20170807 15:17:08.279" starttime="20170807 15:17:08.248"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount SET total_amount =${amount_boss[0][2]},balance_amount=${amount_boss[0][3]},frozen_amount=${amount_boss[0][4]} where account_id="${account_id_boss}";</arg>
</arguments>
<msg timestamp="20170807 15:17:08.279" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount SET total_amount =78.00,balance_amount=68.00,frozen_amount=10.00 where account_id="5755"; </msg>
<status status="PASS" endtime="20170807 15:17:08.373" starttime="20170807 15:17:08.279"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount SET total_amount=${amount_boss[0][2]},balance_amount=${amount_boss[0][3]},frozen_amount=${amount_boss[0][4]} where account_id="${account_id_app}";</arg>
</arguments>
<msg timestamp="20170807 15:17:08.373" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount SET total_amount=78.00,balance_amount=68.00,frozen_amount=10.00 where account_id="5756"; </msg>
<status status="PASS" endtime="20170807 15:17:08.451" starttime="20170807 15:17:08.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170807 15:17:08.451" level="INFO">成功</msg>
<status status="PASS" endtime="20170807 15:17:08.451" starttime="20170807 15:17:08.451"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_base where user_id="${boss_user_account_id}"</arg>
</arguments>
<assign>
<var>${after_time_after}</var>
</assign>
<msg timestamp="20170807 15:17:08.451" level="INFO">Executing : Query  |  select * from account_base where user_id="100000" </msg>
<msg timestamp="20170807 15:17:08.498" level="INFO">${after_time_after} = ((5755, 100000, 1, 2, 2, datetime.datetime(2017, 7, 28, 15, 17, 7), datetime.datetime(2017, 8, 27, 15, 17, 7), datetime.datetime(2017, 7, 28, 15, 17, 7), datetime.datetime(2017, 7, 28, 15, 17, 7), 0),...</msg>
<status status="PASS" endtime="20170807 15:17:08.498" starttime="20170807 15:17:08.451"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${after_time_after[0][6]}</arg>
<arg>${after_time_after[1][6]}</arg>
</arguments>
<status status="PASS" endtime="20170807 15:17:08.498" starttime="20170807 15:17:08.498"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${after_time_after[0][6]}</arg>
<arg>datetime</arg>
</arguments>
<assign>
<var>${after_time_after1}</var>
</assign>
<msg timestamp="20170807 15:17:08.513" level="INFO">${after_time_after1} = 2017-08-27 15:17:07</msg>
<status status="PASS" endtime="20170807 15:17:08.513" starttime="20170807 15:17:08.498"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${after_time_check1}</arg>
<arg>datetime</arg>
</arguments>
<assign>
<var>${after_time_check}</var>
</assign>
<msg timestamp="20170807 15:17:08.529" level="INFO">${after_time_check} = 2017-08-27 15:17:06.968000</msg>
<status status="PASS" endtime="20170807 15:17:08.529" starttime="20170807 15:17:08.529"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${after_time_after1.month}</arg>
<arg>${after_time_check.month}</arg>
</arguments>
<status status="PASS" endtime="20170807 15:17:08.529" starttime="20170807 15:17:08.529"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${after_time_after1.day}</arg>
<arg>${after_time_check.day}</arg>
</arguments>
<status status="PASS" endtime="20170807 15:17:08.529" starttime="20170807 15:17:08.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>账户未过期，且有效期大于15天的时候，有效期不延长</arg>
</arguments>
<msg timestamp="20170807 15:17:08.529" level="INFO">账户未过期，且有效期大于15天的时候，有效期不延长</msg>
<status status="PASS" endtime="20170807 15:17:08.529" starttime="20170807 15:17:08.529"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:08.529" critical="yes" starttime="20170807 15:17:06.827"></status>
</test>
<test id="s1-s1-s1-t5" name="艾佳币账户未过期，支付订单后取消顶大，解冻艾佳币，有效期等于15天的不延长">
<kw name="参数配置" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170807 15:17:08.544" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170807 15:17:08.576" starttime="20170807 15:17:08.544"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:08.576" starttime="20170807 15:17:08.544"></status>
</kw>
<kw name="输入拥有不同类型账户的用户user_id" library="myResource">
<arguments>
<arg>100000</arg>
<arg>100000</arg>
<arg>123456781</arg>
<arg>http://192.168.1.31:10003</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:17:08.576" level="INFO">${boss_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170807 15:17:08.576" starttime="20170807 15:17:08.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:17:08.576" level="INFO">${app_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170807 15:17:08.576" starttime="20170807 15:17:08.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${no_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:17:08.576" level="INFO">${no_user_account_id} = 123456781</msg>
<status status="PASS" endtime="20170807 15:17:08.576" starttime="20170807 15:17:08.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${environment}</arg>
</arguments>
<msg timestamp="20170807 15:17:08.576" level="INFO">${environment} = http://192.168.1.31:10003</msg>
<status status="PASS" endtime="20170807 15:17:08.576" starttime="20170807 15:17:08.576"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${boss_user_account_id}' and channel_no=1</arg>
</arguments>
<assign>
<var>${boss_channel_no1}</var>
</assign>
<msg timestamp="20170807 15:17:08.576" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=1 </msg>
<msg timestamp="20170807 15:17:08.591" level="INFO">${boss_channel_no1} = ((17140, '1686241311501149903', 100000, 5755, 1, 2, 0, datetime.datetime(2017, 7, 27, 18, 4, 58), datetime.datetime(2017, 7, 27, 18, 4, 58)),)</msg>
<status status="PASS" endtime="20170807 15:17:08.591" starttime="20170807 15:17:08.576"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${boss_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${boss_channel_no}</var>
</assign>
<msg timestamp="20170807 15:17:08.591" level="INFO">${boss_channel_no} = 5755</msg>
<status status="PASS" endtime="20170807 15:17:08.591" starttime="20170807 15:17:08.591"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${app_user_account_id}' and channel_no=2</arg>
</arguments>
<assign>
<var>${app_channel_no1}</var>
</assign>
<msg timestamp="20170807 15:17:08.607" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=2 </msg>
<msg timestamp="20170807 15:17:08.607" level="INFO">${app_channel_no1} = ((17141, '1686241311501149931', 100000, 5756, 2, 2, 0, datetime.datetime(2017, 7, 27, 18, 28, 2), datetime.datetime(2017, 7, 27, 18, 28, 2)),)</msg>
<status status="PASS" endtime="20170807 15:17:08.607" starttime="20170807 15:17:08.607"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${app_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${app_channel_no}</var>
</assign>
<msg timestamp="20170807 15:17:08.622" level="INFO">${app_channel_no} = 5756</msg>
<status status="PASS" endtime="20170807 15:17:08.622" starttime="20170807 15:17:08.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_channel_no}</arg>
</arguments>
<msg timestamp="20170807 15:17:08.622" level="INFO">${boss_channel_no} = 5755</msg>
<status status="PASS" endtime="20170807 15:17:08.622" starttime="20170807 15:17:08.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_channel_no}</arg>
</arguments>
<msg timestamp="20170807 15:17:08.622" level="INFO">${app_channel_no} = 5756</msg>
<status status="PASS" endtime="20170807 15:17:08.622" starttime="20170807 15:17:08.622"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:08.622" starttime="20170807 15:17:08.576"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:08.622" starttime="20170807 15:17:08.544"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170807 15:17:08.622" level="INFO">${current_time} = 2017-08-07 15:17:08.622</msg>
<status status="PASS" endtime="20170807 15:17:08.622" starttime="20170807 15:17:08.622"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>15 days</arg>
</arguments>
<assign>
<var>${after_time}</var>
</assign>
<msg timestamp="20170807 15:17:08.622" level="INFO">${after_time} = 2017-08-22 15:17:08.622</msg>
<status status="PASS" endtime="20170807 15:17:08.622" starttime="20170807 15:17:08.622"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>10 days</arg>
</arguments>
<assign>
<var>${account_begin_time}</var>
</assign>
<msg timestamp="20170807 15:17:08.622" level="INFO">${account_begin_time} = 2017-07-28 15:17:08.622</msg>
<status status="PASS" endtime="20170807 15:17:08.622" starttime="20170807 15:17:08.622"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${after_time}</arg>
<arg>datetime</arg>
</arguments>
<assign>
<var>${after_time_check1}</var>
</assign>
<msg timestamp="20170807 15:17:08.622" level="INFO">${after_time_check1} = 2017-08-22 15:17:08.622000</msg>
<status status="PASS" endtime="20170807 15:17:08.622" starttime="20170807 15:17:08.622"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id="${boss_user_account_id}"</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170807 15:17:08.622" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id="100000" </msg>
<msg timestamp="20170807 15:17:08.638" level="INFO">${id} = ((17140, '1686241311501149903', 100000, 5755, 1, 2, 0, datetime.datetime(2017, 7, 27, 18, 4, 58), datetime.datetime(2017, 7, 27, 18, 4, 58)), (17141, '1686241311501149931', 100000, 5756, 2, 2, 0, date...</msg>
<status status="PASS" endtime="20170807 15:17:08.638" starttime="20170807 15:17:08.622"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_base where user_id="${boss_user_account_id}"</arg>
</arguments>
<msg timestamp="20170807 15:17:08.638" level="INFO">Executing : Execute SQL String  |  delete from account_base where user_id="100000" </msg>
<status status="PASS" endtime="20170807 15:17:08.716" starttime="20170807 15:17:08.638"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into account_base(id,user_id,role_type,account_type,account_status,account_begin_time,account_end_time,add_time,update_time,del_flag) values("${id[0][3]}","${boss_user_account_id}","1","2","2","${account_begin_time}","${after_time}","${account_begin_time}","${account_begin_time}","0");</arg>
</arguments>
<msg timestamp="20170807 15:17:08.716" level="INFO">Executing : Execute SQL String  |  insert into account_base(id,user_id,role_type,account_type,account_status,account_begin_time,account_end_time,add_time,update_time,del_flag) values("5755","100000","1","2","2","2017-07-28 15:17:08.622","2017-08-22 15:17:08.622","2017-07-28 15:17:08.622","2017-07-28 15:17:08.622","0"); </msg>
<status status="PASS" endtime="20170807 15:17:08.794" starttime="20170807 15:17:08.716"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into account_base(id,user_id,role_type,account_type,account_status,account_begin_time,account_end_time,add_time,update_time,del_flag) values("${id[1][3]}","${boss_user_account_id}","1","2","2","${account_begin_time}","${after_time}","${account_begin_time}","${account_begin_time}","0");</arg>
</arguments>
<msg timestamp="20170807 15:17:08.794" level="INFO">Executing : Execute SQL String  |  insert into account_base(id,user_id,role_type,account_type,account_status,account_begin_time,account_end_time,add_time,update_time,del_flag) values("5756","100000","1","2","2","2017-07-28 15:17:08.622","2017-08-22 15:17:08.622","2017-07-28 15:17:08.622","2017-07-28 15:17:08.622","0"); </msg>
<status status="PASS" endtime="20170807 15:17:08.872" starttime="20170807 15:17:08.794"></status>
</kw>
<kw name="清数据" library="myResource">
<arguments>
<arg>888888</arg>
</arguments>
<kw name="参数配置" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170807 15:17:08.888" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170807 15:17:08.903" starttime="20170807 15:17:08.872"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:08.903" starttime="20170807 15:17:08.872"></status>
</kw>
<kw name="输入拥有不同类型账户的用户user_id" library="myResource">
<arguments>
<arg>100000</arg>
<arg>100000</arg>
<arg>123456781</arg>
<arg>http://192.168.1.31:10003</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:17:08.903" level="INFO">${boss_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170807 15:17:08.903" starttime="20170807 15:17:08.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:17:08.903" level="INFO">${app_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170807 15:17:08.903" starttime="20170807 15:17:08.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${no_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:17:08.903" level="INFO">${no_user_account_id} = 123456781</msg>
<status status="PASS" endtime="20170807 15:17:08.919" starttime="20170807 15:17:08.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${environment}</arg>
</arguments>
<msg timestamp="20170807 15:17:08.919" level="INFO">${environment} = http://192.168.1.31:10003</msg>
<status status="PASS" endtime="20170807 15:17:08.919" starttime="20170807 15:17:08.919"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${boss_user_account_id}' and channel_no=1</arg>
</arguments>
<assign>
<var>${boss_channel_no1}</var>
</assign>
<msg timestamp="20170807 15:17:08.919" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=1 </msg>
<msg timestamp="20170807 15:17:08.934" level="INFO">${boss_channel_no1} = ((17140, '1686241311501149903', 100000, 5755, 1, 2, 0, datetime.datetime(2017, 7, 27, 18, 4, 58), datetime.datetime(2017, 7, 27, 18, 4, 58)),)</msg>
<status status="PASS" endtime="20170807 15:17:08.934" starttime="20170807 15:17:08.919"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${boss_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${boss_channel_no}</var>
</assign>
<msg timestamp="20170807 15:17:08.950" level="INFO">${boss_channel_no} = 5755</msg>
<status status="PASS" endtime="20170807 15:17:08.950" starttime="20170807 15:17:08.934"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${app_user_account_id}' and channel_no=2</arg>
</arguments>
<assign>
<var>${app_channel_no1}</var>
</assign>
<msg timestamp="20170807 15:17:08.950" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=2 </msg>
<msg timestamp="20170807 15:17:08.966" level="INFO">${app_channel_no1} = ((17141, '1686241311501149931', 100000, 5756, 2, 2, 0, datetime.datetime(2017, 7, 27, 18, 28, 2), datetime.datetime(2017, 7, 27, 18, 28, 2)),)</msg>
<status status="PASS" endtime="20170807 15:17:08.966" starttime="20170807 15:17:08.950"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${app_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${app_channel_no}</var>
</assign>
<msg timestamp="20170807 15:17:08.966" level="INFO">${app_channel_no} = 5756</msg>
<status status="PASS" endtime="20170807 15:17:08.966" starttime="20170807 15:17:08.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_channel_no}</arg>
</arguments>
<msg timestamp="20170807 15:17:08.966" level="INFO">${boss_channel_no} = 5755</msg>
<status status="PASS" endtime="20170807 15:17:08.966" starttime="20170807 15:17:08.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_channel_no}</arg>
</arguments>
<msg timestamp="20170807 15:17:08.966" level="INFO">${app_channel_no} = 5756</msg>
<status status="PASS" endtime="20170807 15:17:08.966" starttime="20170807 15:17:08.966"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:08.966" starttime="20170807 15:17:08.903"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:08.966" starttime="20170807 15:17:08.872"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170807 15:17:08.981" level="INFO">Executing : Query  |  select * from ajb_account_transaction where id=888888 </msg>
<msg timestamp="20170807 15:17:08.981" level="INFO">${check} = ()</msg>
<status status="PASS" endtime="20170807 15:17:08.981" starttime="20170807 15:17:08.981"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170807 15:17:08.981" level="INFO">Length is 0</msg>
<msg timestamp="20170807 15:17:08.981" level="INFO">${check_length} = 0</msg>
<status status="PASS" endtime="20170807 15:17:08.981" starttime="20170807 15:17:08.981"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} != 0</arg>
<arg>execute sql string</arg>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>数据库之前没有数据</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库之前没有数据</arg>
</arguments>
<msg timestamp="20170807 15:17:08.997" level="INFO">数据库之前没有数据</msg>
<status status="PASS" endtime="20170807 15:17:08.997" starttime="20170807 15:17:08.997"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:08.997" starttime="20170807 15:17:08.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库里面的这条数据清理成功啦。</arg>
</arguments>
<msg timestamp="20170807 15:17:08.997" level="INFO">数据库里面的这条数据清理成功啦。</msg>
<status status="PASS" endtime="20170807 15:17:08.997" starttime="20170807 15:17:08.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_delete}</arg>
</arguments>
<msg timestamp="20170807 15:17:08.997" level="INFO">${id_delete} = 888888</msg>
<status status="PASS" endtime="20170807 15:17:08.997" starttime="20170807 15:17:08.997"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:08.997" starttime="20170807 15:17:08.872"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("${id_delete}","32102151361500885834","${boss_user_account_id}","${boss_channel_no}","1","32102151361500885834","","2","1","13","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170807 15:17:08.997" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("888888","32102151361500885834","100000","5755","1","32102151361500885834","","2","1","13","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170807 15:17:09.090" starttime="20170807 15:17:08.997"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>32102151361500885834</arg>
<arg>${environment}/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170807 15:17:09.106" level="INFO">${args11} = 32102151361500885834</msg>
<status status="PASS" endtime="20170807 15:17:09.106" starttime="20170807 15:17:09.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170807 15:17:09.106" level="INFO">${args22} = </msg>
<status status="PASS" endtime="20170807 15:17:09.106" starttime="20170807 15:17:09.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170807 15:17:09.106" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170807 15:17:09.106" starttime="20170807 15:17:09.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170807 15:17:09.106" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170807 15:17:09.106" starttime="20170807 15:17:09.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170807 15:17:09.122" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</msg>
<status status="PASS" endtime="20170807 15:17:09.122" starttime="20170807 15:17:09.106"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:09.122" starttime="20170807 15:17:09.106"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num='${args11}' and event_code=13</arg>
</arguments>
<assign>
<var>${user_id_refund}</var>
</assign>
<msg timestamp="20170807 15:17:09.122" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num='32102151361500885834' and event_code=13 </msg>
<msg timestamp="20170807 15:17:09.137" level="INFO">${user_id_refund} = ((888888, '32102151361500885834', 100000, 5755, 1, '32102151361500885834', '', Decimal('2.00'), 1, 13, 2, 0, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)),)</msg>
<status status="PASS" endtime="20170807 15:17:09.137" starttime="20170807 15:17:09.122"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${user_id_refund[0][2]}' and channel_no=1</arg>
</arguments>
<assign>
<var>${account_id_bos}</var>
</assign>
<msg timestamp="20170807 15:17:09.137" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=1 </msg>
<msg timestamp="20170807 15:17:09.153" level="INFO">${account_id_bos} = ((17140, '1686241311501149903', 100000, 5755, 1, 2, 0, datetime.datetime(2017, 7, 27, 18, 4, 58), datetime.datetime(2017, 7, 27, 18, 4, 58)),)</msg>
<status status="PASS" endtime="20170807 15:17:09.153" starttime="20170807 15:17:09.137"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_id_bos[0][3]}</arg>
</arguments>
<assign>
<var>${account_id_boss}</var>
</assign>
<msg timestamp="20170807 15:17:09.153" level="INFO">${account_id_boss} = 5755</msg>
<status status="PASS" endtime="20170807 15:17:09.153" starttime="20170807 15:17:09.153"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${user_id_refund[0][2]}' and channel_no=2</arg>
</arguments>
<assign>
<var>${account_id_ap}</var>
</assign>
<msg timestamp="20170807 15:17:09.153" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=2 </msg>
<msg timestamp="20170807 15:17:09.168" level="INFO">${account_id_ap} = ((17141, '1686241311501149931', 100000, 5756, 2, 2, 0, datetime.datetime(2017, 7, 27, 18, 28, 2), datetime.datetime(2017, 7, 27, 18, 28, 2)),)</msg>
<status status="PASS" endtime="20170807 15:17:09.168" starttime="20170807 15:17:09.153"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_id_ap[0][3]}</arg>
</arguments>
<assign>
<var>${account_id_app}</var>
</assign>
<msg timestamp="20170807 15:17:09.168" level="INFO">${account_id_app} = 5756</msg>
<status status="PASS" endtime="20170807 15:17:09.168" starttime="20170807 15:17:09.168"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_boss}'</arg>
</arguments>
<assign>
<var>${amount_boss}</var>
</assign>
<msg timestamp="20170807 15:17:09.168" level="INFO">Executing : Query  |  select * from account_amount where account_id='5755' </msg>
<msg timestamp="20170807 15:17:09.184" level="INFO">${amount_boss} = ((17178, 5755, Decimal('78.00'), Decimal('68.00'), Decimal('10.00'), datetime.datetime(2017, 7, 27, 18, 4, 58), datetime.datetime(2017, 8, 7, 15, 17, 25), 0),)</msg>
<status status="PASS" endtime="20170807 15:17:09.184" starttime="20170807 15:17:09.168"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_app}'</arg>
</arguments>
<assign>
<var>${amount_app}</var>
</assign>
<msg timestamp="20170807 15:17:09.184" level="INFO">Executing : Query  |  select * from account_amount where account_id='5756' </msg>
<msg timestamp="20170807 15:17:09.184" level="INFO">${amount_app} = ((17179, 5756, Decimal('78.00'), Decimal('68.00'), Decimal('10.00'), datetime.datetime(2017, 7, 27, 18, 28, 2), datetime.datetime(2017, 8, 7, 15, 8, 4), 0),)</msg>
<status status="PASS" endtime="20170807 15:17:09.184" starttime="20170807 15:17:09.184"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170807 15:17:09.200" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</msg>
<status status="PASS" endtime="20170807 15:17:09.200" starttime="20170807 15:17:09.184"></status>
</kw>
<kw name="Ajb Withdraw Cancel" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170807 15:17:09.590" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170807 15:17:09.590" starttime="20170807 15:17:09.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170807 15:17:09.590" level="INFO">200</msg>
<status status="PASS" endtime="20170807 15:17:09.590" starttime="20170807 15:17:09.590"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170807 15:17:09.590" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:09.590" starttime="20170807 15:17:09.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170807 15:17:09.590" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170807 15:17:09.590" starttime="20170807 15:17:09.590"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170807 15:17:09.590" level="INFO">To JSON using : content={"data":null,"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170807 15:17:09.590" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170807 15:17:09.590" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': None, u'success': True}</msg>
<status status="PASS" endtime="20170807 15:17:09.590" starttime="20170807 15:17:09.590"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170807 15:17:09.590" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:09.605" starttime="20170807 15:17:09.590"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170807 15:17:09.605" starttime="20170807 15:17:09.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170807 15:17:09.605" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170807 15:17:09.605" starttime="20170807 15:17:09.605"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170807 15:17:09.605" level="INFO">${current_time} = 2017-08-07 15:17:09.605</msg>
<status status="PASS" endtime="20170807 15:17:09.605" starttime="20170807 15:17:09.605"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>5 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170807 15:17:09.605" level="INFO">${current_time_before_30} = 2017-08-07 15:17:04.605</msg>
<status status="PASS" endtime="20170807 15:17:09.605" starttime="20170807 15:17:09.605"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170807 15:17:09.605" level="INFO">${current_time_after_30} = 2017-08-07 15:18:49.605</msg>
<status status="PASS" endtime="20170807 15:17:09.605" starttime="20170807 15:17:09.605"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where event_code=14 and user_id='${user_id_refund[0][2]}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170807 15:17:09.621" level="INFO">Executing : Query  |  select * from account_unilateral_bill where event_code=14 and user_id='100000' and update_time between' 2017-08-07 15:17:04.605' and '2017-08-07 15:18:49.605' </msg>
<msg timestamp="20170807 15:17:09.652" level="INFO">${user_id} = ((25612, '32102151361501755180', 100000, 5755, '32102151361501755178', 1, 14, 3, Decimal('2.00'), None, datetime.datetime(2017, 8, 7, 15, 17, 26), datetime.datetime(2017, 8, 7, 15, 17, 26), 0),)</msg>
<status status="PASS" endtime="20170807 15:17:09.652" starttime="20170807 15:17:09.621"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170807 15:17:09.652" level="INFO">Length is 20</msg>
<msg timestamp="20170807 15:17:09.652" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170807 15:17:09.652" starttime="20170807 15:17:09.652"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170807 15:17:09.652" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:09.652" starttime="20170807 15:17:09.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170807 15:17:09.652" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170807 15:17:09.652" starttime="20170807 15:17:09.652"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_refund[0][2]}</arg>
</arguments>
<status status="PASS" endtime="20170807 15:17:09.652" starttime="20170807 15:17:09.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170807 15:17:09.652" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170807 15:17:09.652" starttime="20170807 15:17:09.652"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170807 15:17:09.652" level="INFO">Length is 20</msg>
<msg timestamp="20170807 15:17:09.652" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170807 15:17:09.652" starttime="20170807 15:17:09.652"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170807 15:17:09.668" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:09.668" starttime="20170807 15:17:09.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170807 15:17:09.668" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170807 15:17:09.668" starttime="20170807 15:17:09.668"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170807 15:17:09.668" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:09.668" starttime="20170807 15:17:09.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170807 15:17:09.668" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170807 15:17:09.668" starttime="20170807 15:17:09.668"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>14</arg>
</arguments>
<msg timestamp="20170807 15:17:09.668" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:09.668" starttime="20170807 15:17:09.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170807 15:17:09.668" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170807 15:17:09.668" starttime="20170807 15:17:09.668"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20170807 15:17:09.668" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:09.668" starttime="20170807 15:17:09.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170807 15:17:09.668" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170807 15:17:09.668" starttime="20170807 15:17:09.668"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<status status="PASS" endtime="20170807 15:17:09.668" starttime="20170807 15:17:09.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170807 15:17:09.668" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170807 15:17:09.668" starttime="20170807 15:17:09.668"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170807 15:17:09.668" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:09.683" starttime="20170807 15:17:09.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170807 15:17:09.683" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170807 15:17:09.683" starttime="20170807 15:17:09.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170807 15:17:09.683" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170807 15:17:09.683" starttime="20170807 15:17:09.683"></status>
</kw>
<kw name="Conn Mysql" library="wjwTestLibrary">
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]}'</arg>
</arguments>
<assign>
<var>${user_id_unilateral_delete}</var>
</assign>
<msg timestamp="20170807 15:17:09.746" level="INFO">${user_id_unilateral_delete} = ()</msg>
<status status="PASS" endtime="20170807 15:17:09.746" starttime="20170807 15:17:09.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170807 15:17:09.746" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170807 15:17:09.761" starttime="20170807 15:17:09.746"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time1}</var>
</assign>
<msg timestamp="20170807 15:17:09.761" level="INFO">${current_time1} = 2017-08-07 15:17:09.761</msg>
<status status="PASS" endtime="20170807 15:17:09.761" starttime="20170807 15:17:09.761"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>5 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_301}</var>
</assign>
<msg timestamp="20170807 15:17:09.761" level="INFO">${current_time_before_301} = 2017-08-07 15:17:04.761</msg>
<status status="PASS" endtime="20170807 15:17:09.761" starttime="20170807 15:17:09.761"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_301}</var>
</assign>
<msg timestamp="20170807 15:17:09.777" level="INFO">${current_time_after_301} = 2017-08-07 15:18:49.761</msg>
<status status="PASS" endtime="20170807 15:17:09.777" starttime="20170807 15:17:09.761"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where event_code=14 and user_id='${user_id_refund[0][2]}' and update_time between' ${current_time_before_301}' and '${current_time_after_301}'</arg>
</arguments>
<assign>
<var>${user_id1}</var>
</assign>
<msg timestamp="20170807 15:17:09.777" level="INFO">Executing : Query  |  select * from ajb_account_transaction where event_code=14 and user_id='100000' and update_time between' 2017-08-07 15:17:04.761' and '2017-08-07 15:18:49.761' </msg>
<msg timestamp="20170807 15:17:09.792" level="INFO">${user_id1} = ((88888998, '32102151361501755177', 100000, 5755, 1, '32102151361500885834', '20170807151723TFC012733', Decimal('2.00'), 1, 14, 2, 0, datetime.datetime(2017, 8, 7, 15, 17, 26), datetime.datetime(2017,...</msg>
<status status="PASS" endtime="20170807 15:17:09.792" starttime="20170807 15:17:09.777"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id1[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170807 15:17:09.792" level="INFO">Length is 20</msg>
<msg timestamp="20170807 15:17:09.808" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170807 15:17:09.808" starttime="20170807 15:17:09.792"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170807 15:17:09.808" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:09.808" starttime="20170807 15:17:09.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170807 15:17:09.808" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170807 15:17:09.808" starttime="20170807 15:17:09.808"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][2]}</arg>
<arg>${user_id_refund[0][2]}</arg>
</arguments>
<status status="PASS" endtime="20170807 15:17:09.808" starttime="20170807 15:17:09.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170807 15:17:09.808" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170807 15:17:09.808" starttime="20170807 15:17:09.808"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][5]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170807 15:17:09.808" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:09.808" starttime="20170807 15:17:09.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170807 15:17:09.824" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170807 15:17:09.824" starttime="20170807 15:17:09.808"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id1[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170807 15:17:09.824" level="INFO">${pay_no_after} = 20170807151723TFC012733</msg>
<status status="PASS" endtime="20170807 15:17:09.824" starttime="20170807 15:17:09.824"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170807 15:17:09.824" level="INFO">Length is 23</msg>
<msg timestamp="20170807 15:17:09.824" level="INFO">${pay_no_after_length} = 23</msg>
<status status="PASS" endtime="20170807 15:17:09.824" starttime="20170807 15:17:09.824"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>23</arg>
</arguments>
<msg timestamp="20170807 15:17:09.824" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:09.824" starttime="20170807 15:17:09.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170807 15:17:09.824" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170807 15:17:09.824" starttime="20170807 15:17:09.824"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][7]}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<status status="PASS" endtime="20170807 15:17:09.824" starttime="20170807 15:17:09.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170807 15:17:09.839" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170807 15:17:09.839" starttime="20170807 15:17:09.839"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170807 15:17:09.839" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:09.839" starttime="20170807 15:17:09.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170807 15:17:09.839" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170807 15:17:09.839" starttime="20170807 15:17:09.839"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][9]}</arg>
<arg>14</arg>
</arguments>
<msg timestamp="20170807 15:17:09.839" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:09.839" starttime="20170807 15:17:09.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170807 15:17:09.839" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170807 15:17:09.839" starttime="20170807 15:17:09.839"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170807 15:17:09.839" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:09.839" starttime="20170807 15:17:09.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170807 15:17:09.839" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170807 15:17:09.839" starttime="20170807 15:17:09.839"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170807 15:17:09.839" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:09.839" starttime="20170807 15:17:09.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170807 15:17:09.839" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170807 15:17:09.839" starttime="20170807 15:17:09.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170807 15:17:09.855" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170807 15:17:09.855" starttime="20170807 15:17:09.855"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170807 15:17:09.855" level="INFO">${user_id[0][0]_transaction} = 25612</msg>
<status status="PASS" endtime="20170807 15:17:09.855" starttime="20170807 15:17:09.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170807 15:17:09.855" level="INFO">${user_id[0][0]_transaction} = 25612</msg>
<status status="PASS" endtime="20170807 15:17:09.855" starttime="20170807 15:17:09.855"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id1[0][0]}'</arg>
</arguments>
<msg timestamp="20170807 15:17:09.855" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88888998' </msg>
<status status="PASS" endtime="20170807 15:17:09.902" starttime="20170807 15:17:09.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>检验表account_amount</arg>
</arguments>
<msg timestamp="20170807 15:17:09.902" level="INFO">检验表account_amount</msg>
<status status="PASS" endtime="20170807 15:17:09.902" starttime="20170807 15:17:09.902"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_app}'</arg>
</arguments>
<assign>
<var>${amount_app_after}</var>
</assign>
<msg timestamp="20170807 15:17:09.902" level="INFO">Executing : Query  |  select * from account_amount where account_id='5756' </msg>
<msg timestamp="20170807 15:17:09.917" level="INFO">${amount_app_after} = ((17179, 5756, Decimal('78.00'), Decimal('68.00'), Decimal('10.00'), datetime.datetime(2017, 7, 27, 18, 28, 2), datetime.datetime(2017, 8, 7, 15, 8, 4), 0),)</msg>
<status status="PASS" endtime="20170807 15:17:09.917" starttime="20170807 15:17:09.902"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_boss}'</arg>
</arguments>
<assign>
<var>${amount_boss_after}</var>
</assign>
<msg timestamp="20170807 15:17:09.917" level="INFO">Executing : Query  |  select * from account_amount where account_id='5755' </msg>
<msg timestamp="20170807 15:17:09.917" level="INFO">${amount_boss_after} = ((17178, 5755, Decimal('80.00'), Decimal('70.00'), Decimal('10.00'), datetime.datetime(2017, 7, 27, 18, 4, 58), datetime.datetime(2017, 8, 7, 15, 17, 26), 0),)</msg>
<status status="PASS" endtime="20170807 15:17:09.917" starttime="20170807 15:17:09.917"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${amount_boss_after[0][2]}+${amount_app_after[0][2]}-${amount_boss[0][2]}-${amount_app[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_check}</var>
</assign>
<msg timestamp="20170807 15:17:09.917" level="INFO">${total_amount_check} = 2.0</msg>
<status status="PASS" endtime="20170807 15:17:09.917" starttime="20170807 15:17:09.917"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${total_amount_check}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<msg timestamp="20170807 15:17:09.917" level="INFO">Argument types are:
&lt;type 'float'&gt;
&lt;class 'decimal.Decimal'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:09.917" starttime="20170807 15:17:09.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount正确</arg>
</arguments>
<msg timestamp="20170807 15:17:09.933" level="INFO">total_amount正确</msg>
<status status="PASS" endtime="20170807 15:17:09.933" starttime="20170807 15:17:09.933"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${amount_boss_after[0][3]}+${amount_app_after[0][3]}-${amount_boss[0][3]}-${amount_app[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_check}</var>
</assign>
<msg timestamp="20170807 15:17:09.933" level="INFO">${balance_amount_check} = 2.0</msg>
<status status="PASS" endtime="20170807 15:17:09.933" starttime="20170807 15:17:09.933"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${balance_amount_check}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<msg timestamp="20170807 15:17:09.933" level="INFO">Argument types are:
&lt;type 'float'&gt;
&lt;class 'decimal.Decimal'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:09.933" starttime="20170807 15:17:09.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount正确</arg>
</arguments>
<msg timestamp="20170807 15:17:09.933" level="INFO">balance_amount正确</msg>
<status status="PASS" endtime="20170807 15:17:09.933" starttime="20170807 15:17:09.933"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${amount_boss[0][4]}+${amount_app[0][4]}-${amount_boss_after[0][4]}-${amount_app_after[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_check}</var>
</assign>
<msg timestamp="20170807 15:17:09.933" level="INFO">${frozen_amount_check} = 0.0</msg>
<status status="PASS" endtime="20170807 15:17:09.933" starttime="20170807 15:17:09.933"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${frozen_amount_check}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170807 15:17:09.933" level="INFO">Argument types are:
&lt;type 'float'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:09.933" starttime="20170807 15:17:09.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount正确</arg>
</arguments>
<msg timestamp="20170807 15:17:09.933" level="INFO">frozen_amount正确</msg>
<status status="PASS" endtime="20170807 15:17:09.933" starttime="20170807 15:17:09.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>检验表account_amount成功</arg>
</arguments>
<msg timestamp="20170807 15:17:09.933" level="INFO">检验表account_amount成功</msg>
<status status="PASS" endtime="20170807 15:17:09.933" starttime="20170807 15:17:09.933"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<msg timestamp="20170807 15:17:09.948" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=888888 </msg>
<status status="PASS" endtime="20170807 15:17:09.995" starttime="20170807 15:17:09.933"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount SET total_amount =${amount_boss[0][2]},balance_amount=${amount_boss[0][3]},frozen_amount=${amount_boss[0][4]} where account_id="${account_id_boss}";</arg>
</arguments>
<msg timestamp="20170807 15:17:09.995" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount SET total_amount =78.00,balance_amount=68.00,frozen_amount=10.00 where account_id="5755"; </msg>
<status status="PASS" endtime="20170807 15:17:10.042" starttime="20170807 15:17:09.995"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount SET total_amount=${amount_boss[0][2]},balance_amount=${amount_boss[0][3]},frozen_amount=${amount_boss[0][4]} where account_id="${account_id_app}";</arg>
</arguments>
<msg timestamp="20170807 15:17:10.042" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount SET total_amount=78.00,balance_amount=68.00,frozen_amount=10.00 where account_id="5756"; </msg>
<status status="PASS" endtime="20170807 15:17:10.058" starttime="20170807 15:17:10.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170807 15:17:10.058" level="INFO">成功</msg>
<status status="PASS" endtime="20170807 15:17:10.073" starttime="20170807 15:17:10.058"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_base where user_id="${boss_user_account_id}"</arg>
</arguments>
<assign>
<var>${after_time_after}</var>
</assign>
<msg timestamp="20170807 15:17:10.073" level="INFO">Executing : Query  |  select * from account_base where user_id="100000" </msg>
<msg timestamp="20170807 15:17:10.089" level="INFO">${after_time_after} = ((5755, 100000, 1, 2, 2, datetime.datetime(2017, 7, 28, 15, 17, 9), datetime.datetime(2017, 8, 22, 23, 59, 59), datetime.datetime(2017, 7, 28, 15, 17, 9), datetime.datetime(2017, 8, 7, 15, 17, 26), 0)...</msg>
<status status="PASS" endtime="20170807 15:17:10.089" starttime="20170807 15:17:10.073"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${after_time_after[0][6]}</arg>
<arg>${after_time_after[1][6]}</arg>
</arguments>
<status status="PASS" endtime="20170807 15:17:10.089" starttime="20170807 15:17:10.089"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${after_time_after[0][6]}</arg>
<arg>datetime</arg>
</arguments>
<assign>
<var>${after_time_after1}</var>
</assign>
<msg timestamp="20170807 15:17:10.089" level="INFO">${after_time_after1} = 2017-08-22 23:59:59</msg>
<status status="PASS" endtime="20170807 15:17:10.089" starttime="20170807 15:17:10.089"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${after_time_check1}</arg>
<arg>datetime</arg>
</arguments>
<assign>
<var>${after_time_check}</var>
</assign>
<msg timestamp="20170807 15:17:10.089" level="INFO">${after_time_check} = 2017-08-22 15:17:08.622000</msg>
<status status="PASS" endtime="20170807 15:17:10.089" starttime="20170807 15:17:10.089"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${after_time_after1.month}</arg>
<arg>${after_time_check.month}</arg>
</arguments>
<status status="PASS" endtime="20170807 15:17:10.089" starttime="20170807 15:17:10.089"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${after_time_after1.day}</arg>
<arg>${after_time_check.day}</arg>
</arguments>
<status status="PASS" endtime="20170807 15:17:10.089" starttime="20170807 15:17:10.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>账户未过期，且有效期大于15天的时候，有效期不延长</arg>
</arguments>
<msg timestamp="20170807 15:17:10.089" level="INFO">账户未过期，且有效期大于15天的时候，有效期不延长</msg>
<status status="PASS" endtime="20170807 15:17:10.089" starttime="20170807 15:17:10.089"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:10.089" critical="yes" starttime="20170807 15:17:08.529"></status>
</test>
<test id="s1-s1-s1-t6" name="艾佳币账户过期，支付订单后取消顶大，解冻艾佳币，有效期延长15天">
<kw name="参数配置" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170807 15:17:10.104" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170807 15:17:10.120" starttime="20170807 15:17:10.104"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:10.120" starttime="20170807 15:17:10.104"></status>
</kw>
<kw name="输入拥有不同类型账户的用户user_id" library="myResource">
<arguments>
<arg>100000</arg>
<arg>100000</arg>
<arg>123456781</arg>
<arg>http://192.168.1.31:10003</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:17:10.120" level="INFO">${boss_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170807 15:17:10.120" starttime="20170807 15:17:10.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:17:10.120" level="INFO">${app_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170807 15:17:10.120" starttime="20170807 15:17:10.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${no_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:17:10.136" level="INFO">${no_user_account_id} = 123456781</msg>
<status status="PASS" endtime="20170807 15:17:10.136" starttime="20170807 15:17:10.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${environment}</arg>
</arguments>
<msg timestamp="20170807 15:17:10.136" level="INFO">${environment} = http://192.168.1.31:10003</msg>
<status status="PASS" endtime="20170807 15:17:10.136" starttime="20170807 15:17:10.136"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${boss_user_account_id}' and channel_no=1</arg>
</arguments>
<assign>
<var>${boss_channel_no1}</var>
</assign>
<msg timestamp="20170807 15:17:10.136" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=1 </msg>
<msg timestamp="20170807 15:17:10.136" level="INFO">${boss_channel_no1} = ((17140, '1686241311501149903', 100000, 5755, 1, 2, 0, datetime.datetime(2017, 7, 27, 18, 4, 58), datetime.datetime(2017, 7, 27, 18, 4, 58)),)</msg>
<status status="PASS" endtime="20170807 15:17:10.136" starttime="20170807 15:17:10.136"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${boss_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${boss_channel_no}</var>
</assign>
<msg timestamp="20170807 15:17:10.151" level="INFO">${boss_channel_no} = 5755</msg>
<status status="PASS" endtime="20170807 15:17:10.151" starttime="20170807 15:17:10.136"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${app_user_account_id}' and channel_no=2</arg>
</arguments>
<assign>
<var>${app_channel_no1}</var>
</assign>
<msg timestamp="20170807 15:17:10.151" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=2 </msg>
<msg timestamp="20170807 15:17:10.151" level="INFO">${app_channel_no1} = ((17141, '1686241311501149931', 100000, 5756, 2, 2, 0, datetime.datetime(2017, 7, 27, 18, 28, 2), datetime.datetime(2017, 7, 27, 18, 28, 2)),)</msg>
<status status="PASS" endtime="20170807 15:17:10.151" starttime="20170807 15:17:10.151"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${app_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${app_channel_no}</var>
</assign>
<msg timestamp="20170807 15:17:10.151" level="INFO">${app_channel_no} = 5756</msg>
<status status="PASS" endtime="20170807 15:17:10.151" starttime="20170807 15:17:10.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_channel_no}</arg>
</arguments>
<msg timestamp="20170807 15:17:10.151" level="INFO">${boss_channel_no} = 5755</msg>
<status status="PASS" endtime="20170807 15:17:10.151" starttime="20170807 15:17:10.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_channel_no}</arg>
</arguments>
<msg timestamp="20170807 15:17:10.167" level="INFO">${app_channel_no} = 5756</msg>
<status status="PASS" endtime="20170807 15:17:10.167" starttime="20170807 15:17:10.167"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:10.167" starttime="20170807 15:17:10.120"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:10.167" starttime="20170807 15:17:10.104"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170807 15:17:10.167" level="INFO">${current_time} = 2017-08-07 15:17:10.167</msg>
<status status="PASS" endtime="20170807 15:17:10.167" starttime="20170807 15:17:10.167"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>2 days</arg>
</arguments>
<assign>
<var>${after_time}</var>
</assign>
<msg timestamp="20170807 15:17:10.167" level="INFO">${after_time} = 2017-08-05 15:17:10.167</msg>
<status status="PASS" endtime="20170807 15:17:10.167" starttime="20170807 15:17:10.167"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>10 days</arg>
</arguments>
<assign>
<var>${account_begin_time}</var>
</assign>
<msg timestamp="20170807 15:17:10.167" level="INFO">${account_begin_time} = 2017-07-28 15:17:10.167</msg>
<status status="PASS" endtime="20170807 15:17:10.167" starttime="20170807 15:17:10.167"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>15 days</arg>
</arguments>
<assign>
<var>${after_time_check1}</var>
</assign>
<msg timestamp="20170807 15:17:10.167" level="INFO">${after_time_check1} = 2017-08-22 15:17:10.167</msg>
<status status="PASS" endtime="20170807 15:17:10.167" starttime="20170807 15:17:10.167"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id="${boss_user_account_id}"</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170807 15:17:10.167" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id="100000" </msg>
<msg timestamp="20170807 15:17:10.182" level="INFO">${id} = ((17140, '1686241311501149903', 100000, 5755, 1, 2, 0, datetime.datetime(2017, 7, 27, 18, 4, 58), datetime.datetime(2017, 7, 27, 18, 4, 58)), (17141, '1686241311501149931', 100000, 5756, 2, 2, 0, date...</msg>
<status status="PASS" endtime="20170807 15:17:10.182" starttime="20170807 15:17:10.167"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_base where user_id="${boss_user_account_id}"</arg>
</arguments>
<msg timestamp="20170807 15:17:10.182" level="INFO">Executing : Execute SQL String  |  delete from account_base where user_id="100000" </msg>
<status status="PASS" endtime="20170807 15:17:10.214" starttime="20170807 15:17:10.182"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into account_base(id,user_id,role_type,account_type,account_status,account_begin_time,account_end_time,add_time,update_time,del_flag) values("${id[0][3]}","${boss_user_account_id}","1","2","2","${account_begin_time}","${after_time}","${account_begin_time}","${account_begin_time}","0");</arg>
</arguments>
<msg timestamp="20170807 15:17:10.214" level="INFO">Executing : Execute SQL String  |  insert into account_base(id,user_id,role_type,account_type,account_status,account_begin_time,account_end_time,add_time,update_time,del_flag) values("5755","100000","1","2","2","2017-07-28 15:17:10.167","2017-08-05 15:17:10.167","2017-07-28 15:17:10.167","2017-07-28 15:17:10.167","0"); </msg>
<status status="PASS" endtime="20170807 15:17:10.260" starttime="20170807 15:17:10.214"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into account_base(id,user_id,role_type,account_type,account_status,account_begin_time,account_end_time,add_time,update_time,del_flag) values("${id[1][3]}","${boss_user_account_id}","1","2","2","${account_begin_time}","${after_time}","${account_begin_time}","${account_begin_time}","0");</arg>
</arguments>
<msg timestamp="20170807 15:17:10.260" level="INFO">Executing : Execute SQL String  |  insert into account_base(id,user_id,role_type,account_type,account_status,account_begin_time,account_end_time,add_time,update_time,del_flag) values("5756","100000","1","2","2","2017-07-28 15:17:10.167","2017-08-05 15:17:10.167","2017-07-28 15:17:10.167","2017-07-28 15:17:10.167","0"); </msg>
<status status="PASS" endtime="20170807 15:17:10.338" starttime="20170807 15:17:10.260"></status>
</kw>
<kw name="清数据" library="myResource">
<arguments>
<arg>888888</arg>
</arguments>
<kw name="参数配置" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170807 15:17:10.354" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170807 15:17:10.370" starttime="20170807 15:17:10.338"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:10.370" starttime="20170807 15:17:10.338"></status>
</kw>
<kw name="输入拥有不同类型账户的用户user_id" library="myResource">
<arguments>
<arg>100000</arg>
<arg>100000</arg>
<arg>123456781</arg>
<arg>http://192.168.1.31:10003</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:17:10.370" level="INFO">${boss_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170807 15:17:10.370" starttime="20170807 15:17:10.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:17:10.370" level="INFO">${app_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170807 15:17:10.370" starttime="20170807 15:17:10.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${no_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 15:17:10.370" level="INFO">${no_user_account_id} = 123456781</msg>
<status status="PASS" endtime="20170807 15:17:10.370" starttime="20170807 15:17:10.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${environment}</arg>
</arguments>
<msg timestamp="20170807 15:17:10.385" level="INFO">${environment} = http://192.168.1.31:10003</msg>
<status status="PASS" endtime="20170807 15:17:10.385" starttime="20170807 15:17:10.385"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${boss_user_account_id}' and channel_no=1</arg>
</arguments>
<assign>
<var>${boss_channel_no1}</var>
</assign>
<msg timestamp="20170807 15:17:10.385" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=1 </msg>
<msg timestamp="20170807 15:17:10.401" level="INFO">${boss_channel_no1} = ((17140, '1686241311501149903', 100000, 5755, 1, 2, 0, datetime.datetime(2017, 7, 27, 18, 4, 58), datetime.datetime(2017, 7, 27, 18, 4, 58)),)</msg>
<status status="PASS" endtime="20170807 15:17:10.401" starttime="20170807 15:17:10.385"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${boss_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${boss_channel_no}</var>
</assign>
<msg timestamp="20170807 15:17:10.401" level="INFO">${boss_channel_no} = 5755</msg>
<status status="PASS" endtime="20170807 15:17:10.401" starttime="20170807 15:17:10.401"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${app_user_account_id}' and channel_no=2</arg>
</arguments>
<assign>
<var>${app_channel_no1}</var>
</assign>
<msg timestamp="20170807 15:17:10.401" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=2 </msg>
<msg timestamp="20170807 15:17:10.416" level="INFO">${app_channel_no1} = ((17141, '1686241311501149931', 100000, 5756, 2, 2, 0, datetime.datetime(2017, 7, 27, 18, 28, 2), datetime.datetime(2017, 7, 27, 18, 28, 2)),)</msg>
<status status="PASS" endtime="20170807 15:17:10.416" starttime="20170807 15:17:10.401"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${app_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${app_channel_no}</var>
</assign>
<msg timestamp="20170807 15:17:10.416" level="INFO">${app_channel_no} = 5756</msg>
<status status="PASS" endtime="20170807 15:17:10.416" starttime="20170807 15:17:10.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_channel_no}</arg>
</arguments>
<msg timestamp="20170807 15:17:10.432" level="INFO">${boss_channel_no} = 5755</msg>
<status status="PASS" endtime="20170807 15:17:10.432" starttime="20170807 15:17:10.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_channel_no}</arg>
</arguments>
<msg timestamp="20170807 15:17:10.432" level="INFO">${app_channel_no} = 5756</msg>
<status status="PASS" endtime="20170807 15:17:10.432" starttime="20170807 15:17:10.432"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:10.432" starttime="20170807 15:17:10.370"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:10.432" starttime="20170807 15:17:10.338"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170807 15:17:10.432" level="INFO">Executing : Query  |  select * from ajb_account_transaction where id=888888 </msg>
<msg timestamp="20170807 15:17:10.432" level="INFO">${check} = ()</msg>
<status status="PASS" endtime="20170807 15:17:10.432" starttime="20170807 15:17:10.432"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170807 15:17:10.432" level="INFO">Length is 0</msg>
<msg timestamp="20170807 15:17:10.432" level="INFO">${check_length} = 0</msg>
<status status="PASS" endtime="20170807 15:17:10.432" starttime="20170807 15:17:10.432"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} != 0</arg>
<arg>execute sql string</arg>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>数据库之前没有数据</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库之前没有数据</arg>
</arguments>
<msg timestamp="20170807 15:17:10.448" level="INFO">数据库之前没有数据</msg>
<status status="PASS" endtime="20170807 15:17:10.448" starttime="20170807 15:17:10.448"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:10.448" starttime="20170807 15:17:10.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库里面的这条数据清理成功啦。</arg>
</arguments>
<msg timestamp="20170807 15:17:10.448" level="INFO">数据库里面的这条数据清理成功啦。</msg>
<status status="PASS" endtime="20170807 15:17:10.448" starttime="20170807 15:17:10.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_delete}</arg>
</arguments>
<msg timestamp="20170807 15:17:10.448" level="INFO">${id_delete} = 888888</msg>
<status status="PASS" endtime="20170807 15:17:10.448" starttime="20170807 15:17:10.448"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:10.448" starttime="20170807 15:17:10.338"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("${id_delete}","32102151361500885834","${boss_user_account_id}","${boss_channel_no}","1","32102151361500885834","","2","1","13","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170807 15:17:10.448" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("888888","32102151361500885834","100000","5755","1","32102151361500885834","","2","1","13","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170807 15:17:10.494" starttime="20170807 15:17:10.448"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>32102151361500885834</arg>
<arg>${environment}/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170807 15:17:10.494" level="INFO">${args11} = 32102151361500885834</msg>
<status status="PASS" endtime="20170807 15:17:10.494" starttime="20170807 15:17:10.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170807 15:17:10.510" level="INFO">${args22} = </msg>
<status status="PASS" endtime="20170807 15:17:10.510" starttime="20170807 15:17:10.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170807 15:17:10.510" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170807 15:17:10.510" starttime="20170807 15:17:10.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170807 15:17:10.510" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170807 15:17:10.510" starttime="20170807 15:17:10.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170807 15:17:10.526" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</msg>
<status status="PASS" endtime="20170807 15:17:10.526" starttime="20170807 15:17:10.526"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:10.526" starttime="20170807 15:17:10.494"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num='${args11}' and event_code=13</arg>
</arguments>
<assign>
<var>${user_id_refund}</var>
</assign>
<msg timestamp="20170807 15:17:10.526" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num='32102151361500885834' and event_code=13 </msg>
<msg timestamp="20170807 15:17:10.541" level="INFO">${user_id_refund} = ((888888, '32102151361500885834', 100000, 5755, 1, '32102151361500885834', '', Decimal('2.00'), 1, 13, 2, 0, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)),)</msg>
<status status="PASS" endtime="20170807 15:17:10.541" starttime="20170807 15:17:10.526"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${user_id_refund[0][2]}' and channel_no=1</arg>
</arguments>
<assign>
<var>${account_id_bos}</var>
</assign>
<msg timestamp="20170807 15:17:10.541" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=1 </msg>
<msg timestamp="20170807 15:17:10.557" level="INFO">${account_id_bos} = ((17140, '1686241311501149903', 100000, 5755, 1, 2, 0, datetime.datetime(2017, 7, 27, 18, 4, 58), datetime.datetime(2017, 7, 27, 18, 4, 58)),)</msg>
<status status="PASS" endtime="20170807 15:17:10.557" starttime="20170807 15:17:10.541"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_id_bos[0][3]}</arg>
</arguments>
<assign>
<var>${account_id_boss}</var>
</assign>
<msg timestamp="20170807 15:17:10.557" level="INFO">${account_id_boss} = 5755</msg>
<status status="PASS" endtime="20170807 15:17:10.557" starttime="20170807 15:17:10.557"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${user_id_refund[0][2]}' and channel_no=2</arg>
</arguments>
<assign>
<var>${account_id_ap}</var>
</assign>
<msg timestamp="20170807 15:17:10.557" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=2 </msg>
<msg timestamp="20170807 15:17:10.572" level="INFO">${account_id_ap} = ((17141, '1686241311501149931', 100000, 5756, 2, 2, 0, datetime.datetime(2017, 7, 27, 18, 28, 2), datetime.datetime(2017, 7, 27, 18, 28, 2)),)</msg>
<status status="PASS" endtime="20170807 15:17:10.572" starttime="20170807 15:17:10.557"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_id_ap[0][3]}</arg>
</arguments>
<assign>
<var>${account_id_app}</var>
</assign>
<msg timestamp="20170807 15:17:10.572" level="INFO">${account_id_app} = 5756</msg>
<status status="PASS" endtime="20170807 15:17:10.572" starttime="20170807 15:17:10.572"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_boss}'</arg>
</arguments>
<assign>
<var>${amount_boss}</var>
</assign>
<msg timestamp="20170807 15:17:10.572" level="INFO">Executing : Query  |  select * from account_amount where account_id='5755' </msg>
<msg timestamp="20170807 15:17:10.588" level="INFO">${amount_boss} = ((17178, 5755, Decimal('78.00'), Decimal('68.00'), Decimal('10.00'), datetime.datetime(2017, 7, 27, 18, 4, 58), datetime.datetime(2017, 8, 7, 15, 17, 27), 0),)</msg>
<status status="PASS" endtime="20170807 15:17:10.588" starttime="20170807 15:17:10.572"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_app}'</arg>
</arguments>
<assign>
<var>${amount_app}</var>
</assign>
<msg timestamp="20170807 15:17:10.588" level="INFO">Executing : Query  |  select * from account_amount where account_id='5756' </msg>
<msg timestamp="20170807 15:17:10.588" level="INFO">${amount_app} = ((17179, 5756, Decimal('78.00'), Decimal('68.00'), Decimal('10.00'), datetime.datetime(2017, 7, 27, 18, 28, 2), datetime.datetime(2017, 8, 7, 15, 8, 4), 0),)</msg>
<status status="PASS" endtime="20170807 15:17:10.588" starttime="20170807 15:17:10.588"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170807 15:17:10.604" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</msg>
<status status="PASS" endtime="20170807 15:17:10.604" starttime="20170807 15:17:10.588"></status>
</kw>
<kw name="Ajb Withdraw Cancel" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170807 15:17:11.072" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170807 15:17:11.087" starttime="20170807 15:17:10.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170807 15:17:11.087" level="INFO">200</msg>
<status status="PASS" endtime="20170807 15:17:11.087" starttime="20170807 15:17:11.087"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170807 15:17:11.087" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:11.087" starttime="20170807 15:17:11.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170807 15:17:11.103" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170807 15:17:11.103" starttime="20170807 15:17:11.087"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170807 15:17:11.103" level="INFO">To JSON using : content={"data":null,"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170807 15:17:11.103" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170807 15:17:11.103" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': None, u'success': True}</msg>
<status status="PASS" endtime="20170807 15:17:11.103" starttime="20170807 15:17:11.103"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170807 15:17:11.103" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:11.103" starttime="20170807 15:17:11.103"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170807 15:17:11.103" starttime="20170807 15:17:11.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170807 15:17:11.103" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170807 15:17:11.103" starttime="20170807 15:17:11.103"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170807 15:17:11.103" level="INFO">${current_time} = 2017-08-07 15:17:11.103</msg>
<status status="PASS" endtime="20170807 15:17:11.118" starttime="20170807 15:17:11.103"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>5 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170807 15:17:11.118" level="INFO">${current_time_before_30} = 2017-08-07 15:17:06.103</msg>
<status status="PASS" endtime="20170807 15:17:11.118" starttime="20170807 15:17:11.118"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170807 15:17:11.118" level="INFO">${current_time_after_30} = 2017-08-07 15:18:51.103</msg>
<status status="PASS" endtime="20170807 15:17:11.118" starttime="20170807 15:17:11.118"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where event_code=14 and user_id='${user_id_refund[0][2]}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170807 15:17:11.118" level="INFO">Executing : Query  |  select * from account_unilateral_bill where event_code=14 and user_id='100000' and update_time between' 2017-08-07 15:17:06.103' and '2017-08-07 15:18:51.103' </msg>
<msg timestamp="20170807 15:17:11.150" level="INFO">${user_id} = ((25614, '32102151361501755184', 100000, 5755, '32102151361501755182', 1, 14, 3, Decimal('2.00'), None, datetime.datetime(2017, 8, 7, 15, 17, 27), datetime.datetime(2017, 8, 7, 15, 17, 27), 0),)</msg>
<status status="PASS" endtime="20170807 15:17:11.150" starttime="20170807 15:17:11.118"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170807 15:17:11.150" level="INFO">Length is 20</msg>
<msg timestamp="20170807 15:17:11.150" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170807 15:17:11.150" starttime="20170807 15:17:11.150"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170807 15:17:11.150" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:11.150" starttime="20170807 15:17:11.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170807 15:17:11.150" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170807 15:17:11.150" starttime="20170807 15:17:11.150"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_refund[0][2]}</arg>
</arguments>
<status status="PASS" endtime="20170807 15:17:11.150" starttime="20170807 15:17:11.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170807 15:17:11.150" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170807 15:17:11.150" starttime="20170807 15:17:11.150"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170807 15:17:11.150" level="INFO">Length is 20</msg>
<msg timestamp="20170807 15:17:11.150" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170807 15:17:11.150" starttime="20170807 15:17:11.150"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170807 15:17:11.150" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:11.150" starttime="20170807 15:17:11.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170807 15:17:11.150" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170807 15:17:11.150" starttime="20170807 15:17:11.150"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170807 15:17:11.165" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:11.165" starttime="20170807 15:17:11.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170807 15:17:11.165" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170807 15:17:11.165" starttime="20170807 15:17:11.165"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>14</arg>
</arguments>
<msg timestamp="20170807 15:17:11.165" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:11.165" starttime="20170807 15:17:11.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170807 15:17:11.165" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170807 15:17:11.165" starttime="20170807 15:17:11.165"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20170807 15:17:11.165" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:11.165" starttime="20170807 15:17:11.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170807 15:17:11.165" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170807 15:17:11.165" starttime="20170807 15:17:11.165"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<status status="PASS" endtime="20170807 15:17:11.165" starttime="20170807 15:17:11.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170807 15:17:11.165" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170807 15:17:11.165" starttime="20170807 15:17:11.165"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170807 15:17:11.181" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:11.181" starttime="20170807 15:17:11.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170807 15:17:11.181" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170807 15:17:11.181" starttime="20170807 15:17:11.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170807 15:17:11.181" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170807 15:17:11.181" starttime="20170807 15:17:11.181"></status>
</kw>
<kw name="Conn Mysql" library="wjwTestLibrary">
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]}'</arg>
</arguments>
<assign>
<var>${user_id_unilateral_delete}</var>
</assign>
<msg timestamp="20170807 15:17:11.321" level="INFO">${user_id_unilateral_delete} = ()</msg>
<status status="PASS" endtime="20170807 15:17:11.321" starttime="20170807 15:17:11.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170807 15:17:11.321" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170807 15:17:11.321" starttime="20170807 15:17:11.321"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time1}</var>
</assign>
<msg timestamp="20170807 15:17:11.321" level="INFO">${current_time1} = 2017-08-07 15:17:11.321</msg>
<status status="PASS" endtime="20170807 15:17:11.321" starttime="20170807 15:17:11.321"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>5 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_301}</var>
</assign>
<msg timestamp="20170807 15:17:11.337" level="INFO">${current_time_before_301} = 2017-08-07 15:17:06.321</msg>
<status status="PASS" endtime="20170807 15:17:11.337" starttime="20170807 15:17:11.321"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_301}</var>
</assign>
<msg timestamp="20170807 15:17:11.337" level="INFO">${current_time_after_301} = 2017-08-07 15:18:51.321</msg>
<status status="PASS" endtime="20170807 15:17:11.337" starttime="20170807 15:17:11.337"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where event_code=14 and user_id='${user_id_refund[0][2]}' and update_time between' ${current_time_before_301}' and '${current_time_after_301}'</arg>
</arguments>
<assign>
<var>${user_id1}</var>
</assign>
<msg timestamp="20170807 15:17:11.352" level="INFO">Executing : Query  |  select * from ajb_account_transaction where event_code=14 and user_id='100000' and update_time between' 2017-08-07 15:17:06.321' and '2017-08-07 15:18:51.321' </msg>
<msg timestamp="20170807 15:17:11.368" level="INFO">${user_id1} = ((88888999, '32102151361501755181', 100000, 5755, 1, '32102151361500885834', '20170807151724WIR012734', Decimal('2.00'), 1, 14, 2, 0, datetime.datetime(2017, 8, 7, 15, 17, 27), datetime.datetime(2017,...</msg>
<status status="PASS" endtime="20170807 15:17:11.368" starttime="20170807 15:17:11.337"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id1[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170807 15:17:11.368" level="INFO">Length is 20</msg>
<msg timestamp="20170807 15:17:11.368" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170807 15:17:11.368" starttime="20170807 15:17:11.368"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170807 15:17:11.368" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:11.368" starttime="20170807 15:17:11.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170807 15:17:11.384" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170807 15:17:11.384" starttime="20170807 15:17:11.384"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][2]}</arg>
<arg>${user_id_refund[0][2]}</arg>
</arguments>
<status status="PASS" endtime="20170807 15:17:11.384" starttime="20170807 15:17:11.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170807 15:17:11.384" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170807 15:17:11.384" starttime="20170807 15:17:11.384"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][5]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170807 15:17:11.384" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:11.384" starttime="20170807 15:17:11.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170807 15:17:11.384" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170807 15:17:11.384" starttime="20170807 15:17:11.384"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id1[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170807 15:17:11.399" level="INFO">${pay_no_after} = 20170807151724WIR012734</msg>
<status status="PASS" endtime="20170807 15:17:11.399" starttime="20170807 15:17:11.399"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170807 15:17:11.399" level="INFO">Length is 23</msg>
<msg timestamp="20170807 15:17:11.399" level="INFO">${pay_no_after_length} = 23</msg>
<status status="PASS" endtime="20170807 15:17:11.399" starttime="20170807 15:17:11.399"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>23</arg>
</arguments>
<msg timestamp="20170807 15:17:11.399" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:11.399" starttime="20170807 15:17:11.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170807 15:17:11.399" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170807 15:17:11.399" starttime="20170807 15:17:11.399"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][7]}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<status status="PASS" endtime="20170807 15:17:11.399" starttime="20170807 15:17:11.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170807 15:17:11.399" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170807 15:17:11.399" starttime="20170807 15:17:11.399"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170807 15:17:11.399" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:11.399" starttime="20170807 15:17:11.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170807 15:17:11.399" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170807 15:17:11.399" starttime="20170807 15:17:11.399"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][9]}</arg>
<arg>14</arg>
</arguments>
<msg timestamp="20170807 15:17:11.399" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:11.399" starttime="20170807 15:17:11.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170807 15:17:11.415" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170807 15:17:11.415" starttime="20170807 15:17:11.415"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170807 15:17:11.415" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:11.415" starttime="20170807 15:17:11.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170807 15:17:11.415" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170807 15:17:11.415" starttime="20170807 15:17:11.415"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170807 15:17:11.415" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:11.415" starttime="20170807 15:17:11.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170807 15:17:11.415" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170807 15:17:11.415" starttime="20170807 15:17:11.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170807 15:17:11.415" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170807 15:17:11.415" starttime="20170807 15:17:11.415"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170807 15:17:11.415" level="INFO">${user_id[0][0]_transaction} = 25614</msg>
<status status="PASS" endtime="20170807 15:17:11.415" starttime="20170807 15:17:11.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170807 15:17:11.415" level="INFO">${user_id[0][0]_transaction} = 25614</msg>
<status status="PASS" endtime="20170807 15:17:11.415" starttime="20170807 15:17:11.415"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id1[0][0]}'</arg>
</arguments>
<msg timestamp="20170807 15:17:11.415" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88888999' </msg>
<status status="PASS" endtime="20170807 15:17:11.462" starttime="20170807 15:17:11.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>检验表account_amount</arg>
</arguments>
<msg timestamp="20170807 15:17:11.462" level="INFO">检验表account_amount</msg>
<status status="PASS" endtime="20170807 15:17:11.462" starttime="20170807 15:17:11.462"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_app}'</arg>
</arguments>
<assign>
<var>${amount_app_after}</var>
</assign>
<msg timestamp="20170807 15:17:11.462" level="INFO">Executing : Query  |  select * from account_amount where account_id='5756' </msg>
<msg timestamp="20170807 15:17:11.477" level="INFO">${amount_app_after} = ((17179, 5756, Decimal('78.00'), Decimal('68.00'), Decimal('10.00'), datetime.datetime(2017, 7, 27, 18, 28, 2), datetime.datetime(2017, 8, 7, 15, 8, 4), 0),)</msg>
<status status="PASS" endtime="20170807 15:17:11.477" starttime="20170807 15:17:11.462"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_boss}'</arg>
</arguments>
<assign>
<var>${amount_boss_after}</var>
</assign>
<msg timestamp="20170807 15:17:11.477" level="INFO">Executing : Query  |  select * from account_amount where account_id='5755' </msg>
<msg timestamp="20170807 15:17:11.493" level="INFO">${amount_boss_after} = ((17178, 5755, Decimal('80.00'), Decimal('70.00'), Decimal('10.00'), datetime.datetime(2017, 7, 27, 18, 4, 58), datetime.datetime(2017, 8, 7, 15, 17, 27), 0),)</msg>
<status status="PASS" endtime="20170807 15:17:11.493" starttime="20170807 15:17:11.477"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${amount_boss_after[0][2]}+${amount_app_after[0][2]}-${amount_boss[0][2]}-${amount_app[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_check}</var>
</assign>
<msg timestamp="20170807 15:17:11.493" level="INFO">${total_amount_check} = 2.0</msg>
<status status="PASS" endtime="20170807 15:17:11.493" starttime="20170807 15:17:11.493"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${total_amount_check}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<msg timestamp="20170807 15:17:11.493" level="INFO">Argument types are:
&lt;type 'float'&gt;
&lt;class 'decimal.Decimal'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:11.493" starttime="20170807 15:17:11.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount正确</arg>
</arguments>
<msg timestamp="20170807 15:17:11.493" level="INFO">total_amount正确</msg>
<status status="PASS" endtime="20170807 15:17:11.493" starttime="20170807 15:17:11.493"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${amount_boss_after[0][3]}+${amount_app_after[0][3]}-${amount_boss[0][3]}-${amount_app[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_check}</var>
</assign>
<msg timestamp="20170807 15:17:11.493" level="INFO">${balance_amount_check} = 2.0</msg>
<status status="PASS" endtime="20170807 15:17:11.493" starttime="20170807 15:17:11.493"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${balance_amount_check}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<msg timestamp="20170807 15:17:11.508" level="INFO">Argument types are:
&lt;type 'float'&gt;
&lt;class 'decimal.Decimal'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:11.508" starttime="20170807 15:17:11.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount正确</arg>
</arguments>
<msg timestamp="20170807 15:17:11.508" level="INFO">balance_amount正确</msg>
<status status="PASS" endtime="20170807 15:17:11.508" starttime="20170807 15:17:11.508"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${amount_boss[0][4]}+${amount_app[0][4]}-${amount_boss_after[0][4]}-${amount_app_after[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_check}</var>
</assign>
<msg timestamp="20170807 15:17:11.508" level="INFO">${frozen_amount_check} = 0.0</msg>
<status status="PASS" endtime="20170807 15:17:11.508" starttime="20170807 15:17:11.508"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${frozen_amount_check}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170807 15:17:11.508" level="INFO">Argument types are:
&lt;type 'float'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 15:17:11.508" starttime="20170807 15:17:11.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount正确</arg>
</arguments>
<msg timestamp="20170807 15:17:11.508" level="INFO">frozen_amount正确</msg>
<status status="PASS" endtime="20170807 15:17:11.508" starttime="20170807 15:17:11.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>检验表account_amount成功</arg>
</arguments>
<msg timestamp="20170807 15:17:11.508" level="INFO">检验表account_amount成功</msg>
<status status="PASS" endtime="20170807 15:17:11.508" starttime="20170807 15:17:11.508"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<msg timestamp="20170807 15:17:11.508" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=888888 </msg>
<status status="PASS" endtime="20170807 15:17:11.571" starttime="20170807 15:17:11.508"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount SET total_amount =${amount_boss[0][2]},balance_amount=${amount_boss[0][3]},frozen_amount=${amount_boss[0][4]} where account_id="${account_id_boss}";</arg>
</arguments>
<msg timestamp="20170807 15:17:11.571" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount SET total_amount =78.00,balance_amount=68.00,frozen_amount=10.00 where account_id="5755"; </msg>
<status status="PASS" endtime="20170807 15:17:11.649" starttime="20170807 15:17:11.571"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount SET total_amount=${amount_boss[0][2]},balance_amount=${amount_boss[0][3]},frozen_amount=${amount_boss[0][4]} where account_id="${account_id_app}";</arg>
</arguments>
<msg timestamp="20170807 15:17:11.664" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount SET total_amount=78.00,balance_amount=68.00,frozen_amount=10.00 where account_id="5756"; </msg>
<status status="PASS" endtime="20170807 15:17:11.680" starttime="20170807 15:17:11.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170807 15:17:11.680" level="INFO">成功</msg>
<status status="PASS" endtime="20170807 15:17:11.680" starttime="20170807 15:17:11.680"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_base where user_id="${boss_user_account_id}"</arg>
</arguments>
<assign>
<var>${after_time_after}</var>
</assign>
<msg timestamp="20170807 15:17:11.680" level="INFO">Executing : Query  |  select * from account_base where user_id="100000" </msg>
<msg timestamp="20170807 15:17:11.696" level="INFO">${after_time_after} = ((5755, 100000, 1, 2, 2, datetime.datetime(2017, 7, 28, 15, 17, 10), datetime.datetime(2017, 8, 22, 23, 59, 59), datetime.datetime(2017, 7, 28, 15, 17, 10), datetime.datetime(2017, 8, 7, 15, 17, 27), ...</msg>
<status status="PASS" endtime="20170807 15:17:11.696" starttime="20170807 15:17:11.680"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${after_time_after[0][6]}</arg>
<arg>${after_time_after[1][6]}</arg>
</arguments>
<status status="PASS" endtime="20170807 15:17:11.711" starttime="20170807 15:17:11.696"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${after_time_after[0][6]}</arg>
<arg>datetime</arg>
</arguments>
<assign>
<var>${after_time_after1}</var>
</assign>
<msg timestamp="20170807 15:17:11.711" level="INFO">${after_time_after1} = 2017-08-22 23:59:59</msg>
<status status="PASS" endtime="20170807 15:17:11.711" starttime="20170807 15:17:11.711"></status>
</kw>
<kw name="Convert Date" library="DateTime">
<doc>Converts between supported `date formats`.</doc>
<arguments>
<arg>${after_time_check1}</arg>
<arg>datetime</arg>
</arguments>
<assign>
<var>${after_time_check}</var>
</assign>
<msg timestamp="20170807 15:17:11.711" level="INFO">${after_time_check} = 2017-08-22 15:17:10.167000</msg>
<status status="PASS" endtime="20170807 15:17:11.711" starttime="20170807 15:17:11.711"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${after_time_after1.month}</arg>
<arg>${after_time_check.month}</arg>
</arguments>
<status status="PASS" endtime="20170807 15:17:11.711" starttime="20170807 15:17:11.711"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${after_time_after1.day}</arg>
<arg>${after_time_check.day}</arg>
</arguments>
<status status="PASS" endtime="20170807 15:17:11.711" starttime="20170807 15:17:11.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>账户未过期，且有效期大于15天的时候，有效期不延长</arg>
</arguments>
<msg timestamp="20170807 15:17:11.711" level="INFO">账户未过期，且有效期大于15天的时候，有效期不延长</msg>
<status status="PASS" endtime="20170807 15:17:11.727" starttime="20170807 15:17:11.711"></status>
</kw>
<status status="PASS" endtime="20170807 15:17:11.727" critical="yes" starttime="20170807 15:17:10.089"></status>
</test>
<status status="PASS" endtime="20170807 15:17:11.727" starttime="20170807 15:17:02.849"></status>
</suite>
<status status="PASS" endtime="20170807 15:17:11.742" starttime="20170807 15:17:02.849"></status>
</suite>
<status status="PASS" endtime="20170807 15:17:11.758" starttime="20170807 15:17:02.693"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="6">Critical Tests</stat>
<stat fail="0" pass="6">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="账户中心" pass="6">账户中心</stat>
<stat fail="0" id="s1-s1" name="订单" pass="6">账户中心.订单</stat>
<stat fail="0" id="s1-s1-s1" name="订单支付退款（线上）" pass="6">账户中心.订单.订单支付退款（线上）</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
