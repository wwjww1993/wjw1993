<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170728 18:06:37.670" generator="Robot 3.0.2 (Python 2.7.8 on win32)">
<suite source="F:\logs and reports\账户中心" id="s1" name="账户中心">
<suite source="F:\logs and reports\账户中心\艾佳币" id="s1-s1" name="艾佳币">
<suite source="F:\logs and reports\账户中心\艾佳币\艾佳币充值.txt" id="s1-s1-s1" name="艾佳币充值">
<test id="s1-s1-s1-t1" name="输入未有的user_id和正确的amount参数">
<kw name="参数配置" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 18:06:38.226" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 18:06:38.240" starttime="20170728 18:06:38.202"></status>
</kw>
<status status="PASS" endtime="20170728 18:06:38.242" starttime="20170728 18:06:38.200"></status>
</kw>
<kw name="输入拥有不同类型账户的用户user_id" library="myResource">
<arguments>
<arg>100000</arg>
<arg>100000</arg>
<arg>123456782</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_user_account_id}</arg>
</arguments>
<msg timestamp="20170728 18:06:38.247" level="INFO">${boss_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170728 18:06:38.248" starttime="20170728 18:06:38.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_user_account_id}</arg>
</arguments>
<msg timestamp="20170728 18:06:38.250" level="INFO">${app_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170728 18:06:38.251" starttime="20170728 18:06:38.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${no_user_account_id}</arg>
</arguments>
<msg timestamp="20170728 18:06:38.253" level="INFO">${no_user_account_id} = 123456782</msg>
<status status="PASS" endtime="20170728 18:06:38.254" starttime="20170728 18:06:38.252"></status>
</kw>
<status status="PASS" endtime="20170728 18:06:38.255" starttime="20170728 18:06:38.243"></status>
</kw>
<status status="PASS" endtime="20170728 18:06:38.255" starttime="20170728 18:06:38.198"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>${no_user_account_id}</arg>
<arg>1</arg>
<arg>2</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 18:06:38.262" level="INFO">${args11} = 123456782</msg>
<status status="PASS" endtime="20170728 18:06:38.263" starttime="20170728 18:06:38.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 18:06:38.265" level="INFO">${args22} = 1</msg>
<status status="PASS" endtime="20170728 18:06:38.266" starttime="20170728 18:06:38.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 18:06:38.268" level="INFO">${args33} = 2</msg>
<status status="PASS" endtime="20170728 18:06:38.268" starttime="20170728 18:06:38.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 18:06:38.270" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 18:06:38.271" starttime="20170728 18:06:38.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 18:06:38.276" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</msg>
<status status="PASS" endtime="20170728 18:06:38.278" starttime="20170728 18:06:38.273"></status>
</kw>
<status status="PASS" endtime="20170728 18:06:38.279" starttime="20170728 18:06:38.257"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id ='${args11}'</arg>
</arguments>
<assign>
<var>${no_user_id}</var>
</assign>
<msg timestamp="20170728 18:06:38.281" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id ='123456782' </msg>
<msg timestamp="20170728 18:06:38.289" level="INFO">${no_user_id} = ()</msg>
<status status="PASS" endtime="20170728 18:06:38.290" starttime="20170728 18:06:38.280"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${no_user_id}</arg>
</arguments>
<msg timestamp="20170728 18:06:38.292" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170728 18:06:38.293" starttime="20170728 18:06:38.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>此user_id不存在</arg>
</arguments>
<msg timestamp="20170728 18:06:38.295" level="INFO">此user_id不存在</msg>
<status status="PASS" endtime="20170728 18:06:38.296" starttime="20170728 18:06:38.294"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 18:06:38.298" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</msg>
<status status="PASS" endtime="20170728 18:06:38.299" starttime="20170728 18:06:38.297"></status>
</kw>
<kw name="Data" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data_no_user_id}</var>
</assign>
<msg timestamp="20170728 18:06:38.386" level="INFO">${data_no_user_id} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 18:06:38.389" starttime="20170728 18:06:38.300"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data_no_user_id.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 18:06:38.400" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:06:38.403" starttime="20170728 18:06:38.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 18:06:38.409" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 18:06:38.410" starttime="20170728 18:06:38.406"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data_no_user_id.text}</arg>
</arguments>
<assign>
<var>${toJson1}</var>
</assign>
<msg timestamp="20170728 18:06:38.413" level="INFO">To JSON using : content={"data":{"orderNum":"32102151361501231372"},"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 18:06:38.414" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 18:06:38.415" level="INFO">${toJson1} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': {u'orderNum': u'32102151361501231372'}, u'success': True}</msg>
<status status="PASS" endtime="20170728 18:06:38.418" starttime="20170728 18:06:38.411"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson1['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 18:06:38.422" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:06:38.424" starttime="20170728 18:06:38.420"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson1['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 18:06:38.428" starttime="20170728 18:06:38.426"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${toJson1['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${no_user_id_orderNum}</var>
</assign>
<msg timestamp="20170728 18:06:38.433" level="INFO">${no_user_id_orderNum} = 32102151361501231372</msg>
<status status="PASS" endtime="20170728 18:06:38.434" starttime="20170728 18:06:38.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 18:06:38.436" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 18:06:38.437" starttime="20170728 18:06:38.435"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id ='${args11}'</arg>
</arguments>
<assign>
<var>${no_user_id_after}</var>
</assign>
<msg timestamp="20170728 18:06:38.441" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id ='123456782' </msg>
<msg timestamp="20170728 18:06:38.449" level="INFO">${no_user_id_after} = ((100000000095L, '32102151361501231371', 123456782, 6361, 1, 2, 0, datetime.datetime(2017, 7, 28, 18, 7, 43), datetime.datetime(2017, 7, 28, 18, 7, 43)),)</msg>
<status status="PASS" endtime="20170728 18:06:38.450" starttime="20170728 18:06:38.439"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${no_user_id_after}</arg>
</arguments>
<msg timestamp="20170728 18:06:38.452" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 18:06:38.453" starttime="20170728 18:06:38.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>调用艾佳币充值接口自动生成boss的账号</arg>
</arguments>
<msg timestamp="20170728 18:06:38.456" level="INFO">调用艾佳币充值接口自动生成boss的账号</msg>
<status status="PASS" endtime="20170728 18:06:38.456" starttime="20170728 18:06:38.454"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${no_user_id_after[0][3]}</arg>
</arguments>
<assign>
<var>${no_user_id_account_id}</var>
</assign>
<msg timestamp="20170728 18:06:38.459" level="INFO">${no_user_id_account_id} = 6361</msg>
<status status="PASS" endtime="20170728 18:06:38.459" starttime="20170728 18:06:38.457"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_open_record where user_id ='${args11}'</arg>
</arguments>
<msg timestamp="20170728 18:06:38.462" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_open_record where user_id ='123456782' </msg>
<status status="PASS" endtime="20170728 18:06:38.511" starttime="20170728 18:06:38.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>已删除该账号！</arg>
</arguments>
<msg timestamp="20170728 18:06:38.513" level="INFO">已删除该账号！</msg>
<status status="PASS" endtime="20170728 18:06:38.514" starttime="20170728 18:06:38.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_unilateral_bill</arg>
</arguments>
<msg timestamp="20170728 18:06:38.516" level="INFO">现在开始校验表account_unilateral_bill</msg>
<status status="PASS" endtime="20170728 18:06:38.516" starttime="20170728 18:06:38.515"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time_no}</var>
</assign>
<msg timestamp="20170728 18:06:38.518" level="INFO">${current_time_no} = 2017-07-28 18:06:38.518</msg>
<status status="PASS" endtime="20170728 18:06:38.519" starttime="20170728 18:06:38.517"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_no}</arg>
<arg>5 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_301}</var>
</assign>
<msg timestamp="20170728 18:06:38.527" level="INFO">${current_time_before_301} = 2017-07-28 18:06:33.518</msg>
<status status="PASS" endtime="20170728 18:06:38.529" starttime="20170728 18:06:38.520"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_no}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_302}</var>
</assign>
<msg timestamp="20170728 18:06:38.531" level="INFO">${current_time_after_302} = 2017-07-28 18:08:18.518</msg>
<status status="PASS" endtime="20170728 18:06:38.532" starttime="20170728 18:06:38.530"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${no_user_id_account_id}'and update_time between' ${current_time_before_301}' and '${current_time_after_302}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 18:06:38.534" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6361'and update_time between' 2017-07-28 18:06:33.518' and '2017-07-28 18:08:18.518' </msg>
<msg timestamp="20170728 18:06:38.539" level="INFO">${user_id} = ((8165, '32102151361501231376', 123456782, 6361, '32102151361501231373', 1, 7, 3, Decimal('1.00'), None, datetime.datetime(2017, 7, 28, 18, 7, 43), datetime.datetime(2017, 7, 28, 18, 7, 43), 0),)</msg>
<status status="PASS" endtime="20170728 18:06:38.540" starttime="20170728 18:06:38.533"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170728 18:06:38.543" level="INFO">Length is 20</msg>
<msg timestamp="20170728 18:06:38.544" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170728 18:06:38.544" starttime="20170728 18:06:38.542"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 18:06:38.546" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:06:38.547" starttime="20170728 18:06:38.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 18:06:38.549" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 18:06:38.550" starttime="20170728 18:06:38.548"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 18:06:38.552" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:06:38.552" starttime="20170728 18:06:38.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 18:06:38.555" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 18:06:38.556" starttime="20170728 18:06:38.553"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170728 18:06:38.559" level="INFO">Length is 20</msg>
<msg timestamp="20170728 18:06:38.559" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170728 18:06:38.560" starttime="20170728 18:06:38.557"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 18:06:38.562" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:06:38.562" starttime="20170728 18:06:38.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 18:06:38.564" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 18:06:38.565" starttime="20170728 18:06:38.563"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 18:06:38.567" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:06:38.568" starttime="20170728 18:06:38.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 18:06:38.571" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 18:06:38.572" starttime="20170728 18:06:38.569"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>7</arg>
</arguments>
<msg timestamp="20170728 18:06:38.576" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:06:38.577" starttime="20170728 18:06:38.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 18:06:38.579" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 18:06:38.580" starttime="20170728 18:06:38.578"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20170728 18:06:38.582" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:06:38.583" starttime="20170728 18:06:38.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170728 18:06:38.584" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170728 18:06:38.585" starttime="20170728 18:06:38.583"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 18:06:38.588" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:06:38.590" starttime="20170728 18:06:38.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 18:06:38.592" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 18:06:38.593" starttime="20170728 18:06:38.591"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${user_id[0][10]}</arg>
<arg>${user_id[0][11]}</arg>
</arguments>
<status status="PASS" endtime="20170728 18:06:38.595" starttime="20170728 18:06:38.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 18:06:38.597" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 18:06:38.598" starttime="20170728 18:06:38.596"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 18:06:38.600" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:06:38.600" starttime="20170728 18:06:38.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 18:06:38.602" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 18:06:38.603" starttime="20170728 18:06:38.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170728 18:06:38.604" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170728 18:06:38.606" starttime="20170728 18:06:38.604"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_unilateral}</var>
</assign>
<msg timestamp="20170728 18:06:38.609" level="INFO">${user_id[0][0]_unilateral} = 8165</msg>
<status status="PASS" endtime="20170728 18:06:38.610" starttime="20170728 18:06:38.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_unilateral}</arg>
</arguments>
<msg timestamp="20170728 18:06:38.612" level="INFO">${user_id[0][0]_unilateral} = 8165</msg>
<status status="PASS" endtime="20170728 18:06:38.613" starttime="20170728 18:06:38.611"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]_unilateral}'</arg>
</arguments>
<msg timestamp="20170728 18:06:38.615" level="INFO">Executing : Execute SQL String  |  delete from account_unilateral_bill where id ='8165' </msg>
<status status="PASS" endtime="20170728 18:06:38.653" starttime="20170728 18:06:38.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170728 18:06:38.656" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170728 18:06:38.657" starttime="20170728 18:06:38.655"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time_nouser}</var>
</assign>
<msg timestamp="20170728 18:06:38.659" level="INFO">${current_time_nouser} = 2017-07-28 18:06:38.659</msg>
<status status="PASS" endtime="20170728 18:06:38.660" starttime="20170728 18:06:38.658"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_nouser}</arg>
<arg>5 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_3011}</var>
</assign>
<msg timestamp="20170728 18:06:38.662" level="INFO">${current_time_before_3011} = 2017-07-28 18:06:33.659</msg>
<status status="PASS" endtime="20170728 18:06:38.662" starttime="20170728 18:06:38.660"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_nouser}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_3022}</var>
</assign>
<msg timestamp="20170728 18:06:38.664" level="INFO">${current_time_after_3022} = 2017-07-28 18:08:18.659</msg>
<status status="PASS" endtime="20170728 18:06:38.665" starttime="20170728 18:06:38.663"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where account_id ='${no_user_id_account_id}' and update_time between' ${current_time_before_3011}' and '${current_time_after_3022}'</arg>
</arguments>
<assign>
<var>${user_id_no}</var>
</assign>
<msg timestamp="20170728 18:06:38.667" level="INFO">Executing : Query  |  select * from ajb_account_transaction where account_id ='6361' and update_time between' 2017-07-28 18:06:33.659' and '2017-07-28 18:08:18.659' </msg>
<msg timestamp="20170728 18:06:38.677" level="INFO">${user_id_no} = ((88889977, '32102151361501231372', 123456782, 6361, 1, '32102151361501231372', '20170728180740SFF051946', Decimal('1.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 28, 18, 7, 43), datetime.datetime(201...</msg>
<status status="PASS" endtime="20170728 18:06:38.678" starttime="20170728 18:06:38.666"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id_no[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 18:06:38.680" level="INFO">Length is 20</msg>
<msg timestamp="20170728 18:06:38.681" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 18:06:38.682" starttime="20170728 18:06:38.679"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 18:06:38.685" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:06:38.685" starttime="20170728 18:06:38.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 18:06:38.687" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 18:06:38.689" starttime="20170728 18:06:38.686"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][2]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 18:06:38.692" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:06:38.692" starttime="20170728 18:06:38.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 18:06:38.696" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 18:06:38.697" starttime="20170728 18:06:38.694"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][4]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 18:06:38.699" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:06:38.700" starttime="20170728 18:06:38.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no的值正确</arg>
</arguments>
<msg timestamp="20170728 18:06:38.702" level="INFO">channel_no的值正确</msg>
<status status="PASS" endtime="20170728 18:06:38.703" starttime="20170728 18:06:38.701"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][5]}</arg>
<arg>${no_user_id_orderNum}</arg>
</arguments>
<msg timestamp="20170728 18:06:38.706" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:06:38.706" starttime="20170728 18:06:38.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170728 18:06:38.708" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170728 18:06:38.709" starttime="20170728 18:06:38.707"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id_no[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170728 18:06:38.712" level="INFO">${pay_no_after} = 20170728180740SFF051946</msg>
<status status="PASS" endtime="20170728 18:06:38.714" starttime="20170728 18:06:38.710"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170728 18:06:38.717" level="INFO">Length is 23</msg>
<msg timestamp="20170728 18:06:38.717" level="INFO">${pay_no_after_length} = 23</msg>
<status status="PASS" endtime="20170728 18:06:38.718" starttime="20170728 18:06:38.715"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>23</arg>
</arguments>
<msg timestamp="20170728 18:06:38.720" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:06:38.721" starttime="20170728 18:06:38.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170728 18:06:38.725" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170728 18:06:38.726" starttime="20170728 18:06:38.724"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][7]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 18:06:38.729" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:06:38.729" starttime="20170728 18:06:38.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 18:06:38.731" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 18:06:38.732" starttime="20170728 18:06:38.730"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 18:06:38.734" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:06:38.734" starttime="20170728 18:06:38.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 18:06:38.737" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 18:06:38.738" starttime="20170728 18:06:38.736"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][9]}</arg>
<arg>7</arg>
</arguments>
<msg timestamp="20170728 18:06:38.741" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:06:38.743" starttime="20170728 18:06:38.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 18:06:38.747" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 18:06:38.748" starttime="20170728 18:06:38.745"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 18:06:38.751" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:06:38.751" starttime="20170728 18:06:38.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170728 18:06:38.754" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170728 18:06:38.754" starttime="20170728 18:06:38.753"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 18:06:38.756" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:06:38.758" starttime="20170728 18:06:38.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 18:06:38.761" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 18:06:38.762" starttime="20170728 18:06:38.759"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${user_id_no[0][12]}</arg>
<arg>${user_id_no[0][13]}</arg>
</arguments>
<status status="PASS" endtime="20170728 18:06:38.765" starttime="20170728 18:06:38.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 18:06:38.767" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 18:06:38.768" starttime="20170728 18:06:38.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170728 18:06:38.770" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170728 18:06:38.770" starttime="20170728 18:06:38.769"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id_no[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170728 18:06:38.773" level="INFO">${user_id[0][0]_transaction} = 88889977</msg>
<status status="PASS" endtime="20170728 18:06:38.774" starttime="20170728 18:06:38.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170728 18:06:38.777" level="INFO">${user_id[0][0]_transaction} = 88889977</msg>
<status status="PASS" endtime="20170728 18:06:38.778" starttime="20170728 18:06:38.776"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id_no[0][0]}'</arg>
</arguments>
<msg timestamp="20170728 18:06:38.780" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88889977' </msg>
<status status="PASS" endtime="20170728 18:06:38.854" starttime="20170728 18:06:38.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_amount</arg>
</arguments>
<msg timestamp="20170728 18:06:38.862" level="INFO">现在开始校验表account_amount</msg>
<status status="PASS" endtime="20170728 18:06:38.865" starttime="20170728 18:06:38.859"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${no_user_id_account_id}'</arg>
</arguments>
<assign>
<var>${user_id_t}</var>
</assign>
<msg timestamp="20170728 18:06:38.873" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6361' </msg>
<msg timestamp="20170728 18:06:38.881" level="INFO">${user_id_t} = ((12675, 6361, Decimal('1.00'), Decimal('1.00'), Decimal('0.00'), datetime.datetime(2017, 7, 28, 18, 7, 43), datetime.datetime(2017, 7, 28, 18, 7, 43), 0),)</msg>
<status status="PASS" endtime="20170728 18:06:38.883" starttime="20170728 18:06:38.869"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][2]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 18:06:38.888" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:06:38.890" starttime="20170728 18:06:38.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 18:06:38.894" level="INFO">total_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 18:06:38.895" starttime="20170728 18:06:38.892"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][3]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 18:06:38.898" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:06:38.900" starttime="20170728 18:06:38.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 18:06:38.903" level="INFO">balance_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 18:06:38.904" starttime="20170728 18:06:38.901"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][4]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 18:06:38.910" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:06:38.912" starttime="20170728 18:06:38.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 18:06:38.915" level="INFO">frozen_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 18:06:38.916" starttime="20170728 18:06:38.914"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 18:06:38.918" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:06:38.918" starttime="20170728 18:06:38.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 18:06:38.920" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 18:06:38.922" starttime="20170728 18:06:38.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount校验成功！</arg>
</arguments>
<msg timestamp="20170728 18:06:38.924" level="INFO">表account_amount校验成功！</msg>
<status status="PASS" endtime="20170728 18:06:38.925" starttime="20170728 18:06:38.923"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_amount where account_id ='${no_user_id_account_id}'</arg>
</arguments>
<msg timestamp="20170728 18:06:38.927" level="INFO">Executing : Execute SQL String  |  delete from account_amount where account_id ='6361' </msg>
<status status="PASS" endtime="20170728 18:06:38.964" starttime="20170728 18:06:38.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>输入未有的user_id和正确的amount参数，会直接生成boss账户，然后表里的数据都入库成功！</arg>
</arguments>
<msg timestamp="20170728 18:06:38.967" level="INFO">输入未有的user_id和正确的amount参数，会直接生成boss账户，然后表里的数据都入库成功！</msg>
<status status="PASS" endtime="20170728 18:06:38.968" starttime="20170728 18:06:38.966"></status>
</kw>
<status status="PASS" endtime="20170728 18:06:38.969" critical="yes" starttime="20170728 18:06:38.192"></status>
</test>
<status status="PASS" endtime="20170728 18:06:38.971" starttime="20170728 18:06:37.895"></status>
</suite>
<status status="PASS" endtime="20170728 18:06:38.976" starttime="20170728 18:06:37.891"></status>
</suite>
<status status="PASS" endtime="20170728 18:06:38.980" starttime="20170728 18:06:37.699"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="账户中心" pass="1">账户中心</stat>
<stat fail="0" id="s1-s1" name="艾佳币" pass="1">账户中心.艾佳币</stat>
<stat fail="0" id="s1-s1-s1" name="艾佳币充值" pass="1">账户中心.艾佳币.艾佳币充值</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20170728 18:06:38.189" level="ERROR">Error in file 'F:\logs and reports\账户中心\艾佳币\艾佳币充值.txt': Resource file '艾佳币需要的操作.txt' does not exist.</msg>
</errors>
</robot>
