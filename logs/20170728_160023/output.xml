<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170728 16:01:42.459" generator="Robot 3.0.2 (Python 2.7.8 on win32)">
<suite source="F:\logs and reports\账户中心" id="s1" name="账户中心">
<suite source="F:\logs and reports\账户中心\艾佳币" id="s1-s1" name="艾佳币">
<suite source="F:\logs and reports\账户中心\艾佳币\艾佳币活动充值.txt" id="s1-s1-s1" name="艾佳币活动充值">
<test id="s1-s1-s1-t1" name="输入木有的user_id和正确的amount和活动代码">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 16:01:43.030" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 16:01:43.074" starttime="20170728 16:01:43.007"></status>
</kw>
<status status="PASS" endtime="20170728 16:01:43.074" starttime="20170728 16:01:43.006"></status>
</kw>
<status status="PASS" endtime="20170728 16:01:43.075" starttime="20170728 16:01:43.004"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>123456785</arg>
<arg>10</arg>
<arg>1</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 16:01:43.077" level="INFO">${args11} = 123456785</msg>
<status status="PASS" endtime="20170728 16:01:43.078" starttime="20170728 16:01:43.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 16:01:43.081" level="INFO">${args22} = 10</msg>
<status status="PASS" endtime="20170728 16:01:43.082" starttime="20170728 16:01:43.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 16:01:43.084" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170728 16:01:43.084" starttime="20170728 16:01:43.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 16:01:43.086" level="INFO">${args44} = 1</msg>
<status status="PASS" endtime="20170728 16:01:43.086" starttime="20170728 16:01:43.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 16:01:43.087" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</msg>
<status status="PASS" endtime="20170728 16:01:43.088" starttime="20170728 16:01:43.087"></status>
</kw>
<status status="PASS" endtime="20170728 16:01:43.088" starttime="20170728 16:01:43.076"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id ='${args11}'</arg>
</arguments>
<assign>
<var>${no_user_id}</var>
</assign>
<msg timestamp="20170728 16:01:43.090" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id ='123456785' </msg>
<msg timestamp="20170728 16:01:43.098" level="INFO">${no_user_id} = ()</msg>
<status status="PASS" endtime="20170728 16:01:43.099" starttime="20170728 16:01:43.089"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${no_user_id}</arg>
</arguments>
<msg timestamp="20170728 16:01:43.100" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170728 16:01:43.100" starttime="20170728 16:01:43.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>此user_id不存在</arg>
</arguments>
<msg timestamp="20170728 16:01:43.102" level="INFO">此user_id不存在</msg>
<status status="PASS" endtime="20170728 16:01:43.102" starttime="20170728 16:01:43.101"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 16:01:43.103" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</msg>
<status status="PASS" endtime="20170728 16:01:43.103" starttime="20170728 16:01:43.102"></status>
</kw>
<kw name="Ajb Activity Recharge" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data_no_user_id}</var>
</assign>
<msg timestamp="20170728 16:01:43.200" level="INFO">${data_no_user_id} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 16:01:43.200" starttime="20170728 16:01:43.104"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data_no_user_id.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 16:01:43.202" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:01:43.203" starttime="20170728 16:01:43.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 16:01:43.204" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 16:01:43.205" starttime="20170728 16:01:43.203"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data_no_user_id.text}</arg>
</arguments>
<assign>
<var>${toJson1}</var>
</assign>
<msg timestamp="20170728 16:01:43.206" level="INFO">To JSON using : content={"data":{"orderNum":"32102151361501208103"},"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 16:01:43.207" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 16:01:43.207" level="INFO">${toJson1} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': {u'orderNum': u'32102151361501208103'}, u'success': True}</msg>
<status status="PASS" endtime="20170728 16:01:43.207" starttime="20170728 16:01:43.205"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson1['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 16:01:43.209" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:01:43.209" starttime="20170728 16:01:43.208"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson1['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 16:01:43.211" starttime="20170728 16:01:43.210"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${toJson1['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${no_user_id_orderNum}</var>
</assign>
<msg timestamp="20170728 16:01:43.213" level="INFO">${no_user_id_orderNum} = 32102151361501208103</msg>
<status status="PASS" endtime="20170728 16:01:43.214" starttime="20170728 16:01:43.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 16:01:43.215" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 16:01:43.215" starttime="20170728 16:01:43.214"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id ='${args11}'and channel_no=2</arg>
</arguments>
<assign>
<var>${no_user_id_after}</var>
</assign>
<msg timestamp="20170728 16:01:43.217" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id ='123456785'and channel_no=2 </msg>
<msg timestamp="20170728 16:01:43.225" level="INFO">${no_user_id_after} = ((100000000037L, '32102151361501208102', 123456785, 6303, 2, 2, 0, datetime.datetime(2017, 7, 28, 16, 2, 48), datetime.datetime(2017, 7, 28, 16, 2, 48)),)</msg>
<status status="PASS" endtime="20170728 16:01:43.226" starttime="20170728 16:01:43.216"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${no_user_id_after}</arg>
</arguments>
<msg timestamp="20170728 16:01:43.227" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 16:01:43.228" starttime="20170728 16:01:43.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>调用艾佳币活动充值接口自动生成boss的账号</arg>
</arguments>
<msg timestamp="20170728 16:01:43.229" level="INFO">调用艾佳币活动充值接口自动生成boss的账号</msg>
<status status="PASS" endtime="20170728 16:01:43.230" starttime="20170728 16:01:43.229"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${no_user_id_after[0][3]}</arg>
</arguments>
<assign>
<var>${no_user_id_account_id}</var>
</assign>
<msg timestamp="20170728 16:01:43.231" level="INFO">${no_user_id_account_id} = 6303</msg>
<status status="PASS" endtime="20170728 16:01:43.231" starttime="20170728 16:01:43.230"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_open_record where user_id ='${args11}'and channel_no=2</arg>
</arguments>
<msg timestamp="20170728 16:01:43.233" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_open_record where user_id ='123456785'and channel_no=2 </msg>
<status status="PASS" endtime="20170728 16:01:43.394" starttime="20170728 16:01:43.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>已删除该账号！</arg>
</arguments>
<msg timestamp="20170728 16:01:43.398" level="INFO">已删除该账号！</msg>
<status status="PASS" endtime="20170728 16:01:43.399" starttime="20170728 16:01:43.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_unilateral_bill</arg>
</arguments>
<msg timestamp="20170728 16:01:43.403" level="INFO">现在开始校验表account_unilateral_bill</msg>
<status status="PASS" endtime="20170728 16:01:43.404" starttime="20170728 16:01:43.402"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time_no}</var>
</assign>
<msg timestamp="20170728 16:01:43.407" level="INFO">${current_time_no} = 2017-07-28 16:01:43.406</msg>
<status status="PASS" endtime="20170728 16:01:43.408" starttime="20170728 16:01:43.405"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_no}</arg>
<arg>15 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_301}</var>
</assign>
<msg timestamp="20170728 16:01:43.420" level="INFO">${current_time_before_301} = 2017-07-28 16:01:28.406</msg>
<status status="PASS" endtime="20170728 16:01:43.421" starttime="20170728 16:01:43.409"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_no}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_302}</var>
</assign>
<msg timestamp="20170728 16:01:43.424" level="INFO">${current_time_after_302} = 2017-07-28 16:02:48.406</msg>
<status status="PASS" endtime="20170728 16:01:43.425" starttime="20170728 16:01:43.422"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${no_user_id_account_id}'and update_time between' ${current_time_before_301}' and '${current_time_after_302}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 16:01:43.429" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6303'and update_time between' 2017-07-28 16:01:28.406' and '2017-07-28 16:02:48.406' </msg>
<msg timestamp="20170728 16:01:43.438" level="INFO">${user_id} = ((7131, '32102151361501208107', 123456785, 6303, '32102151361501208104', 1, 1, 3, Decimal('10.00'), None, datetime.datetime(2017, 7, 28, 16, 2, 48), datetime.datetime(2017, 7, 28, 16, 2, 48), 0),)</msg>
<status status="PASS" endtime="20170728 16:01:43.439" starttime="20170728 16:01:43.426"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170728 16:01:43.444" level="INFO">Length is 20</msg>
<msg timestamp="20170728 16:01:43.445" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170728 16:01:43.446" starttime="20170728 16:01:43.441"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 16:01:43.450" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:01:43.451" starttime="20170728 16:01:43.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 16:01:43.453" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 16:01:43.454" starttime="20170728 16:01:43.452"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 16:01:43.458" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:01:43.460" starttime="20170728 16:01:43.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 16:01:43.463" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 16:01:43.464" starttime="20170728 16:01:43.462"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170728 16:01:43.467" level="INFO">Length is 20</msg>
<msg timestamp="20170728 16:01:43.468" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170728 16:01:43.469" starttime="20170728 16:01:43.465"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 16:01:43.471" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:01:43.472" starttime="20170728 16:01:43.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 16:01:43.474" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 16:01:43.474" starttime="20170728 16:01:43.473"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 16:01:43.476" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:01:43.476" starttime="20170728 16:01:43.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 16:01:43.477" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 16:01:43.478" starttime="20170728 16:01:43.476"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 16:01:43.479" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:01:43.479" starttime="20170728 16:01:43.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 16:01:43.480" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 16:01:43.481" starttime="20170728 16:01:43.480"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20170728 16:01:43.482" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:01:43.482" starttime="20170728 16:01:43.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170728 16:01:43.483" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170728 16:01:43.484" starttime="20170728 16:01:43.483"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 16:01:43.486" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:01:43.487" starttime="20170728 16:01:43.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 16:01:43.488" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 16:01:43.489" starttime="20170728 16:01:43.488"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${user_id[0][10]}</arg>
<arg>${user_id[0][11]}</arg>
</arguments>
<status status="PASS" endtime="20170728 16:01:43.490" starttime="20170728 16:01:43.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 16:01:43.491" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 16:01:43.492" starttime="20170728 16:01:43.491"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 16:01:43.493" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:01:43.494" starttime="20170728 16:01:43.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 16:01:43.496" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 16:01:43.496" starttime="20170728 16:01:43.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170728 16:01:43.497" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170728 16:01:43.498" starttime="20170728 16:01:43.497"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_unilateral}</var>
</assign>
<msg timestamp="20170728 16:01:43.499" level="INFO">${user_id[0][0]_unilateral} = 7131</msg>
<status status="PASS" endtime="20170728 16:01:43.499" starttime="20170728 16:01:43.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_unilateral}</arg>
</arguments>
<msg timestamp="20170728 16:01:43.501" level="INFO">${user_id[0][0]_unilateral} = 7131</msg>
<status status="PASS" endtime="20170728 16:01:43.501" starttime="20170728 16:01:43.500"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]_unilateral}'</arg>
</arguments>
<msg timestamp="20170728 16:01:43.502" level="INFO">Executing : Execute SQL String  |  delete from account_unilateral_bill where id ='7131' </msg>
<status status="PASS" endtime="20170728 16:01:43.598" starttime="20170728 16:01:43.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170728 16:01:43.603" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170728 16:01:43.605" starttime="20170728 16:01:43.601"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time_nouser}</var>
</assign>
<msg timestamp="20170728 16:01:43.609" level="INFO">${current_time_nouser} = 2017-07-28 16:01:43.608</msg>
<status status="PASS" endtime="20170728 16:01:43.610" starttime="20170728 16:01:43.607"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_nouser}</arg>
<arg>15 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_3011}</var>
</assign>
<msg timestamp="20170728 16:01:43.615" level="INFO">${current_time_before_3011} = 2017-07-28 16:01:28.608</msg>
<status status="PASS" endtime="20170728 16:01:43.616" starttime="20170728 16:01:43.612"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_nouser}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_3022}</var>
</assign>
<msg timestamp="20170728 16:01:43.621" level="INFO">${current_time_after_3022} = 2017-07-28 16:02:48.608</msg>
<status status="PASS" endtime="20170728 16:01:43.622" starttime="20170728 16:01:43.618"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where account_id ='${no_user_id_account_id}' and update_time between' ${current_time_before_3011}' and '${current_time_after_3022}'</arg>
</arguments>
<assign>
<var>${user_id_no}</var>
</assign>
<msg timestamp="20170728 16:01:43.625" level="INFO">Executing : Query  |  select * from ajb_account_transaction where account_id ='6303' and update_time between' 2017-07-28 16:01:28.608' and '2017-07-28 16:02:48.608' </msg>
<msg timestamp="20170728 16:01:43.638" level="INFO">${user_id_no} = ((88889569, '32102151361501208103', 123456785, 6303, 2, '32102151361501208103', '20170728160245RPN051446', Decimal('10.00'), 1, 1, 2, 0, datetime.datetime(2017, 7, 28, 16, 2, 48), datetime.datetime(20...</msg>
<status status="PASS" endtime="20170728 16:01:43.639" starttime="20170728 16:01:43.623"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id_no[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 16:01:43.642" level="INFO">Length is 20</msg>
<msg timestamp="20170728 16:01:43.643" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 16:01:43.645" starttime="20170728 16:01:43.640"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 16:01:43.648" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:01:43.649" starttime="20170728 16:01:43.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 16:01:43.651" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 16:01:43.652" starttime="20170728 16:01:43.650"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][2]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 16:01:43.655" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:01:43.656" starttime="20170728 16:01:43.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 16:01:43.659" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 16:01:43.661" starttime="20170728 16:01:43.658"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][4]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 16:01:43.665" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:01:43.666" starttime="20170728 16:01:43.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no的值正确</arg>
</arguments>
<msg timestamp="20170728 16:01:43.668" level="INFO">channel_no的值正确</msg>
<status status="PASS" endtime="20170728 16:01:43.668" starttime="20170728 16:01:43.667"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][5]}</arg>
<arg>${no_user_id_orderNum}</arg>
</arguments>
<msg timestamp="20170728 16:01:43.671" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:01:43.672" starttime="20170728 16:01:43.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170728 16:01:43.675" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170728 16:01:43.677" starttime="20170728 16:01:43.673"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id_no[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170728 16:01:43.681" level="INFO">${pay_no_after} = 20170728160245RPN051446</msg>
<status status="PASS" endtime="20170728 16:01:43.681" starttime="20170728 16:01:43.679"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170728 16:01:43.683" level="INFO">Length is 23</msg>
<msg timestamp="20170728 16:01:43.683" level="INFO">${pay_no_after_length} = 23</msg>
<status status="PASS" endtime="20170728 16:01:43.683" starttime="20170728 16:01:43.682"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>23</arg>
</arguments>
<msg timestamp="20170728 16:01:43.685" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:01:43.685" starttime="20170728 16:01:43.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170728 16:01:43.686" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170728 16:01:43.686" starttime="20170728 16:01:43.685"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][7]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 16:01:43.688" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:01:43.688" starttime="20170728 16:01:43.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 16:01:43.689" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 16:01:43.690" starttime="20170728 16:01:43.689"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 16:01:43.691" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:01:43.692" starttime="20170728 16:01:43.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 16:01:43.695" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 16:01:43.696" starttime="20170728 16:01:43.693"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][9]}</arg>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 16:01:43.697" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:01:43.697" starttime="20170728 16:01:43.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 16:01:43.698" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 16:01:43.699" starttime="20170728 16:01:43.698"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 16:01:43.700" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:01:43.700" starttime="20170728 16:01:43.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170728 16:01:43.701" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170728 16:01:43.702" starttime="20170728 16:01:43.701"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 16:01:43.703" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:01:43.704" starttime="20170728 16:01:43.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 16:01:43.705" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 16:01:43.705" starttime="20170728 16:01:43.704"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${user_id_no[0][12]}</arg>
<arg>${user_id_no[0][13]}</arg>
</arguments>
<status status="PASS" endtime="20170728 16:01:43.707" starttime="20170728 16:01:43.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 16:01:43.708" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 16:01:43.709" starttime="20170728 16:01:43.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170728 16:01:43.710" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170728 16:01:43.710" starttime="20170728 16:01:43.709"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id_no[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170728 16:01:43.712" level="INFO">${user_id[0][0]_transaction} = 88889569</msg>
<status status="PASS" endtime="20170728 16:01:43.712" starttime="20170728 16:01:43.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170728 16:01:43.714" level="INFO">${user_id[0][0]_transaction} = 88889569</msg>
<status status="PASS" endtime="20170728 16:01:43.714" starttime="20170728 16:01:43.713"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id_no[0][0]}'</arg>
</arguments>
<msg timestamp="20170728 16:01:43.715" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88889569' </msg>
<status status="PASS" endtime="20170728 16:01:43.750" starttime="20170728 16:01:43.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_amount</arg>
</arguments>
<msg timestamp="20170728 16:01:43.752" level="INFO">现在开始校验表account_amount</msg>
<status status="PASS" endtime="20170728 16:01:43.752" starttime="20170728 16:01:43.751"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${no_user_id_account_id}'</arg>
</arguments>
<assign>
<var>${user_id_t}</var>
</assign>
<msg timestamp="20170728 16:01:43.753" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6303' </msg>
<msg timestamp="20170728 16:01:43.759" level="INFO">${user_id_t} = ((12617, 6303, Decimal('10.00'), Decimal('10.00'), Decimal('0.00'), datetime.datetime(2017, 7, 28, 16, 2, 48), datetime.datetime(2017, 7, 28, 16, 2, 48), 0),)</msg>
<status status="PASS" endtime="20170728 16:01:43.759" starttime="20170728 16:01:43.753"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][2]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 16:01:43.761" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:01:43.761" starttime="20170728 16:01:43.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 16:01:43.762" level="INFO">total_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 16:01:43.763" starttime="20170728 16:01:43.762"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][3]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 16:01:43.764" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:01:43.764" starttime="20170728 16:01:43.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 16:01:43.766" level="INFO">balance_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 16:01:43.767" starttime="20170728 16:01:43.765"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][4]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 16:01:43.769" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:01:43.770" starttime="20170728 16:01:43.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 16:01:43.771" level="INFO">frozen_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 16:01:43.772" starttime="20170728 16:01:43.771"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 16:01:43.773" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:01:43.773" starttime="20170728 16:01:43.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 16:01:43.774" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 16:01:43.775" starttime="20170728 16:01:43.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount校验成功！</arg>
</arguments>
<msg timestamp="20170728 16:01:43.776" level="INFO">表account_amount校验成功！</msg>
<status status="PASS" endtime="20170728 16:01:43.776" starttime="20170728 16:01:43.775"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_amount where account_id ='${no_user_id_account_id}'</arg>
</arguments>
<msg timestamp="20170728 16:01:43.778" level="INFO">Executing : Execute SQL String  |  delete from account_amount where account_id ='6303' </msg>
<status status="PASS" endtime="20170728 16:01:43.882" starttime="20170728 16:01:43.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>输入未有的user_id和正确的amount参数，会直接生成app账户，然后表里的数据都入库成功！</arg>
</arguments>
<msg timestamp="20170728 16:01:43.885" level="INFO">输入未有的user_id和正确的amount参数，会直接生成app账户，然后表里的数据都入库成功！</msg>
<status status="PASS" endtime="20170728 16:01:43.885" starttime="20170728 16:01:43.884"></status>
</kw>
<status status="PASS" endtime="20170728 16:01:43.886" critical="yes" starttime="20170728 16:01:42.999"></status>
</test>
<status status="PASS" endtime="20170728 16:01:43.889" starttime="20170728 16:01:42.698"></status>
</suite>
<status status="PASS" endtime="20170728 16:01:43.903" starttime="20170728 16:01:42.691"></status>
</suite>
<status status="PASS" endtime="20170728 16:01:43.911" starttime="20170728 16:01:42.489"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="账户中心" pass="1">账户中心</stat>
<stat fail="0" id="s1-s1" name="艾佳币" pass="1">账户中心.艾佳币</stat>
<stat fail="0" id="s1-s1-s1" name="艾佳币活动充值" pass="1">账户中心.艾佳币.艾佳币活动充值</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
