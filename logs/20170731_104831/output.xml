<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170731 10:50:24.007" generator="Robot 3.0.2 (Python 2.7.8 on win32)">
<suite source="F:\logs and reports\账户中心" id="s1" name="账户中心">
<suite source="F:\logs and reports\账户中心\订单" id="s1-s1" name="订单">
<suite source="F:\logs and reports\账户中心\订单\订单支付退款（线上）.txt" id="s1-s1-s1" name="订单支付退款（线上）">
<test id="s1-s1-s1-t1" name="输入参数全部正确">
<kw name="参数配置" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170731 10:50:24.594" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170731 10:50:24.604" starttime="20170731 10:50:24.574"></status>
</kw>
<status status="PASS" endtime="20170731 10:50:24.614" starttime="20170731 10:50:24.574"></status>
</kw>
<kw name="输入拥有不同类型账户的用户user_id" library="myResource">
<arguments>
<arg>100000</arg>
<arg>100000</arg>
<arg>123456781</arg>
<arg>http://192.168.1.31:10003</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_user_account_id}</arg>
</arguments>
<msg timestamp="20170731 10:50:24.614" level="INFO">${boss_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170731 10:50:24.614" starttime="20170731 10:50:24.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_user_account_id}</arg>
</arguments>
<msg timestamp="20170731 10:50:24.614" level="INFO">${app_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170731 10:50:24.614" starttime="20170731 10:50:24.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${no_user_account_id}</arg>
</arguments>
<msg timestamp="20170731 10:50:24.624" level="INFO">${no_user_account_id} = 123456781</msg>
<status status="PASS" endtime="20170731 10:50:24.624" starttime="20170731 10:50:24.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${environment}</arg>
</arguments>
<msg timestamp="20170731 10:50:24.624" level="INFO">${environment} = http://192.168.1.31:10003</msg>
<status status="PASS" endtime="20170731 10:50:24.624" starttime="20170731 10:50:24.624"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${boss_user_account_id}' and channel_no=1</arg>
</arguments>
<assign>
<var>${boss_channel_no1}</var>
</assign>
<msg timestamp="20170731 10:50:24.624" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=1 </msg>
<msg timestamp="20170731 10:50:24.634" level="INFO">${boss_channel_no1} = ((6090, '32102151361499943856', 100000, 6135, 1, 2, 0, datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 13, 23, 57, 26)),)</msg>
<status status="PASS" endtime="20170731 10:50:24.634" starttime="20170731 10:50:24.624"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${boss_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${boss_channel_no}</var>
</assign>
<msg timestamp="20170731 10:50:24.634" level="INFO">${boss_channel_no} = 6135</msg>
<status status="PASS" endtime="20170731 10:50:24.634" starttime="20170731 10:50:24.634"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${app_user_account_id}' and channel_no=2</arg>
</arguments>
<assign>
<var>${app_channel_no1}</var>
</assign>
<msg timestamp="20170731 10:50:24.644" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=2 </msg>
<msg timestamp="20170731 10:50:24.644" level="INFO">${app_channel_no1} = ((100000000010L, '32102151361501206852', 100000, 6273, 2, 2, 0, datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 10, 46, 53)),)</msg>
<status status="PASS" endtime="20170731 10:50:24.644" starttime="20170731 10:50:24.634"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${app_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${app_channel_no}</var>
</assign>
<msg timestamp="20170731 10:50:24.654" level="INFO">${app_channel_no} = 6273</msg>
<status status="PASS" endtime="20170731 10:50:24.654" starttime="20170731 10:50:24.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_channel_no}</arg>
</arguments>
<msg timestamp="20170731 10:50:24.654" level="INFO">${boss_channel_no} = 6135</msg>
<status status="PASS" endtime="20170731 10:50:24.654" starttime="20170731 10:50:24.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_channel_no}</arg>
</arguments>
<msg timestamp="20170731 10:50:24.664" level="INFO">${app_channel_no} = 6273</msg>
<status status="PASS" endtime="20170731 10:50:24.664" starttime="20170731 10:50:24.664"></status>
</kw>
<status status="PASS" endtime="20170731 10:50:24.664" starttime="20170731 10:50:24.614"></status>
</kw>
<status status="PASS" endtime="20170731 10:50:24.664" starttime="20170731 10:50:24.564"></status>
</kw>
<kw name="清数据" library="myResource">
<arguments>
<arg>888888</arg>
</arguments>
<kw name="参数配置" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170731 10:50:24.674" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170731 10:50:24.684" starttime="20170731 10:50:24.674"></status>
</kw>
<status status="PASS" endtime="20170731 10:50:24.684" starttime="20170731 10:50:24.674"></status>
</kw>
<kw name="输入拥有不同类型账户的用户user_id" library="myResource">
<arguments>
<arg>100000</arg>
<arg>100000</arg>
<arg>123456781</arg>
<arg>http://192.168.1.31:10003</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_user_account_id}</arg>
</arguments>
<msg timestamp="20170731 10:50:24.694" level="INFO">${boss_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170731 10:50:24.694" starttime="20170731 10:50:24.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_user_account_id}</arg>
</arguments>
<msg timestamp="20170731 10:50:24.694" level="INFO">${app_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170731 10:50:24.694" starttime="20170731 10:50:24.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${no_user_account_id}</arg>
</arguments>
<msg timestamp="20170731 10:50:24.694" level="INFO">${no_user_account_id} = 123456781</msg>
<status status="PASS" endtime="20170731 10:50:24.704" starttime="20170731 10:50:24.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${environment}</arg>
</arguments>
<msg timestamp="20170731 10:50:24.704" level="INFO">${environment} = http://192.168.1.31:10003</msg>
<status status="PASS" endtime="20170731 10:50:24.704" starttime="20170731 10:50:24.704"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${boss_user_account_id}' and channel_no=1</arg>
</arguments>
<assign>
<var>${boss_channel_no1}</var>
</assign>
<msg timestamp="20170731 10:50:24.704" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=1 </msg>
<msg timestamp="20170731 10:50:24.724" level="INFO">${boss_channel_no1} = ((6090, '32102151361499943856', 100000, 6135, 1, 2, 0, datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 13, 23, 57, 26)),)</msg>
<status status="PASS" endtime="20170731 10:50:24.724" starttime="20170731 10:50:24.704"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${boss_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${boss_channel_no}</var>
</assign>
<msg timestamp="20170731 10:50:24.724" level="INFO">${boss_channel_no} = 6135</msg>
<status status="PASS" endtime="20170731 10:50:24.724" starttime="20170731 10:50:24.724"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${app_user_account_id}' and channel_no=2</arg>
</arguments>
<assign>
<var>${app_channel_no1}</var>
</assign>
<msg timestamp="20170731 10:50:24.724" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=2 </msg>
<msg timestamp="20170731 10:50:24.744" level="INFO">${app_channel_no1} = ((100000000010L, '32102151361501206852', 100000, 6273, 2, 2, 0, datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 10, 46, 53)),)</msg>
<status status="PASS" endtime="20170731 10:50:24.744" starttime="20170731 10:50:24.724"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${app_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${app_channel_no}</var>
</assign>
<msg timestamp="20170731 10:50:24.754" level="INFO">${app_channel_no} = 6273</msg>
<status status="PASS" endtime="20170731 10:50:24.754" starttime="20170731 10:50:24.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_channel_no}</arg>
</arguments>
<msg timestamp="20170731 10:50:24.754" level="INFO">${boss_channel_no} = 6135</msg>
<status status="PASS" endtime="20170731 10:50:24.754" starttime="20170731 10:50:24.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_channel_no}</arg>
</arguments>
<msg timestamp="20170731 10:50:24.754" level="INFO">${app_channel_no} = 6273</msg>
<status status="PASS" endtime="20170731 10:50:24.754" starttime="20170731 10:50:24.754"></status>
</kw>
<status status="PASS" endtime="20170731 10:50:24.754" starttime="20170731 10:50:24.684"></status>
</kw>
<status status="PASS" endtime="20170731 10:50:24.764" starttime="20170731 10:50:24.664"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170731 10:50:24.764" level="INFO">Executing : Query  |  select * from ajb_account_transaction where id=888888 </msg>
<msg timestamp="20170731 10:50:24.784" level="INFO">${check} = ()</msg>
<status status="PASS" endtime="20170731 10:50:24.784" starttime="20170731 10:50:24.764"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170731 10:50:24.784" level="INFO">Length is 0</msg>
<msg timestamp="20170731 10:50:24.784" level="INFO">${check_length} = 0</msg>
<status status="PASS" endtime="20170731 10:50:24.784" starttime="20170731 10:50:24.784"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} != 0</arg>
<arg>execute sql string</arg>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>数据库之前没有数据</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库之前没有数据</arg>
</arguments>
<msg timestamp="20170731 10:50:24.794" level="INFO">数据库之前没有数据</msg>
<status status="PASS" endtime="20170731 10:50:24.794" starttime="20170731 10:50:24.794"></status>
</kw>
<status status="PASS" endtime="20170731 10:50:24.794" starttime="20170731 10:50:24.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库里面的这条数据清理成功啦。</arg>
</arguments>
<msg timestamp="20170731 10:50:24.794" level="INFO">数据库里面的这条数据清理成功啦。</msg>
<status status="PASS" endtime="20170731 10:50:24.794" starttime="20170731 10:50:24.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_delete}</arg>
</arguments>
<msg timestamp="20170731 10:50:24.794" level="INFO">${id_delete} = 888888</msg>
<status status="PASS" endtime="20170731 10:50:24.804" starttime="20170731 10:50:24.794"></status>
</kw>
<status status="PASS" endtime="20170731 10:50:24.804" starttime="20170731 10:50:24.664"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("${id_delete}","32102151361500885834","${boss_user_account_id}","${boss_channel_no}","1","32102151361500885834","","2","1","13","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170731 10:50:24.804" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("888888","32102151361500885834","100000","6135","1","32102151361500885834","","2","1","13","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170731 10:50:24.889" starttime="20170731 10:50:24.804"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>32102151361500885834</arg>
<arg>${environment}/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170731 10:50:24.889" level="INFO">${args11} = 32102151361500885834</msg>
<status status="PASS" endtime="20170731 10:50:24.889" starttime="20170731 10:50:24.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170731 10:50:24.889" level="INFO">${args22} = </msg>
<status status="PASS" endtime="20170731 10:50:24.899" starttime="20170731 10:50:24.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170731 10:50:24.899" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170731 10:50:24.899" starttime="20170731 10:50:24.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170731 10:50:24.899" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170731 10:50:24.909" starttime="20170731 10:50:24.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170731 10:50:24.909" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</msg>
<status status="PASS" endtime="20170731 10:50:24.909" starttime="20170731 10:50:24.909"></status>
</kw>
<status status="PASS" endtime="20170731 10:50:24.909" starttime="20170731 10:50:24.889"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num='${args11}' and event_code=13</arg>
</arguments>
<assign>
<var>${user_id_refund}</var>
</assign>
<msg timestamp="20170731 10:50:24.919" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num='32102151361500885834' and event_code=13 </msg>
<msg timestamp="20170731 10:50:24.929" level="INFO">${user_id_refund} = ((888888, '32102151361500885834', 100000, 6135, 1, '32102151361500885834', '', Decimal('2.00'), 1, 13, 2, 0, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)),)</msg>
<status status="PASS" endtime="20170731 10:50:24.929" starttime="20170731 10:50:24.909"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${user_id_refund[0][2]}' and channel_no=1</arg>
</arguments>
<assign>
<var>${account_id_bos}</var>
</assign>
<msg timestamp="20170731 10:50:24.929" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=1 </msg>
<msg timestamp="20170731 10:50:24.929" level="INFO">${account_id_bos} = ((6090, '32102151361499943856', 100000, 6135, 1, 2, 0, datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 13, 23, 57, 26)),)</msg>
<status status="PASS" endtime="20170731 10:50:24.944" starttime="20170731 10:50:24.929"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_id_bos[0][3]}</arg>
</arguments>
<assign>
<var>${account_id_boss}</var>
</assign>
<msg timestamp="20170731 10:50:24.944" level="INFO">${account_id_boss} = 6135</msg>
<status status="PASS" endtime="20170731 10:50:24.944" starttime="20170731 10:50:24.944"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${user_id_refund[0][2]}' and channel_no=2</arg>
</arguments>
<assign>
<var>${account_id_ap}</var>
</assign>
<msg timestamp="20170731 10:50:24.944" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=2 </msg>
<msg timestamp="20170731 10:50:24.960" level="INFO">${account_id_ap} = ((100000000010L, '32102151361501206852', 100000, 6273, 2, 2, 0, datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 10, 46, 53)),)</msg>
<status status="PASS" endtime="20170731 10:50:24.960" starttime="20170731 10:50:24.944"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_id_ap[0][3]}</arg>
</arguments>
<assign>
<var>${account_id_app}</var>
</assign>
<msg timestamp="20170731 10:50:24.960" level="INFO">${account_id_app} = 6273</msg>
<status status="PASS" endtime="20170731 10:50:24.960" starttime="20170731 10:50:24.960"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_boss}'</arg>
</arguments>
<assign>
<var>${amount_boss}</var>
</assign>
<msg timestamp="20170731 10:50:24.960" level="INFO">Executing : Query  |  select * from account_amount where account_id='6135' </msg>
<msg timestamp="20170731 10:50:24.976" level="INFO">${amount_boss} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 31, 10, 49, 42), 0),)</msg>
<status status="PASS" endtime="20170731 10:50:24.976" starttime="20170731 10:50:24.960"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_app}'</arg>
</arguments>
<assign>
<var>${amount_app}</var>
</assign>
<msg timestamp="20170731 10:50:24.976" level="INFO">Executing : Query  |  select * from account_amount where account_id='6273' </msg>
<msg timestamp="20170731 10:50:24.976" level="INFO">${amount_app} = ((12587, 6273, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 31, 10, 43, 27), 0),)</msg>
<status status="PASS" endtime="20170731 10:50:24.976" starttime="20170731 10:50:24.976"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170731 10:50:24.976" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</msg>
<status status="PASS" endtime="20170731 10:50:24.976" starttime="20170731 10:50:24.976"></status>
</kw>
<kw name="Ajb Withdraw Cancel" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170731 10:50:25.615" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170731 10:50:25.615" starttime="20170731 10:50:24.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170731 10:50:25.615" level="INFO">200</msg>
<status status="PASS" endtime="20170731 10:50:25.615" starttime="20170731 10:50:25.615"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170731 10:50:25.631" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170731 10:50:25.631" starttime="20170731 10:50:25.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170731 10:50:25.631" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170731 10:50:25.631" starttime="20170731 10:50:25.631"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170731 10:50:25.631" level="INFO">To JSON using : content={"data":null,"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170731 10:50:25.631" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170731 10:50:25.631" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': None, u'success': True}</msg>
<status status="PASS" endtime="20170731 10:50:25.646" starttime="20170731 10:50:25.631"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170731 10:50:25.646" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170731 10:50:25.646" starttime="20170731 10:50:25.646"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170731 10:50:25.646" starttime="20170731 10:50:25.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170731 10:50:25.646" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170731 10:50:25.646" starttime="20170731 10:50:25.646"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170731 10:50:25.646" level="INFO">${current_time} = 2017-07-31 10:50:25.646</msg>
<status status="PASS" endtime="20170731 10:50:25.646" starttime="20170731 10:50:25.646"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>5 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170731 10:50:25.662" level="INFO">${current_time_before_30} = 2017-07-31 10:50:20.646</msg>
<status status="PASS" endtime="20170731 10:50:25.662" starttime="20170731 10:50:25.646"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170731 10:50:25.662" level="INFO">${current_time_after_30} = 2017-07-31 10:52:05.646</msg>
<status status="PASS" endtime="20170731 10:50:25.662" starttime="20170731 10:50:25.662"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where event_code=14 and user_id='${user_id_refund[0][2]}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170731 10:50:25.662" level="INFO">Executing : Query  |  select * from account_unilateral_bill where event_code=14 and user_id='100000' and update_time between' 2017-07-31 10:50:20.646' and '2017-07-31 10:52:05.646' </msg>
<msg timestamp="20170731 10:50:25.678" level="INFO">${user_id} = ((8538, '32102151361501469011', 100000, 6135, '32102151361501469009', 1, 14, 3, Decimal('2.00'), None, datetime.datetime(2017, 7, 31, 10, 51, 33), datetime.datetime(2017, 7, 31, 10, 51, 33), 0),)</msg>
<status status="PASS" endtime="20170731 10:50:25.678" starttime="20170731 10:50:25.662"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170731 10:50:25.678" level="INFO">Length is 20</msg>
<msg timestamp="20170731 10:50:25.678" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170731 10:50:25.678" starttime="20170731 10:50:25.678"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170731 10:50:25.678" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170731 10:50:25.678" starttime="20170731 10:50:25.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170731 10:50:25.693" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170731 10:50:25.693" starttime="20170731 10:50:25.678"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_refund[0][2]}</arg>
</arguments>
<status status="PASS" endtime="20170731 10:50:25.693" starttime="20170731 10:50:25.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170731 10:50:25.693" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170731 10:50:25.693" starttime="20170731 10:50:25.693"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170731 10:50:25.693" level="INFO">Length is 20</msg>
<msg timestamp="20170731 10:50:25.693" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170731 10:50:25.693" starttime="20170731 10:50:25.693"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170731 10:50:25.693" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170731 10:50:25.693" starttime="20170731 10:50:25.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170731 10:50:25.709" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170731 10:50:25.709" starttime="20170731 10:50:25.693"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170731 10:50:25.709" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170731 10:50:25.709" starttime="20170731 10:50:25.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170731 10:50:25.709" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170731 10:50:25.709" starttime="20170731 10:50:25.709"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>14</arg>
</arguments>
<msg timestamp="20170731 10:50:25.709" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170731 10:50:25.709" starttime="20170731 10:50:25.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170731 10:50:25.709" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170731 10:50:25.709" starttime="20170731 10:50:25.709"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20170731 10:50:25.724" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170731 10:50:25.724" starttime="20170731 10:50:25.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170731 10:50:25.724" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170731 10:50:25.724" starttime="20170731 10:50:25.724"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<status status="PASS" endtime="20170731 10:50:25.724" starttime="20170731 10:50:25.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170731 10:50:25.724" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170731 10:50:25.724" starttime="20170731 10:50:25.724"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170731 10:50:25.724" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170731 10:50:25.724" starttime="20170731 10:50:25.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170731 10:50:25.724" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170731 10:50:25.740" starttime="20170731 10:50:25.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170731 10:50:25.740" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170731 10:50:25.740" starttime="20170731 10:50:25.740"></status>
</kw>
<kw name="Conn Mysql" library="wjwTestLibrary">
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]}'</arg>
</arguments>
<assign>
<var>${user_id_unilateral_delete}</var>
</assign>
<msg timestamp="20170731 10:50:25.949" level="INFO">${user_id_unilateral_delete} = ()</msg>
<status status="PASS" endtime="20170731 10:50:25.949" starttime="20170731 10:50:25.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170731 10:50:25.949" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170731 10:50:25.949" starttime="20170731 10:50:25.949"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time1}</var>
</assign>
<msg timestamp="20170731 10:50:25.949" level="INFO">${current_time1} = 2017-07-31 10:50:25.949</msg>
<status status="PASS" endtime="20170731 10:50:25.965" starttime="20170731 10:50:25.949"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>5 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_301}</var>
</assign>
<msg timestamp="20170731 10:50:25.965" level="INFO">${current_time_before_301} = 2017-07-31 10:50:20.949</msg>
<status status="PASS" endtime="20170731 10:50:25.965" starttime="20170731 10:50:25.965"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_301}</var>
</assign>
<msg timestamp="20170731 10:50:25.965" level="INFO">${current_time_after_301} = 2017-07-31 10:52:05.949</msg>
<status status="PASS" endtime="20170731 10:50:25.965" starttime="20170731 10:50:25.965"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where event_code=14 and user_id='${user_id_refund[0][2]}' and update_time between' ${current_time_before_301}' and '${current_time_after_301}'</arg>
</arguments>
<assign>
<var>${user_id1}</var>
</assign>
<msg timestamp="20170731 10:50:25.980" level="INFO">Executing : Query  |  select * from ajb_account_transaction where event_code=14 and user_id='100000' and update_time between' 2017-07-31 10:50:20.949' and '2017-07-31 10:52:05.949' </msg>
<msg timestamp="20170731 10:50:26.012" level="INFO">${user_id1} = ((88890108, '32102151361501469008', 100000, 6135, 1, '32102151361500885834', '20170731105129AWL053329', Decimal('2.00'), 1, 14, 2, 0, datetime.datetime(2017, 7, 31, 10, 51, 32), datetime.datetime(2017...</msg>
<status status="PASS" endtime="20170731 10:50:26.012" starttime="20170731 10:50:25.980"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id1[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170731 10:50:26.012" level="INFO">Length is 20</msg>
<msg timestamp="20170731 10:50:26.012" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170731 10:50:26.012" starttime="20170731 10:50:26.012"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170731 10:50:26.027" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170731 10:50:26.027" starttime="20170731 10:50:26.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170731 10:50:26.027" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170731 10:50:26.027" starttime="20170731 10:50:26.027"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][2]}</arg>
<arg>${user_id_refund[0][2]}</arg>
</arguments>
<status status="PASS" endtime="20170731 10:50:26.027" starttime="20170731 10:50:26.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170731 10:50:26.043" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170731 10:50:26.043" starttime="20170731 10:50:26.043"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][5]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170731 10:50:26.043" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170731 10:50:26.043" starttime="20170731 10:50:26.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170731 10:50:26.043" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170731 10:50:26.058" starttime="20170731 10:50:26.043"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id1[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170731 10:50:26.058" level="INFO">${pay_no_after} = 20170731105129AWL053329</msg>
<status status="PASS" endtime="20170731 10:50:26.058" starttime="20170731 10:50:26.058"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170731 10:50:26.058" level="INFO">Length is 23</msg>
<msg timestamp="20170731 10:50:26.058" level="INFO">${pay_no_after_length} = 23</msg>
<status status="PASS" endtime="20170731 10:50:26.058" starttime="20170731 10:50:26.058"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>23</arg>
</arguments>
<msg timestamp="20170731 10:50:26.074" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170731 10:50:26.074" starttime="20170731 10:50:26.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170731 10:50:26.074" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170731 10:50:26.074" starttime="20170731 10:50:26.074"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][7]}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<status status="PASS" endtime="20170731 10:50:26.090" starttime="20170731 10:50:26.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170731 10:50:26.090" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170731 10:50:26.090" starttime="20170731 10:50:26.090"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170731 10:50:26.090" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170731 10:50:26.090" starttime="20170731 10:50:26.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170731 10:50:26.105" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170731 10:50:26.105" starttime="20170731 10:50:26.105"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][9]}</arg>
<arg>14</arg>
</arguments>
<msg timestamp="20170731 10:50:26.105" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170731 10:50:26.105" starttime="20170731 10:50:26.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170731 10:50:26.105" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170731 10:50:26.105" starttime="20170731 10:50:26.105"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170731 10:50:26.121" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170731 10:50:26.121" starttime="20170731 10:50:26.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170731 10:50:26.121" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170731 10:50:26.121" starttime="20170731 10:50:26.121"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170731 10:50:26.121" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170731 10:50:26.136" starttime="20170731 10:50:26.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170731 10:50:26.136" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170731 10:50:26.136" starttime="20170731 10:50:26.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170731 10:50:26.136" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170731 10:50:26.136" starttime="20170731 10:50:26.136"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170731 10:50:26.152" level="INFO">${user_id[0][0]_transaction} = 8538</msg>
<status status="PASS" endtime="20170731 10:50:26.152" starttime="20170731 10:50:26.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170731 10:50:26.152" level="INFO">${user_id[0][0]_transaction} = 8538</msg>
<status status="PASS" endtime="20170731 10:50:26.152" starttime="20170731 10:50:26.152"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id1[0][0]}'</arg>
</arguments>
<msg timestamp="20170731 10:50:26.152" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88890108' </msg>
<status status="PASS" endtime="20170731 10:50:26.214" starttime="20170731 10:50:26.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>检验表account_amount</arg>
</arguments>
<msg timestamp="20170731 10:50:26.214" level="INFO">检验表account_amount</msg>
<status status="PASS" endtime="20170731 10:50:26.214" starttime="20170731 10:50:26.214"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_app}'</arg>
</arguments>
<assign>
<var>${amount_app_after}</var>
</assign>
<msg timestamp="20170731 10:50:26.214" level="INFO">Executing : Query  |  select * from account_amount where account_id='6273' </msg>
<msg timestamp="20170731 10:50:26.230" level="INFO">${amount_app_after} = ((12587, 6273, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 31, 10, 43, 27), 0),)</msg>
<status status="PASS" endtime="20170731 10:50:26.230" starttime="20170731 10:50:26.214"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_boss}'</arg>
</arguments>
<assign>
<var>${amount_boss_after}</var>
</assign>
<msg timestamp="20170731 10:50:26.230" level="INFO">Executing : Query  |  select * from account_amount where account_id='6135' </msg>
<msg timestamp="20170731 10:50:26.230" level="INFO">${amount_boss_after} = ((12449, 6135, Decimal('50425.00'), Decimal('49597.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 31, 10, 51, 33), 0),)</msg>
<status status="PASS" endtime="20170731 10:50:26.230" starttime="20170731 10:50:26.230"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${amount_boss_after[0][2]}+${amount_app_after[0][2]}-${amount_boss[0][2]}-${amount_app[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_check}</var>
</assign>
<msg timestamp="20170731 10:50:26.246" level="INFO">${total_amount_check} = 2.0</msg>
<status status="PASS" endtime="20170731 10:50:26.246" starttime="20170731 10:50:26.230"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${total_amount_check}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<msg timestamp="20170731 10:50:26.246" level="INFO">Argument types are:
&lt;type 'float'&gt;
&lt;class 'decimal.Decimal'&gt;</msg>
<status status="PASS" endtime="20170731 10:50:26.246" starttime="20170731 10:50:26.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount正确</arg>
</arguments>
<msg timestamp="20170731 10:50:26.246" level="INFO">total_amount正确</msg>
<status status="PASS" endtime="20170731 10:50:26.246" starttime="20170731 10:50:26.246"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${amount_boss_after[0][3]}+${amount_app_after[0][3]}-${amount_boss[0][3]}-${amount_app[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_check}</var>
</assign>
<msg timestamp="20170731 10:50:26.246" level="INFO">${balance_amount_check} = 2.0</msg>
<status status="PASS" endtime="20170731 10:50:26.246" starttime="20170731 10:50:26.246"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${balance_amount_check}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<msg timestamp="20170731 10:50:26.246" level="INFO">Argument types are:
&lt;type 'float'&gt;
&lt;class 'decimal.Decimal'&gt;</msg>
<status status="PASS" endtime="20170731 10:50:26.246" starttime="20170731 10:50:26.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount正确</arg>
</arguments>
<msg timestamp="20170731 10:50:26.261" level="INFO">balance_amount正确</msg>
<status status="PASS" endtime="20170731 10:50:26.261" starttime="20170731 10:50:26.246"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${amount_boss[0][4]}+${amount_app[0][4]}-${amount_boss_after[0][4]}-${amount_app_after[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_check}</var>
</assign>
<msg timestamp="20170731 10:50:26.261" level="INFO">${frozen_amount_check} = 0.0</msg>
<status status="PASS" endtime="20170731 10:50:26.261" starttime="20170731 10:50:26.261"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${frozen_amount_check}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170731 10:50:26.261" level="INFO">Argument types are:
&lt;type 'float'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170731 10:50:26.261" starttime="20170731 10:50:26.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount正确</arg>
</arguments>
<msg timestamp="20170731 10:50:26.261" level="INFO">frozen_amount正确</msg>
<status status="PASS" endtime="20170731 10:50:26.261" starttime="20170731 10:50:26.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>检验表account_amount成功</arg>
</arguments>
<msg timestamp="20170731 10:50:26.261" level="INFO">检验表account_amount成功</msg>
<status status="PASS" endtime="20170731 10:50:26.261" starttime="20170731 10:50:26.261"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<msg timestamp="20170731 10:50:26.277" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=888888 </msg>
<status status="PASS" endtime="20170731 10:50:26.308" starttime="20170731 10:50:26.261"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount SET total_amount =${amount_boss[0][2]},balance_amount=${amount_boss[0][3]},frozen_amount=${amount_boss[0][4]} where account_id="${account_id_boss}";</arg>
</arguments>
<msg timestamp="20170731 10:50:26.308" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount SET total_amount =50423.00,balance_amount=49595.00,frozen_amount=828.00 where account_id="6135"; </msg>
<status status="PASS" endtime="20170731 10:50:26.355" starttime="20170731 10:50:26.308"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount SET total_amount=${amount_boss[0][2]},balance_amount=${amount_boss[0][3]},frozen_amount=${amount_boss[0][4]} where account_id="${account_id_app}";</arg>
</arguments>
<msg timestamp="20170731 10:50:26.355" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount SET total_amount=50423.00,balance_amount=49595.00,frozen_amount=828.00 where account_id="6273"; </msg>
<status status="PASS" endtime="20170731 10:50:26.355" starttime="20170731 10:50:26.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170731 10:50:26.370" level="INFO">成功</msg>
<status status="PASS" endtime="20170731 10:50:26.370" starttime="20170731 10:50:26.355"></status>
</kw>
<status status="PASS" endtime="20170731 10:50:26.370" critical="yes" starttime="20170731 10:50:24.564"></status>
</test>
<status status="PASS" endtime="20170731 10:50:26.370" starttime="20170731 10:50:24.241"></status>
</suite>
<status status="PASS" endtime="20170731 10:50:26.370" starttime="20170731 10:50:24.241"></status>
</suite>
<status status="PASS" endtime="20170731 10:50:26.386" starttime="20170731 10:50:24.039"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="账户中心" pass="1">账户中心</stat>
<stat fail="0" id="s1-s1" name="订单" pass="1">账户中心.订单</stat>
<stat fail="0" id="s1-s1-s1" name="订单支付退款（线上）" pass="1">账户中心.订单.订单支付退款（线上）</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
