<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170728 17:02:56.524" generator="Robot 3.0.2 (Python 2.7.8 on win32)">
<suite source="F:\logs and reports\账户中心" id="s1" name="账户中心">
<suite source="F:\logs and reports\账户中心\艾佳币" id="s1-s1" name="艾佳币">
<suite source="F:\logs and reports\账户中心\艾佳币\艾佳币充值.txt" id="s1-s1-s1" name="艾佳币充值">
<test id="s1-s1-s1-t1" name="输入已有的userId和正确amount参数">
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>100000</arg>
<arg>1</arg>
<arg>2</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:02:57.174" level="INFO">${args11} = 100000</msg>
<status status="PASS" endtime="20170728 17:02:57.176" starttime="20170728 17:02:57.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:02:57.180" level="INFO">${args22} = 1</msg>
<status status="PASS" endtime="20170728 17:02:57.181" starttime="20170728 17:02:57.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 17:02:57.186" level="INFO">${args33} = 2</msg>
<status status="PASS" endtime="20170728 17:02:57.188" starttime="20170728 17:02:57.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 17:02:57.192" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 17:02:57.194" starttime="20170728 17:02:57.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 17:02:57.200" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</msg>
<status status="PASS" endtime="20170728 17:02:57.202" starttime="20170728 17:02:57.196"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:57.204" starttime="20170728 17:02:57.169"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 17:02:57.213" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</msg>
<status status="PASS" endtime="20170728 17:02:57.214" starttime="20170728 17:02:57.209"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 17:02:57.219" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:02:57.221" starttime="20170728 17:02:57.216"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:57.228" starttime="20170728 17:02:57.226"></status>
</kw>
<msg timestamp="20170728 17:02:57.230" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:02:57.232" starttime="20170728 17:02:57.223"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>user_id</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:57.246" starttime="20170728 17:02:57.243"></status>
</kw>
<msg timestamp="20170728 17:02:57.249" level="INFO">${args11_after} = user_id</msg>
<status status="PASS" endtime="20170728 17:02:57.250" starttime="20170728 17:02:57.235"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:02:57.299" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:02:57.324" starttime="20170728 17:02:57.260"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:57.326" starttime="20170728 17:02:57.257"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:57.329" starttime="20170728 17:02:57.252"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 17:02:57.333" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and channel_no='1' </msg>
<msg timestamp="20170728 17:02:57.358" level="INFO">${database1} = ((9100, '32102151361499943857', 100000, 6135, 1, '32102151361499943857', '20170714000118SSP038852', Decimal('2.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, ...</msg>
<status status="PASS" endtime="20170728 17:02:57.360" starttime="20170728 17:02:57.331"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 17:02:57.367" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 17:02:57.379" level="INFO">${database} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 3, 49), 0),)</msg>
<status status="PASS" endtime="20170728 17:02:57.381" starttime="20170728 17:02:57.364"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 17:02:57.386" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:02:57.387" starttime="20170728 17:02:57.383"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 17:02:57.392" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 17:02:57.394" starttime="20170728 17:02:57.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:02:57.399" level="INFO">获得account_id值为：6135</msg>
<status status="PASS" endtime="20170728 17:02:57.400" starttime="20170728 17:02:57.396"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 17:02:57.406" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:02:57.407" starttime="20170728 17:02:57.403"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 17:02:57.412" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:02:57.414" starttime="20170728 17:02:57.409"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 17:02:57.421" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:02:57.423" starttime="20170728 17:02:57.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:02:57.430" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 17:02:57.432" starttime="20170728 17:02:57.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 17:02:57.439" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:02:57.441" starttime="20170728 17:02:57.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:02:57.448" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:02:57.449" starttime="20170728 17:02:57.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:02:57.458" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:02:57.460" starttime="20170728 17:02:57.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:02:57.466" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:02:57.468" starttime="20170728 17:02:57.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:02:57.471" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:02:57.473" starttime="20170728 17:02:57.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 17:02:57.476" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:02:57.478" starttime="20170728 17:02:57.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 17:02:57.484" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</msg>
<status status="PASS" endtime="20170728 17:02:57.485" starttime="20170728 17:02:57.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170728 17:02:57.490" level="INFO">${database} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 3, 49), 0),)</msg>
<status status="PASS" endtime="20170728 17:02:57.492" starttime="20170728 17:02:57.487"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:57.494" starttime="20170728 17:02:57.206"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Data" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:57.580" starttime="20170728 17:02:57.503"></status>
</kw>
<msg timestamp="20170728 17:02:57.582" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:02:57.583" starttime="20170728 17:02:57.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 17:02:57.585" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:02:57.586" starttime="20170728 17:02:57.584"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:57.587" starttime="20170728 17:02:57.497"></status>
</kw>
<kw name="字段验证" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 17:02:57.592" level="INFO">200</msg>
<status status="PASS" endtime="20170728 17:02:57.593" starttime="20170728 17:02:57.590"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 17:02:57.596" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:57.597" starttime="20170728 17:02:57.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 17:02:57.598" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 17:02:57.599" starttime="20170728 17:02:57.597"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 17:02:57.601" level="INFO">To JSON using : content={"data":{"orderNum":"32102151361501230499"},"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 17:02:57.601" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 17:02:57.602" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': {u'orderNum': u'32102151361501230499'}, u'success': True}</msg>
<status status="PASS" endtime="20170728 17:02:57.602" starttime="20170728 17:02:57.600"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 17:02:57.606" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:57.607" starttime="20170728 17:02:57.604"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:57.610" starttime="20170728 17:02:57.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:02:57.613" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 17:02:57.613" starttime="20170728 17:02:57.612"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<assign>
<var>@{Link1}</var>
</assign>
<msg timestamp="20170728 17:02:57.615" level="INFO">@{Link1} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:02:57.616" starttime="20170728 17:02:57.614"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>"${value}" in @{Link1}</arg>
<arg>Get From Dictionary</arg>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${orderNum}</var>
</assign>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:57.621" starttime="20170728 17:02:57.618"></status>
</kw>
<msg timestamp="20170728 17:02:57.622" level="INFO">${orderNum} = 32102151361501230499</msg>
<status status="PASS" endtime="20170728 17:02:57.623" starttime="20170728 17:02:57.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<msg timestamp="20170728 17:02:57.626" level="INFO">${orderNum} = 32102151361501230499</msg>
<status status="PASS" endtime="20170728 17:02:57.627" starttime="20170728 17:02:57.624"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:57.628" starttime="20170728 17:02:57.588"></status>
</kw>
<kw name="表account_unilateral_bill的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_unilateral_bill</arg>
</arguments>
<msg timestamp="20170728 17:02:57.631" level="INFO">现在开始校验表account_unilateral_bill</msg>
<status status="PASS" endtime="20170728 17:02:57.632" starttime="20170728 17:02:57.630"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:02:57.637" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:02:57.664" starttime="20170728 17:02:57.635"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:57.665" starttime="20170728 17:02:57.633"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:57.666" starttime="20170728 17:02:57.632"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>account_unilateral_bill</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:02:57.676" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:02:57.685" starttime="20170728 17:02:57.673"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:57.686" starttime="20170728 17:02:57.671"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:57.688" starttime="20170728 17:02:57.669"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:02:57.690" level="INFO">${current_time} = 2017-07-28 17:02:57.690</msg>
<status status="PASS" endtime="20170728 17:02:57.691" starttime="20170728 17:02:57.689"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>0 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:02:57.699" level="INFO">${current_time_before_30} = 2017-07-28 17:02:57.690</msg>
<status status="PASS" endtime="20170728 17:02:57.700" starttime="20170728 17:02:57.692"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:02:57.704" level="INFO">${current_time_after_30} = 2017-07-28 17:04:37.690</msg>
<status status="PASS" endtime="20170728 17:02:57.705" starttime="20170728 17:02:57.702"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 17:02:57.709" level="INFO">Executing : Query  |  select * from account_unilateral_bill where user_id='100000' and update_time between' 2017-07-28 17:02:57.690' and '2017-07-28 17:04:37.690' </msg>
<msg timestamp="20170728 17:02:57.725" level="INFO">${updatetime} = ((7692, '32102151361501230503', 100000, 6135, '32102151361501230500', 1, 7, 3, Decimal('1.00'), None, datetime.datetime(2017, 7, 28, 17, 4, 3), datetime.datetime(2017, 7, 28, 17, 4, 3), 0),)</msg>
<status status="PASS" endtime="20170728 17:02:57.726" starttime="20170728 17:02:57.707"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 17:02:57.731" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 17:02:57.732" starttime="20170728 17:02:57.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 17:02:57.736" level="INFO">account_unilateral_bill表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 17:02:57.738" starttime="20170728 17:02:57.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 17:02:57.742" level="INFO">${current_time_before_30} = 2017-07-28 17:02:57.690</msg>
<status status="PASS" endtime="20170728 17:02:57.744" starttime="20170728 17:02:57.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 17:02:57.747" level="INFO">${current_time_after_30} = 2017-07-28 17:04:37.690</msg>
<status status="PASS" endtime="20170728 17:02:57.748" starttime="20170728 17:02:57.746"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:57.749" starttime="20170728 17:02:57.667"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id} 'and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:02:57.751" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6135 'and update_time between' 2017-07-28 17:02:57.690' and '2017-07-28 17:04:37.690' </msg>
<msg timestamp="20170728 17:02:57.757" level="INFO">${user_id} = ((7692, '32102151361501230503', 100000, 6135, '32102151361501230500', 1, 7, 3, Decimal('1.00'), None, datetime.datetime(2017, 7, 28, 17, 4, 3), datetime.datetime(2017, 7, 28, 17, 4, 3), 0),)</msg>
<status status="PASS" endtime="20170728 17:02:57.757" starttime="20170728 17:02:57.750"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170728 17:02:57.759" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:02:57.761" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:02:57.761" starttime="20170728 17:02:57.758"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:02:57.763" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:57.764" starttime="20170728 17:02:57.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:02:57.769" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:02:57.770" starttime="20170728 17:02:57.766"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:57.772" starttime="20170728 17:02:57.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:02:57.774" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:02:57.774" starttime="20170728 17:02:57.773"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170728 17:02:57.777" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:02:57.779" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:02:57.780" starttime="20170728 17:02:57.775"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:02:57.782" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:57.783" starttime="20170728 17:02:57.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:02:57.784" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:02:57.785" starttime="20170728 17:02:57.783"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:02:57.788" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:57.789" starttime="20170728 17:02:57.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 17:02:57.812" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 17:02:57.813" starttime="20170728 17:02:57.810"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>7</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:57.818" starttime="20170728 17:02:57.817"></status>
</kw>
<msg timestamp="20170728 17:02:57.819" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:02:57.820" starttime="20170728 17:02:57.815"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:02:57.822" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:02:57.822" starttime="20170728 17:02:57.821"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:57.828" starttime="20170728 17:02:57.826"></status>
</kw>
<msg timestamp="20170728 17:02:57.829" level="INFO">${event_code_after} = 7</msg>
<status status="PASS" endtime="20170728 17:02:57.830" starttime="20170728 17:02:57.823"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:02:57.832" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:02:57.833" starttime="20170728 17:02:57.831"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:57.837" starttime="20170728 17:02:57.836"></status>
</kw>
<msg timestamp="20170728 17:02:57.838" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:02:57.839" starttime="20170728 17:02:57.834"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:57.842" starttime="20170728 17:02:57.841"></status>
</kw>
<msg timestamp="20170728 17:02:57.843" level="INFO">${amount} = 1</msg>
<status status="PASS" endtime="20170728 17:02:57.845" starttime="20170728 17:02:57.840"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:02:57.848" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:02:57.848" starttime="20170728 17:02:57.847"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:57.853" starttime="20170728 17:02:57.851"></status>
</kw>
<msg timestamp="20170728 17:02:57.854" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:02:57.855" starttime="20170728 17:02:57.849"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:57.861" starttime="20170728 17:02:57.859"></status>
</kw>
<msg timestamp="20170728 17:02:57.862" level="INFO">${total_amount} = 50424.0</msg>
<status status="PASS" endtime="20170728 17:02:57.863" starttime="20170728 17:02:57.856"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:57.867" starttime="20170728 17:02:57.866"></status>
</kw>
<msg timestamp="20170728 17:02:57.869" level="INFO">${balance_amount} = 49596.0</msg>
<status status="PASS" endtime="20170728 17:02:57.870" starttime="20170728 17:02:57.864"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:57.874" starttime="20170728 17:02:57.873"></status>
</kw>
<msg timestamp="20170728 17:02:57.875" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:02:57.876" starttime="20170728 17:02:57.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:02:57.879" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:02:57.879" starttime="20170728 17:02:57.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:02:57.881" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:02:57.882" starttime="20170728 17:02:57.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:02:57.884" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:02:57.884" starttime="20170728 17:02:57.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:02:57.887" level="INFO">${amount} = 1</msg>
<status status="PASS" endtime="20170728 17:02:57.888" starttime="20170728 17:02:57.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:02:57.891" level="INFO">${total_amount} = 50424.0</msg>
<status status="PASS" endtime="20170728 17:02:57.892" starttime="20170728 17:02:57.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:02:57.894" level="INFO">${balance_amount} = 49596.0</msg>
<status status="PASS" endtime="20170728 17:02:57.895" starttime="20170728 17:02:57.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:02:57.897" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:02:57.898" starttime="20170728 17:02:57.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:02:57.899" level="INFO">${event_code_after} = 7</msg>
<status status="PASS" endtime="20170728 17:02:57.900" starttime="20170728 17:02:57.899"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:57.901" starttime="20170728 17:02:57.814"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:02:57.903" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:57.904" starttime="20170728 17:02:57.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 17:02:57.907" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 17:02:57.909" starttime="20170728 17:02:57.906"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:02:57.912" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:57.913" starttime="20170728 17:02:57.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170728 17:02:57.915" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170728 17:02:57.915" starttime="20170728 17:02:57.914"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:02:57.919" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:57.921" starttime="20170728 17:02:57.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 17:02:57.925" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 17:02:57.927" starttime="20170728 17:02:57.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 17:02:57.929" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 17:02:57.930" starttime="20170728 17:02:57.928"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:02:57.933" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:57.934" starttime="20170728 17:02:57.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:02:57.936" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:02:57.937" starttime="20170728 17:02:57.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170728 17:02:57.939" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170728 17:02:57.939" starttime="20170728 17:02:57.938"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_unilateral}</var>
</assign>
<msg timestamp="20170728 17:02:57.941" level="INFO">${user_id[0][0]_unilateral} = 7692</msg>
<status status="PASS" endtime="20170728 17:02:57.942" starttime="20170728 17:02:57.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_unilateral}</arg>
</arguments>
<msg timestamp="20170728 17:02:57.944" level="INFO">${user_id[0][0]_unilateral} = 7692</msg>
<status status="PASS" endtime="20170728 17:02:57.945" starttime="20170728 17:02:57.943"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]_unilateral}'</arg>
</arguments>
<msg timestamp="20170728 17:02:57.947" level="INFO">Executing : Execute SQL String  |  delete from account_unilateral_bill where id ='7692' </msg>
<status status="PASS" endtime="20170728 17:02:58.004" starttime="20170728 17:02:57.946"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:58.005" starttime="20170728 17:02:57.629"></status>
</kw>
<kw name="表ajb_account_transaction" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170728 17:02:58.008" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170728 17:02:58.008" starttime="20170728 17:02:58.007"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:02:58.015" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:02:58.036" starttime="20170728 17:02:58.013"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:58.037" starttime="20170728 17:02:58.011"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:58.038" starttime="20170728 17:02:58.010"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>ajb_account_transaction</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:02:58.047" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:02:58.056" starttime="20170728 17:02:58.045"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:58.057" starttime="20170728 17:02:58.043"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:58.059" starttime="20170728 17:02:58.041"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:02:58.062" level="INFO">${current_time} = 2017-07-28 17:02:58.062</msg>
<status status="PASS" endtime="20170728 17:02:58.063" starttime="20170728 17:02:58.061"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>0 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:02:58.065" level="INFO">${current_time_before_30} = 2017-07-28 17:02:58.062</msg>
<status status="PASS" endtime="20170728 17:02:58.066" starttime="20170728 17:02:58.064"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:02:58.068" level="INFO">${current_time_after_30} = 2017-07-28 17:04:38.062</msg>
<status status="PASS" endtime="20170728 17:02:58.069" starttime="20170728 17:02:58.067"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 17:02:58.071" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and update_time between' 2017-07-28 17:02:58.062' and '2017-07-28 17:04:38.062' </msg>
<msg timestamp="20170728 17:02:58.085" level="INFO">${updatetime} = ((88889792, '32102151361501230499', 100000, 6135, 1, '32102151361501230499', '20170728170359QKX051697', Decimal('1.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 28, 17, 4, 3), datetime.datetime(2017, 7...</msg>
<status status="PASS" endtime="20170728 17:02:58.086" starttime="20170728 17:02:58.069"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 17:02:58.089" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 17:02:58.091" starttime="20170728 17:02:58.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 17:02:58.094" level="INFO">ajb_account_transaction表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 17:02:58.095" starttime="20170728 17:02:58.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 17:02:58.097" level="INFO">${current_time_before_30} = 2017-07-28 17:02:58.062</msg>
<status status="PASS" endtime="20170728 17:02:58.098" starttime="20170728 17:02:58.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 17:02:58.100" level="INFO">${current_time_after_30} = 2017-07-28 17:04:38.062</msg>
<status status="PASS" endtime="20170728 17:02:58.100" starttime="20170728 17:02:58.099"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:58.101" starttime="20170728 17:02:58.039"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:02:58.105" level="INFO">Executing : Query  |  select * from ajb_account_transaction where account_id ='6135' and update_time between' 2017-07-28 17:02:58.062' and '2017-07-28 17:04:38.062' </msg>
<msg timestamp="20170728 17:02:58.116" level="INFO">${user_id} = ((88889792, '32102151361501230499', 100000, 6135, 1, '32102151361501230499', '20170728170359QKX051697', Decimal('1.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 28, 17, 4, 3), datetime.datetime(2017, 7...</msg>
<status status="PASS" endtime="20170728 17:02:58.117" starttime="20170728 17:02:58.102"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 17:02:58.120" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:02:58.122" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:02:58.123" starttime="20170728 17:02:58.118"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:02:58.125" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:58.126" starttime="20170728 17:02:58.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:02:58.129" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:02:58.131" starttime="20170728 17:02:58.128"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:58.135" starttime="20170728 17:02:58.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:02:58.138" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:02:58.140" starttime="20170728 17:02:58.137"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:02:58.144" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:58.146" starttime="20170728 17:02:58.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no的值正确</arg>
</arguments>
<msg timestamp="20170728 17:02:58.148" level="INFO">channel_no的值正确</msg>
<status status="PASS" endtime="20170728 17:02:58.149" starttime="20170728 17:02:58.147"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${args11}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${orderNum}</arg>
</arguments>
<assign>
<var>${bill_order_num}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:58.154" starttime="20170728 17:02:58.153"></status>
</kw>
<msg timestamp="20170728 17:02:58.156" level="INFO">${bill_order_num} = 32102151361501230499</msg>
<status status="PASS" endtime="20170728 17:02:58.158" starttime="20170728 17:02:58.150"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>${bill_order_num}</arg>
</arguments>
<msg timestamp="20170728 17:02:58.162" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:58.163" starttime="20170728 17:02:58.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170728 17:02:58.167" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170728 17:02:58.169" starttime="20170728 17:02:58.165"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>7</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:58.181" starttime="20170728 17:02:58.179"></status>
</kw>
<msg timestamp="20170728 17:02:58.182" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:02:58.183" starttime="20170728 17:02:58.173"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:02:58.188" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:02:58.189" starttime="20170728 17:02:58.185"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:58.196" starttime="20170728 17:02:58.194"></status>
</kw>
<msg timestamp="20170728 17:02:58.197" level="INFO">${event_code_after} = 7</msg>
<status status="PASS" endtime="20170728 17:02:58.197" starttime="20170728 17:02:58.191"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:02:58.201" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:02:58.202" starttime="20170728 17:02:58.198"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:58.208" starttime="20170728 17:02:58.206"></status>
</kw>
<msg timestamp="20170728 17:02:58.209" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:02:58.211" starttime="20170728 17:02:58.204"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:58.218" starttime="20170728 17:02:58.216"></status>
</kw>
<msg timestamp="20170728 17:02:58.219" level="INFO">${amount} = 1</msg>
<status status="PASS" endtime="20170728 17:02:58.220" starttime="20170728 17:02:58.213"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:02:58.224" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:02:58.226" starttime="20170728 17:02:58.222"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:58.233" starttime="20170728 17:02:58.231"></status>
</kw>
<msg timestamp="20170728 17:02:58.235" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:02:58.236" starttime="20170728 17:02:58.228"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:58.241" starttime="20170728 17:02:58.240"></status>
</kw>
<msg timestamp="20170728 17:02:58.242" level="INFO">${total_amount} = 50424.0</msg>
<status status="PASS" endtime="20170728 17:02:58.244" starttime="20170728 17:02:58.238"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:58.250" starttime="20170728 17:02:58.249"></status>
</kw>
<msg timestamp="20170728 17:02:58.251" level="INFO">${balance_amount} = 49596.0</msg>
<status status="PASS" endtime="20170728 17:02:58.251" starttime="20170728 17:02:58.246"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:58.255" starttime="20170728 17:02:58.254"></status>
</kw>
<msg timestamp="20170728 17:02:58.256" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:02:58.256" starttime="20170728 17:02:58.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:02:58.259" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:02:58.260" starttime="20170728 17:02:58.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:02:58.263" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:02:58.264" starttime="20170728 17:02:58.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:02:58.267" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:02:58.267" starttime="20170728 17:02:58.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:02:58.269" level="INFO">${amount} = 1</msg>
<status status="PASS" endtime="20170728 17:02:58.270" starttime="20170728 17:02:58.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:02:58.272" level="INFO">${total_amount} = 50424.0</msg>
<status status="PASS" endtime="20170728 17:02:58.273" starttime="20170728 17:02:58.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:02:58.275" level="INFO">${balance_amount} = 49596.0</msg>
<status status="PASS" endtime="20170728 17:02:58.276" starttime="20170728 17:02:58.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:02:58.278" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:02:58.278" starttime="20170728 17:02:58.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:02:58.280" level="INFO">${event_code_after} = 7</msg>
<status status="PASS" endtime="20170728 17:02:58.281" starttime="20170728 17:02:58.279"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:58.283" starttime="20170728 17:02:58.171"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170728 17:02:58.286" level="INFO">${pay_no_after} = 20170728170359QKX051697</msg>
<status status="PASS" endtime="20170728 17:02:58.287" starttime="20170728 17:02:58.284"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170728 17:02:58.289" level="INFO">Length is 23</msg>
<msg timestamp="20170728 17:02:58.291" level="INFO">${pay_no_after_length} = 23</msg>
<status status="PASS" endtime="20170728 17:02:58.292" starttime="20170728 17:02:58.288"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:02:58.296" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:58.297" starttime="20170728 17:02:58.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170728 17:02:58.298" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170728 17:02:58.299" starttime="20170728 17:02:58.298"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:02:58.301" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:58.302" starttime="20170728 17:02:58.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 17:02:58.303" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 17:02:58.304" starttime="20170728 17:02:58.303"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:02:58.306" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:58.307" starttime="20170728 17:02:58.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 17:02:58.310" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 17:02:58.311" starttime="20170728 17:02:58.307"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][9]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:02:58.313" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:58.314" starttime="20170728 17:02:58.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 17:02:58.315" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 17:02:58.316" starttime="20170728 17:02:58.315"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 17:02:58.318" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:58.319" starttime="20170728 17:02:58.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170728 17:02:58.321" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170728 17:02:58.322" starttime="20170728 17:02:58.319"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:02:58.326" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:58.327" starttime="20170728 17:02:58.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:02:58.330" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:02:58.331" starttime="20170728 17:02:58.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 17:02:58.333" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 17:02:58.333" starttime="20170728 17:02:58.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170728 17:02:58.335" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170728 17:02:58.336" starttime="20170728 17:02:58.334"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170728 17:02:58.339" level="INFO">${user_id[0][0]_transaction} = 88889792</msg>
<status status="PASS" endtime="20170728 17:02:58.341" starttime="20170728 17:02:58.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170728 17:02:58.344" level="INFO">${user_id[0][0]_transaction} = 88889792</msg>
<status status="PASS" endtime="20170728 17:02:58.345" starttime="20170728 17:02:58.342"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id[0][0]}'</arg>
</arguments>
<assign>
<var>${user_id_unilateral_delete1}</var>
</assign>
<msg timestamp="20170728 17:02:58.347" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88889792' </msg>
<msg timestamp="20170728 17:02:58.465" level="INFO">${user_id_unilateral_delete1} = None</msg>
<status status="PASS" endtime="20170728 17:02:58.466" starttime="20170728 17:02:58.346"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:58.467" starttime="20170728 17:02:58.006"></status>
</kw>
<kw name="表account_amount的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_amount</arg>
</arguments>
<msg timestamp="20170728 17:02:58.470" level="INFO">现在开始校验表account_amount</msg>
<status status="PASS" endtime="20170728 17:02:58.471" starttime="20170728 17:02:58.469"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:02:58.475" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:02:58.503" starttime="20170728 17:02:58.474"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:58.504" starttime="20170728 17:02:58.473"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:58.505" starttime="20170728 17:02:58.472"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time1}</var>
</assign>
<msg timestamp="20170728 17:02:58.507" level="INFO">${current_time1} = 2017-07-28 17:02:58.507</msg>
<status status="PASS" endtime="20170728 17:02:58.507" starttime="20170728 17:02:58.506"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_before_30}</var>
</assign>
<msg timestamp="20170728 17:02:58.510" level="INFO">${current_time1_before_30} = 2017-07-28 17:01:58.507</msg>
<status status="PASS" endtime="20170728 17:02:58.511" starttime="20170728 17:02:58.508"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_after_30}</var>
</assign>
<msg timestamp="20170728 17:02:58.514" level="INFO">${current_time1_after_30} = 2017-07-28 17:03:58.507</msg>
<status status="PASS" endtime="20170728 17:02:58.515" starttime="20170728 17:02:58.512"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:02:58.518" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 17:02:58.525" level="INFO">${user_id} = ((12449, 6135, Decimal('50424.00'), Decimal('49596.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 3), 0),)</msg>
<status status="PASS" endtime="20170728 17:02:58.526" starttime="20170728 17:02:58.516"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>7</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:58.535" starttime="20170728 17:02:58.533"></status>
</kw>
<msg timestamp="20170728 17:02:58.536" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:02:58.536" starttime="20170728 17:02:58.530"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:02:58.540" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:02:58.541" starttime="20170728 17:02:58.538"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:58.546" starttime="20170728 17:02:58.545"></status>
</kw>
<msg timestamp="20170728 17:02:58.547" level="INFO">${event_code_after} = 7</msg>
<status status="PASS" endtime="20170728 17:02:58.548" starttime="20170728 17:02:58.543"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:02:58.550" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:02:58.551" starttime="20170728 17:02:58.549"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:58.556" starttime="20170728 17:02:58.555"></status>
</kw>
<msg timestamp="20170728 17:02:58.558" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:02:58.559" starttime="20170728 17:02:58.553"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:58.567" starttime="20170728 17:02:58.565"></status>
</kw>
<msg timestamp="20170728 17:02:58.568" level="INFO">${amount} = 1</msg>
<status status="PASS" endtime="20170728 17:02:58.568" starttime="20170728 17:02:58.562"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:02:58.570" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:02:58.571" starttime="20170728 17:02:58.569"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:58.575" starttime="20170728 17:02:58.573"></status>
</kw>
<msg timestamp="20170728 17:02:58.576" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:02:58.578" starttime="20170728 17:02:58.572"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:58.586" starttime="20170728 17:02:58.584"></status>
</kw>
<msg timestamp="20170728 17:02:58.589" level="INFO">${total_amount} = 50424.0</msg>
<status status="PASS" endtime="20170728 17:02:58.590" starttime="20170728 17:02:58.580"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:58.599" starttime="20170728 17:02:58.597"></status>
</kw>
<msg timestamp="20170728 17:02:58.601" level="INFO">${balance_amount} = 49596.0</msg>
<status status="PASS" endtime="20170728 17:02:58.602" starttime="20170728 17:02:58.593"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:58.609" starttime="20170728 17:02:58.607"></status>
</kw>
<msg timestamp="20170728 17:02:58.612" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:02:58.613" starttime="20170728 17:02:58.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:02:58.616" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:02:58.618" starttime="20170728 17:02:58.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:02:58.621" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:02:58.622" starttime="20170728 17:02:58.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:02:58.625" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:02:58.627" starttime="20170728 17:02:58.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:02:58.629" level="INFO">${amount} = 1</msg>
<status status="PASS" endtime="20170728 17:02:58.630" starttime="20170728 17:02:58.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:02:58.632" level="INFO">${total_amount} = 50424.0</msg>
<status status="PASS" endtime="20170728 17:02:58.633" starttime="20170728 17:02:58.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:02:58.636" level="INFO">${balance_amount} = 49596.0</msg>
<status status="PASS" endtime="20170728 17:02:58.637" starttime="20170728 17:02:58.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:02:58.639" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:02:58.640" starttime="20170728 17:02:58.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:02:58.642" level="INFO">${event_code_after} = 7</msg>
<status status="PASS" endtime="20170728 17:02:58.643" starttime="20170728 17:02:58.641"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:58.644" starttime="20170728 17:02:58.528"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:02:58.646" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:58.647" starttime="20170728 17:02:58.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:02:58.649" level="INFO">total_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:02:58.649" starttime="20170728 17:02:58.648"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:02:58.651" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:58.653" starttime="20170728 17:02:58.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:02:58.656" level="INFO">balance_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:02:58.657" starttime="20170728 17:02:58.655"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:58.661" starttime="20170728 17:02:58.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:02:58.663" level="INFO">frozen_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:02:58.663" starttime="20170728 17:02:58.662"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:02:58.667" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:58.668" starttime="20170728 17:02:58.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:02:58.670" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:02:58.671" starttime="20170728 17:02:58.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:02:58.673" level="INFO">表account_amount校验成功！</msg>
<status status="PASS" endtime="20170728 17:02:58.674" starttime="20170728 17:02:58.672"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:58.675" starttime="20170728 17:02:58.468"></status>
</kw>
<kw name="艾佳币恢复数目" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:02:58.683" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:02:58.694" starttime="20170728 17:02:58.682"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:58.696" starttime="20170728 17:02:58.679"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:58.697" starttime="20170728 17:02:58.678"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount \ SET total_amount=${database[0][2]},balance_amount=${database[0][3]},frozen_amount=${database[0][4]}where account_id="${account_id}";</arg>
</arguments>
<msg timestamp="20170728 17:02:58.699" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount  SET total_amount=50423.00,balance_amount=49595.00,frozen_amount=828.00where account_id="6135"; </msg>
<status status="PASS" endtime="20170728 17:02:58.785" starttime="20170728 17:02:58.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170728 17:02:58.787" level="INFO">成功</msg>
<status status="PASS" endtime="20170728 17:02:58.788" starttime="20170728 17:02:58.786"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:58.790" starttime="20170728 17:02:58.677"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:58.792" critical="yes" starttime="20170728 17:02:57.162"></status>
</test>
<test id="s1-s1-s1-t2" name="输入已有的user_id和amount数目为0参数">
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>100000</arg>
<arg>0</arg>
<arg>2</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:02:58.803" level="INFO">${args11} = 100000</msg>
<status status="PASS" endtime="20170728 17:02:58.804" starttime="20170728 17:02:58.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:02:58.806" level="INFO">${args22} = 0</msg>
<status status="PASS" endtime="20170728 17:02:58.807" starttime="20170728 17:02:58.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 17:02:58.812" level="INFO">${args33} = 2</msg>
<status status="PASS" endtime="20170728 17:02:58.813" starttime="20170728 17:02:58.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 17:02:58.816" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 17:02:58.816" starttime="20170728 17:02:58.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 17:02:58.818" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</msg>
<status status="PASS" endtime="20170728 17:02:58.819" starttime="20170728 17:02:58.817"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:58.820" starttime="20170728 17:02:58.799"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 17:02:58.823" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</msg>
<status status="PASS" endtime="20170728 17:02:58.824" starttime="20170728 17:02:58.821"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 17:02:58.828" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:02:58.829" starttime="20170728 17:02:58.827"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:58.833" starttime="20170728 17:02:58.832"></status>
</kw>
<msg timestamp="20170728 17:02:58.834" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:02:58.834" starttime="20170728 17:02:58.830"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>user_id</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:58.838" starttime="20170728 17:02:58.837"></status>
</kw>
<msg timestamp="20170728 17:02:58.840" level="INFO">${args11_after} = user_id</msg>
<status status="PASS" endtime="20170728 17:02:58.841" starttime="20170728 17:02:58.836"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:02:58.848" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:02:58.856" starttime="20170728 17:02:58.846"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:58.858" starttime="20170728 17:02:58.844"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:58.860" starttime="20170728 17:02:58.843"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 17:02:58.863" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and channel_no='1' </msg>
<msg timestamp="20170728 17:02:58.882" level="INFO">${database1} = ((9100, '32102151361499943857', 100000, 6135, 1, '32102151361499943857', '20170714000118SSP038852', Decimal('2.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, ...</msg>
<status status="PASS" endtime="20170728 17:02:58.882" starttime="20170728 17:02:58.862"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 17:02:58.885" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 17:02:58.891" level="INFO">${database} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 4), 0),)</msg>
<status status="PASS" endtime="20170728 17:02:58.893" starttime="20170728 17:02:58.883"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 17:02:58.895" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:02:58.896" starttime="20170728 17:02:58.894"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 17:02:58.898" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 17:02:58.899" starttime="20170728 17:02:58.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:02:58.901" level="INFO">获得account_id值为：6135</msg>
<status status="PASS" endtime="20170728 17:02:58.901" starttime="20170728 17:02:58.900"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 17:02:58.903" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:02:58.904" starttime="20170728 17:02:58.902"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 17:02:58.907" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:02:58.908" starttime="20170728 17:02:58.906"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 17:02:58.911" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:02:58.912" starttime="20170728 17:02:58.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:02:58.915" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 17:02:58.916" starttime="20170728 17:02:58.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 17:02:58.919" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:02:58.920" starttime="20170728 17:02:58.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:02:58.922" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:02:58.923" starttime="20170728 17:02:58.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:02:58.926" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:02:58.927" starttime="20170728 17:02:58.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:02:58.929" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:02:58.929" starttime="20170728 17:02:58.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:02:58.931" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:02:58.932" starttime="20170728 17:02:58.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 17:02:58.936" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:02:58.937" starttime="20170728 17:02:58.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 17:02:58.939" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</msg>
<status status="PASS" endtime="20170728 17:02:58.940" starttime="20170728 17:02:58.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170728 17:02:58.942" level="INFO">${database} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 4), 0),)</msg>
<status status="PASS" endtime="20170728 17:02:58.943" starttime="20170728 17:02:58.941"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:58.944" starttime="20170728 17:02:58.820"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Data" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:59.044" starttime="20170728 17:02:58.948"></status>
</kw>
<msg timestamp="20170728 17:02:59.045" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:02:59.046" starttime="20170728 17:02:58.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 17:02:59.048" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:02:59.049" starttime="20170728 17:02:59.047"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:59.050" starttime="20170728 17:02:58.945"></status>
</kw>
<kw name="字段验证" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 17:02:59.053" level="INFO">200</msg>
<status status="PASS" endtime="20170728 17:02:59.054" starttime="20170728 17:02:59.052"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 17:02:59.057" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:59.057" starttime="20170728 17:02:59.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 17:02:59.060" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 17:02:59.061" starttime="20170728 17:02:59.059"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 17:02:59.063" level="INFO">To JSON using : content={"data":{"orderNum":"32102151361501230504"},"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 17:02:59.063" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 17:02:59.064" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': {u'orderNum': u'32102151361501230504'}, u'success': True}</msg>
<status status="PASS" endtime="20170728 17:02:59.064" starttime="20170728 17:02:59.062"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 17:02:59.066" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:59.067" starttime="20170728 17:02:59.065"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:59.069" starttime="20170728 17:02:59.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:02:59.071" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 17:02:59.071" starttime="20170728 17:02:59.070"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<assign>
<var>@{Link1}</var>
</assign>
<msg timestamp="20170728 17:02:59.073" level="INFO">@{Link1} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:02:59.074" starttime="20170728 17:02:59.072"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>"${value}" in @{Link1}</arg>
<arg>Get From Dictionary</arg>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${orderNum}</var>
</assign>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:59.080" starttime="20170728 17:02:59.078"></status>
</kw>
<msg timestamp="20170728 17:02:59.081" level="INFO">${orderNum} = 32102151361501230504</msg>
<status status="PASS" endtime="20170728 17:02:59.082" starttime="20170728 17:02:59.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<msg timestamp="20170728 17:02:59.084" level="INFO">${orderNum} = 32102151361501230504</msg>
<status status="PASS" endtime="20170728 17:02:59.084" starttime="20170728 17:02:59.083"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:59.085" starttime="20170728 17:02:59.051"></status>
</kw>
<kw name="表ajb_account_open_record的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_open_record</arg>
</arguments>
<msg timestamp="20170728 17:02:59.089" level="INFO">现在开始校验表ajb_account_open_record</msg>
<status status="PASS" endtime="20170728 17:02:59.090" starttime="20170728 17:02:59.087"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:02:59.096" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:02:59.105" starttime="20170728 17:02:59.095"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:59.107" starttime="20170728 17:02:59.093"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:59.108" starttime="20170728 17:02:59.091"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:02:59.110" level="INFO">Executing : Query  |  select * from ajb_account_open_record where account_id ='6135' </msg>
<msg timestamp="20170728 17:02:59.119" level="INFO">${user_id} = ((6090, '32102151361499943856', 100000, 6135, 1, 2, 0, datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 13, 23, 57, 26)),)</msg>
<status status="PASS" endtime="20170728 17:02:59.120" starttime="20170728 17:02:59.109"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 17:02:59.123" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:02:59.124" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:02:59.125" starttime="20170728 17:02:59.121"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:02:59.128" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:59.129" starttime="20170728 17:02:59.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:02:59.131" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:02:59.132" starttime="20170728 17:02:59.130"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:02:59.134" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:59.135" starttime="20170728 17:02:59.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:02:59.137" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:02:59.137" starttime="20170728 17:02:59.136"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:02:59.141" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:59.142" starttime="20170728 17:02:59.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no正确反映艾佳币账户渠道</arg>
</arguments>
<msg timestamp="20170728 17:02:59.145" level="INFO">channel_no正确反映艾佳币账户渠道</msg>
<status status="PASS" endtime="20170728 17:02:59.145" starttime="20170728 17:02:59.144"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 17:02:59.148" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:59.149" starttime="20170728 17:02:59.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>status的值为2,表示生效，是正确的</arg>
</arguments>
<msg timestamp="20170728 17:02:59.151" level="INFO">status的值为2,表示生效，是正确的</msg>
<status status="PASS" endtime="20170728 17:02:59.152" starttime="20170728 17:02:59.150"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:02:59.154" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:59.155" starttime="20170728 17:02:59.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:02:59.157" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:02:59.158" starttime="20170728 17:02:59.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表里面的add_time和update_time的时间是一致的。校验正确。</arg>
</arguments>
<msg timestamp="20170728 17:02:59.160" level="INFO">表里面的add_time和update_time的时间是一致的。校验正确。</msg>
<status status="PASS" endtime="20170728 17:02:59.161" starttime="20170728 17:02:59.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_open_record的校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:02:59.162" level="INFO">表ajb_account_open_record的校验成功！</msg>
<status status="PASS" endtime="20170728 17:02:59.163" starttime="20170728 17:02:59.161"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:59.165" starttime="20170728 17:02:59.086"></status>
</kw>
<kw name="表account_unilateral_bill的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_unilateral_bill</arg>
</arguments>
<msg timestamp="20170728 17:02:59.170" level="INFO">现在开始校验表account_unilateral_bill</msg>
<status status="PASS" endtime="20170728 17:02:59.171" starttime="20170728 17:02:59.169"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:02:59.180" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:02:59.190" starttime="20170728 17:02:59.178"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:59.192" starttime="20170728 17:02:59.175"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:59.194" starttime="20170728 17:02:59.173"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>account_unilateral_bill</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:02:59.201" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:02:59.208" starttime="20170728 17:02:59.200"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:59.210" starttime="20170728 17:02:59.198"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:59.211" starttime="20170728 17:02:59.197"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:02:59.213" level="INFO">${current_time} = 2017-07-28 17:02:59.213</msg>
<status status="PASS" endtime="20170728 17:02:59.213" starttime="20170728 17:02:59.212"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>0 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:02:59.216" level="INFO">${current_time_before_30} = 2017-07-28 17:02:59.213</msg>
<status status="PASS" endtime="20170728 17:02:59.218" starttime="20170728 17:02:59.214"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:02:59.221" level="INFO">${current_time_after_30} = 2017-07-28 17:04:39.213</msg>
<status status="PASS" endtime="20170728 17:02:59.222" starttime="20170728 17:02:59.219"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 17:02:59.224" level="INFO">Executing : Query  |  select * from account_unilateral_bill where user_id='100000' and update_time between' 2017-07-28 17:02:59.213' and '2017-07-28 17:04:39.213' </msg>
<msg timestamp="20170728 17:02:59.234" level="INFO">${updatetime} = ((7695, '32102151361501230508', 100000, 6135, '32102151361501230505', 1, 7, 3, Decimal('0.00'), None, datetime.datetime(2017, 7, 28, 17, 4, 4), datetime.datetime(2017, 7, 28, 17, 4, 4), 0),)</msg>
<status status="PASS" endtime="20170728 17:02:59.235" starttime="20170728 17:02:59.223"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 17:02:59.237" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 17:02:59.238" starttime="20170728 17:02:59.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 17:02:59.240" level="INFO">account_unilateral_bill表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 17:02:59.241" starttime="20170728 17:02:59.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 17:02:59.244" level="INFO">${current_time_before_30} = 2017-07-28 17:02:59.213</msg>
<status status="PASS" endtime="20170728 17:02:59.245" starttime="20170728 17:02:59.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 17:02:59.248" level="INFO">${current_time_after_30} = 2017-07-28 17:04:39.213</msg>
<status status="PASS" endtime="20170728 17:02:59.248" starttime="20170728 17:02:59.246"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:59.249" starttime="20170728 17:02:59.196"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id} 'and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:02:59.251" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6135 'and update_time between' 2017-07-28 17:02:59.213' and '2017-07-28 17:04:39.213' </msg>
<msg timestamp="20170728 17:02:59.256" level="INFO">${user_id} = ((7695, '32102151361501230508', 100000, 6135, '32102151361501230505', 1, 7, 3, Decimal('0.00'), None, datetime.datetime(2017, 7, 28, 17, 4, 4), datetime.datetime(2017, 7, 28, 17, 4, 4), 0),)</msg>
<status status="PASS" endtime="20170728 17:02:59.257" starttime="20170728 17:02:59.250"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170728 17:02:59.259" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:02:59.260" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:02:59.261" starttime="20170728 17:02:59.258"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:02:59.263" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:59.263" starttime="20170728 17:02:59.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:02:59.267" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:02:59.268" starttime="20170728 17:02:59.265"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:59.271" starttime="20170728 17:02:59.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:02:59.273" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:02:59.275" starttime="20170728 17:02:59.272"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170728 17:02:59.279" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:02:59.280" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:02:59.280" starttime="20170728 17:02:59.278"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:02:59.282" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:59.283" starttime="20170728 17:02:59.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:02:59.284" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:02:59.285" starttime="20170728 17:02:59.284"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:02:59.287" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:59.289" starttime="20170728 17:02:59.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 17:02:59.292" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 17:02:59.294" starttime="20170728 17:02:59.290"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>7</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:59.300" starttime="20170728 17:02:59.299"></status>
</kw>
<msg timestamp="20170728 17:02:59.301" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:02:59.302" starttime="20170728 17:02:59.296"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:02:59.303" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:02:59.304" starttime="20170728 17:02:59.302"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:59.309" starttime="20170728 17:02:59.307"></status>
</kw>
<msg timestamp="20170728 17:02:59.311" level="INFO">${event_code_after} = 7</msg>
<status status="PASS" endtime="20170728 17:02:59.312" starttime="20170728 17:02:59.305"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:02:59.314" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:02:59.315" starttime="20170728 17:02:59.313"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:59.318" starttime="20170728 17:02:59.317"></status>
</kw>
<msg timestamp="20170728 17:02:59.319" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:02:59.320" starttime="20170728 17:02:59.316"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:59.326" starttime="20170728 17:02:59.324"></status>
</kw>
<msg timestamp="20170728 17:02:59.327" level="INFO">${amount} = 0</msg>
<status status="PASS" endtime="20170728 17:02:59.328" starttime="20170728 17:02:59.322"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:02:59.330" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:02:59.331" starttime="20170728 17:02:59.329"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:59.335" starttime="20170728 17:02:59.334"></status>
</kw>
<msg timestamp="20170728 17:02:59.337" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:02:59.337" starttime="20170728 17:02:59.332"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:59.342" starttime="20170728 17:02:59.340"></status>
</kw>
<msg timestamp="20170728 17:02:59.343" level="INFO">${total_amount} = 50423.0</msg>
<status status="PASS" endtime="20170728 17:02:59.344" starttime="20170728 17:02:59.338"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:59.348" starttime="20170728 17:02:59.347"></status>
</kw>
<msg timestamp="20170728 17:02:59.349" level="INFO">${balance_amount} = 49595.0</msg>
<status status="PASS" endtime="20170728 17:02:59.349" starttime="20170728 17:02:59.345"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:59.355" starttime="20170728 17:02:59.353"></status>
</kw>
<msg timestamp="20170728 17:02:59.356" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:02:59.357" starttime="20170728 17:02:59.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:02:59.361" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:02:59.362" starttime="20170728 17:02:59.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:02:59.365" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:02:59.366" starttime="20170728 17:02:59.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:02:59.369" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:02:59.369" starttime="20170728 17:02:59.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:02:59.372" level="INFO">${amount} = 0</msg>
<status status="PASS" endtime="20170728 17:02:59.372" starttime="20170728 17:02:59.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:02:59.374" level="INFO">${total_amount} = 50423.0</msg>
<status status="PASS" endtime="20170728 17:02:59.376" starttime="20170728 17:02:59.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:02:59.379" level="INFO">${balance_amount} = 49595.0</msg>
<status status="PASS" endtime="20170728 17:02:59.379" starttime="20170728 17:02:59.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:02:59.381" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:02:59.382" starttime="20170728 17:02:59.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:02:59.384" level="INFO">${event_code_after} = 7</msg>
<status status="PASS" endtime="20170728 17:02:59.385" starttime="20170728 17:02:59.383"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:59.386" starttime="20170728 17:02:59.295"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:02:59.389" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:59.390" starttime="20170728 17:02:59.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 17:02:59.393" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 17:02:59.393" starttime="20170728 17:02:59.391"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:02:59.395" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:59.396" starttime="20170728 17:02:59.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170728 17:02:59.398" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170728 17:02:59.398" starttime="20170728 17:02:59.397"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:02:59.402" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:59.404" starttime="20170728 17:02:59.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 17:02:59.406" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 17:02:59.406" starttime="20170728 17:02:59.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 17:02:59.408" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 17:02:59.409" starttime="20170728 17:02:59.407"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:02:59.412" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:59.413" starttime="20170728 17:02:59.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:02:59.417" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:02:59.419" starttime="20170728 17:02:59.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170728 17:02:59.423" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170728 17:02:59.424" starttime="20170728 17:02:59.421"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_unilateral}</var>
</assign>
<msg timestamp="20170728 17:02:59.427" level="INFO">${user_id[0][0]_unilateral} = 7695</msg>
<status status="PASS" endtime="20170728 17:02:59.428" starttime="20170728 17:02:59.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_unilateral}</arg>
</arguments>
<msg timestamp="20170728 17:02:59.430" level="INFO">${user_id[0][0]_unilateral} = 7695</msg>
<status status="PASS" endtime="20170728 17:02:59.431" starttime="20170728 17:02:59.429"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]_unilateral}'</arg>
</arguments>
<msg timestamp="20170728 17:02:59.435" level="INFO">Executing : Execute SQL String  |  delete from account_unilateral_bill where id ='7695' </msg>
<status status="PASS" endtime="20170728 17:02:59.529" starttime="20170728 17:02:59.433"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:59.532" starttime="20170728 17:02:59.166"></status>
</kw>
<kw name="表ajb_account_transaction" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170728 17:02:59.541" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170728 17:02:59.543" starttime="20170728 17:02:59.537"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:02:59.552" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:02:59.569" starttime="20170728 17:02:59.550"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:59.571" starttime="20170728 17:02:59.549"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:59.572" starttime="20170728 17:02:59.546"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>ajb_account_transaction</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:02:59.581" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:02:59.591" starttime="20170728 17:02:59.578"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:59.593" starttime="20170728 17:02:59.577"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:59.594" starttime="20170728 17:02:59.574"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:02:59.596" level="INFO">${current_time} = 2017-07-28 17:02:59.596</msg>
<status status="PASS" endtime="20170728 17:02:59.597" starttime="20170728 17:02:59.595"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>0 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:02:59.600" level="INFO">${current_time_before_30} = 2017-07-28 17:02:59.596</msg>
<status status="PASS" endtime="20170728 17:02:59.601" starttime="20170728 17:02:59.599"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:02:59.604" level="INFO">${current_time_after_30} = 2017-07-28 17:04:39.596</msg>
<status status="PASS" endtime="20170728 17:02:59.605" starttime="20170728 17:02:59.602"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 17:02:59.608" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and update_time between' 2017-07-28 17:02:59.596' and '2017-07-28 17:04:39.596' </msg>
<msg timestamp="20170728 17:02:59.619" level="INFO">${updatetime} = ((88889793, '32102151361501230504', 100000, 6135, 1, '32102151361501230504', '20170728170401BSA051698', Decimal('0.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 28, 17, 4, 4), datetime.datetime(2017, 7...</msg>
<status status="PASS" endtime="20170728 17:02:59.620" starttime="20170728 17:02:59.606"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 17:02:59.623" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 17:02:59.624" starttime="20170728 17:02:59.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 17:02:59.627" level="INFO">ajb_account_transaction表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 17:02:59.628" starttime="20170728 17:02:59.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 17:02:59.631" level="INFO">${current_time_before_30} = 2017-07-28 17:02:59.596</msg>
<status status="PASS" endtime="20170728 17:02:59.632" starttime="20170728 17:02:59.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 17:02:59.637" level="INFO">${current_time_after_30} = 2017-07-28 17:04:39.596</msg>
<status status="PASS" endtime="20170728 17:02:59.639" starttime="20170728 17:02:59.634"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:59.640" starttime="20170728 17:02:59.573"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:02:59.643" level="INFO">Executing : Query  |  select * from ajb_account_transaction where account_id ='6135' and update_time between' 2017-07-28 17:02:59.596' and '2017-07-28 17:04:39.596' </msg>
<msg timestamp="20170728 17:02:59.656" level="INFO">${user_id} = ((88889793, '32102151361501230504', 100000, 6135, 1, '32102151361501230504', '20170728170401BSA051698', Decimal('0.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 28, 17, 4, 4), datetime.datetime(2017, 7...</msg>
<status status="PASS" endtime="20170728 17:02:59.657" starttime="20170728 17:02:59.641"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 17:02:59.660" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:02:59.661" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:02:59.661" starttime="20170728 17:02:59.658"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:02:59.663" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:59.664" starttime="20170728 17:02:59.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:02:59.667" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:02:59.668" starttime="20170728 17:02:59.665"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:59.672" starttime="20170728 17:02:59.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:02:59.673" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:02:59.675" starttime="20170728 17:02:59.673"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:02:59.678" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:59.678" starttime="20170728 17:02:59.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no的值正确</arg>
</arguments>
<msg timestamp="20170728 17:02:59.680" level="INFO">channel_no的值正确</msg>
<status status="PASS" endtime="20170728 17:02:59.681" starttime="20170728 17:02:59.679"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${args11}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${orderNum}</arg>
</arguments>
<assign>
<var>${bill_order_num}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:59.685" starttime="20170728 17:02:59.683"></status>
</kw>
<msg timestamp="20170728 17:02:59.687" level="INFO">${bill_order_num} = 32102151361501230504</msg>
<status status="PASS" endtime="20170728 17:02:59.688" starttime="20170728 17:02:59.682"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>${bill_order_num}</arg>
</arguments>
<msg timestamp="20170728 17:02:59.691" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:59.693" starttime="20170728 17:02:59.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170728 17:02:59.695" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170728 17:02:59.695" starttime="20170728 17:02:59.694"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>7</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:59.702" starttime="20170728 17:02:59.701"></status>
</kw>
<msg timestamp="20170728 17:02:59.703" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:02:59.704" starttime="20170728 17:02:59.697"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:02:59.706" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:02:59.706" starttime="20170728 17:02:59.705"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:59.711" starttime="20170728 17:02:59.709"></status>
</kw>
<msg timestamp="20170728 17:02:59.711" level="INFO">${event_code_after} = 7</msg>
<status status="PASS" endtime="20170728 17:02:59.712" starttime="20170728 17:02:59.707"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:02:59.714" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:02:59.714" starttime="20170728 17:02:59.713"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:59.719" starttime="20170728 17:02:59.718"></status>
</kw>
<msg timestamp="20170728 17:02:59.720" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:02:59.721" starttime="20170728 17:02:59.715"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:59.725" starttime="20170728 17:02:59.723"></status>
</kw>
<msg timestamp="20170728 17:02:59.727" level="INFO">${amount} = 0</msg>
<status status="PASS" endtime="20170728 17:02:59.728" starttime="20170728 17:02:59.722"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:02:59.731" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:02:59.732" starttime="20170728 17:02:59.729"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:59.737" starttime="20170728 17:02:59.735"></status>
</kw>
<msg timestamp="20170728 17:02:59.738" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:02:59.739" starttime="20170728 17:02:59.733"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:59.745" starttime="20170728 17:02:59.742"></status>
</kw>
<msg timestamp="20170728 17:02:59.746" level="INFO">${total_amount} = 50423.0</msg>
<status status="PASS" endtime="20170728 17:02:59.747" starttime="20170728 17:02:59.740"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:59.752" starttime="20170728 17:02:59.751"></status>
</kw>
<msg timestamp="20170728 17:02:59.753" level="INFO">${balance_amount} = 49595.0</msg>
<status status="PASS" endtime="20170728 17:02:59.753" starttime="20170728 17:02:59.748"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:59.757" starttime="20170728 17:02:59.756"></status>
</kw>
<msg timestamp="20170728 17:02:59.759" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:02:59.760" starttime="20170728 17:02:59.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:02:59.763" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:02:59.763" starttime="20170728 17:02:59.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:02:59.765" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:02:59.766" starttime="20170728 17:02:59.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:02:59.768" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:02:59.769" starttime="20170728 17:02:59.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:02:59.771" level="INFO">${amount} = 0</msg>
<status status="PASS" endtime="20170728 17:02:59.772" starttime="20170728 17:02:59.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:02:59.773" level="INFO">${total_amount} = 50423.0</msg>
<status status="PASS" endtime="20170728 17:02:59.774" starttime="20170728 17:02:59.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:02:59.779" level="INFO">${balance_amount} = 49595.0</msg>
<status status="PASS" endtime="20170728 17:02:59.780" starttime="20170728 17:02:59.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:02:59.782" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:02:59.782" starttime="20170728 17:02:59.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:02:59.784" level="INFO">${event_code_after} = 7</msg>
<status status="PASS" endtime="20170728 17:02:59.785" starttime="20170728 17:02:59.783"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:59.785" starttime="20170728 17:02:59.696"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170728 17:02:59.789" level="INFO">${pay_no_after} = 20170728170401BSA051698</msg>
<status status="PASS" endtime="20170728 17:02:59.790" starttime="20170728 17:02:59.786"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170728 17:02:59.793" level="INFO">Length is 23</msg>
<msg timestamp="20170728 17:02:59.794" level="INFO">${pay_no_after_length} = 23</msg>
<status status="PASS" endtime="20170728 17:02:59.794" starttime="20170728 17:02:59.791"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:02:59.796" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:59.797" starttime="20170728 17:02:59.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170728 17:02:59.799" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170728 17:02:59.799" starttime="20170728 17:02:59.798"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:02:59.801" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:59.802" starttime="20170728 17:02:59.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 17:02:59.804" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 17:02:59.804" starttime="20170728 17:02:59.803"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:02:59.808" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:59.809" starttime="20170728 17:02:59.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 17:02:59.812" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 17:02:59.812" starttime="20170728 17:02:59.810"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][9]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:02:59.814" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:59.815" starttime="20170728 17:02:59.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 17:02:59.817" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 17:02:59.818" starttime="20170728 17:02:59.816"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 17:02:59.819" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:59.820" starttime="20170728 17:02:59.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170728 17:02:59.822" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170728 17:02:59.823" starttime="20170728 17:02:59.821"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:02:59.827" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:02:59.828" starttime="20170728 17:02:59.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:02:59.831" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:02:59.832" starttime="20170728 17:02:59.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 17:02:59.834" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 17:02:59.835" starttime="20170728 17:02:59.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170728 17:02:59.838" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170728 17:02:59.839" starttime="20170728 17:02:59.837"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170728 17:02:59.841" level="INFO">${user_id[0][0]_transaction} = 88889793</msg>
<status status="PASS" endtime="20170728 17:02:59.842" starttime="20170728 17:02:59.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170728 17:02:59.845" level="INFO">${user_id[0][0]_transaction} = 88889793</msg>
<status status="PASS" endtime="20170728 17:02:59.846" starttime="20170728 17:02:59.844"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id[0][0]}'</arg>
</arguments>
<assign>
<var>${user_id_unilateral_delete1}</var>
</assign>
<msg timestamp="20170728 17:02:59.848" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88889793' </msg>
<msg timestamp="20170728 17:02:59.923" level="INFO">${user_id_unilateral_delete1} = None</msg>
<status status="PASS" endtime="20170728 17:02:59.926" starttime="20170728 17:02:59.846"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:59.930" starttime="20170728 17:02:59.534"></status>
</kw>
<kw name="表account_amount的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_amount</arg>
</arguments>
<msg timestamp="20170728 17:02:59.940" level="INFO">现在开始校验表account_amount</msg>
<status status="PASS" endtime="20170728 17:02:59.940" starttime="20170728 17:02:59.938"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:02:59.944" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:02:59.959" starttime="20170728 17:02:59.943"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:59.961" starttime="20170728 17:02:59.942"></status>
</kw>
<status status="PASS" endtime="20170728 17:02:59.962" starttime="20170728 17:02:59.941"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time1}</var>
</assign>
<msg timestamp="20170728 17:02:59.965" level="INFO">${current_time1} = 2017-07-28 17:02:59.964</msg>
<status status="PASS" endtime="20170728 17:02:59.965" starttime="20170728 17:02:59.963"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_before_30}</var>
</assign>
<msg timestamp="20170728 17:02:59.969" level="INFO">${current_time1_before_30} = 2017-07-28 17:01:59.964</msg>
<status status="PASS" endtime="20170728 17:02:59.969" starttime="20170728 17:02:59.967"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_after_30}</var>
</assign>
<msg timestamp="20170728 17:02:59.971" level="INFO">${current_time1_after_30} = 2017-07-28 17:03:59.964</msg>
<status status="PASS" endtime="20170728 17:02:59.972" starttime="20170728 17:02:59.970"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:02:59.974" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 17:02:59.980" level="INFO">${user_id} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 4), 0),)</msg>
<status status="PASS" endtime="20170728 17:02:59.981" starttime="20170728 17:02:59.973"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>7</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:59.988" starttime="20170728 17:02:59.987"></status>
</kw>
<msg timestamp="20170728 17:02:59.989" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:02:59.990" starttime="20170728 17:02:59.984"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:02:59.994" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:02:59.995" starttime="20170728 17:02:59.992"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:02:59.998" starttime="20170728 17:02:59.997"></status>
</kw>
<msg timestamp="20170728 17:02:59.999" level="INFO">${event_code_after} = 7</msg>
<status status="PASS" endtime="20170728 17:02:59.999" starttime="20170728 17:02:59.995"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:03:00.001" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:00.001" starttime="20170728 17:03:00.000"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:00.005" starttime="20170728 17:03:00.004"></status>
</kw>
<msg timestamp="20170728 17:03:00.006" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:03:00.006" starttime="20170728 17:03:00.002"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:00.011" starttime="20170728 17:03:00.009"></status>
</kw>
<msg timestamp="20170728 17:03:00.013" level="INFO">${amount} = 0</msg>
<status status="PASS" endtime="20170728 17:03:00.014" starttime="20170728 17:03:00.007"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:03:00.016" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:03:00.017" starttime="20170728 17:03:00.015"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:00.020" starttime="20170728 17:03:00.019"></status>
</kw>
<msg timestamp="20170728 17:03:00.021" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:00.021" starttime="20170728 17:03:00.018"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:00.027" starttime="20170728 17:03:00.024"></status>
</kw>
<msg timestamp="20170728 17:03:00.028" level="INFO">${total_amount} = 50423.0</msg>
<status status="PASS" endtime="20170728 17:03:00.029" starttime="20170728 17:03:00.022"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:00.035" starttime="20170728 17:03:00.033"></status>
</kw>
<msg timestamp="20170728 17:03:00.036" level="INFO">${balance_amount} = 49595.0</msg>
<status status="PASS" endtime="20170728 17:03:00.037" starttime="20170728 17:03:00.030"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:00.043" starttime="20170728 17:03:00.041"></status>
</kw>
<msg timestamp="20170728 17:03:00.044" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:00.045" starttime="20170728 17:03:00.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:00.047" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:03:00.047" starttime="20170728 17:03:00.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:00.049" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:03:00.050" starttime="20170728 17:03:00.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:00.052" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:00.052" starttime="20170728 17:03:00.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:00.054" level="INFO">${amount} = 0</msg>
<status status="PASS" endtime="20170728 17:03:00.055" starttime="20170728 17:03:00.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:00.058" level="INFO">${total_amount} = 50423.0</msg>
<status status="PASS" endtime="20170728 17:03:00.060" starttime="20170728 17:03:00.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:00.062" level="INFO">${balance_amount} = 49595.0</msg>
<status status="PASS" endtime="20170728 17:03:00.063" starttime="20170728 17:03:00.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:00.065" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:00.065" starttime="20170728 17:03:00.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:00.068" level="INFO">${event_code_after} = 7</msg>
<status status="PASS" endtime="20170728 17:03:00.068" starttime="20170728 17:03:00.066"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:00.069" starttime="20170728 17:02:59.982"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:00.073" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:00.074" starttime="20170728 17:03:00.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:00.078" level="INFO">total_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:00.078" starttime="20170728 17:03:00.076"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:00.080" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:00.081" starttime="20170728 17:03:00.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:00.083" level="INFO">balance_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:00.084" starttime="20170728 17:03:00.082"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:00.086" starttime="20170728 17:03:00.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:00.089" level="INFO">frozen_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:00.091" starttime="20170728 17:03:00.087"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:00.094" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:00.095" starttime="20170728 17:03:00.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:00.096" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:00.097" starttime="20170728 17:03:00.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:00.099" level="INFO">表account_amount校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:00.100" starttime="20170728 17:03:00.098"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:00.102" starttime="20170728 17:02:59.934"></status>
</kw>
<kw name="艾佳币恢复数目" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:00.110" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:00.119" starttime="20170728 17:03:00.109"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:00.120" starttime="20170728 17:03:00.106"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:00.121" starttime="20170728 17:03:00.104"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount \ SET total_amount=${database[0][2]},balance_amount=${database[0][3]},frozen_amount=${database[0][4]}where account_id="${account_id}";</arg>
</arguments>
<msg timestamp="20170728 17:03:00.124" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount  SET total_amount=50423.00,balance_amount=49595.00,frozen_amount=828.00where account_id="6135"; </msg>
<status status="PASS" endtime="20170728 17:03:00.131" starttime="20170728 17:03:00.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170728 17:03:00.134" level="INFO">成功</msg>
<status status="PASS" endtime="20170728 17:03:00.135" starttime="20170728 17:03:00.132"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:00.136" starttime="20170728 17:03:00.103"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:00.137" critical="yes" starttime="20170728 17:02:58.795"></status>
</test>
<test id="s1-s1-s1-t3" name="输入未有的user_id和正确的amount参数">
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>123456785</arg>
<arg>1</arg>
<arg>2</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:03:00.147" level="INFO">${args11} = 123456785</msg>
<status status="PASS" endtime="20170728 17:03:00.147" starttime="20170728 17:03:00.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:03:00.149" level="INFO">${args22} = 1</msg>
<status status="PASS" endtime="20170728 17:03:00.150" starttime="20170728 17:03:00.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 17:03:00.152" level="INFO">${args33} = 2</msg>
<status status="PASS" endtime="20170728 17:03:00.152" starttime="20170728 17:03:00.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 17:03:00.156" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 17:03:00.157" starttime="20170728 17:03:00.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 17:03:00.161" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</msg>
<status status="PASS" endtime="20170728 17:03:00.162" starttime="20170728 17:03:00.159"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:00.164" starttime="20170728 17:03:00.144"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:00.171" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:00.179" starttime="20170728 17:03:00.169"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:00.180" starttime="20170728 17:03:00.167"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:00.181" starttime="20170728 17:03:00.166"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id ='${args11}'</arg>
</arguments>
<assign>
<var>${no_user_id}</var>
</assign>
<msg timestamp="20170728 17:03:00.184" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id ='123456785' </msg>
<msg timestamp="20170728 17:03:00.192" level="INFO">${no_user_id} = ()</msg>
<status status="PASS" endtime="20170728 17:03:00.193" starttime="20170728 17:03:00.182"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${no_user_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:00.197" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170728 17:03:00.198" starttime="20170728 17:03:00.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>此user_id不存在</arg>
</arguments>
<msg timestamp="20170728 17:03:00.200" level="INFO">此user_id不存在</msg>
<status status="PASS" endtime="20170728 17:03:00.201" starttime="20170728 17:03:00.199"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 17:03:00.203" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</msg>
<status status="PASS" endtime="20170728 17:03:00.203" starttime="20170728 17:03:00.201"></status>
</kw>
<kw name="Data" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data_no_user_id}</var>
</assign>
<msg timestamp="20170728 17:03:00.281" level="INFO">${data_no_user_id} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:00.282" starttime="20170728 17:03:00.204"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data_no_user_id.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 17:03:00.285" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:00.287" starttime="20170728 17:03:00.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 17:03:00.293" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 17:03:00.294" starttime="20170728 17:03:00.290"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data_no_user_id.text}</arg>
</arguments>
<assign>
<var>${toJson1}</var>
</assign>
<msg timestamp="20170728 17:03:00.298" level="INFO">To JSON using : content={"data":{"orderNum":"32102151361501230510"},"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 17:03:00.299" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 17:03:00.300" level="INFO">${toJson1} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': {u'orderNum': u'32102151361501230510'}, u'success': True}</msg>
<status status="PASS" endtime="20170728 17:03:00.301" starttime="20170728 17:03:00.296"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson1['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 17:03:00.306" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:00.308" starttime="20170728 17:03:00.304"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson1['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:00.314" starttime="20170728 17:03:00.311"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${toJson1['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${no_user_id_orderNum}</var>
</assign>
<msg timestamp="20170728 17:03:00.319" level="INFO">${no_user_id_orderNum} = 32102151361501230510</msg>
<status status="PASS" endtime="20170728 17:03:00.320" starttime="20170728 17:03:00.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:00.323" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:00.324" starttime="20170728 17:03:00.321"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id ='${args11}'</arg>
</arguments>
<assign>
<var>${no_user_id_after}</var>
</assign>
<msg timestamp="20170728 17:03:00.329" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id ='123456785' </msg>
<msg timestamp="20170728 17:03:00.338" level="INFO">${no_user_id_after} = ((100000000072L, '32102151361501230509', 123456785, 6338, 1, 2, 0, datetime.datetime(2017, 7, 28, 17, 4, 5), datetime.datetime(2017, 7, 28, 17, 4, 5)),)</msg>
<status status="PASS" endtime="20170728 17:03:00.340" starttime="20170728 17:03:00.327"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${no_user_id_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:00.344" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 17:03:00.345" starttime="20170728 17:03:00.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>调用艾佳币充值接口自动生成boss的账号</arg>
</arguments>
<msg timestamp="20170728 17:03:00.348" level="INFO">调用艾佳币充值接口自动生成boss的账号</msg>
<status status="PASS" endtime="20170728 17:03:00.349" starttime="20170728 17:03:00.347"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${no_user_id_after[0][3]}</arg>
</arguments>
<assign>
<var>${no_user_id_account_id}</var>
</assign>
<msg timestamp="20170728 17:03:00.353" level="INFO">${no_user_id_account_id} = 6338</msg>
<status status="PASS" endtime="20170728 17:03:00.354" starttime="20170728 17:03:00.351"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_open_record where user_id ='${args11}'</arg>
</arguments>
<msg timestamp="20170728 17:03:00.356" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_open_record where user_id ='123456785' </msg>
<status status="PASS" endtime="20170728 17:03:00.453" starttime="20170728 17:03:00.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>已删除该账号！</arg>
</arguments>
<msg timestamp="20170728 17:03:00.461" level="INFO">已删除该账号！</msg>
<status status="PASS" endtime="20170728 17:03:00.464" starttime="20170728 17:03:00.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_unilateral_bill</arg>
</arguments>
<msg timestamp="20170728 17:03:00.471" level="INFO">现在开始校验表account_unilateral_bill</msg>
<status status="PASS" endtime="20170728 17:03:00.478" starttime="20170728 17:03:00.467"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time_no}</var>
</assign>
<msg timestamp="20170728 17:03:00.482" level="INFO">${current_time_no} = 2017-07-28 17:03:00.482</msg>
<status status="PASS" endtime="20170728 17:03:00.483" starttime="20170728 17:03:00.480"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_no}</arg>
<arg>5 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_301}</var>
</assign>
<msg timestamp="20170728 17:03:00.487" level="INFO">${current_time_before_301} = 2017-07-28 17:02:55.482</msg>
<status status="PASS" endtime="20170728 17:03:00.489" starttime="20170728 17:03:00.485"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_no}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_302}</var>
</assign>
<msg timestamp="20170728 17:03:00.494" level="INFO">${current_time_after_302} = 2017-07-28 17:04:40.482</msg>
<status status="PASS" endtime="20170728 17:03:00.495" starttime="20170728 17:03:00.492"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${no_user_id_account_id}'and update_time between' ${current_time_before_301}' and '${current_time_after_302}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:00.498" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6338'and update_time between' 2017-07-28 17:02:55.482' and '2017-07-28 17:04:40.482' </msg>
<msg timestamp="20170728 17:03:00.503" level="INFO">${user_id} = ((7698, '32102151361501230514', 123456785, 6338, '32102151361501230511', 1, 7, 3, Decimal('1.00'), None, datetime.datetime(2017, 7, 28, 17, 4, 5), datetime.datetime(2017, 7, 28, 17, 4, 5), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:00.504" starttime="20170728 17:03:00.496"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:00.510" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:00.512" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:00.513" starttime="20170728 17:03:00.506"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:00.516" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:00.517" starttime="20170728 17:03:00.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:00.519" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:00.520" starttime="20170728 17:03:00.518"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:03:00.526" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:00.527" starttime="20170728 17:03:00.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:03:00.530" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:03:00.531" starttime="20170728 17:03:00.529"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:00.535" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:00.536" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:00.536" starttime="20170728 17:03:00.533"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:00.540" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:00.542" starttime="20170728 17:03:00.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:00.546" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:00.547" starttime="20170728 17:03:00.544"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:03:00.549" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:00.550" starttime="20170728 17:03:00.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 17:03:00.554" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 17:03:00.555" starttime="20170728 17:03:00.552"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>7</arg>
</arguments>
<msg timestamp="20170728 17:03:00.560" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:00.561" starttime="20170728 17:03:00.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:00.564" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 17:03:00.565" starttime="20170728 17:03:00.563"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20170728 17:03:00.567" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:00.568" starttime="20170728 17:03:00.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:00.571" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170728 17:03:00.572" starttime="20170728 17:03:00.569"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:03:00.577" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:00.579" starttime="20170728 17:03:00.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:00.581" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 17:03:00.583" starttime="20170728 17:03:00.580"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${user_id[0][10]}</arg>
<arg>${user_id[0][11]}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:00.587" starttime="20170728 17:03:00.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 17:03:00.590" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 17:03:00.592" starttime="20170728 17:03:00.589"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:00.595" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:00.596" starttime="20170728 17:03:00.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:00.598" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:00.599" starttime="20170728 17:03:00.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:00.602" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170728 17:03:00.604" starttime="20170728 17:03:00.601"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_unilateral}</var>
</assign>
<msg timestamp="20170728 17:03:00.608" level="INFO">${user_id[0][0]_unilateral} = 7698</msg>
<status status="PASS" endtime="20170728 17:03:00.610" starttime="20170728 17:03:00.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_unilateral}</arg>
</arguments>
<msg timestamp="20170728 17:03:00.613" level="INFO">${user_id[0][0]_unilateral} = 7698</msg>
<status status="PASS" endtime="20170728 17:03:00.613" starttime="20170728 17:03:00.611"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]_unilateral}'</arg>
</arguments>
<msg timestamp="20170728 17:03:00.617" level="INFO">Executing : Execute SQL String  |  delete from account_unilateral_bill where id ='7698' </msg>
<status status="PASS" endtime="20170728 17:03:00.677" starttime="20170728 17:03:00.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170728 17:03:00.680" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170728 17:03:00.681" starttime="20170728 17:03:00.679"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time_nouser}</var>
</assign>
<msg timestamp="20170728 17:03:00.683" level="INFO">${current_time_nouser} = 2017-07-28 17:03:00.683</msg>
<status status="PASS" endtime="20170728 17:03:00.684" starttime="20170728 17:03:00.682"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_nouser}</arg>
<arg>5 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_3011}</var>
</assign>
<msg timestamp="20170728 17:03:00.686" level="INFO">${current_time_before_3011} = 2017-07-28 17:02:55.683</msg>
<status status="PASS" endtime="20170728 17:03:00.687" starttime="20170728 17:03:00.685"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_nouser}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_3022}</var>
</assign>
<msg timestamp="20170728 17:03:00.690" level="INFO">${current_time_after_3022} = 2017-07-28 17:04:40.683</msg>
<status status="PASS" endtime="20170728 17:03:00.691" starttime="20170728 17:03:00.688"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where account_id ='${no_user_id_account_id}' and update_time between' ${current_time_before_3011}' and '${current_time_after_3022}'</arg>
</arguments>
<assign>
<var>${user_id_no}</var>
</assign>
<msg timestamp="20170728 17:03:00.695" level="INFO">Executing : Query  |  select * from ajb_account_transaction where account_id ='6338' and update_time between' 2017-07-28 17:02:55.683' and '2017-07-28 17:04:40.683' </msg>
<msg timestamp="20170728 17:03:00.705" level="INFO">${user_id_no} = ((88889794, '32102151361501230510', 123456785, 6338, 1, '32102151361501230510', '20170728170402NYF051699', Decimal('1.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 28, 17, 4, 5), datetime.datetime(2017...</msg>
<status status="PASS" endtime="20170728 17:03:00.706" starttime="20170728 17:03:00.693"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id_no[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:00.708" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:00.709" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:00.709" starttime="20170728 17:03:00.707"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:00.712" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:00.713" starttime="20170728 17:03:00.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:00.716" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:00.716" starttime="20170728 17:03:00.715"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][2]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:03:00.718" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:00.719" starttime="20170728 17:03:00.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:03:00.721" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:03:00.722" starttime="20170728 17:03:00.720"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][4]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:03:00.723" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:00.725" starttime="20170728 17:03:00.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no的值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:00.727" level="INFO">channel_no的值正确</msg>
<status status="PASS" endtime="20170728 17:03:00.729" starttime="20170728 17:03:00.726"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][5]}</arg>
<arg>${no_user_id_orderNum}</arg>
</arguments>
<msg timestamp="20170728 17:03:00.732" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:00.733" starttime="20170728 17:03:00.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170728 17:03:00.736" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170728 17:03:00.736" starttime="20170728 17:03:00.734"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id_no[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170728 17:03:00.739" level="INFO">${pay_no_after} = 20170728170402NYF051699</msg>
<status status="PASS" endtime="20170728 17:03:00.741" starttime="20170728 17:03:00.737"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170728 17:03:00.744" level="INFO">Length is 23</msg>
<msg timestamp="20170728 17:03:00.744" level="INFO">${pay_no_after_length} = 23</msg>
<status status="PASS" endtime="20170728 17:03:00.745" starttime="20170728 17:03:00.743"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>23</arg>
</arguments>
<msg timestamp="20170728 17:03:00.747" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:00.747" starttime="20170728 17:03:00.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170728 17:03:00.749" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170728 17:03:00.750" starttime="20170728 17:03:00.748"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][7]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:03:00.751" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:00.752" starttime="20170728 17:03:00.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:00.754" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 17:03:00.755" starttime="20170728 17:03:00.753"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:03:00.758" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:00.759" starttime="20170728 17:03:00.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 17:03:00.762" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 17:03:00.763" starttime="20170728 17:03:00.761"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][9]}</arg>
<arg>7</arg>
</arguments>
<msg timestamp="20170728 17:03:00.765" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:00.765" starttime="20170728 17:03:00.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:00.767" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 17:03:00.768" starttime="20170728 17:03:00.766"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 17:03:00.770" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:00.770" starttime="20170728 17:03:00.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170728 17:03:00.772" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170728 17:03:00.773" starttime="20170728 17:03:00.771"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:00.776" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:00.777" starttime="20170728 17:03:00.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:00.779" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:00.779" starttime="20170728 17:03:00.778"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${user_id_no[0][12]}</arg>
<arg>${user_id_no[0][13]}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:00.782" starttime="20170728 17:03:00.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 17:03:00.784" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 17:03:00.784" starttime="20170728 17:03:00.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:00.788" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170728 17:03:00.790" starttime="20170728 17:03:00.786"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id_no[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170728 17:03:00.793" level="INFO">${user_id[0][0]_transaction} = 88889794</msg>
<status status="PASS" endtime="20170728 17:03:00.794" starttime="20170728 17:03:00.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170728 17:03:00.796" level="INFO">${user_id[0][0]_transaction} = 88889794</msg>
<status status="PASS" endtime="20170728 17:03:00.797" starttime="20170728 17:03:00.795"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id_no[0][0]}'</arg>
</arguments>
<msg timestamp="20170728 17:03:00.799" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88889794' </msg>
<status status="PASS" endtime="20170728 17:03:00.861" starttime="20170728 17:03:00.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_amount</arg>
</arguments>
<msg timestamp="20170728 17:03:00.863" level="INFO">现在开始校验表account_amount</msg>
<status status="PASS" endtime="20170728 17:03:00.864" starttime="20170728 17:03:00.862"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${no_user_id_account_id}'</arg>
</arguments>
<assign>
<var>${user_id_t}</var>
</assign>
<msg timestamp="20170728 17:03:00.866" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6338' </msg>
<msg timestamp="20170728 17:03:00.871" level="INFO">${user_id_t} = ((12652, 6338, Decimal('1.00'), Decimal('1.00'), Decimal('0.00'), datetime.datetime(2017, 7, 28, 17, 4, 5), datetime.datetime(2017, 7, 28, 17, 4, 5), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:00.872" starttime="20170728 17:03:00.865"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][2]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:03:00.874" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:00.875" starttime="20170728 17:03:00.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:00.877" level="INFO">total_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:00.878" starttime="20170728 17:03:00.876"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][3]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:03:00.880" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:00.880" starttime="20170728 17:03:00.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:00.882" level="INFO">balance_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:00.883" starttime="20170728 17:03:00.881"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][4]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:00.885" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:00.886" starttime="20170728 17:03:00.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:00.889" level="INFO">frozen_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:00.890" starttime="20170728 17:03:00.888"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:00.892" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:00.893" starttime="20170728 17:03:00.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:00.894" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:00.895" starttime="20170728 17:03:00.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:00.897" level="INFO">表account_amount校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:00.897" starttime="20170728 17:03:00.896"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_amount where account_id ='${no_user_id_account_id}'</arg>
</arguments>
<msg timestamp="20170728 17:03:00.900" level="INFO">Executing : Execute SQL String  |  delete from account_amount where account_id ='6338' </msg>
<status status="PASS" endtime="20170728 17:03:00.927" starttime="20170728 17:03:00.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>输入未有的user_id和正确的amount参数，会直接生成boss账户，然后表里的数据都入库成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:00.931" level="INFO">输入未有的user_id和正确的amount参数，会直接生成boss账户，然后表里的数据都入库成功！</msg>
<status status="PASS" endtime="20170728 17:03:00.931" starttime="20170728 17:03:00.929"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:00.932" critical="yes" starttime="20170728 17:03:00.139"></status>
</test>
<test id="s1-s1-s1-t4" name="输入已有的userId和amount为字符时">
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>100000</arg>
<arg>str</arg>
<arg>2</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:03:00.941" level="INFO">${args11} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:00.942" starttime="20170728 17:03:00.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:03:00.944" level="INFO">${args22} = str</msg>
<status status="PASS" endtime="20170728 17:03:00.944" starttime="20170728 17:03:00.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 17:03:00.947" level="INFO">${args33} = 2</msg>
<status status="PASS" endtime="20170728 17:03:00.948" starttime="20170728 17:03:00.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 17:03:00.951" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 17:03:00.953" starttime="20170728 17:03:00.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 17:03:00.955" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</msg>
<status status="PASS" endtime="20170728 17:03:00.956" starttime="20170728 17:03:00.954"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:00.957" starttime="20170728 17:03:00.937"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 17:03:00.963" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</msg>
<status status="PASS" endtime="20170728 17:03:00.964" starttime="20170728 17:03:00.962"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 17:03:00.966" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:00.967" starttime="20170728 17:03:00.965"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:00.970" starttime="20170728 17:03:00.969"></status>
</kw>
<msg timestamp="20170728 17:03:00.970" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:03:00.971" starttime="20170728 17:03:00.967"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>user_id</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:00.977" starttime="20170728 17:03:00.975"></status>
</kw>
<msg timestamp="20170728 17:03:00.978" level="INFO">${args11_after} = user_id</msg>
<status status="PASS" endtime="20170728 17:03:00.979" starttime="20170728 17:03:00.973"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:00.983" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:00.993" starttime="20170728 17:03:00.982"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:00.994" starttime="20170728 17:03:00.981"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:00.996" starttime="20170728 17:03:00.980"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 17:03:00.998" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and channel_no='1' </msg>
<msg timestamp="20170728 17:03:01.018" level="INFO">${database1} = ((9100, '32102151361499943857', 100000, 6135, 1, '32102151361499943857', '20170714000118SSP038852', Decimal('2.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, ...</msg>
<status status="PASS" endtime="20170728 17:03:01.019" starttime="20170728 17:03:00.997"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 17:03:01.021" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 17:03:01.027" level="INFO">${database} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 4), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:01.028" starttime="20170728 17:03:01.020"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 17:03:01.030" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:01.031" starttime="20170728 17:03:01.029"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 17:03:01.033" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 17:03:01.033" starttime="20170728 17:03:01.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:01.037" level="INFO">获得account_id值为：6135</msg>
<status status="PASS" endtime="20170728 17:03:01.038" starttime="20170728 17:03:01.035"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:01.042" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:01.044" starttime="20170728 17:03:01.040"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:01.046" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:01.046" starttime="20170728 17:03:01.045"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:01.048" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:01.049" starttime="20170728 17:03:01.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:01.051" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 17:03:01.052" starttime="20170728 17:03:01.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 17:03:01.055" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:01.056" starttime="20170728 17:03:01.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:01.060" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:01.061" starttime="20170728 17:03:01.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:01.063" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:01.063" starttime="20170728 17:03:01.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:01.065" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:01.066" starttime="20170728 17:03:01.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:01.068" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:03:01.068" starttime="20170728 17:03:01.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 17:03:01.070" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:01.071" starttime="20170728 17:03:01.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 17:03:01.075" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</msg>
<status status="PASS" endtime="20170728 17:03:01.076" starttime="20170728 17:03:01.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170728 17:03:01.078" level="INFO">${database} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 4), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:01.079" starttime="20170728 17:03:01.077"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:01.080" starttime="20170728 17:03:00.959"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Data" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:01.096" starttime="20170728 17:03:01.085"></status>
</kw>
<msg timestamp="20170728 17:03:01.097" level="INFO">${data} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:01.098" starttime="20170728 17:03:01.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 17:03:01.102" level="INFO">${data} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:01.103" starttime="20170728 17:03:01.100"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:01.105" starttime="20170728 17:03:01.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:01.107" level="INFO">400</msg>
<status status="PASS" endtime="20170728 17:03:01.108" starttime="20170728 17:03:01.106"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20170728 17:03:01.110" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:01.111" starttime="20170728 17:03:01.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>400由于语法格式有误，服务器无法理解此请求。</arg>
</arguments>
<msg timestamp="20170728 17:03:01.113" level="INFO">400由于语法格式有误，服务器无法理解此请求。</msg>
<status status="PASS" endtime="20170728 17:03:01.114" starttime="20170728 17:03:01.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 17:03:01.115" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 17:03:01.117" starttime="20170728 17:03:01.114"></status>
</kw>
<kw name="amount和表里的校验" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:01.122" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:01.131" starttime="20170728 17:03:01.121"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:01.132" starttime="20170728 17:03:01.120"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:01.133" starttime="20170728 17:03:01.119"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:01.136" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 17:03:01.142" level="INFO">${user_id} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 4), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:01.143" starttime="20170728 17:03:01.134"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:01.147" starttime="20170728 17:03:01.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 17:03:01.149" level="INFO">total_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 17:03:01.150" starttime="20170728 17:03:01.148"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:01.152" starttime="20170728 17:03:01.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 17:03:01.153" level="INFO">balance_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 17:03:01.154" starttime="20170728 17:03:01.153"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:01.156" starttime="20170728 17:03:01.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 17:03:01.159" level="INFO">frozen_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 17:03:01.159" starttime="20170728 17:03:01.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amounts的数据没有变化正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:01.161" level="INFO">amounts的数据没有变化正确的</msg>
<status status="PASS" endtime="20170728 17:03:01.162" starttime="20170728 17:03:01.160"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:01.166" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:01.168" starttime="20170728 17:03:01.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount内容没有发生变化</arg>
</arguments>
<msg timestamp="20170728 17:03:01.171" level="INFO">表account_amount内容没有发生变化</msg>
<status status="PASS" endtime="20170728 17:03:01.171" starttime="20170728 17:03:01.170"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:03:01.173" level="INFO">${current_time} = 2017-07-28 17:03:01.173</msg>
<status status="PASS" endtime="20170728 17:03:01.174" starttime="20170728 17:03:01.172"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:01.177" level="INFO">${current_time_before_30} = 2017-07-28 17:02:01.173</msg>
<status status="PASS" endtime="20170728 17:03:01.178" starttime="20170728 17:03:01.175"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:01.183" level="INFO">${current_time_after_30} = 2017-07-28 17:04:06.173</msg>
<status status="PASS" endtime="20170728 17:03:01.185" starttime="20170728 17:03:01.181"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${bill_check}</var>
</assign>
<msg timestamp="20170728 17:03:01.187" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6135' and update_time between' 2017-07-28 17:02:01.173' and '2017-07-28 17:04:06.173' </msg>
<msg timestamp="20170728 17:03:01.194" level="INFO">${bill_check} = ()</msg>
<status status="PASS" endtime="20170728 17:03:01.195" starttime="20170728 17:03:01.186"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${bill_check}</arg>
</arguments>
<assign>
<var>${bill_check_length}</var>
</assign>
<msg timestamp="20170728 17:03:01.197" level="INFO">Length is 0</msg>
<msg timestamp="20170728 17:03:01.198" level="INFO">${bill_check_length} = 0</msg>
<status status="PASS" endtime="20170728 17:03:01.198" starttime="20170728 17:03:01.196"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${bill_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:01.201" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:01.202" starttime="20170728 17:03:01.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>account_unilateral_bill里的没有相关数据</arg>
</arguments>
<msg timestamp="20170728 17:03:01.204" level="INFO">account_unilateral_bill里的没有相关数据</msg>
<status status="PASS" endtime="20170728 17:03:01.204" starttime="20170728 17:03:01.203"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num ='${args11}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${transaction_check}</var>
</assign>
<msg timestamp="20170728 17:03:01.206" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num ='100000' and update_time between' 2017-07-28 17:02:01.173' and '2017-07-28 17:04:06.173' </msg>
<msg timestamp="20170728 17:03:01.218" level="INFO">${transaction_check} = ()</msg>
<status status="PASS" endtime="20170728 17:03:01.219" starttime="20170728 17:03:01.205"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${transaction_check}</arg>
</arguments>
<assign>
<var>${transaction_check_length}</var>
</assign>
<msg timestamp="20170728 17:03:01.221" level="INFO">Length is 0</msg>
<msg timestamp="20170728 17:03:01.222" level="INFO">${transaction_check_length} = 0</msg>
<status status="PASS" endtime="20170728 17:03:01.223" starttime="20170728 17:03:01.220"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${transaction_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:01.227" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:01.228" starttime="20170728 17:03:01.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>ajb_account_transaction里的没有相关数据</arg>
</arguments>
<msg timestamp="20170728 17:03:01.231" level="INFO">ajb_account_transaction里的没有相关数据</msg>
<status status="PASS" endtime="20170728 17:03:01.232" starttime="20170728 17:03:01.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库表里数据调用接口前后没有发生变化</arg>
</arguments>
<msg timestamp="20170728 17:03:01.233" level="INFO">数据库表里数据调用接口前后没有发生变化</msg>
<status status="PASS" endtime="20170728 17:03:01.235" starttime="20170728 17:03:01.233"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:01.236" starttime="20170728 17:03:01.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>输入已有的user_id和amount为字符的时候，语法错误，报400</arg>
</arguments>
<msg timestamp="20170728 17:03:01.237" level="INFO">输入已有的user_id和amount为字符的时候，语法错误，报400</msg>
<status status="PASS" endtime="20170728 17:03:01.238" starttime="20170728 17:03:01.237"></status>
</kw>
<kw name="艾佳币恢复数目" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:01.246" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:01.257" starttime="20170728 17:03:01.243"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:01.258" starttime="20170728 17:03:01.242"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:01.259" starttime="20170728 17:03:01.240"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount \ SET total_amount=${database[0][2]},balance_amount=${database[0][3]},frozen_amount=${database[0][4]}where account_id="${account_id}";</arg>
</arguments>
<msg timestamp="20170728 17:03:01.262" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount  SET total_amount=50423.00,balance_amount=49595.00,frozen_amount=828.00where account_id="6135"; </msg>
<status status="PASS" endtime="20170728 17:03:01.267" starttime="20170728 17:03:01.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170728 17:03:01.269" level="INFO">成功</msg>
<status status="PASS" endtime="20170728 17:03:01.270" starttime="20170728 17:03:01.268"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:01.271" starttime="20170728 17:03:01.239"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:01.272" critical="yes" starttime="20170728 17:03:00.933"></status>
</test>
<status status="PASS" endtime="20170728 17:03:01.274" starttime="20170728 17:02:56.761"></status>
</suite>
<suite source="F:\logs and reports\账户中心\艾佳币\艾佳币回收冻结.txt" id="s1-s1-s2" name="艾佳币回收冻结">
<test id="s1-s1-s2-t1" name="输入已有的userId和正确amount参数">
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>100000</arg>
<arg>200</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:03:01.313" level="INFO">${args11} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:01.314" starttime="20170728 17:03:01.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:03:01.316" level="INFO">${args22} = 200</msg>
<status status="PASS" endtime="20170728 17:03:01.317" starttime="20170728 17:03:01.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 17:03:01.320" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170728 17:03:01.321" starttime="20170728 17:03:01.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 17:03:01.325" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 17:03:01.327" starttime="20170728 17:03:01.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 17:03:01.329" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</msg>
<status status="PASS" endtime="20170728 17:03:01.329" starttime="20170728 17:03:01.328"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:01.331" starttime="20170728 17:03:01.310"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:01.336" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:01.344" starttime="20170728 17:03:01.335"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:01.346" starttime="20170728 17:03:01.333"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:01.347" starttime="20170728 17:03:01.332"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 17:03:01.353" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</msg>
<status status="PASS" endtime="20170728 17:03:01.354" starttime="20170728 17:03:01.351"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 17:03:01.356" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:01.357" starttime="20170728 17:03:01.355"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:01.360" starttime="20170728 17:03:01.359"></status>
</kw>
<msg timestamp="20170728 17:03:01.361" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:03:01.362" starttime="20170728 17:03:01.357"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>user_id</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:01.365" starttime="20170728 17:03:01.364"></status>
</kw>
<msg timestamp="20170728 17:03:01.366" level="INFO">${args11_after} = user_id</msg>
<status status="PASS" endtime="20170728 17:03:01.367" starttime="20170728 17:03:01.362"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:01.373" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:01.382" starttime="20170728 17:03:01.371"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:01.384" starttime="20170728 17:03:01.370"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:01.386" starttime="20170728 17:03:01.368"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 17:03:01.389" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and channel_no='1' </msg>
<msg timestamp="20170728 17:03:01.447" level="INFO">${database1} = ((9100, '32102151361499943857', 100000, 6135, 1, '32102151361499943857', '20170714000118SSP038852', Decimal('2.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, ...</msg>
<status status="PASS" endtime="20170728 17:03:01.447" starttime="20170728 17:03:01.387"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 17:03:01.449" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 17:03:01.459" level="INFO">${database} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 4), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:01.460" starttime="20170728 17:03:01.448"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 17:03:01.464" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:01.464" starttime="20170728 17:03:01.462"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 17:03:01.467" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 17:03:01.467" starttime="20170728 17:03:01.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:01.469" level="INFO">获得account_id值为：6135</msg>
<status status="PASS" endtime="20170728 17:03:01.470" starttime="20170728 17:03:01.468"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:01.472" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:01.472" starttime="20170728 17:03:01.470"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:01.476" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:01.477" starttime="20170728 17:03:01.474"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:01.480" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:01.481" starttime="20170728 17:03:01.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:01.483" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 17:03:01.484" starttime="20170728 17:03:01.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 17:03:01.485" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:01.486" starttime="20170728 17:03:01.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:01.490" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:01.491" starttime="20170728 17:03:01.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:01.494" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:01.494" starttime="20170728 17:03:01.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:01.496" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:01.497" starttime="20170728 17:03:01.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:01.499" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:03:01.500" starttime="20170728 17:03:01.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 17:03:01.502" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:01.502" starttime="20170728 17:03:01.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 17:03:01.504" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</msg>
<status status="PASS" endtime="20170728 17:03:01.505" starttime="20170728 17:03:01.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170728 17:03:01.507" level="INFO">${database} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 4), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:01.509" starttime="20170728 17:03:01.506"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:01.510" starttime="20170728 17:03:01.349"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Data" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:01.608" starttime="20170728 17:03:01.517"></status>
</kw>
<msg timestamp="20170728 17:03:01.609" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:01.610" starttime="20170728 17:03:01.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 17:03:01.613" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:01.613" starttime="20170728 17:03:01.611"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:01.614" starttime="20170728 17:03:01.512"></status>
</kw>
<kw name="字段验证" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:01.618" level="INFO">200</msg>
<status status="PASS" endtime="20170728 17:03:01.619" starttime="20170728 17:03:01.616"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 17:03:01.621" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:01.622" starttime="20170728 17:03:01.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 17:03:01.624" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 17:03:01.625" starttime="20170728 17:03:01.623"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 17:03:01.627" level="INFO">To JSON using : content={"data":{"orderNum":"32102151361501230515"},"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 17:03:01.627" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 17:03:01.628" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': {u'orderNum': u'32102151361501230515'}, u'success': True}</msg>
<status status="PASS" endtime="20170728 17:03:01.628" starttime="20170728 17:03:01.626"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 17:03:01.630" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:01.632" starttime="20170728 17:03:01.629"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:01.634" starttime="20170728 17:03:01.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:01.637" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:01.637" starttime="20170728 17:03:01.635"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<assign>
<var>@{Link1}</var>
</assign>
<msg timestamp="20170728 17:03:01.639" level="INFO">@{Link1} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:01.640" starttime="20170728 17:03:01.638"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>"${value}" in @{Link1}</arg>
<arg>Get From Dictionary</arg>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${orderNum}</var>
</assign>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:01.644" starttime="20170728 17:03:01.642"></status>
</kw>
<msg timestamp="20170728 17:03:01.645" level="INFO">${orderNum} = 32102151361501230515</msg>
<status status="PASS" endtime="20170728 17:03:01.646" starttime="20170728 17:03:01.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<msg timestamp="20170728 17:03:01.649" level="INFO">${orderNum} = 32102151361501230515</msg>
<status status="PASS" endtime="20170728 17:03:01.650" starttime="20170728 17:03:01.648"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:01.651" starttime="20170728 17:03:01.615"></status>
</kw>
<kw name="表ajb_account_open_record的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_open_record</arg>
</arguments>
<msg timestamp="20170728 17:03:01.653" level="INFO">现在开始校验表ajb_account_open_record</msg>
<status status="PASS" endtime="20170728 17:03:01.654" starttime="20170728 17:03:01.652"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:01.660" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:01.670" starttime="20170728 17:03:01.658"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:01.671" starttime="20170728 17:03:01.656"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:01.672" starttime="20170728 17:03:01.655"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:01.674" level="INFO">Executing : Query  |  select * from ajb_account_open_record where account_id ='6135' </msg>
<msg timestamp="20170728 17:03:01.683" level="INFO">${user_id} = ((6090, '32102151361499943856', 100000, 6135, 1, 2, 0, datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 13, 23, 57, 26)),)</msg>
<status status="PASS" endtime="20170728 17:03:01.684" starttime="20170728 17:03:01.673"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:01.687" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:01.688" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:01.689" starttime="20170728 17:03:01.685"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:01.693" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:01.694" starttime="20170728 17:03:01.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:01.697" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:01.698" starttime="20170728 17:03:01.695"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:03:01.700" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:01.701" starttime="20170728 17:03:01.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:03:01.702" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:03:01.703" starttime="20170728 17:03:01.702"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:01.705" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:01.706" starttime="20170728 17:03:01.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no正确反映艾佳币账户渠道</arg>
</arguments>
<msg timestamp="20170728 17:03:01.710" level="INFO">channel_no正确反映艾佳币账户渠道</msg>
<status status="PASS" endtime="20170728 17:03:01.711" starttime="20170728 17:03:01.708"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 17:03:01.713" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:01.714" starttime="20170728 17:03:01.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>status的值为2,表示生效，是正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:01.716" level="INFO">status的值为2,表示生效，是正确的</msg>
<status status="PASS" endtime="20170728 17:03:01.717" starttime="20170728 17:03:01.715"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:01.719" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:01.720" starttime="20170728 17:03:01.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:01.722" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:01.722" starttime="20170728 17:03:01.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表里面的add_time和update_time的时间是一致的。校验正确。</arg>
</arguments>
<msg timestamp="20170728 17:03:01.727" level="INFO">表里面的add_time和update_time的时间是一致的。校验正确。</msg>
<status status="PASS" endtime="20170728 17:03:01.728" starttime="20170728 17:03:01.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_open_record的校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:01.731" level="INFO">表ajb_account_open_record的校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:01.732" starttime="20170728 17:03:01.730"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:01.732" starttime="20170728 17:03:01.651"></status>
</kw>
<kw name="表account_unilateral_bill的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_unilateral_bill</arg>
</arguments>
<msg timestamp="20170728 17:03:01.736" level="INFO">现在开始校验表account_unilateral_bill</msg>
<status status="PASS" endtime="20170728 17:03:01.736" starttime="20170728 17:03:01.735"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:01.741" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:01.761" starttime="20170728 17:03:01.740"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:01.762" starttime="20170728 17:03:01.738"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:01.763" starttime="20170728 17:03:01.737"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>account_unilateral_bill</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:01.768" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:01.779" starttime="20170728 17:03:01.767"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:01.780" starttime="20170728 17:03:01.766"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:01.781" starttime="20170728 17:03:01.765"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:03:01.784" level="INFO">${current_time} = 2017-07-28 17:03:01.784</msg>
<status status="PASS" endtime="20170728 17:03:01.785" starttime="20170728 17:03:01.782"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>0 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:01.788" level="INFO">${current_time_before_30} = 2017-07-28 17:03:01.784</msg>
<status status="PASS" endtime="20170728 17:03:01.790" starttime="20170728 17:03:01.786"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:01.793" level="INFO">${current_time_after_30} = 2017-07-28 17:04:41.784</msg>
<status status="PASS" endtime="20170728 17:03:01.794" starttime="20170728 17:03:01.791"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 17:03:01.796" level="INFO">Executing : Query  |  select * from account_unilateral_bill where user_id='100000' and update_time between' 2017-07-28 17:03:01.784' and '2017-07-28 17:04:41.784' </msg>
<msg timestamp="20170728 17:03:01.807" level="INFO">${updatetime} = ((7699, '32102151361501230517', 100000, 6135, '32102151361501230516', 1, 8, 1, Decimal('200.00'), None, datetime.datetime(2017, 7, 28, 17, 4, 7), datetime.datetime(2017, 7, 28, 17, 4, 7), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:01.808" starttime="20170728 17:03:01.795"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 17:03:01.810" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 17:03:01.811" starttime="20170728 17:03:01.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 17:03:01.813" level="INFO">account_unilateral_bill表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 17:03:01.813" starttime="20170728 17:03:01.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:01.816" level="INFO">${current_time_before_30} = 2017-07-28 17:03:01.784</msg>
<status status="PASS" endtime="20170728 17:03:01.817" starttime="20170728 17:03:01.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:01.820" level="INFO">${current_time_after_30} = 2017-07-28 17:04:41.784</msg>
<status status="PASS" endtime="20170728 17:03:01.821" starttime="20170728 17:03:01.819"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:01.822" starttime="20170728 17:03:01.764"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id} 'and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:01.825" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6135 'and update_time between' 2017-07-28 17:03:01.784' and '2017-07-28 17:04:41.784' </msg>
<msg timestamp="20170728 17:03:01.832" level="INFO">${user_id} = ((7699, '32102151361501230517', 100000, 6135, '32102151361501230516', 1, 8, 1, Decimal('200.00'), None, datetime.datetime(2017, 7, 28, 17, 4, 7), datetime.datetime(2017, 7, 28, 17, 4, 7), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:01.833" starttime="20170728 17:03:01.823"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:01.838" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:01.840" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:01.841" starttime="20170728 17:03:01.835"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:01.843" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:01.844" starttime="20170728 17:03:01.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:01.845" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:01.847" starttime="20170728 17:03:01.845"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:01.851" starttime="20170728 17:03:01.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:03:01.855" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:03:01.855" starttime="20170728 17:03:01.853"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:01.858" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:01.859" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:01.860" starttime="20170728 17:03:01.857"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:01.863" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:01.864" starttime="20170728 17:03:01.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:01.865" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:01.866" starttime="20170728 17:03:01.865"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:03:01.868" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:01.868" starttime="20170728 17:03:01.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 17:03:01.870" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 17:03:01.871" starttime="20170728 17:03:01.869"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>8</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:01.877" starttime="20170728 17:03:01.876"></status>
</kw>
<msg timestamp="20170728 17:03:01.878" level="INFO">${event_code} = 8</msg>
<status status="PASS" endtime="20170728 17:03:01.878" starttime="20170728 17:03:01.873"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:03:01.880" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:03:01.881" starttime="20170728 17:03:01.879"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:01.886" starttime="20170728 17:03:01.885"></status>
</kw>
<msg timestamp="20170728 17:03:01.887" level="INFO">${event_code_after} = 8</msg>
<status status="PASS" endtime="20170728 17:03:01.888" starttime="20170728 17:03:01.883"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:03:01.891" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:01.891" starttime="20170728 17:03:01.889"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:01.895" starttime="20170728 17:03:01.894"></status>
</kw>
<msg timestamp="20170728 17:03:01.895" level="INFO">${command_type} = 1</msg>
<status status="PASS" endtime="20170728 17:03:01.896" starttime="20170728 17:03:01.892"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:01.899" starttime="20170728 17:03:01.898"></status>
</kw>
<msg timestamp="20170728 17:03:01.900" level="INFO">${amount} = 200</msg>
<status status="PASS" endtime="20170728 17:03:01.901" starttime="20170728 17:03:01.897"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:03:01.904" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:03:01.905" starttime="20170728 17:03:01.903"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>4</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:01.909" starttime="20170728 17:03:01.908"></status>
</kw>
<msg timestamp="20170728 17:03:01.911" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 17:03:01.912" starttime="20170728 17:03:01.906"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:01.917" starttime="20170728 17:03:01.916"></status>
</kw>
<msg timestamp="20170728 17:03:01.918" level="INFO">${total_amount} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:01.919" starttime="20170728 17:03:01.914"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${balance_amount_before}-${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:01.925" starttime="20170728 17:03:01.923"></status>
</kw>
<msg timestamp="20170728 17:03:01.925" level="INFO">${balance_amount} = 49395.0</msg>
<status status="PASS" endtime="20170728 17:03:01.926" starttime="20170728 17:03:01.921"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${frozen_amount_before}+${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:01.933" starttime="20170728 17:03:01.931"></status>
</kw>
<msg timestamp="20170728 17:03:01.934" level="INFO">${frozen_amount} = 1028.0</msg>
<status status="PASS" endtime="20170728 17:03:01.935" starttime="20170728 17:03:01.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:01.937" level="INFO">${event_code} = 8</msg>
<status status="PASS" endtime="20170728 17:03:01.937" starttime="20170728 17:03:01.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:01.940" level="INFO">${command_type} = 1</msg>
<status status="PASS" endtime="20170728 17:03:01.942" starttime="20170728 17:03:01.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:01.944" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 17:03:01.945" starttime="20170728 17:03:01.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:01.947" level="INFO">${amount} = 200</msg>
<status status="PASS" endtime="20170728 17:03:01.947" starttime="20170728 17:03:01.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:01.949" level="INFO">${total_amount} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:01.950" starttime="20170728 17:03:01.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:01.952" level="INFO">${balance_amount} = 49395.0</msg>
<status status="PASS" endtime="20170728 17:03:01.953" starttime="20170728 17:03:01.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:01.955" level="INFO">${frozen_amount} = 1028.0</msg>
<status status="PASS" endtime="20170728 17:03:01.955" starttime="20170728 17:03:01.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:01.958" level="INFO">${event_code_after} = 8</msg>
<status status="PASS" endtime="20170728 17:03:01.959" starttime="20170728 17:03:01.956"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:01.960" starttime="20170728 17:03:01.872"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:01.963" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:01.963" starttime="20170728 17:03:01.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:01.965" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 17:03:01.966" starttime="20170728 17:03:01.964"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:01.967" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:01.968" starttime="20170728 17:03:01.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:01.970" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170728 17:03:01.970" starttime="20170728 17:03:01.969"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:01.973" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:01.973" starttime="20170728 17:03:01.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:01.977" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 17:03:01.978" starttime="20170728 17:03:01.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 17:03:01.981" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 17:03:01.983" starttime="20170728 17:03:01.980"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:01.986" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:01.987" starttime="20170728 17:03:01.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:01.991" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:01.992" starttime="20170728 17:03:01.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:01.993" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170728 17:03:01.994" starttime="20170728 17:03:01.993"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_unilateral}</var>
</assign>
<msg timestamp="20170728 17:03:01.996" level="INFO">${user_id[0][0]_unilateral} = 7699</msg>
<status status="PASS" endtime="20170728 17:03:01.996" starttime="20170728 17:03:01.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_unilateral}</arg>
</arguments>
<msg timestamp="20170728 17:03:01.998" level="INFO">${user_id[0][0]_unilateral} = 7699</msg>
<status status="PASS" endtime="20170728 17:03:01.999" starttime="20170728 17:03:01.997"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]_unilateral}'</arg>
</arguments>
<msg timestamp="20170728 17:03:02.001" level="INFO">Executing : Execute SQL String  |  delete from account_unilateral_bill where id ='7699' </msg>
<status status="PASS" endtime="20170728 17:03:02.045" starttime="20170728 17:03:02.000"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:02.046" starttime="20170728 17:03:01.733"></status>
</kw>
<kw name="表ajb_account_transaction" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170728 17:03:02.049" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170728 17:03:02.049" starttime="20170728 17:03:02.048"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:02.053" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:02.062" starttime="20170728 17:03:02.052"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:02.063" starttime="20170728 17:03:02.051"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:02.064" starttime="20170728 17:03:02.050"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>ajb_account_transaction</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:02.074" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:02.082" starttime="20170728 17:03:02.072"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:02.083" starttime="20170728 17:03:02.070"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:02.085" starttime="20170728 17:03:02.068"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:03:02.087" level="INFO">${current_time} = 2017-07-28 17:03:02.086</msg>
<status status="PASS" endtime="20170728 17:03:02.088" starttime="20170728 17:03:02.086"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>0 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:02.091" level="INFO">${current_time_before_30} = 2017-07-28 17:03:02.086</msg>
<status status="PASS" endtime="20170728 17:03:02.092" starttime="20170728 17:03:02.089"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:02.094" level="INFO">${current_time_after_30} = 2017-07-28 17:04:42.086</msg>
<status status="PASS" endtime="20170728 17:03:02.094" starttime="20170728 17:03:02.092"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 17:03:02.098" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and update_time between' 2017-07-28 17:03:02.086' and '2017-07-28 17:04:42.086' </msg>
<msg timestamp="20170728 17:03:02.109" level="INFO">${updatetime} = ((88889795, '32102151361501230515', 100000, 6135, 1, '32102151361501230515', None, Decimal('200.00'), 1, 8, 2, 0, datetime.datetime(2017, 7, 28, 17, 4, 7), datetime.datetime(2017, 7, 28, 17, 4, 7)),)</msg>
<status status="PASS" endtime="20170728 17:03:02.110" starttime="20170728 17:03:02.096"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 17:03:02.112" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 17:03:02.113" starttime="20170728 17:03:02.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 17:03:02.116" level="INFO">ajb_account_transaction表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 17:03:02.117" starttime="20170728 17:03:02.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:02.120" level="INFO">${current_time_before_30} = 2017-07-28 17:03:02.086</msg>
<status status="PASS" endtime="20170728 17:03:02.121" starttime="20170728 17:03:02.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:02.123" level="INFO">${current_time_after_30} = 2017-07-28 17:04:42.086</msg>
<status status="PASS" endtime="20170728 17:03:02.124" starttime="20170728 17:03:02.122"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:02.125" starttime="20170728 17:03:02.066"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:02.127" level="INFO">Executing : Query  |  select * from ajb_account_transaction where account_id ='6135' and update_time between' 2017-07-28 17:03:02.086' and '2017-07-28 17:04:42.086' </msg>
<msg timestamp="20170728 17:03:02.140" level="INFO">${user_id} = ((88889795, '32102151361501230515', 100000, 6135, 1, '32102151361501230515', None, Decimal('200.00'), 1, 8, 2, 0, datetime.datetime(2017, 7, 28, 17, 4, 7), datetime.datetime(2017, 7, 28, 17, 4, 7)),)</msg>
<status status="PASS" endtime="20170728 17:03:02.141" starttime="20170728 17:03:02.126"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:02.143" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:02.144" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:02.144" starttime="20170728 17:03:02.142"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:02.148" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:02.149" starttime="20170728 17:03:02.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:02.151" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:02.151" starttime="20170728 17:03:02.150"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:02.154" starttime="20170728 17:03:02.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:03:02.155" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:03:02.156" starttime="20170728 17:03:02.155"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:02.158" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:02.159" starttime="20170728 17:03:02.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no的值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:02.162" level="INFO">channel_no的值正确</msg>
<status status="PASS" endtime="20170728 17:03:02.164" starttime="20170728 17:03:02.160"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${args11}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${orderNum}</arg>
</arguments>
<assign>
<var>${bill_order_num}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:02.169" starttime="20170728 17:03:02.167"></status>
</kw>
<msg timestamp="20170728 17:03:02.170" level="INFO">${bill_order_num} = 32102151361501230515</msg>
<status status="PASS" endtime="20170728 17:03:02.171" starttime="20170728 17:03:02.165"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>${bill_order_num}</arg>
</arguments>
<msg timestamp="20170728 17:03:02.174" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:02.174" starttime="20170728 17:03:02.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170728 17:03:02.176" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170728 17:03:02.177" starttime="20170728 17:03:02.175"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>8</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:02.183" starttime="20170728 17:03:02.181"></status>
</kw>
<msg timestamp="20170728 17:03:02.183" level="INFO">${event_code} = 8</msg>
<status status="PASS" endtime="20170728 17:03:02.184" starttime="20170728 17:03:02.179"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:03:02.186" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:03:02.187" starttime="20170728 17:03:02.185"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:02.193" starttime="20170728 17:03:02.191"></status>
</kw>
<msg timestamp="20170728 17:03:02.194" level="INFO">${event_code_after} = 8</msg>
<status status="PASS" endtime="20170728 17:03:02.195" starttime="20170728 17:03:02.188"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:03:02.196" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:02.197" starttime="20170728 17:03:02.195"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:02.200" starttime="20170728 17:03:02.199"></status>
</kw>
<msg timestamp="20170728 17:03:02.201" level="INFO">${command_type} = 1</msg>
<status status="PASS" endtime="20170728 17:03:02.202" starttime="20170728 17:03:02.198"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:02.205" starttime="20170728 17:03:02.204"></status>
</kw>
<msg timestamp="20170728 17:03:02.206" level="INFO">${amount} = 200</msg>
<status status="PASS" endtime="20170728 17:03:02.207" starttime="20170728 17:03:02.202"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:03:02.209" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:03:02.210" starttime="20170728 17:03:02.208"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>4</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:02.216" starttime="20170728 17:03:02.215"></status>
</kw>
<msg timestamp="20170728 17:03:02.217" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 17:03:02.217" starttime="20170728 17:03:02.212"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:02.222" starttime="20170728 17:03:02.220"></status>
</kw>
<msg timestamp="20170728 17:03:02.223" level="INFO">${total_amount} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:02.225" starttime="20170728 17:03:02.218"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${balance_amount_before}-${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:02.229" starttime="20170728 17:03:02.228"></status>
</kw>
<msg timestamp="20170728 17:03:02.230" level="INFO">${balance_amount} = 49395.0</msg>
<status status="PASS" endtime="20170728 17:03:02.231" starttime="20170728 17:03:02.226"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${frozen_amount_before}+${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:02.235" starttime="20170728 17:03:02.233"></status>
</kw>
<msg timestamp="20170728 17:03:02.236" level="INFO">${frozen_amount} = 1028.0</msg>
<status status="PASS" endtime="20170728 17:03:02.236" starttime="20170728 17:03:02.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:02.240" level="INFO">${event_code} = 8</msg>
<status status="PASS" endtime="20170728 17:03:02.241" starttime="20170728 17:03:02.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:02.244" level="INFO">${command_type} = 1</msg>
<status status="PASS" endtime="20170728 17:03:02.244" starttime="20170728 17:03:02.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:02.246" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 17:03:02.247" starttime="20170728 17:03:02.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:02.250" level="INFO">${amount} = 200</msg>
<status status="PASS" endtime="20170728 17:03:02.252" starttime="20170728 17:03:02.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:02.260" level="INFO">${total_amount} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:02.260" starttime="20170728 17:03:02.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:02.263" level="INFO">${balance_amount} = 49395.0</msg>
<status status="PASS" endtime="20170728 17:03:02.263" starttime="20170728 17:03:02.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:02.265" level="INFO">${frozen_amount} = 1028.0</msg>
<status status="PASS" endtime="20170728 17:03:02.266" starttime="20170728 17:03:02.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:02.270" level="INFO">${event_code_after} = 8</msg>
<status status="PASS" endtime="20170728 17:03:02.272" starttime="20170728 17:03:02.267"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:02.274" starttime="20170728 17:03:02.178"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170728 17:03:02.277" level="INFO">${pay_no_after} = None</msg>
<status status="PASS" endtime="20170728 17:03:02.277" starttime="20170728 17:03:02.275"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170728 17:03:02.279" level="INFO">Length is 4</msg>
<msg timestamp="20170728 17:03:02.280" level="INFO">${pay_no_after_length} = 4</msg>
<status status="PASS" endtime="20170728 17:03:02.280" starttime="20170728 17:03:02.278"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:02.282" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:02.283" starttime="20170728 17:03:02.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170728 17:03:02.286" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170728 17:03:02.288" starttime="20170728 17:03:02.285"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:02.291" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:02.292" starttime="20170728 17:03:02.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:02.294" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 17:03:02.295" starttime="20170728 17:03:02.293"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:03:02.297" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:02.298" starttime="20170728 17:03:02.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 17:03:02.299" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 17:03:02.300" starttime="20170728 17:03:02.298"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][9]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:02.303" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:02.304" starttime="20170728 17:03:02.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:02.307" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 17:03:02.308" starttime="20170728 17:03:02.305"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 17:03:02.310" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:02.310" starttime="20170728 17:03:02.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170728 17:03:02.312" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170728 17:03:02.313" starttime="20170728 17:03:02.311"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:02.315" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:02.315" starttime="20170728 17:03:02.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:02.317" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:02.318" starttime="20170728 17:03:02.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 17:03:02.319" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 17:03:02.320" starttime="20170728 17:03:02.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:02.323" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170728 17:03:02.324" starttime="20170728 17:03:02.321"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170728 17:03:02.326" level="INFO">${user_id[0][0]_transaction} = 88889795</msg>
<status status="PASS" endtime="20170728 17:03:02.327" starttime="20170728 17:03:02.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170728 17:03:02.330" level="INFO">${user_id[0][0]_transaction} = 88889795</msg>
<status status="PASS" endtime="20170728 17:03:02.331" starttime="20170728 17:03:02.328"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id[0][0]}'</arg>
</arguments>
<assign>
<var>${user_id_unilateral_delete1}</var>
</assign>
<msg timestamp="20170728 17:03:02.334" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88889795' </msg>
<msg timestamp="20170728 17:03:02.454" level="INFO">${user_id_unilateral_delete1} = None</msg>
<status status="PASS" endtime="20170728 17:03:02.455" starttime="20170728 17:03:02.333"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:02.456" starttime="20170728 17:03:02.047"></status>
</kw>
<kw name="表account_amount的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_amount</arg>
</arguments>
<msg timestamp="20170728 17:03:02.460" level="INFO">现在开始校验表account_amount</msg>
<status status="PASS" endtime="20170728 17:03:02.461" starttime="20170728 17:03:02.458"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:02.470" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:02.484" starttime="20170728 17:03:02.468"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:02.485" starttime="20170728 17:03:02.465"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:02.487" starttime="20170728 17:03:02.463"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time1}</var>
</assign>
<msg timestamp="20170728 17:03:02.492" level="INFO">${current_time1} = 2017-07-28 17:03:02.492</msg>
<status status="PASS" endtime="20170728 17:03:02.494" starttime="20170728 17:03:02.490"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:02.498" level="INFO">${current_time1_before_30} = 2017-07-28 17:02:02.492</msg>
<status status="PASS" endtime="20170728 17:03:02.500" starttime="20170728 17:03:02.496"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:02.504" level="INFO">${current_time1_after_30} = 2017-07-28 17:04:02.492</msg>
<status status="PASS" endtime="20170728 17:03:02.506" starttime="20170728 17:03:02.502"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:02.510" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 17:03:02.517" level="INFO">${user_id} = ((12449, 6135, Decimal('50423.00'), Decimal('49395.00'), Decimal('1028.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 7), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:02.518" starttime="20170728 17:03:02.508"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>8</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:02.529" starttime="20170728 17:03:02.527"></status>
</kw>
<msg timestamp="20170728 17:03:02.531" level="INFO">${event_code} = 8</msg>
<status status="PASS" endtime="20170728 17:03:02.532" starttime="20170728 17:03:02.523"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:03:02.538" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:03:02.540" starttime="20170728 17:03:02.535"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:02.549" starttime="20170728 17:03:02.546"></status>
</kw>
<msg timestamp="20170728 17:03:02.550" level="INFO">${event_code_after} = 8</msg>
<status status="PASS" endtime="20170728 17:03:02.552" starttime="20170728 17:03:02.542"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:03:02.558" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:02.560" starttime="20170728 17:03:02.554"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:02.566" starttime="20170728 17:03:02.564"></status>
</kw>
<msg timestamp="20170728 17:03:02.569" level="INFO">${command_type} = 1</msg>
<status status="PASS" endtime="20170728 17:03:02.570" starttime="20170728 17:03:02.562"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:02.581" starttime="20170728 17:03:02.578"></status>
</kw>
<msg timestamp="20170728 17:03:02.583" level="INFO">${amount} = 200</msg>
<status status="PASS" endtime="20170728 17:03:02.585" starttime="20170728 17:03:02.573"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:03:02.592" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:03:02.594" starttime="20170728 17:03:02.587"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>4</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:02.604" starttime="20170728 17:03:02.602"></status>
</kw>
<msg timestamp="20170728 17:03:02.606" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 17:03:02.607" starttime="20170728 17:03:02.596"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:02.616" starttime="20170728 17:03:02.614"></status>
</kw>
<msg timestamp="20170728 17:03:02.619" level="INFO">${total_amount} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:02.620" starttime="20170728 17:03:02.610"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${balance_amount_before}-${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:02.628" starttime="20170728 17:03:02.626"></status>
</kw>
<msg timestamp="20170728 17:03:02.630" level="INFO">${balance_amount} = 49395.0</msg>
<status status="PASS" endtime="20170728 17:03:02.631" starttime="20170728 17:03:02.622"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${frozen_amount_before}+${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:02.641" starttime="20170728 17:03:02.638"></status>
</kw>
<msg timestamp="20170728 17:03:02.643" level="INFO">${frozen_amount} = 1028.0</msg>
<status status="PASS" endtime="20170728 17:03:02.645" starttime="20170728 17:03:02.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:02.649" level="INFO">${event_code} = 8</msg>
<status status="PASS" endtime="20170728 17:03:02.651" starttime="20170728 17:03:02.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:02.655" level="INFO">${command_type} = 1</msg>
<status status="PASS" endtime="20170728 17:03:02.658" starttime="20170728 17:03:02.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:02.663" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 17:03:02.665" starttime="20170728 17:03:02.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:02.668" level="INFO">${amount} = 200</msg>
<status status="PASS" endtime="20170728 17:03:02.670" starttime="20170728 17:03:02.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:02.674" level="INFO">${total_amount} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:02.675" starttime="20170728 17:03:02.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:02.680" level="INFO">${balance_amount} = 49395.0</msg>
<status status="PASS" endtime="20170728 17:03:02.682" starttime="20170728 17:03:02.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:02.686" level="INFO">${frozen_amount} = 1028.0</msg>
<status status="PASS" endtime="20170728 17:03:02.688" starttime="20170728 17:03:02.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:02.695" level="INFO">${event_code_after} = 8</msg>
<status status="PASS" endtime="20170728 17:03:02.697" starttime="20170728 17:03:02.692"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:02.699" starttime="20170728 17:03:02.520"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:02.703" starttime="20170728 17:03:02.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:02.708" level="INFO">total_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:02.710" starttime="20170728 17:03:02.705"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:02.714" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:02.715" starttime="20170728 17:03:02.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:02.719" level="INFO">balance_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:02.720" starttime="20170728 17:03:02.717"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:02.725" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:02.727" starttime="20170728 17:03:02.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:02.732" level="INFO">frozen_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:02.734" starttime="20170728 17:03:02.729"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:02.738" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:02.740" starttime="20170728 17:03:02.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:02.744" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:02.745" starttime="20170728 17:03:02.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:02.748" level="INFO">表account_amount校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:02.750" starttime="20170728 17:03:02.747"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:02.751" starttime="20170728 17:03:02.456"></status>
</kw>
<kw name="艾佳币恢复数目" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:02.762" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:02.775" starttime="20170728 17:03:02.761"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:02.776" starttime="20170728 17:03:02.758"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:02.778" starttime="20170728 17:03:02.755"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount \ SET total_amount=${database[0][2]},balance_amount=${database[0][3]},frozen_amount=${database[0][4]}where account_id="${account_id}";</arg>
</arguments>
<msg timestamp="20170728 17:03:02.784" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount  SET total_amount=50423.00,balance_amount=49595.00,frozen_amount=828.00where account_id="6135"; </msg>
<status status="PASS" endtime="20170728 17:03:02.823" starttime="20170728 17:03:02.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170728 17:03:02.827" level="INFO">成功</msg>
<status status="PASS" endtime="20170728 17:03:02.829" starttime="20170728 17:03:02.826"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:02.831" starttime="20170728 17:03:02.753"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:02.833" critical="yes" starttime="20170728 17:03:01.306"></status>
</test>
<test id="s1-s1-s2-t2" name="输入已有的user_id和amount为0的参数">
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>100000</arg>
<arg>0</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:03:02.848" level="INFO">${args11} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:02.849" starttime="20170728 17:03:02.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:03:02.853" level="INFO">${args22} = 0</msg>
<status status="PASS" endtime="20170728 17:03:02.855" starttime="20170728 17:03:02.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 17:03:02.860" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170728 17:03:02.861" starttime="20170728 17:03:02.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 17:03:02.866" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 17:03:02.867" starttime="20170728 17:03:02.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 17:03:02.872" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</msg>
<status status="PASS" endtime="20170728 17:03:02.875" starttime="20170728 17:03:02.870"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:02.877" starttime="20170728 17:03:02.842"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:02.886" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:02.906" starttime="20170728 17:03:02.883"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:02.908" starttime="20170728 17:03:02.881"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:02.910" starttime="20170728 17:03:02.879"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 17:03:02.917" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</msg>
<status status="PASS" endtime="20170728 17:03:02.919" starttime="20170728 17:03:02.914"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 17:03:02.924" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:02.926" starttime="20170728 17:03:02.921"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:02.932" starttime="20170728 17:03:02.930"></status>
</kw>
<msg timestamp="20170728 17:03:02.933" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:03:02.935" starttime="20170728 17:03:02.928"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>user_id</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:02.942" starttime="20170728 17:03:02.940"></status>
</kw>
<msg timestamp="20170728 17:03:02.944" level="INFO">${args11_after} = user_id</msg>
<status status="PASS" endtime="20170728 17:03:02.945" starttime="20170728 17:03:02.937"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:02.952" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:02.964" starttime="20170728 17:03:02.951"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:02.967" starttime="20170728 17:03:02.948"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:02.968" starttime="20170728 17:03:02.946"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 17:03:02.973" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and channel_no='1' </msg>
<msg timestamp="20170728 17:03:02.994" level="INFO">${database1} = ((9100, '32102151361499943857', 100000, 6135, 1, '32102151361499943857', '20170714000118SSP038852', Decimal('2.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, ...</msg>
<status status="PASS" endtime="20170728 17:03:02.995" starttime="20170728 17:03:02.970"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 17:03:02.999" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 17:03:03.006" level="INFO">${database} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 8), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:03.008" starttime="20170728 17:03:02.997"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 17:03:03.013" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:03.014" starttime="20170728 17:03:03.010"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 17:03:03.019" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 17:03:03.020" starttime="20170728 17:03:03.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:03.024" level="INFO">获得account_id值为：6135</msg>
<status status="PASS" endtime="20170728 17:03:03.025" starttime="20170728 17:03:03.022"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:03.028" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:03.028" starttime="20170728 17:03:03.026"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:03.030" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:03.031" starttime="20170728 17:03:03.029"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:03.034" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:03.035" starttime="20170728 17:03:03.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:03.038" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 17:03:03.040" starttime="20170728 17:03:03.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 17:03:03.042" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:03.043" starttime="20170728 17:03:03.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:03.045" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:03.046" starttime="20170728 17:03:03.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:03.047" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:03.048" starttime="20170728 17:03:03.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:03.051" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:03.052" starttime="20170728 17:03:03.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:03.055" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:03:03.056" starttime="20170728 17:03:03.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 17:03:03.059" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:03.059" starttime="20170728 17:03:03.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 17:03:03.061" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</msg>
<status status="PASS" endtime="20170728 17:03:03.062" starttime="20170728 17:03:03.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170728 17:03:03.064" level="INFO">${database} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 8), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:03.065" starttime="20170728 17:03:03.063"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:03.066" starttime="20170728 17:03:02.912"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Data" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:03.085" starttime="20170728 17:03:03.073"></status>
</kw>
<msg timestamp="20170728 17:03:03.087" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:03.088" starttime="20170728 17:03:03.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 17:03:03.091" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:03.092" starttime="20170728 17:03:03.090"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:03.093" starttime="20170728 17:03:03.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:03.095" level="INFO">200</msg>
<status status="PASS" endtime="20170728 17:03:03.095" starttime="20170728 17:03:03.094"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 17:03:03.099" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:03.101" starttime="20170728 17:03:03.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 17:03:03.104" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 17:03:03.105" starttime="20170728 17:03:03.102"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 17:03:03.108" level="INFO">To JSON using : content={"data":null,"msg":"{\"amount\":\"艾佳币数额不合法\"}","code":-1,"success":false} </msg>
<msg timestamp="20170728 17:03:03.109" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 17:03:03.110" level="INFO">${toJson} = {u'msg': u'{"amount":"\u827e\u4f73\u5e01\u6570\u989d\u4e0d\u5408\u6cd5"}', u'code': -1, u'data': None, u'success': False}</msg>
<status status="PASS" endtime="20170728 17:03:03.111" starttime="20170728 17:03:03.107"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>False</arg>
</arguments>
<msg timestamp="20170728 17:03:03.113" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:03.114" starttime="20170728 17:03:03.112"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['data']}</arg>
<arg>None</arg>
</arguments>
<msg timestamp="20170728 17:03:03.116" level="INFO">Argument types are:
&lt;type 'NoneType'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:03.117" starttime="20170728 17:03:03.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:03.118" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:03.119" starttime="20170728 17:03:03.117"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
</arguments>
<assign>
<var>${toJson_after}</var>
</assign>
<msg timestamp="20170728 17:03:03.121" level="INFO">${toJson_after} = {"amount":"艾佳币数额不合法"}</msg>
<status status="PASS" endtime="20170728 17:03:03.121" starttime="20170728 17:03:03.120"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${toJson_after}</arg>
</arguments>
<assign>
<var>${toJson_convert}</var>
</assign>
<msg timestamp="20170728 17:03:03.124" level="INFO">To JSON using : content={"amount":"艾佳币数额不合法"} </msg>
<msg timestamp="20170728 17:03:03.125" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 17:03:03.126" level="INFO">${toJson_convert} = {u'amount': u'\u827e\u4f73\u5e01\u6570\u989d\u4e0d\u5408\u6cd5'}</msg>
<status status="PASS" endtime="20170728 17:03:03.126" starttime="20170728 17:03:03.123"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson_convert['amount']}</arg>
<arg>艾佳币数额不合法</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:03.129" starttime="20170728 17:03:03.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:03.131" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:03.132" starttime="20170728 17:03:03.130"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:03.137" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:03.147" starttime="20170728 17:03:03.136"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:03.149" starttime="20170728 17:03:03.134"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:03.150" starttime="20170728 17:03:03.133"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:03.152" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 17:03:03.160" level="INFO">${user_id} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 8), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:03.161" starttime="20170728 17:03:03.151"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:03.163" starttime="20170728 17:03:03.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:03.165" level="INFO">total_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:03.165" starttime="20170728 17:03:03.164"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:03.168" starttime="20170728 17:03:03.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:03.169" level="INFO">balance_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:03.170" starttime="20170728 17:03:03.168"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:03.172" starttime="20170728 17:03:03.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:03.176" level="INFO">frozen_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:03.177" starttime="20170728 17:03:03.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amounts的数据没有变化正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:03.178" level="INFO">amounts的数据没有变化正确的</msg>
<status status="PASS" endtime="20170728 17:03:03.179" starttime="20170728 17:03:03.177"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:03.181" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:03.182" starttime="20170728 17:03:03.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount内容没有发生变化</arg>
</arguments>
<msg timestamp="20170728 17:03:03.184" level="INFO">表account_amount内容没有发生变化</msg>
<status status="PASS" endtime="20170728 17:03:03.184" starttime="20170728 17:03:03.183"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:03:03.186" level="INFO">${current_time} = 2017-07-28 17:03:03.186</msg>
<status status="PASS" endtime="20170728 17:03:03.187" starttime="20170728 17:03:03.185"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:03.192" level="INFO">${current_time_before_30} = 2017-07-28 17:02:03.186</msg>
<status status="PASS" endtime="20170728 17:03:03.193" starttime="20170728 17:03:03.189"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:03.196" level="INFO">${current_time_after_30} = 2017-07-28 17:04:03.186</msg>
<status status="PASS" endtime="20170728 17:03:03.197" starttime="20170728 17:03:03.195"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id}' and event_code=7 and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${bill_check}</var>
</assign>
<msg timestamp="20170728 17:03:03.200" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6135' and event_code=7 and update_time between' 2017-07-28 17:02:03.186' and '2017-07-28 17:04:03.186' </msg>
<msg timestamp="20170728 17:03:03.206" level="INFO">${bill_check} = ()</msg>
<status status="PASS" endtime="20170728 17:03:03.207" starttime="20170728 17:03:03.198"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${bill_check}</arg>
</arguments>
<assign>
<var>${bill_check_length}</var>
</assign>
<msg timestamp="20170728 17:03:03.209" level="INFO">Length is 0</msg>
<msg timestamp="20170728 17:03:03.210" level="INFO">${bill_check_length} = 0</msg>
<status status="PASS" endtime="20170728 17:03:03.210" starttime="20170728 17:03:03.208"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${bill_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:03.212" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:03.213" starttime="20170728 17:03:03.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>account_unilateral_bill里的没有相关数据</arg>
</arguments>
<msg timestamp="20170728 17:03:03.215" level="INFO">account_unilateral_bill里的没有相关数据</msg>
<status status="PASS" endtime="20170728 17:03:03.215" starttime="20170728 17:03:03.214"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where user_id ='${args11}' and event_code=7 and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${transaction_check}</var>
</assign>
<msg timestamp="20170728 17:03:03.217" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id ='100000' and event_code=7 and update_time between' 2017-07-28 17:02:03.186' and '2017-07-28 17:04:03.186' </msg>
<msg timestamp="20170728 17:03:03.229" level="INFO">${transaction_check} = ()</msg>
<status status="PASS" endtime="20170728 17:03:03.230" starttime="20170728 17:03:03.216"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${transaction_check}</arg>
</arguments>
<assign>
<var>${transaction_check_length}</var>
</assign>
<msg timestamp="20170728 17:03:03.232" level="INFO">Length is 0</msg>
<msg timestamp="20170728 17:03:03.234" level="INFO">${transaction_check_length} = 0</msg>
<status status="PASS" endtime="20170728 17:03:03.235" starttime="20170728 17:03:03.231"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${transaction_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:03.239" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:03.241" starttime="20170728 17:03:03.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>ajb_account_transaction里的没有相关数据</arg>
</arguments>
<msg timestamp="20170728 17:03:03.244" level="INFO">ajb_account_transaction里的没有相关数据</msg>
<status status="PASS" endtime="20170728 17:03:03.245" starttime="20170728 17:03:03.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当输入已有的user_id和amount数目为0的时候返回数据没有入库</arg>
</arguments>
<msg timestamp="20170728 17:03:03.247" level="INFO">当输入已有的user_id和amount数目为0的时候返回数据没有入库</msg>
<status status="PASS" endtime="20170728 17:03:03.248" starttime="20170728 17:03:03.246"></status>
</kw>
<kw name="艾佳币恢复数目" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:03.254" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:03.265" starttime="20170728 17:03:03.252"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:03.266" starttime="20170728 17:03:03.250"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:03.267" starttime="20170728 17:03:03.250"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount \ SET total_amount=${database[0][2]},balance_amount=${database[0][3]},frozen_amount=${database[0][4]}where account_id="${account_id}";</arg>
</arguments>
<msg timestamp="20170728 17:03:03.270" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount  SET total_amount=50423.00,balance_amount=49595.00,frozen_amount=828.00where account_id="6135"; </msg>
<status status="PASS" endtime="20170728 17:03:03.279" starttime="20170728 17:03:03.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170728 17:03:03.282" level="INFO">成功</msg>
<status status="PASS" endtime="20170728 17:03:03.283" starttime="20170728 17:03:03.280"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:03.285" starttime="20170728 17:03:03.249"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:03.286" critical="yes" starttime="20170728 17:03:02.837"></status>
</test>
<test id="s1-s1-s2-t3" name="输入木有的user_id和正确的amount参数">
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>123456784</arg>
<arg>1</arg>
<arg>2</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:03:03.300" level="INFO">${args11} = 123456784</msg>
<status status="PASS" endtime="20170728 17:03:03.301" starttime="20170728 17:03:03.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:03:03.303" level="INFO">${args22} = 1</msg>
<status status="PASS" endtime="20170728 17:03:03.304" starttime="20170728 17:03:03.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 17:03:03.307" level="INFO">${args33} = 2</msg>
<status status="PASS" endtime="20170728 17:03:03.308" starttime="20170728 17:03:03.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 17:03:03.311" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 17:03:03.311" starttime="20170728 17:03:03.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 17:03:03.315" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</msg>
<status status="PASS" endtime="20170728 17:03:03.315" starttime="20170728 17:03:03.313"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:03.316" starttime="20170728 17:03:03.294"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:03.321" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:03.330" starttime="20170728 17:03:03.320"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:03.332" starttime="20170728 17:03:03.318"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:03.334" starttime="20170728 17:03:03.317"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id ='${args11}'</arg>
</arguments>
<assign>
<var>${no_user_id}</var>
</assign>
<msg timestamp="20170728 17:03:03.337" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id ='123456784' </msg>
<msg timestamp="20170728 17:03:03.346" level="INFO">${no_user_id} = ()</msg>
<status status="PASS" endtime="20170728 17:03:03.347" starttime="20170728 17:03:03.336"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${no_user_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:03.350" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170728 17:03:03.351" starttime="20170728 17:03:03.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>此user_id不存在</arg>
</arguments>
<msg timestamp="20170728 17:03:03.353" level="INFO">此user_id不存在</msg>
<status status="PASS" endtime="20170728 17:03:03.354" starttime="20170728 17:03:03.352"></status>
</kw>
<kw name="Data" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data_no_user_id}</var>
</assign>
<msg timestamp="20170728 17:03:03.368" level="INFO">${data_no_user_id} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:03.369" starttime="20170728 17:03:03.355"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data_no_user_id.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 17:03:03.372" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:03.373" starttime="20170728 17:03:03.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 17:03:03.376" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 17:03:03.377" starttime="20170728 17:03:03.374"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data_no_user_id.text}</arg>
</arguments>
<assign>
<var>${toJson1}</var>
</assign>
<msg timestamp="20170728 17:03:03.380" level="INFO">To JSON using : content={"data":{"orderNum":null},"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 17:03:03.381" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 17:03:03.382" level="INFO">${toJson1} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': {u'orderNum': None}, u'success': True}</msg>
<status status="PASS" endtime="20170728 17:03:03.382" starttime="20170728 17:03:03.379"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson1['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 17:03:03.384" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:03.385" starttime="20170728 17:03:03.383"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson1['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:03.387" starttime="20170728 17:03:03.386"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${toJson1['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${no_user_id_orderNum}</var>
</assign>
<msg timestamp="20170728 17:03:03.391" level="INFO">${no_user_id_orderNum} = None</msg>
<status status="PASS" endtime="20170728 17:03:03.392" starttime="20170728 17:03:03.389"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${no_user_id_orderNum}</arg>
</arguments>
<assign>
<var>${no_user_id_orderNum_length}</var>
</assign>
<msg timestamp="20170728 17:03:03.395" level="INFO">${no_user_id_orderNum_length} = None</msg>
<status status="PASS" endtime="20170728 17:03:03.395" starttime="20170728 17:03:03.393"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${no_user_id_orderNum_length}</arg>
<arg>None</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:03.397" starttime="20170728 17:03:03.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:03.399" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:03.400" starttime="20170728 17:03:03.398"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id ='${args11}'</arg>
</arguments>
<assign>
<var>${no_user_id_after}</var>
</assign>
<msg timestamp="20170728 17:03:03.402" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id ='123456784' </msg>
<msg timestamp="20170728 17:03:03.448" level="INFO">${no_user_id_after} = ()</msg>
<status status="PASS" endtime="20170728 17:03:03.451" starttime="20170728 17:03:03.401"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${no_user_id_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:03.460" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170728 17:03:03.462" starttime="20170728 17:03:03.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>此用户不存在，调用接口也不能创建账户</arg>
</arguments>
<msg timestamp="20170728 17:03:03.469" level="INFO">此用户不存在，调用接口也不能创建账户</msg>
<status status="PASS" endtime="20170728 17:03:03.473" starttime="20170728 17:03:03.465"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time_no}</var>
</assign>
<msg timestamp="20170728 17:03:03.480" level="INFO">${current_time_no} = 2017-07-28 17:03:03.479</msg>
<status status="PASS" endtime="20170728 17:03:03.481" starttime="20170728 17:03:03.478"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_no}</arg>
<arg>15 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_301}</var>
</assign>
<msg timestamp="20170728 17:03:03.484" level="INFO">${current_time_before_301} = 2017-07-28 17:02:48.479</msg>
<status status="PASS" endtime="20170728 17:03:03.486" starttime="20170728 17:03:03.483"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_no}</arg>
<arg>61 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_302}</var>
</assign>
<msg timestamp="20170728 17:03:03.490" level="INFO">${current_time_after_302} = 2017-07-28 17:04:04.479</msg>
<status status="PASS" endtime="20170728 17:03:03.491" starttime="20170728 17:03:03.488"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where user_id ='${args11}' and update_time between' ${current_time_before_301}' and '${current_time_after_302}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:03.493" level="INFO">Executing : Query  |  select * from account_unilateral_bill where user_id ='123456784' and update_time between' 2017-07-28 17:02:48.479' and '2017-07-28 17:04:04.479' </msg>
<msg timestamp="20170728 17:03:03.503" level="INFO">${user_id} = ()</msg>
<status status="PASS" endtime="20170728 17:03:03.504" starttime="20170728 17:03:03.492"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${user_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:03.507" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170728 17:03:03.507" starttime="20170728 17:03:03.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill里是空的</arg>
</arguments>
<msg timestamp="20170728 17:03:03.509" level="INFO">表account_unilateral_bill里是空的</msg>
<status status="PASS" endtime="20170728 17:03:03.510" starttime="20170728 17:03:03.508"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time_nouser}</var>
</assign>
<msg timestamp="20170728 17:03:03.512" level="INFO">${current_time_nouser} = 2017-07-28 17:03:03.512</msg>
<status status="PASS" endtime="20170728 17:03:03.512" starttime="20170728 17:03:03.511"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_nouser}</arg>
<arg>15 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_3011}</var>
</assign>
<msg timestamp="20170728 17:03:03.516" level="INFO">${current_time_before_3011} = 2017-07-28 17:02:48.512</msg>
<status status="PASS" endtime="20170728 17:03:03.517" starttime="20170728 17:03:03.514"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_nouser}</arg>
<arg>61 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_3022}</var>
</assign>
<msg timestamp="20170728 17:03:03.520" level="INFO">${current_time_after_3022} = 2017-07-28 17:04:04.512</msg>
<status status="PASS" endtime="20170728 17:03:03.520" starttime="20170728 17:03:03.518"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where user_id ='${args11}' and update_time between' ${current_time_before_3011}' and '${current_time_after_3022}'</arg>
</arguments>
<assign>
<var>${user_id_no}</var>
</assign>
<msg timestamp="20170728 17:03:03.524" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id ='123456784' and update_time between' 2017-07-28 17:02:48.512' and '2017-07-28 17:04:04.512' </msg>
<msg timestamp="20170728 17:03:03.534" level="INFO">${user_id_no} = ()</msg>
<status status="PASS" endtime="20170728 17:03:03.535" starttime="20170728 17:03:03.522"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${user_id_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:03.537" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170728 17:03:03.538" starttime="20170728 17:03:03.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>ajb_account_transaction里是空的</arg>
</arguments>
<msg timestamp="20170728 17:03:03.541" level="INFO">ajb_account_transaction里是空的</msg>
<status status="PASS" endtime="20170728 17:03:03.541" starttime="20170728 17:03:03.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>调用艾佳币回收冻结，没有user_id,也不能创建新的账号。</arg>
</arguments>
<msg timestamp="20170728 17:03:03.543" level="INFO">调用艾佳币回收冻结，没有user_id,也不能创建新的账号。</msg>
<status status="PASS" endtime="20170728 17:03:03.544" starttime="20170728 17:03:03.542"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:03.544" critical="yes" starttime="20170728 17:03:03.290"></status>
</test>
<test id="s1-s1-s2-t4" name="输入已有的userId和amount为字符的时候">
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>100000</arg>
<arg>str</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:03:03.553" level="INFO">${args11} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:03.554" starttime="20170728 17:03:03.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:03:03.557" level="INFO">${args22} = str</msg>
<status status="PASS" endtime="20170728 17:03:03.557" starttime="20170728 17:03:03.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 17:03:03.559" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170728 17:03:03.560" starttime="20170728 17:03:03.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 17:03:03.562" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 17:03:03.562" starttime="20170728 17:03:03.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 17:03:03.565" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</msg>
<status status="PASS" endtime="20170728 17:03:03.567" starttime="20170728 17:03:03.563"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:03.568" starttime="20170728 17:03:03.550"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:03.577" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:03.584" starttime="20170728 17:03:03.575"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:03.586" starttime="20170728 17:03:03.573"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:03.587" starttime="20170728 17:03:03.570"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 17:03:03.592" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</msg>
<status status="PASS" endtime="20170728 17:03:03.593" starttime="20170728 17:03:03.591"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 17:03:03.597" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:03.598" starttime="20170728 17:03:03.595"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:03.602" starttime="20170728 17:03:03.601"></status>
</kw>
<msg timestamp="20170728 17:03:03.603" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:03:03.604" starttime="20170728 17:03:03.599"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>user_id</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:03.608" starttime="20170728 17:03:03.607"></status>
</kw>
<msg timestamp="20170728 17:03:03.609" level="INFO">${args11_after} = user_id</msg>
<status status="PASS" endtime="20170728 17:03:03.610" starttime="20170728 17:03:03.605"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:03.616" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:03.642" starttime="20170728 17:03:03.615"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:03.643" starttime="20170728 17:03:03.613"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:03.644" starttime="20170728 17:03:03.611"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 17:03:03.647" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and channel_no='1' </msg>
<msg timestamp="20170728 17:03:03.667" level="INFO">${database1} = ((9100, '32102151361499943857', 100000, 6135, 1, '32102151361499943857', '20170714000118SSP038852', Decimal('2.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, ...</msg>
<status status="PASS" endtime="20170728 17:03:03.668" starttime="20170728 17:03:03.645"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 17:03:03.670" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 17:03:03.682" level="INFO">${database} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 8), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:03.682" starttime="20170728 17:03:03.669"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 17:03:03.685" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:03.685" starttime="20170728 17:03:03.684"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 17:03:03.690" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 17:03:03.691" starttime="20170728 17:03:03.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:03.693" level="INFO">获得account_id值为：6135</msg>
<status status="PASS" endtime="20170728 17:03:03.694" starttime="20170728 17:03:03.692"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:03.696" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:03.697" starttime="20170728 17:03:03.695"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:03.699" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:03.699" starttime="20170728 17:03:03.698"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:03.701" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:03.702" starttime="20170728 17:03:03.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:03.704" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 17:03:03.707" starttime="20170728 17:03:03.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 17:03:03.710" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:03.711" starttime="20170728 17:03:03.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:03.714" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:03.714" starttime="20170728 17:03:03.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:03.716" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:03.717" starttime="20170728 17:03:03.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:03.720" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:03.722" starttime="20170728 17:03:03.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:03.725" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:03:03.726" starttime="20170728 17:03:03.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 17:03:03.729" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:03.730" starttime="20170728 17:03:03.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 17:03:03.731" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</msg>
<status status="PASS" endtime="20170728 17:03:03.732" starttime="20170728 17:03:03.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170728 17:03:03.736" level="INFO">${database} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 8), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:03.737" starttime="20170728 17:03:03.734"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:03.738" starttime="20170728 17:03:03.588"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Data" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:03.754" starttime="20170728 17:03:03.743"></status>
</kw>
<msg timestamp="20170728 17:03:03.755" level="INFO">${data} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:03.757" starttime="20170728 17:03:03.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 17:03:03.759" level="INFO">${data} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:03.760" starttime="20170728 17:03:03.758"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:03.761" starttime="20170728 17:03:03.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:03.763" level="INFO">400</msg>
<status status="PASS" endtime="20170728 17:03:03.763" starttime="20170728 17:03:03.762"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20170728 17:03:03.766" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:03.767" starttime="20170728 17:03:03.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>400由于语法格式有误，服务器无法理解此请求。</arg>
</arguments>
<msg timestamp="20170728 17:03:03.769" level="INFO">400由于语法格式有误，服务器无法理解此请求。</msg>
<status status="PASS" endtime="20170728 17:03:03.770" starttime="20170728 17:03:03.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 17:03:03.773" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 17:03:03.774" starttime="20170728 17:03:03.771"></status>
</kw>
<kw name="amount和表里的校验" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:03.779" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:03.792" starttime="20170728 17:03:03.778"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:03.793" starttime="20170728 17:03:03.777"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:03.794" starttime="20170728 17:03:03.776"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:03.796" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 17:03:03.803" level="INFO">${user_id} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 8), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:03.804" starttime="20170728 17:03:03.795"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:03.808" starttime="20170728 17:03:03.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 17:03:03.809" level="INFO">total_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 17:03:03.810" starttime="20170728 17:03:03.809"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:03.814" starttime="20170728 17:03:03.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 17:03:03.816" level="INFO">balance_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 17:03:03.817" starttime="20170728 17:03:03.815"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:03.819" starttime="20170728 17:03:03.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 17:03:03.820" level="INFO">frozen_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 17:03:03.821" starttime="20170728 17:03:03.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amounts的数据没有变化正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:03.824" level="INFO">amounts的数据没有变化正确的</msg>
<status status="PASS" endtime="20170728 17:03:03.824" starttime="20170728 17:03:03.823"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:03.827" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:03.827" starttime="20170728 17:03:03.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount内容没有发生变化</arg>
</arguments>
<msg timestamp="20170728 17:03:03.829" level="INFO">表account_amount内容没有发生变化</msg>
<status status="PASS" endtime="20170728 17:03:03.830" starttime="20170728 17:03:03.828"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:03:03.833" level="INFO">${current_time} = 2017-07-28 17:03:03.833</msg>
<status status="PASS" endtime="20170728 17:03:03.834" starttime="20170728 17:03:03.832"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:03.837" level="INFO">${current_time_before_30} = 2017-07-28 17:02:03.833</msg>
<status status="PASS" endtime="20170728 17:03:03.838" starttime="20170728 17:03:03.835"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:03.841" level="INFO">${current_time_after_30} = 2017-07-28 17:04:08.833</msg>
<status status="PASS" endtime="20170728 17:03:03.842" starttime="20170728 17:03:03.839"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${bill_check}</var>
</assign>
<msg timestamp="20170728 17:03:03.844" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6135' and update_time between' 2017-07-28 17:02:03.833' and '2017-07-28 17:04:08.833' </msg>
<msg timestamp="20170728 17:03:03.850" level="INFO">${bill_check} = ()</msg>
<status status="PASS" endtime="20170728 17:03:03.851" starttime="20170728 17:03:03.842"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${bill_check}</arg>
</arguments>
<assign>
<var>${bill_check_length}</var>
</assign>
<msg timestamp="20170728 17:03:03.854" level="INFO">Length is 0</msg>
<msg timestamp="20170728 17:03:03.856" level="INFO">${bill_check_length} = 0</msg>
<status status="PASS" endtime="20170728 17:03:03.857" starttime="20170728 17:03:03.852"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${bill_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:03.859" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:03.860" starttime="20170728 17:03:03.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>account_unilateral_bill里的没有相关数据</arg>
</arguments>
<msg timestamp="20170728 17:03:03.861" level="INFO">account_unilateral_bill里的没有相关数据</msg>
<status status="PASS" endtime="20170728 17:03:03.862" starttime="20170728 17:03:03.860"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num ='${args11}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${transaction_check}</var>
</assign>
<msg timestamp="20170728 17:03:03.865" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num ='100000' and update_time between' 2017-07-28 17:02:03.833' and '2017-07-28 17:04:08.833' </msg>
<msg timestamp="20170728 17:03:03.876" level="INFO">${transaction_check} = ()</msg>
<status status="PASS" endtime="20170728 17:03:03.877" starttime="20170728 17:03:03.863"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${transaction_check}</arg>
</arguments>
<assign>
<var>${transaction_check_length}</var>
</assign>
<msg timestamp="20170728 17:03:03.879" level="INFO">Length is 0</msg>
<msg timestamp="20170728 17:03:03.880" level="INFO">${transaction_check_length} = 0</msg>
<status status="PASS" endtime="20170728 17:03:03.880" starttime="20170728 17:03:03.878"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${transaction_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:03.882" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:03.883" starttime="20170728 17:03:03.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>ajb_account_transaction里的没有相关数据</arg>
</arguments>
<msg timestamp="20170728 17:03:03.885" level="INFO">ajb_account_transaction里的没有相关数据</msg>
<status status="PASS" endtime="20170728 17:03:03.885" starttime="20170728 17:03:03.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库表里数据调用接口前后没有发生变化</arg>
</arguments>
<msg timestamp="20170728 17:03:03.887" level="INFO">数据库表里数据调用接口前后没有发生变化</msg>
<status status="PASS" endtime="20170728 17:03:03.888" starttime="20170728 17:03:03.886"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:03.890" starttime="20170728 17:03:03.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>输入已有的user_id和amount为字符的时候，语法错误，报400</arg>
</arguments>
<msg timestamp="20170728 17:03:03.891" level="INFO">输入已有的user_id和amount为字符的时候，语法错误，报400</msg>
<status status="PASS" endtime="20170728 17:03:03.892" starttime="20170728 17:03:03.891"></status>
</kw>
<kw name="艾佳币恢复数目" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:03.901" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:03.911" starttime="20170728 17:03:03.899"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:03.912" starttime="20170728 17:03:03.897"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:03.913" starttime="20170728 17:03:03.895"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount \ SET total_amount=${database[0][2]},balance_amount=${database[0][3]},frozen_amount=${database[0][4]}where account_id="${account_id}";</arg>
</arguments>
<msg timestamp="20170728 17:03:03.917" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount  SET total_amount=50423.00,balance_amount=49595.00,frozen_amount=828.00where account_id="6135"; </msg>
<status status="PASS" endtime="20170728 17:03:03.924" starttime="20170728 17:03:03.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170728 17:03:03.927" level="INFO">成功</msg>
<status status="PASS" endtime="20170728 17:03:03.927" starttime="20170728 17:03:03.925"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:03.928" starttime="20170728 17:03:03.893"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:03.929" critical="yes" starttime="20170728 17:03:03.546"></status>
</test>
<status status="PASS" endtime="20170728 17:03:03.931" starttime="20170728 17:03:01.285"></status>
</suite>
<suite source="F:\logs and reports\账户中心\艾佳币\艾佳币回收取消.txt" id="s1-s1-s3" name="艾佳币回收取消">
<test id="s1-s1-s3-t1" name="输入正确的回收取消订单号">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:03.966" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:03.976" starttime="20170728 17:03:03.965"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:03.977" starttime="20170728 17:03:03.964"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:03.979" starttime="20170728 17:03:03.962"></status>
</kw>
<kw name="清数据" library="myResource">
<arguments>
<arg>88888888</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:03.984" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:03.993" starttime="20170728 17:03:03.983"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:03.994" starttime="20170728 17:03:03.982"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:03.995" starttime="20170728 17:03:03.980"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170728 17:03:03.997" level="INFO">Executing : Query  |  select * from ajb_account_transaction where id=88888888 </msg>
<msg timestamp="20170728 17:03:04.003" level="INFO">${check} = ()</msg>
<status status="PASS" endtime="20170728 17:03:04.004" starttime="20170728 17:03:03.997"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170728 17:03:04.009" level="INFO">Length is 0</msg>
<msg timestamp="20170728 17:03:04.010" level="INFO">${check_length} = 0</msg>
<status status="PASS" endtime="20170728 17:03:04.010" starttime="20170728 17:03:04.005"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} != 0</arg>
<arg>execute sql string</arg>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>数据库之前没有数据</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库之前没有数据</arg>
</arguments>
<msg timestamp="20170728 17:03:04.014" level="INFO">数据库之前没有数据</msg>
<status status="PASS" endtime="20170728 17:03:04.015" starttime="20170728 17:03:04.013"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:04.016" starttime="20170728 17:03:04.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库里面的这条数据清理成功啦。</arg>
</arguments>
<msg timestamp="20170728 17:03:04.019" level="INFO">数据库里面的这条数据清理成功啦。</msg>
<status status="PASS" endtime="20170728 17:03:04.020" starttime="20170728 17:03:04.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_delete}</arg>
</arguments>
<msg timestamp="20170728 17:03:04.022" level="INFO">${id_delete} = 88888888</msg>
<status status="PASS" endtime="20170728 17:03:04.023" starttime="20170728 17:03:04.021"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:04.024" starttime="20170728 17:03:03.979"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("${id_delete}","32102151361501037341","100000","6135","1","32102151361501037341","","2","1","8","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170728 17:03:04.025" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("88888888","32102151361501037341","100000","6135","1","32102151361501037341","","2","1","8","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170728 17:03:04.072" starttime="20170728 17:03:04.024"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>32102151361501037341</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:03:04.076" level="INFO">${args11} = 32102151361501037341</msg>
<status status="PASS" endtime="20170728 17:03:04.077" starttime="20170728 17:03:04.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:03:04.079" level="INFO">${args22} = </msg>
<status status="PASS" endtime="20170728 17:03:04.080" starttime="20170728 17:03:04.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 17:03:04.083" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170728 17:03:04.084" starttime="20170728 17:03:04.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 17:03:04.086" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 17:03:04.087" starttime="20170728 17:03:04.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 17:03:04.091" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</msg>
<status status="PASS" endtime="20170728 17:03:04.091" starttime="20170728 17:03:04.089"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:04.092" starttime="20170728 17:03:04.074"></status>
</kw>
<kw name="order_num的校验" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:04.099" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:04.107" starttime="20170728 17:03:04.097"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:04.109" starttime="20170728 17:03:04.096"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:04.110" starttime="20170728 17:03:04.094"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num ='${args11}'</arg>
</arguments>
<assign>
<var>${check_order_num}</var>
</assign>
<msg timestamp="20170728 17:03:04.113" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num ='32102151361501037341' </msg>
<msg timestamp="20170728 17:03:04.125" level="INFO">${check_order_num} = ((88888888, '32102151361501037341', 100000, 6135, 1, '32102151361501037341', '', Decimal('2.00'), 1, 8, 2, 0, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)),)</msg>
<status status="PASS" endtime="20170728 17:03:04.126" starttime="20170728 17:03:04.110"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check_order_num}</arg>
</arguments>
<assign>
<var>${check_order_num_length}</var>
</assign>
<msg timestamp="20170728 17:03:04.130" level="INFO">Length is 1</msg>
<msg timestamp="20170728 17:03:04.131" level="INFO">${check_order_num_length} = 1</msg>
<status status="PASS" endtime="20170728 17:03:04.131" starttime="20170728 17:03:04.128"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_order_num_length}==1 and ${check_order_num[0][9]}==8</arg>
<arg>set variable</arg>
<arg>该订单属于艾佳币回收冻结订单</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>该订单不属于艾佳币回收冻结订单</arg>
</arguments>
<assign>
<var>${var}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>该订单属于艾佳币回收冻结订单</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:04.135" starttime="20170728 17:03:04.134"></status>
</kw>
<msg timestamp="20170728 17:03:04.136" level="INFO">${var} = 该订单属于艾佳币回收冻结订单</msg>
<status status="PASS" endtime="20170728 17:03:04.137" starttime="20170728 17:03:04.133"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${var}'=='该订单不属于艾佳币回收冻结订单'</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:04.140" starttime="20170728 17:03:04.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${var}</arg>
</arguments>
<msg timestamp="20170728 17:03:04.142" level="INFO">该订单属于艾佳币回收冻结订单</msg>
<status status="PASS" endtime="20170728 17:03:04.143" starttime="20170728 17:03:04.141"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:04.144" starttime="20170728 17:03:04.093"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 17:03:04.147" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</msg>
<status status="PASS" endtime="20170728 17:03:04.148" starttime="20170728 17:03:04.146"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 17:03:04.150" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:04.150" starttime="20170728 17:03:04.149"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:04.154" starttime="20170728 17:03:04.153"></status>
</kw>
<msg timestamp="20170728 17:03:04.155" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:03:04.156" starttime="20170728 17:03:04.151"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>order_num</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:04.162" starttime="20170728 17:03:04.160"></status>
</kw>
<msg timestamp="20170728 17:03:04.163" level="INFO">${args11_after} = order_num</msg>
<status status="PASS" endtime="20170728 17:03:04.164" starttime="20170728 17:03:04.158"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:04.169" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:04.201" starttime="20170728 17:03:04.168"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:04.202" starttime="20170728 17:03:04.166"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:04.203" starttime="20170728 17:03:04.165"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 17:03:04.207" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num='32102151361501037341' and channel_no='1' </msg>
<msg timestamp="20170728 17:03:04.234" level="INFO">${database1} = ((88888888, '32102151361501037341', 100000, 6135, 1, '32102151361501037341', '', Decimal('2.00'), 1, 8, 2, 0, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)),)</msg>
<status status="PASS" endtime="20170728 17:03:04.235" starttime="20170728 17:03:04.204"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 17:03:04.240" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 17:03:04.259" level="INFO">${database} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 8), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:04.260" starttime="20170728 17:03:04.237"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 17:03:04.262" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:04.263" starttime="20170728 17:03:04.261"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 17:03:04.266" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 17:03:04.268" starttime="20170728 17:03:04.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:04.272" level="INFO">获得account_id值为：6135</msg>
<status status="PASS" endtime="20170728 17:03:04.274" starttime="20170728 17:03:04.270"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:04.277" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:04.277" starttime="20170728 17:03:04.275"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:04.280" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:04.280" starttime="20170728 17:03:04.278"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:04.284" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:04.285" starttime="20170728 17:03:04.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:04.288" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 17:03:04.290" starttime="20170728 17:03:04.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 17:03:04.292" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:04.293" starttime="20170728 17:03:04.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:04.295" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:04.295" starttime="20170728 17:03:04.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:04.299" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:04.300" starttime="20170728 17:03:04.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:04.302" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:04.303" starttime="20170728 17:03:04.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:04.305" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:03:04.306" starttime="20170728 17:03:04.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 17:03:04.309" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:04.310" starttime="20170728 17:03:04.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 17:03:04.312" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</msg>
<status status="PASS" endtime="20170728 17:03:04.312" starttime="20170728 17:03:04.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170728 17:03:04.314" level="INFO">${database} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 8), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:04.315" starttime="20170728 17:03:04.313"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:04.316" starttime="20170728 17:03:04.145"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Ajb Withdraw Cancel" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:04.440" starttime="20170728 17:03:04.322"></status>
</kw>
<msg timestamp="20170728 17:03:04.441" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:04.442" starttime="20170728 17:03:04.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 17:03:04.445" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:04.445" starttime="20170728 17:03:04.443"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:04.446" starttime="20170728 17:03:04.318"></status>
</kw>
<kw name="字段验证" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:04.449" level="INFO">200</msg>
<status status="PASS" endtime="20170728 17:03:04.450" starttime="20170728 17:03:04.448"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 17:03:04.452" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:04.452" starttime="20170728 17:03:04.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 17:03:04.454" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 17:03:04.455" starttime="20170728 17:03:04.453"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 17:03:04.459" level="INFO">To JSON using : content={"data":null,"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 17:03:04.460" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 17:03:04.461" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': None, u'success': True}</msg>
<status status="PASS" endtime="20170728 17:03:04.462" starttime="20170728 17:03:04.457"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 17:03:04.464" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:04.465" starttime="20170728 17:03:04.463"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:04.467" starttime="20170728 17:03:04.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:04.469" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:04.469" starttime="20170728 17:03:04.468"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<assign>
<var>@{Link1}</var>
</assign>
<msg timestamp="20170728 17:03:04.473" level="INFO">@{Link1} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:04.474" starttime="20170728 17:03:04.471"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>"${value}" in @{Link1}</arg>
<arg>Get From Dictionary</arg>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${orderNum}</var>
</assign>
<msg timestamp="20170728 17:03:04.479" level="INFO">${orderNum} = None</msg>
<status status="PASS" endtime="20170728 17:03:04.480" starttime="20170728 17:03:04.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<msg timestamp="20170728 17:03:04.484" level="INFO">${orderNum} = None</msg>
<status status="PASS" endtime="20170728 17:03:04.485" starttime="20170728 17:03:04.482"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:04.486" starttime="20170728 17:03:04.447"></status>
</kw>
<kw name="确认取消的金额数" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:04.499" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:04.513" starttime="20170728 17:03:04.497"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:04.515" starttime="20170728 17:03:04.495"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:04.516" starttime="20170728 17:03:04.491"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>8</arg>
</arguments>
<assign>
<var>${event_code_judge}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>8</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:04.522" starttime="20170728 17:03:04.519"></status>
</kw>
<msg timestamp="20170728 17:03:04.525" level="INFO">${event_code_judge} = 8</msg>
<status status="PASS" endtime="20170728 17:03:04.526" starttime="20170728 17:03:04.517"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num ='${args11}' and event_code=${event_code_judge}</arg>
</arguments>
<assign>
<var>${search}</var>
</assign>
<msg timestamp="20170728 17:03:04.529" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num ='32102151361501037341' and event_code=8 </msg>
<msg timestamp="20170728 17:03:04.542" level="INFO">${search} = ((88888888, '32102151361501037341', 100000, 6135, 1, '32102151361501037341', '', Decimal('2.00'), 1, 8, 2, 0, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)),)</msg>
<status status="PASS" endtime="20170728 17:03:04.543" starttime="20170728 17:03:04.527"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${search[0][7]}</arg>
</arguments>
<assign>
<var>${change_total_amount}</var>
</assign>
<msg timestamp="20170728 17:03:04.546" level="INFO">${change_total_amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:03:04.547" starttime="20170728 17:03:04.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${change_total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:04.551" level="INFO">${change_total_amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:03:04.553" starttime="20170728 17:03:04.548"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:04.554" starttime="20170728 17:03:04.487"></status>
</kw>
<kw name="表account_unilateral_bill的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_unilateral_bill</arg>
</arguments>
<msg timestamp="20170728 17:03:04.561" level="INFO">现在开始校验表account_unilateral_bill</msg>
<status status="PASS" endtime="20170728 17:03:04.563" starttime="20170728 17:03:04.559"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:04.570" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:04.581" starttime="20170728 17:03:04.568"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:04.582" starttime="20170728 17:03:04.566"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:04.583" starttime="20170728 17:03:04.564"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>account_unilateral_bill</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:04.590" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:04.601" starttime="20170728 17:03:04.588"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:04.602" starttime="20170728 17:03:04.587"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:04.603" starttime="20170728 17:03:04.586"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:03:04.605" level="INFO">${current_time} = 2017-07-28 17:03:04.605</msg>
<status status="PASS" endtime="20170728 17:03:04.608" starttime="20170728 17:03:04.604"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>0 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:04.611" level="INFO">${current_time_before_30} = 2017-07-28 17:03:04.605</msg>
<status status="PASS" endtime="20170728 17:03:04.612" starttime="20170728 17:03:04.609"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:04.614" level="INFO">${current_time_after_30} = 2017-07-28 17:04:44.605</msg>
<status status="PASS" endtime="20170728 17:03:04.615" starttime="20170728 17:03:04.613"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 17:03:04.617" level="INFO">Executing : Query  |  select * from account_unilateral_bill where user_id='100000' and update_time between' 2017-07-28 17:03:04.605' and '2017-07-28 17:04:44.605' </msg>
<msg timestamp="20170728 17:03:04.626" level="INFO">${updatetime} = ((7700, '32102151361501230520', 100000, 6135, '32102151361501230519', 1, 9, 2, Decimal('2.00'), None, datetime.datetime(2017, 7, 28, 17, 4, 9), datetime.datetime(2017, 7, 28, 17, 4, 9), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:04.628" starttime="20170728 17:03:04.616"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 17:03:04.630" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 17:03:04.631" starttime="20170728 17:03:04.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 17:03:04.632" level="INFO">account_unilateral_bill表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 17:03:04.633" starttime="20170728 17:03:04.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:04.635" level="INFO">${current_time_before_30} = 2017-07-28 17:03:04.605</msg>
<status status="PASS" endtime="20170728 17:03:04.636" starttime="20170728 17:03:04.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:04.639" level="INFO">${current_time_after_30} = 2017-07-28 17:04:44.605</msg>
<status status="PASS" endtime="20170728 17:03:04.641" starttime="20170728 17:03:04.637"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:04.643" starttime="20170728 17:03:04.584"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id} 'and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:04.646" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6135 'and update_time between' 2017-07-28 17:03:04.605' and '2017-07-28 17:04:44.605' </msg>
<msg timestamp="20170728 17:03:04.651" level="INFO">${user_id} = ((7700, '32102151361501230520', 100000, 6135, '32102151361501230519', 1, 9, 2, Decimal('2.00'), None, datetime.datetime(2017, 7, 28, 17, 4, 9), datetime.datetime(2017, 7, 28, 17, 4, 9), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:04.652" starttime="20170728 17:03:04.645"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:04.654" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:04.655" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:04.657" starttime="20170728 17:03:04.653"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:04.660" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:04.661" starttime="20170728 17:03:04.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:04.663" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:04.664" starttime="20170728 17:03:04.662"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:04.667" starttime="20170728 17:03:04.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:03:04.670" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:03:04.671" starttime="20170728 17:03:04.669"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:04.675" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:04.676" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:04.677" starttime="20170728 17:03:04.673"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:04.679" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:04.679" starttime="20170728 17:03:04.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:04.682" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:04.682" starttime="20170728 17:03:04.681"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:03:04.684" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:04.685" starttime="20170728 17:03:04.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 17:03:04.689" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 17:03:04.691" starttime="20170728 17:03:04.686"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>9</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:04.701" starttime="20170728 17:03:04.699"></status>
</kw>
<msg timestamp="20170728 17:03:04.703" level="INFO">${event_code} = 9</msg>
<status status="PASS" endtime="20170728 17:03:04.704" starttime="20170728 17:03:04.696"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:03:04.707" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:03:04.707" starttime="20170728 17:03:04.705"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:04.711" starttime="20170728 17:03:04.710"></status>
</kw>
<msg timestamp="20170728 17:03:04.712" level="INFO">${event_code_after} = 9</msg>
<status status="PASS" endtime="20170728 17:03:04.712" starttime="20170728 17:03:04.708"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:03:04.714" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:04.715" starttime="20170728 17:03:04.713"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:04.722" starttime="20170728 17:03:04.720"></status>
</kw>
<msg timestamp="20170728 17:03:04.724" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 17:03:04.725" starttime="20170728 17:03:04.716"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:04.731" starttime="20170728 17:03:04.730"></status>
</kw>
<msg timestamp="20170728 17:03:04.732" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:03:04.733" starttime="20170728 17:03:04.727"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:03:04.737" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:03:04.738" starttime="20170728 17:03:04.734"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>4</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:04.743" starttime="20170728 17:03:04.742"></status>
</kw>
<msg timestamp="20170728 17:03:04.744" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 17:03:04.745" starttime="20170728 17:03:04.741"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:04.748" starttime="20170728 17:03:04.747"></status>
</kw>
<msg timestamp="20170728 17:03:04.749" level="INFO">${total_amount} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:04.749" starttime="20170728 17:03:04.745"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${change_total_amount}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:04.755" starttime="20170728 17:03:04.753"></status>
</kw>
<msg timestamp="20170728 17:03:04.757" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:04.757" starttime="20170728 17:03:04.751"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:04.761" starttime="20170728 17:03:04.760"></status>
</kw>
<msg timestamp="20170728 17:03:04.762" level="INFO">${frozen_amount} = 826.0</msg>
<status status="PASS" endtime="20170728 17:03:04.763" starttime="20170728 17:03:04.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:04.765" level="INFO">${event_code} = 9</msg>
<status status="PASS" endtime="20170728 17:03:04.765" starttime="20170728 17:03:04.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:04.768" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 17:03:04.769" starttime="20170728 17:03:04.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:04.772" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 17:03:04.773" starttime="20170728 17:03:04.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:04.776" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:03:04.777" starttime="20170728 17:03:04.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:04.780" level="INFO">${total_amount} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:04.781" starttime="20170728 17:03:04.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:04.785" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:04.786" starttime="20170728 17:03:04.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:04.790" level="INFO">${frozen_amount} = 826.0</msg>
<status status="PASS" endtime="20170728 17:03:04.791" starttime="20170728 17:03:04.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:04.794" level="INFO">${event_code_after} = 9</msg>
<status status="PASS" endtime="20170728 17:03:04.795" starttime="20170728 17:03:04.792"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:04.796" starttime="20170728 17:03:04.693"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:04.798" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:04.799" starttime="20170728 17:03:04.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:04.802" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 17:03:04.803" starttime="20170728 17:03:04.800"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:04.806" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:04.807" starttime="20170728 17:03:04.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:04.810" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170728 17:03:04.811" starttime="20170728 17:03:04.809"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:04.813" starttime="20170728 17:03:04.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:04.816" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 17:03:04.817" starttime="20170728 17:03:04.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 17:03:04.819" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 17:03:04.819" starttime="20170728 17:03:04.818"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:04.821" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:04.822" starttime="20170728 17:03:04.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:04.825" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:04.826" starttime="20170728 17:03:04.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:04.828" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170728 17:03:04.828" starttime="20170728 17:03:04.827"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_unilateral}</var>
</assign>
<msg timestamp="20170728 17:03:04.830" level="INFO">${user_id[0][0]_unilateral} = 7700</msg>
<status status="PASS" endtime="20170728 17:03:04.831" starttime="20170728 17:03:04.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_unilateral}</arg>
</arguments>
<msg timestamp="20170728 17:03:04.836" level="INFO">${user_id[0][0]_unilateral} = 7700</msg>
<status status="PASS" endtime="20170728 17:03:04.837" starttime="20170728 17:03:04.834"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]_unilateral}'</arg>
</arguments>
<msg timestamp="20170728 17:03:04.840" level="INFO">Executing : Execute SQL String  |  delete from account_unilateral_bill where id ='7700' </msg>
<status status="PASS" endtime="20170728 17:03:04.897" starttime="20170728 17:03:04.838"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:04.898" starttime="20170728 17:03:04.557"></status>
</kw>
<kw name="表ajb_account_transaction" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170728 17:03:04.901" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170728 17:03:04.902" starttime="20170728 17:03:04.900"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:04.907" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:04.926" starttime="20170728 17:03:04.905"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:04.928" starttime="20170728 17:03:04.904"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:04.930" starttime="20170728 17:03:04.903"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>ajb_account_transaction</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:04.935" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:04.946" starttime="20170728 17:03:04.934"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:04.947" starttime="20170728 17:03:04.933"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:04.948" starttime="20170728 17:03:04.932"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:03:04.950" level="INFO">${current_time} = 2017-07-28 17:03:04.950</msg>
<status status="PASS" endtime="20170728 17:03:04.951" starttime="20170728 17:03:04.949"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>0 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:04.955" level="INFO">${current_time_before_30} = 2017-07-28 17:03:04.950</msg>
<status status="PASS" endtime="20170728 17:03:04.956" starttime="20170728 17:03:04.953"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:04.960" level="INFO">${current_time_after_30} = 2017-07-28 17:04:44.950</msg>
<status status="PASS" endtime="20170728 17:03:04.961" starttime="20170728 17:03:04.958"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 17:03:04.965" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and update_time between' 2017-07-28 17:03:04.950' and '2017-07-28 17:04:44.950' </msg>
<msg timestamp="20170728 17:03:04.976" level="INFO">${updatetime} = ((88889796, '32102151361501230518', 100000, 6135, 1, '32102151361501037341', None, Decimal('2.00'), 1, 9, 2, 0, datetime.datetime(2017, 7, 28, 17, 4, 9), datetime.datetime(2017, 7, 28, 17, 4, 9)),)</msg>
<status status="PASS" endtime="20170728 17:03:04.977" starttime="20170728 17:03:04.963"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 17:03:04.979" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 17:03:04.980" starttime="20170728 17:03:04.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 17:03:04.981" level="INFO">ajb_account_transaction表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 17:03:04.982" starttime="20170728 17:03:04.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:04.986" level="INFO">${current_time_before_30} = 2017-07-28 17:03:04.950</msg>
<status status="PASS" endtime="20170728 17:03:04.987" starttime="20170728 17:03:04.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:04.991" level="INFO">${current_time_after_30} = 2017-07-28 17:04:44.950</msg>
<status status="PASS" endtime="20170728 17:03:04.992" starttime="20170728 17:03:04.988"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:04.993" starttime="20170728 17:03:04.931"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:04.995" level="INFO">Executing : Query  |  select * from ajb_account_transaction where account_id ='6135' and update_time between' 2017-07-28 17:03:04.950' and '2017-07-28 17:04:44.950' </msg>
<msg timestamp="20170728 17:03:05.008" level="INFO">${user_id} = ((88889796, '32102151361501230518', 100000, 6135, 1, '32102151361501037341', None, Decimal('2.00'), 1, 9, 2, 0, datetime.datetime(2017, 7, 28, 17, 4, 9), datetime.datetime(2017, 7, 28, 17, 4, 9)),)</msg>
<status status="PASS" endtime="20170728 17:03:05.009" starttime="20170728 17:03:04.994"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:05.011" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:05.012" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:05.013" starttime="20170728 17:03:05.010"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:05.015" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:05.017" starttime="20170728 17:03:05.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:05.020" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:05.021" starttime="20170728 17:03:05.019"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:05.025" starttime="20170728 17:03:05.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:03:05.028" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:03:05.028" starttime="20170728 17:03:05.026"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:05.031" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:05.032" starttime="20170728 17:03:05.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no的值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:05.036" level="INFO">channel_no的值正确</msg>
<status status="PASS" endtime="20170728 17:03:05.037" starttime="20170728 17:03:05.034"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${args11}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${orderNum}</arg>
</arguments>
<assign>
<var>${bill_order_num}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:05.042" starttime="20170728 17:03:05.041"></status>
</kw>
<msg timestamp="20170728 17:03:05.043" level="INFO">${bill_order_num} = 32102151361501037341</msg>
<status status="PASS" endtime="20170728 17:03:05.044" starttime="20170728 17:03:05.038"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>${bill_order_num}</arg>
</arguments>
<msg timestamp="20170728 17:03:05.046" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:05.046" starttime="20170728 17:03:05.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170728 17:03:05.050" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170728 17:03:05.050" starttime="20170728 17:03:05.048"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>9</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:05.056" starttime="20170728 17:03:05.054"></status>
</kw>
<msg timestamp="20170728 17:03:05.057" level="INFO">${event_code} = 9</msg>
<status status="PASS" endtime="20170728 17:03:05.058" starttime="20170728 17:03:05.052"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:03:05.060" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:03:05.060" starttime="20170728 17:03:05.059"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:05.064" starttime="20170728 17:03:05.063"></status>
</kw>
<msg timestamp="20170728 17:03:05.065" level="INFO">${event_code_after} = 9</msg>
<status status="PASS" endtime="20170728 17:03:05.065" starttime="20170728 17:03:05.061"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:03:05.067" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:05.069" starttime="20170728 17:03:05.066"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:05.075" starttime="20170728 17:03:05.074"></status>
</kw>
<msg timestamp="20170728 17:03:05.076" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 17:03:05.077" starttime="20170728 17:03:05.071"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:05.082" starttime="20170728 17:03:05.081"></status>
</kw>
<msg timestamp="20170728 17:03:05.083" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:03:05.084" starttime="20170728 17:03:05.078"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:03:05.086" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:03:05.086" starttime="20170728 17:03:05.084"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>4</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:05.091" starttime="20170728 17:03:05.090"></status>
</kw>
<msg timestamp="20170728 17:03:05.092" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 17:03:05.093" starttime="20170728 17:03:05.087"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:05.098" starttime="20170728 17:03:05.097"></status>
</kw>
<msg timestamp="20170728 17:03:05.100" level="INFO">${total_amount} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:05.101" starttime="20170728 17:03:05.093"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${change_total_amount}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:05.106" starttime="20170728 17:03:05.104"></status>
</kw>
<msg timestamp="20170728 17:03:05.107" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:05.108" starttime="20170728 17:03:05.102"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:05.114" starttime="20170728 17:03:05.113"></status>
</kw>
<msg timestamp="20170728 17:03:05.115" level="INFO">${frozen_amount} = 826.0</msg>
<status status="PASS" endtime="20170728 17:03:05.116" starttime="20170728 17:03:05.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:05.118" level="INFO">${event_code} = 9</msg>
<status status="PASS" endtime="20170728 17:03:05.119" starttime="20170728 17:03:05.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:05.121" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 17:03:05.123" starttime="20170728 17:03:05.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:05.125" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 17:03:05.126" starttime="20170728 17:03:05.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:05.129" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:03:05.130" starttime="20170728 17:03:05.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:05.132" level="INFO">${total_amount} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:05.133" starttime="20170728 17:03:05.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:05.135" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:05.136" starttime="20170728 17:03:05.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:05.141" level="INFO">${frozen_amount} = 826.0</msg>
<status status="PASS" endtime="20170728 17:03:05.142" starttime="20170728 17:03:05.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:05.145" level="INFO">${event_code_after} = 9</msg>
<status status="PASS" endtime="20170728 17:03:05.146" starttime="20170728 17:03:05.143"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:05.147" starttime="20170728 17:03:05.051"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170728 17:03:05.150" level="INFO">${pay_no_after} = None</msg>
<status status="PASS" endtime="20170728 17:03:05.151" starttime="20170728 17:03:05.148"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170728 17:03:05.153" level="INFO">Length is 4</msg>
<msg timestamp="20170728 17:03:05.154" level="INFO">${pay_no_after_length} = 4</msg>
<status status="PASS" endtime="20170728 17:03:05.156" starttime="20170728 17:03:05.152"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:05.160" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:05.162" starttime="20170728 17:03:05.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170728 17:03:05.165" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170728 17:03:05.166" starttime="20170728 17:03:05.163"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:05.170" starttime="20170728 17:03:05.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:05.173" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 17:03:05.174" starttime="20170728 17:03:05.171"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:03:05.178" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:05.179" starttime="20170728 17:03:05.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 17:03:05.180" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 17:03:05.181" starttime="20170728 17:03:05.179"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][9]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:05.183" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:05.184" starttime="20170728 17:03:05.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:05.188" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 17:03:05.190" starttime="20170728 17:03:05.185"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 17:03:05.193" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:05.195" starttime="20170728 17:03:05.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170728 17:03:05.198" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170728 17:03:05.200" starttime="20170728 17:03:05.197"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:05.205" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:05.207" starttime="20170728 17:03:05.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:05.210" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:05.210" starttime="20170728 17:03:05.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 17:03:05.212" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 17:03:05.213" starttime="20170728 17:03:05.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:05.215" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170728 17:03:05.215" starttime="20170728 17:03:05.214"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170728 17:03:05.218" level="INFO">${user_id[0][0]_transaction} = 88889796</msg>
<status status="PASS" endtime="20170728 17:03:05.219" starttime="20170728 17:03:05.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170728 17:03:05.223" level="INFO">${user_id[0][0]_transaction} = 88889796</msg>
<status status="PASS" endtime="20170728 17:03:05.224" starttime="20170728 17:03:05.221"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id[0][0]}'</arg>
</arguments>
<assign>
<var>${user_id_unilateral_delete1}</var>
</assign>
<msg timestamp="20170728 17:03:05.227" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88889796' </msg>
<msg timestamp="20170728 17:03:05.273" level="INFO">${user_id_unilateral_delete1} = None</msg>
<status status="PASS" endtime="20170728 17:03:05.274" starttime="20170728 17:03:05.225"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:05.275" starttime="20170728 17:03:04.899"></status>
</kw>
<kw name="表account_amount的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_amount</arg>
</arguments>
<msg timestamp="20170728 17:03:05.280" level="INFO">现在开始校验表account_amount</msg>
<status status="PASS" endtime="20170728 17:03:05.281" starttime="20170728 17:03:05.278"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:05.286" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:05.300" starttime="20170728 17:03:05.284"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:05.302" starttime="20170728 17:03:05.283"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:05.303" starttime="20170728 17:03:05.282"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time1}</var>
</assign>
<msg timestamp="20170728 17:03:05.307" level="INFO">${current_time1} = 2017-07-28 17:03:05.307</msg>
<status status="PASS" endtime="20170728 17:03:05.308" starttime="20170728 17:03:05.304"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:05.311" level="INFO">${current_time1_before_30} = 2017-07-28 17:02:05.307</msg>
<status status="PASS" endtime="20170728 17:03:05.312" starttime="20170728 17:03:05.309"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:05.314" level="INFO">${current_time1_after_30} = 2017-07-28 17:04:05.307</msg>
<status status="PASS" endtime="20170728 17:03:05.315" starttime="20170728 17:03:05.313"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:05.318" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 17:03:05.329" level="INFO">${user_id} = ((12449, 6135, Decimal('50423.00'), Decimal('49597.00'), Decimal('826.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 9), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:05.330" starttime="20170728 17:03:05.317"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>9</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:05.336" starttime="20170728 17:03:05.335"></status>
</kw>
<msg timestamp="20170728 17:03:05.337" level="INFO">${event_code} = 9</msg>
<status status="PASS" endtime="20170728 17:03:05.338" starttime="20170728 17:03:05.333"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:03:05.341" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:03:05.342" starttime="20170728 17:03:05.340"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:05.349" starttime="20170728 17:03:05.347"></status>
</kw>
<msg timestamp="20170728 17:03:05.350" level="INFO">${event_code_after} = 9</msg>
<status status="PASS" endtime="20170728 17:03:05.352" starttime="20170728 17:03:05.344"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:03:05.356" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:05.358" starttime="20170728 17:03:05.354"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:05.364" starttime="20170728 17:03:05.363"></status>
</kw>
<msg timestamp="20170728 17:03:05.365" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 17:03:05.365" starttime="20170728 17:03:05.359"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:05.369" starttime="20170728 17:03:05.368"></status>
</kw>
<msg timestamp="20170728 17:03:05.370" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:03:05.371" starttime="20170728 17:03:05.366"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:03:05.375" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:03:05.377" starttime="20170728 17:03:05.373"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>4</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:05.381" starttime="20170728 17:03:05.380"></status>
</kw>
<msg timestamp="20170728 17:03:05.382" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 17:03:05.383" starttime="20170728 17:03:05.379"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:05.387" starttime="20170728 17:03:05.386"></status>
</kw>
<msg timestamp="20170728 17:03:05.387" level="INFO">${total_amount} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:05.390" starttime="20170728 17:03:05.384"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${change_total_amount}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:05.396" starttime="20170728 17:03:05.395"></status>
</kw>
<msg timestamp="20170728 17:03:05.397" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:05.398" starttime="20170728 17:03:05.392"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:05.402" starttime="20170728 17:03:05.400"></status>
</kw>
<msg timestamp="20170728 17:03:05.403" level="INFO">${frozen_amount} = 826.0</msg>
<status status="PASS" endtime="20170728 17:03:05.403" starttime="20170728 17:03:05.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:05.408" level="INFO">${event_code} = 9</msg>
<status status="PASS" endtime="20170728 17:03:05.408" starttime="20170728 17:03:05.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:05.411" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 17:03:05.412" starttime="20170728 17:03:05.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:05.415" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 17:03:05.416" starttime="20170728 17:03:05.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:05.418" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:03:05.419" starttime="20170728 17:03:05.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:05.421" level="INFO">${total_amount} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:05.422" starttime="20170728 17:03:05.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:05.425" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:05.427" starttime="20170728 17:03:05.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:05.431" level="INFO">${frozen_amount} = 826.0</msg>
<status status="PASS" endtime="20170728 17:03:05.432" starttime="20170728 17:03:05.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:05.434" level="INFO">${event_code_after} = 9</msg>
<status status="PASS" endtime="20170728 17:03:05.434" starttime="20170728 17:03:05.433"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:05.435" starttime="20170728 17:03:05.331"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:05.440" starttime="20170728 17:03:05.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:05.442" level="INFO">total_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:05.443" starttime="20170728 17:03:05.442"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:05.445" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:05.446" starttime="20170728 17:03:05.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:05.447" level="INFO">balance_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:05.448" starttime="20170728 17:03:05.447"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:05.450" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:05.451" starttime="20170728 17:03:05.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:05.452" level="INFO">frozen_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:05.453" starttime="20170728 17:03:05.451"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:05.456" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:05.457" starttime="20170728 17:03:05.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:05.459" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:05.460" starttime="20170728 17:03:05.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:05.462" level="INFO">表account_amount校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:05.462" starttime="20170728 17:03:05.461"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:05.463" starttime="20170728 17:03:05.277"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<msg timestamp="20170728 17:03:05.465" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=88888888 </msg>
<status status="PASS" endtime="20170728 17:03:05.513" starttime="20170728 17:03:05.464"></status>
</kw>
<kw name="艾佳币恢复数目" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:05.520" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:05.528" starttime="20170728 17:03:05.519"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:05.529" starttime="20170728 17:03:05.518"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:05.530" starttime="20170728 17:03:05.517"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount \ SET total_amount=${database[0][2]},balance_amount=${database[0][3]},frozen_amount=${database[0][4]}where account_id="${account_id}";</arg>
</arguments>
<msg timestamp="20170728 17:03:05.535" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount  SET total_amount=50423.00,balance_amount=49595.00,frozen_amount=828.00where account_id="6135"; </msg>
<status status="PASS" endtime="20170728 17:03:05.581" starttime="20170728 17:03:05.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170728 17:03:05.589" level="INFO">成功</msg>
<status status="PASS" endtime="20170728 17:03:05.592" starttime="20170728 17:03:05.585"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:05.598" starttime="20170728 17:03:05.515"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:05.602" critical="yes" starttime="20170728 17:03:03.958"></status>
</test>
<test id="s1-s1-s3-t2" name="order_num不属于艾佳币回收冻结">
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>32102151361500284846</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:03:05.619" level="INFO">${args11} = 32102151361500284846</msg>
<status status="PASS" endtime="20170728 17:03:05.621" starttime="20170728 17:03:05.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:03:05.627" level="INFO">${args22} = </msg>
<status status="PASS" endtime="20170728 17:03:05.628" starttime="20170728 17:03:05.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 17:03:05.631" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170728 17:03:05.632" starttime="20170728 17:03:05.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 17:03:05.635" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 17:03:05.637" starttime="20170728 17:03:05.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 17:03:05.641" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</msg>
<status status="PASS" endtime="20170728 17:03:05.642" starttime="20170728 17:03:05.638"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:05.644" starttime="20170728 17:03:05.614"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 17:03:05.649" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</msg>
<status status="PASS" endtime="20170728 17:03:05.650" starttime="20170728 17:03:05.648"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 17:03:05.651" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:05.652" starttime="20170728 17:03:05.650"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:05.658" starttime="20170728 17:03:05.655"></status>
</kw>
<msg timestamp="20170728 17:03:05.659" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:03:05.660" starttime="20170728 17:03:05.653"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>order_num</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:05.665" starttime="20170728 17:03:05.664"></status>
</kw>
<msg timestamp="20170728 17:03:05.666" level="INFO">${args11_after} = order_num</msg>
<status status="PASS" endtime="20170728 17:03:05.667" starttime="20170728 17:03:05.662"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:05.671" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:05.686" starttime="20170728 17:03:05.670"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:05.689" starttime="20170728 17:03:05.668"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:05.691" starttime="20170728 17:03:05.668"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 17:03:05.698" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num='32102151361500284846' and channel_no='1' </msg>
<msg timestamp="20170728 17:03:05.719" level="INFO">${database1} = ((9370, '32102151361500284846', 1000000, 6131, 1, '32102151361500284846', None, Decimal('2000.00'), 1, 8, 2, 0, datetime.datetime(2017, 7, 18, 14, 54, 12), datetime.datetime(2017, 7, 18, 14, 54, 12)),...</msg>
<status status="PASS" endtime="20170728 17:03:05.722" starttime="20170728 17:03:05.695"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 17:03:05.728" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6131' </msg>
<msg timestamp="20170728 17:03:05.734" level="INFO">${database} = ((12445, 6131, Decimal('50418.00'), Decimal('49596.00'), Decimal('822.00'), datetime.datetime(2017, 7, 12, 20, 3, 46), datetime.datetime(2017, 7, 28, 14, 27, 14), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:05.736" starttime="20170728 17:03:05.725"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 17:03:05.740" level="INFO">${user_id_real} = 1000000</msg>
<status status="PASS" endtime="20170728 17:03:05.742" starttime="20170728 17:03:05.738"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 17:03:05.744" level="INFO">${account_id} = 6131</msg>
<status status="PASS" endtime="20170728 17:03:05.745" starttime="20170728 17:03:05.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:05.749" level="INFO">获得account_id值为：6131</msg>
<status status="PASS" endtime="20170728 17:03:05.752" starttime="20170728 17:03:05.746"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:05.756" level="INFO">${total_amount_before} = 50418.00</msg>
<status status="PASS" endtime="20170728 17:03:05.757" starttime="20170728 17:03:05.754"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:05.761" level="INFO">${balance_amount_before} = 49596.00</msg>
<status status="PASS" endtime="20170728 17:03:05.762" starttime="20170728 17:03:05.759"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:05.765" level="INFO">${frozen_amount_before} = 822.00</msg>
<status status="PASS" endtime="20170728 17:03:05.766" starttime="20170728 17:03:05.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:05.771" level="INFO">${account_id} = 6131</msg>
<status status="PASS" endtime="20170728 17:03:05.774" starttime="20170728 17:03:05.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 17:03:05.778" level="INFO">${user_id_real} = 1000000</msg>
<status status="PASS" endtime="20170728 17:03:05.779" starttime="20170728 17:03:05.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:05.783" level="INFO">${total_amount_before} = 50418.00</msg>
<status status="PASS" endtime="20170728 17:03:05.784" starttime="20170728 17:03:05.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:05.790" level="INFO">${balance_amount_before} = 49596.00</msg>
<status status="PASS" endtime="20170728 17:03:05.791" starttime="20170728 17:03:05.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:05.794" level="INFO">${frozen_amount_before} = 822.00</msg>
<status status="PASS" endtime="20170728 17:03:05.795" starttime="20170728 17:03:05.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:05.798" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:03:05.800" starttime="20170728 17:03:05.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 17:03:05.804" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:05.806" starttime="20170728 17:03:05.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 17:03:05.809" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</msg>
<status status="PASS" endtime="20170728 17:03:05.810" starttime="20170728 17:03:05.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170728 17:03:05.814" level="INFO">${database} = ((12445, 6131, Decimal('50418.00'), Decimal('49596.00'), Decimal('822.00'), datetime.datetime(2017, 7, 12, 20, 3, 46), datetime.datetime(2017, 7, 28, 14, 27, 14), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:05.815" starttime="20170728 17:03:05.811"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:05.817" starttime="20170728 17:03:05.646"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Ajb Withdraw Cancel" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:05.850" starttime="20170728 17:03:05.825"></status>
</kw>
<msg timestamp="20170728 17:03:05.852" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:05.852" starttime="20170728 17:03:05.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 17:03:05.856" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:05.857" starttime="20170728 17:03:05.854"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:05.859" starttime="20170728 17:03:05.819"></status>
</kw>
<kw name="错误时字段验证" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:05.864" level="INFO">200</msg>
<status status="PASS" endtime="20170728 17:03:05.865" starttime="20170728 17:03:05.862"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 17:03:05.867" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:05.868" starttime="20170728 17:03:05.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 17:03:05.869" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 17:03:05.870" starttime="20170728 17:03:05.869"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 17:03:05.875" level="INFO">To JSON using : content={"data":null,"msg":"失败","code":0,"success":false} </msg>
<msg timestamp="20170728 17:03:05.876" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 17:03:05.877" level="INFO">${toJson} = {u'msg': u'\u5931\u8d25', u'code': 0, u'data': None, u'success': False}</msg>
<status status="PASS" endtime="20170728 17:03:05.878" starttime="20170728 17:03:05.872"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>False</arg>
</arguments>
<msg timestamp="20170728 17:03:05.880" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:05.880" starttime="20170728 17:03:05.879"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['data']}</arg>
<arg>None</arg>
</arguments>
<msg timestamp="20170728 17:03:05.882" level="INFO">Argument types are:
&lt;type 'NoneType'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:05.883" starttime="20170728 17:03:05.881"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${toJson['code']}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:05.885" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:05.886" starttime="20170728 17:03:05.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:05.890" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:05.891" starttime="20170728 17:03:05.887"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:05.891" starttime="20170728 17:03:05.860"></status>
</kw>
<kw name="amount和表里的校验" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:05.897" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:05.906" starttime="20170728 17:03:05.895"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:05.907" starttime="20170728 17:03:05.894"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:05.909" starttime="20170728 17:03:05.893"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:05.911" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6131' </msg>
<msg timestamp="20170728 17:03:05.917" level="INFO">${user_id} = ((12445, 6131, Decimal('50418.00'), Decimal('49596.00'), Decimal('822.00'), datetime.datetime(2017, 7, 12, 20, 3, 46), datetime.datetime(2017, 7, 28, 14, 27, 14), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:05.917" starttime="20170728 17:03:05.910"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:05.921" starttime="20170728 17:03:05.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 17:03:05.923" level="INFO">total_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 17:03:05.924" starttime="20170728 17:03:05.922"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:05.927" starttime="20170728 17:03:05.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 17:03:05.929" level="INFO">balance_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 17:03:05.930" starttime="20170728 17:03:05.928"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:05.932" starttime="20170728 17:03:05.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 17:03:05.934" level="INFO">frozen_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 17:03:05.935" starttime="20170728 17:03:05.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amounts的数据没有变化正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:05.939" level="INFO">amounts的数据没有变化正确的</msg>
<status status="PASS" endtime="20170728 17:03:05.939" starttime="20170728 17:03:05.937"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:05.941" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:05.942" starttime="20170728 17:03:05.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount内容没有发生变化</arg>
</arguments>
<msg timestamp="20170728 17:03:05.944" level="INFO">表account_amount内容没有发生变化</msg>
<status status="PASS" endtime="20170728 17:03:05.945" starttime="20170728 17:03:05.943"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:03:05.946" level="INFO">${current_time} = 2017-07-28 17:03:05.946</msg>
<status status="PASS" endtime="20170728 17:03:05.947" starttime="20170728 17:03:05.945"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:05.949" level="INFO">${current_time_before_30} = 2017-07-28 17:02:05.946</msg>
<status status="PASS" endtime="20170728 17:03:05.949" starttime="20170728 17:03:05.948"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:05.952" level="INFO">${current_time_after_30} = 2017-07-28 17:04:10.946</msg>
<status status="PASS" endtime="20170728 17:03:05.952" starttime="20170728 17:03:05.950"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${bill_check}</var>
</assign>
<msg timestamp="20170728 17:03:05.956" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6131' and update_time between' 2017-07-28 17:02:05.946' and '2017-07-28 17:04:10.946' </msg>
<msg timestamp="20170728 17:03:05.963" level="INFO">${bill_check} = ()</msg>
<status status="PASS" endtime="20170728 17:03:05.964" starttime="20170728 17:03:05.954"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${bill_check}</arg>
</arguments>
<assign>
<var>${bill_check_length}</var>
</assign>
<msg timestamp="20170728 17:03:05.967" level="INFO">Length is 0</msg>
<msg timestamp="20170728 17:03:05.968" level="INFO">${bill_check_length} = 0</msg>
<status status="PASS" endtime="20170728 17:03:05.969" starttime="20170728 17:03:05.966"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${bill_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:05.972" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:05.973" starttime="20170728 17:03:05.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>account_unilateral_bill里的没有相关数据</arg>
</arguments>
<msg timestamp="20170728 17:03:05.975" level="INFO">account_unilateral_bill里的没有相关数据</msg>
<status status="PASS" endtime="20170728 17:03:05.976" starttime="20170728 17:03:05.974"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num ='${args11}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${transaction_check}</var>
</assign>
<msg timestamp="20170728 17:03:05.978" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num ='32102151361500284846' and update_time between' 2017-07-28 17:02:05.946' and '2017-07-28 17:04:10.946' </msg>
<msg timestamp="20170728 17:03:05.990" level="INFO">${transaction_check} = ()</msg>
<status status="PASS" endtime="20170728 17:03:05.991" starttime="20170728 17:03:05.977"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${transaction_check}</arg>
</arguments>
<assign>
<var>${transaction_check_length}</var>
</assign>
<msg timestamp="20170728 17:03:05.993" level="INFO">Length is 0</msg>
<msg timestamp="20170728 17:03:05.993" level="INFO">${transaction_check_length} = 0</msg>
<status status="PASS" endtime="20170728 17:03:05.994" starttime="20170728 17:03:05.992"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${transaction_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:05.996" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:05.996" starttime="20170728 17:03:05.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>ajb_account_transaction里的没有相关数据</arg>
</arguments>
<msg timestamp="20170728 17:03:05.999" level="INFO">ajb_account_transaction里的没有相关数据</msg>
<status status="PASS" endtime="20170728 17:03:06.000" starttime="20170728 17:03:05.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库表里数据调用接口前后没有发生变化</arg>
</arguments>
<msg timestamp="20170728 17:03:06.002" level="INFO">数据库表里数据调用接口前后没有发生变化</msg>
<status status="PASS" endtime="20170728 17:03:06.003" starttime="20170728 17:03:06.001"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:06.004" starttime="20170728 17:03:05.892"></status>
</kw>
<kw name="艾佳币恢复数目" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:06.010" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:06.023" starttime="20170728 17:03:06.009"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:06.024" starttime="20170728 17:03:06.008"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:06.025" starttime="20170728 17:03:06.007"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount \ SET total_amount=${database[0][2]},balance_amount=${database[0][3]},frozen_amount=${database[0][4]}where account_id="${account_id}";</arg>
</arguments>
<msg timestamp="20170728 17:03:06.029" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount  SET total_amount=50418.00,balance_amount=49596.00,frozen_amount=822.00where account_id="6131"; </msg>
<status status="PASS" endtime="20170728 17:03:06.036" starttime="20170728 17:03:06.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170728 17:03:06.039" level="INFO">成功</msg>
<status status="PASS" endtime="20170728 17:03:06.039" starttime="20170728 17:03:06.038"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:06.040" starttime="20170728 17:03:06.006"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:06.041" critical="yes" starttime="20170728 17:03:05.609"></status>
</test>
<test id="s1-s1-s3-t3" name="输入库里面标记删除的订单号">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:06.052" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:06.063" starttime="20170728 17:03:06.050"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:06.065" starttime="20170728 17:03:06.048"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:06.065" starttime="20170728 17:03:06.046"></status>
</kw>
<kw name="清数据" library="myResource">
<arguments>
<arg>88800888</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:06.071" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:06.083" starttime="20170728 17:03:06.070"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:06.084" starttime="20170728 17:03:06.069"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:06.085" starttime="20170728 17:03:06.068"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170728 17:03:06.087" level="INFO">Executing : Query  |  select * from ajb_account_transaction where id=88800888 </msg>
<msg timestamp="20170728 17:03:06.093" level="INFO">${check} = ()</msg>
<status status="PASS" endtime="20170728 17:03:06.094" starttime="20170728 17:03:06.086"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170728 17:03:06.098" level="INFO">Length is 0</msg>
<msg timestamp="20170728 17:03:06.100" level="INFO">${check_length} = 0</msg>
<status status="PASS" endtime="20170728 17:03:06.101" starttime="20170728 17:03:06.096"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} != 0</arg>
<arg>execute sql string</arg>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>数据库之前没有数据</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库之前没有数据</arg>
</arguments>
<msg timestamp="20170728 17:03:06.108" level="INFO">数据库之前没有数据</msg>
<status status="PASS" endtime="20170728 17:03:06.109" starttime="20170728 17:03:06.105"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:06.111" starttime="20170728 17:03:06.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库里面的这条数据清理成功啦。</arg>
</arguments>
<msg timestamp="20170728 17:03:06.113" level="INFO">数据库里面的这条数据清理成功啦。</msg>
<status status="PASS" endtime="20170728 17:03:06.114" starttime="20170728 17:03:06.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_delete}</arg>
</arguments>
<msg timestamp="20170728 17:03:06.116" level="INFO">${id_delete} = 88800888</msg>
<status status="PASS" endtime="20170728 17:03:06.117" starttime="20170728 17:03:06.115"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:06.118" starttime="20170728 17:03:06.066"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("${id_delete}","32102151361501122443","100000","6135","1","32102151361501122443","","2","1","8","2","1","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170728 17:03:06.120" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("88800888","32102151361501122443","100000","6135","1","32102151361501122443","","2","1","8","2","1","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170728 17:03:06.165" starttime="20170728 17:03:06.119"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>32102151361501122443</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:03:06.169" level="INFO">${args11} = 32102151361501122443</msg>
<status status="PASS" endtime="20170728 17:03:06.169" starttime="20170728 17:03:06.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:03:06.172" level="INFO">${args22} = </msg>
<status status="PASS" endtime="20170728 17:03:06.174" starttime="20170728 17:03:06.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 17:03:06.176" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170728 17:03:06.177" starttime="20170728 17:03:06.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 17:03:06.180" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 17:03:06.180" starttime="20170728 17:03:06.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 17:03:06.182" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</msg>
<status status="PASS" endtime="20170728 17:03:06.183" starttime="20170728 17:03:06.181"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:06.184" starttime="20170728 17:03:06.166"></status>
</kw>
<kw name="order_num的校验" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:06.192" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:06.202" starttime="20170728 17:03:06.191"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:06.203" starttime="20170728 17:03:06.190"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:06.205" starttime="20170728 17:03:06.188"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num ='${args11}'</arg>
</arguments>
<assign>
<var>${check_order_num}</var>
</assign>
<msg timestamp="20170728 17:03:06.208" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num ='32102151361501122443' </msg>
<msg timestamp="20170728 17:03:06.220" level="INFO">${check_order_num} = ((88800888, '32102151361501122443', 100000, 6135, 1, '32102151361501122443', '', Decimal('2.00'), 1, 8, 2, 1, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)),)</msg>
<status status="PASS" endtime="20170728 17:03:06.221" starttime="20170728 17:03:06.207"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check_order_num}</arg>
</arguments>
<assign>
<var>${check_order_num_length}</var>
</assign>
<msg timestamp="20170728 17:03:06.224" level="INFO">Length is 1</msg>
<msg timestamp="20170728 17:03:06.225" level="INFO">${check_order_num_length} = 1</msg>
<status status="PASS" endtime="20170728 17:03:06.226" starttime="20170728 17:03:06.222"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_order_num_length}==1 and ${check_order_num[0][9]}==8</arg>
<arg>set variable</arg>
<arg>该订单属于艾佳币回收冻结订单</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>该订单不属于艾佳币回收冻结订单</arg>
</arguments>
<assign>
<var>${var}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>该订单属于艾佳币回收冻结订单</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:06.230" starttime="20170728 17:03:06.229"></status>
</kw>
<msg timestamp="20170728 17:03:06.231" level="INFO">${var} = 该订单属于艾佳币回收冻结订单</msg>
<status status="PASS" endtime="20170728 17:03:06.232" starttime="20170728 17:03:06.227"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${var}'=='该订单不属于艾佳币回收冻结订单'</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:06.236" starttime="20170728 17:03:06.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${var}</arg>
</arguments>
<msg timestamp="20170728 17:03:06.240" level="INFO">该订单属于艾佳币回收冻结订单</msg>
<status status="PASS" endtime="20170728 17:03:06.241" starttime="20170728 17:03:06.238"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:06.242" starttime="20170728 17:03:06.186"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 17:03:06.245" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</msg>
<status status="PASS" endtime="20170728 17:03:06.245" starttime="20170728 17:03:06.244"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 17:03:06.249" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:06.250" starttime="20170728 17:03:06.246"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:06.254" starttime="20170728 17:03:06.252"></status>
</kw>
<msg timestamp="20170728 17:03:06.254" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:03:06.255" starttime="20170728 17:03:06.251"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>order_num</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:06.258" starttime="20170728 17:03:06.257"></status>
</kw>
<msg timestamp="20170728 17:03:06.259" level="INFO">${args11_after} = order_num</msg>
<status status="PASS" endtime="20170728 17:03:06.260" starttime="20170728 17:03:06.256"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:06.264" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:06.274" starttime="20170728 17:03:06.262"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:06.276" starttime="20170728 17:03:06.261"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:06.277" starttime="20170728 17:03:06.260"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 17:03:06.281" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num='32102151361501122443' and channel_no='1' </msg>
<msg timestamp="20170728 17:03:06.297" level="INFO">${database1} = ((88800888, '32102151361501122443', 100000, 6135, 1, '32102151361501122443', '', Decimal('2.00'), 1, 8, 2, 1, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)),)</msg>
<status status="PASS" endtime="20170728 17:03:06.298" starttime="20170728 17:03:06.279"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 17:03:06.301" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 17:03:06.307" level="INFO">${database} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 11), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:06.307" starttime="20170728 17:03:06.299"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 17:03:06.309" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:06.310" starttime="20170728 17:03:06.308"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 17:03:06.313" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 17:03:06.314" starttime="20170728 17:03:06.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:06.317" level="INFO">获得account_id值为：6135</msg>
<status status="PASS" endtime="20170728 17:03:06.318" starttime="20170728 17:03:06.316"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:06.321" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:06.322" starttime="20170728 17:03:06.319"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:06.324" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:06.326" starttime="20170728 17:03:06.323"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:06.328" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:06.329" starttime="20170728 17:03:06.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:06.332" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 17:03:06.334" starttime="20170728 17:03:06.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 17:03:06.337" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:06.338" starttime="20170728 17:03:06.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:06.341" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:06.342" starttime="20170728 17:03:06.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:06.346" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:06.347" starttime="20170728 17:03:06.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:06.349" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:06.349" starttime="20170728 17:03:06.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:06.351" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:03:06.352" starttime="20170728 17:03:06.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 17:03:06.354" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:06.355" starttime="20170728 17:03:06.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 17:03:06.358" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</msg>
<status status="PASS" endtime="20170728 17:03:06.359" starttime="20170728 17:03:06.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170728 17:03:06.361" level="INFO">${database} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 11), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:06.362" starttime="20170728 17:03:06.360"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:06.362" starttime="20170728 17:03:06.243"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Ajb Withdraw Cancel" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:06.383" starttime="20170728 17:03:06.366"></status>
</kw>
<msg timestamp="20170728 17:03:06.384" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:06.385" starttime="20170728 17:03:06.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 17:03:06.388" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:06.389" starttime="20170728 17:03:06.386"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:06.391" starttime="20170728 17:03:06.363"></status>
</kw>
<kw name="错误时字段验证" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:06.395" level="INFO">200</msg>
<status status="PASS" endtime="20170728 17:03:06.396" starttime="20170728 17:03:06.394"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 17:03:06.398" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:06.398" starttime="20170728 17:03:06.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 17:03:06.400" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 17:03:06.401" starttime="20170728 17:03:06.399"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 17:03:06.403" level="INFO">To JSON using : content={"data":null,"msg":"失败","code":0,"success":false} </msg>
<msg timestamp="20170728 17:03:06.404" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 17:03:06.405" level="INFO">${toJson} = {u'msg': u'\u5931\u8d25', u'code': 0, u'data': None, u'success': False}</msg>
<status status="PASS" endtime="20170728 17:03:06.406" starttime="20170728 17:03:06.402"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>False</arg>
</arguments>
<msg timestamp="20170728 17:03:06.409" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:06.410" starttime="20170728 17:03:06.407"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['data']}</arg>
<arg>None</arg>
</arguments>
<msg timestamp="20170728 17:03:06.413" level="INFO">Argument types are:
&lt;type 'NoneType'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:06.414" starttime="20170728 17:03:06.412"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${toJson['code']}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:06.416" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:06.417" starttime="20170728 17:03:06.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:06.418" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:06.419" starttime="20170728 17:03:06.418"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:06.420" starttime="20170728 17:03:06.392"></status>
</kw>
<kw name="amount和表里的校验" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:06.430" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:06.450" starttime="20170728 17:03:06.428"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:06.451" starttime="20170728 17:03:06.427"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:06.452" starttime="20170728 17:03:06.424"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:06.456" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 17:03:06.462" level="INFO">${user_id} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 11), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:06.463" starttime="20170728 17:03:06.455"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:06.466" starttime="20170728 17:03:06.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 17:03:06.469" level="INFO">total_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 17:03:06.470" starttime="20170728 17:03:06.468"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:06.474" starttime="20170728 17:03:06.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 17:03:06.476" level="INFO">balance_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 17:03:06.476" starttime="20170728 17:03:06.475"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:06.479" starttime="20170728 17:03:06.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 17:03:06.481" level="INFO">frozen_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 17:03:06.482" starttime="20170728 17:03:06.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amounts的数据没有变化正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:06.485" level="INFO">amounts的数据没有变化正确的</msg>
<status status="PASS" endtime="20170728 17:03:06.486" starttime="20170728 17:03:06.484"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:06.489" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:06.490" starttime="20170728 17:03:06.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount内容没有发生变化</arg>
</arguments>
<msg timestamp="20170728 17:03:06.492" level="INFO">表account_amount内容没有发生变化</msg>
<status status="PASS" endtime="20170728 17:03:06.493" starttime="20170728 17:03:06.491"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:03:06.496" level="INFO">${current_time} = 2017-07-28 17:03:06.494</msg>
<status status="PASS" endtime="20170728 17:03:06.497" starttime="20170728 17:03:06.494"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:06.499" level="INFO">${current_time_before_30} = 2017-07-28 17:02:06.494</msg>
<status status="PASS" endtime="20170728 17:03:06.500" starttime="20170728 17:03:06.498"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:06.502" level="INFO">${current_time_after_30} = 2017-07-28 17:04:11.494</msg>
<status status="PASS" endtime="20170728 17:03:06.503" starttime="20170728 17:03:06.501"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${bill_check}</var>
</assign>
<msg timestamp="20170728 17:03:06.506" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6135' and update_time between' 2017-07-28 17:02:06.494' and '2017-07-28 17:04:11.494' </msg>
<msg timestamp="20170728 17:03:06.512" level="INFO">${bill_check} = ()</msg>
<status status="PASS" endtime="20170728 17:03:06.513" starttime="20170728 17:03:06.504"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${bill_check}</arg>
</arguments>
<assign>
<var>${bill_check_length}</var>
</assign>
<msg timestamp="20170728 17:03:06.515" level="INFO">Length is 0</msg>
<msg timestamp="20170728 17:03:06.516" level="INFO">${bill_check_length} = 0</msg>
<status status="PASS" endtime="20170728 17:03:06.517" starttime="20170728 17:03:06.514"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${bill_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:06.519" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:06.520" starttime="20170728 17:03:06.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>account_unilateral_bill里的没有相关数据</arg>
</arguments>
<msg timestamp="20170728 17:03:06.523" level="INFO">account_unilateral_bill里的没有相关数据</msg>
<status status="PASS" endtime="20170728 17:03:06.523" starttime="20170728 17:03:06.521"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num ='${args11}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${transaction_check}</var>
</assign>
<msg timestamp="20170728 17:03:06.525" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num ='32102151361501122443' and update_time between' 2017-07-28 17:02:06.494' and '2017-07-28 17:04:11.494' </msg>
<msg timestamp="20170728 17:03:06.538" level="INFO">${transaction_check} = ()</msg>
<status status="PASS" endtime="20170728 17:03:06.539" starttime="20170728 17:03:06.524"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${transaction_check}</arg>
</arguments>
<assign>
<var>${transaction_check_length}</var>
</assign>
<msg timestamp="20170728 17:03:06.541" level="INFO">Length is 0</msg>
<msg timestamp="20170728 17:03:06.541" level="INFO">${transaction_check_length} = 0</msg>
<status status="PASS" endtime="20170728 17:03:06.542" starttime="20170728 17:03:06.540"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${transaction_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:06.544" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:06.544" starttime="20170728 17:03:06.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>ajb_account_transaction里的没有相关数据</arg>
</arguments>
<msg timestamp="20170728 17:03:06.547" level="INFO">ajb_account_transaction里的没有相关数据</msg>
<status status="PASS" endtime="20170728 17:03:06.548" starttime="20170728 17:03:06.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库表里数据调用接口前后没有发生变化</arg>
</arguments>
<msg timestamp="20170728 17:03:06.550" level="INFO">数据库表里数据调用接口前后没有发生变化</msg>
<status status="PASS" endtime="20170728 17:03:06.550" starttime="20170728 17:03:06.549"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:06.551" starttime="20170728 17:03:06.423"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<msg timestamp="20170728 17:03:06.553" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=88800888 </msg>
<status status="PASS" endtime="20170728 17:03:06.591" starttime="20170728 17:03:06.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当订单号为库里面标记删除的时候，接口返回失败</arg>
</arguments>
<msg timestamp="20170728 17:03:06.593" level="INFO">当订单号为库里面标记删除的时候，接口返回失败</msg>
<status status="PASS" endtime="20170728 17:03:06.594" starttime="20170728 17:03:06.592"></status>
</kw>
<kw name="艾佳币恢复数目" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:06.599" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:06.611" starttime="20170728 17:03:06.598"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:06.613" starttime="20170728 17:03:06.597"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:06.614" starttime="20170728 17:03:06.596"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount \ SET total_amount=${database[0][2]},balance_amount=${database[0][3]},frozen_amount=${database[0][4]}where account_id="${account_id}";</arg>
</arguments>
<msg timestamp="20170728 17:03:06.616" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount  SET total_amount=50423.00,balance_amount=49595.00,frozen_amount=828.00where account_id="6135"; </msg>
<status status="PASS" endtime="20170728 17:03:06.622" starttime="20170728 17:03:06.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170728 17:03:06.624" level="INFO">成功</msg>
<status status="PASS" endtime="20170728 17:03:06.625" starttime="20170728 17:03:06.623"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:06.626" starttime="20170728 17:03:06.595"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:06.627" critical="yes" starttime="20170728 17:03:06.042"></status>
</test>
<status status="PASS" endtime="20170728 17:03:06.630" starttime="20170728 17:03:03.938"></status>
</suite>
<suite source="F:\logs and reports\账户中心\艾佳币\艾佳币回收确认.txt" id="s1-s1-s4" name="艾佳币回收确认">
<test id="s1-s1-s4-t1" name="输入正确的回收确认订单号">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:06.665" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:06.691" starttime="20170728 17:03:06.663"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:06.692" starttime="20170728 17:03:06.662"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:06.693" starttime="20170728 17:03:06.660"></status>
</kw>
<kw name="清数据" library="myResource">
<arguments>
<arg>88888888</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:06.698" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:06.723" starttime="20170728 17:03:06.697"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:06.724" starttime="20170728 17:03:06.696"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:06.726" starttime="20170728 17:03:06.695"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170728 17:03:06.728" level="INFO">Executing : Query  |  select * from ajb_account_transaction where id=88888888 </msg>
<msg timestamp="20170728 17:03:06.735" level="INFO">${check} = ()</msg>
<status status="PASS" endtime="20170728 17:03:06.736" starttime="20170728 17:03:06.727"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170728 17:03:06.739" level="INFO">Length is 0</msg>
<msg timestamp="20170728 17:03:06.740" level="INFO">${check_length} = 0</msg>
<status status="PASS" endtime="20170728 17:03:06.740" starttime="20170728 17:03:06.737"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} != 0</arg>
<arg>execute sql string</arg>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>数据库之前没有数据</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库之前没有数据</arg>
</arguments>
<msg timestamp="20170728 17:03:06.743" level="INFO">数据库之前没有数据</msg>
<status status="PASS" endtime="20170728 17:03:06.744" starttime="20170728 17:03:06.742"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:06.745" starttime="20170728 17:03:06.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库里面的这条数据清理成功啦。</arg>
</arguments>
<msg timestamp="20170728 17:03:06.746" level="INFO">数据库里面的这条数据清理成功啦。</msg>
<status status="PASS" endtime="20170728 17:03:06.747" starttime="20170728 17:03:06.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_delete}</arg>
</arguments>
<msg timestamp="20170728 17:03:06.749" level="INFO">${id_delete} = 88888888</msg>
<status status="PASS" endtime="20170728 17:03:06.749" starttime="20170728 17:03:06.748"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:06.750" starttime="20170728 17:03:06.694"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("${id_delete}","32102151361501037341","100000","6135","1","32102151361501037341","","2","1","8","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170728 17:03:06.753" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("88888888","32102151361501037341","100000","6135","1","32102151361501037341","","2","1","8","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170728 17:03:06.837" starttime="20170728 17:03:06.752"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>32102151361501037341</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:03:06.842" level="INFO">${args11} = 32102151361501037341</msg>
<status status="PASS" endtime="20170728 17:03:06.842" starttime="20170728 17:03:06.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:03:06.845" level="INFO">${args22} = </msg>
<status status="PASS" endtime="20170728 17:03:06.845" starttime="20170728 17:03:06.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 17:03:06.848" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170728 17:03:06.849" starttime="20170728 17:03:06.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 17:03:06.851" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 17:03:06.851" starttime="20170728 17:03:06.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 17:03:06.853" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</msg>
<status status="PASS" endtime="20170728 17:03:06.854" starttime="20170728 17:03:06.852"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:06.854" starttime="20170728 17:03:06.839"></status>
</kw>
<kw name="order_num的校验" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:06.860" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:06.876" starttime="20170728 17:03:06.859"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:06.878" starttime="20170728 17:03:06.858"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:06.879" starttime="20170728 17:03:06.857"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num ='${args11}'</arg>
</arguments>
<assign>
<var>${check_order_num}</var>
</assign>
<msg timestamp="20170728 17:03:06.881" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num ='32102151361501037341' </msg>
<msg timestamp="20170728 17:03:06.895" level="INFO">${check_order_num} = ((88888888, '32102151361501037341', 100000, 6135, 1, '32102151361501037341', '', Decimal('2.00'), 1, 8, 2, 0, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)),)</msg>
<status status="PASS" endtime="20170728 17:03:06.896" starttime="20170728 17:03:06.880"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check_order_num}</arg>
</arguments>
<assign>
<var>${check_order_num_length}</var>
</assign>
<msg timestamp="20170728 17:03:06.898" level="INFO">Length is 1</msg>
<msg timestamp="20170728 17:03:06.899" level="INFO">${check_order_num_length} = 1</msg>
<status status="PASS" endtime="20170728 17:03:06.899" starttime="20170728 17:03:06.897"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_order_num_length}==1 and ${check_order_num[0][9]}==8</arg>
<arg>set variable</arg>
<arg>该订单属于艾佳币回收冻结订单</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>该订单不属于艾佳币回收冻结订单</arg>
</arguments>
<assign>
<var>${var}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>该订单属于艾佳币回收冻结订单</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:06.903" starttime="20170728 17:03:06.902"></status>
</kw>
<msg timestamp="20170728 17:03:06.904" level="INFO">${var} = 该订单属于艾佳币回收冻结订单</msg>
<status status="PASS" endtime="20170728 17:03:06.905" starttime="20170728 17:03:06.900"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${var}'=='该订单不属于艾佳币回收冻结订单'</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:06.908" starttime="20170728 17:03:06.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${var}</arg>
</arguments>
<msg timestamp="20170728 17:03:06.910" level="INFO">该订单属于艾佳币回收冻结订单</msg>
<status status="PASS" endtime="20170728 17:03:06.911" starttime="20170728 17:03:06.909"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:06.912" starttime="20170728 17:03:06.856"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 17:03:06.914" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</msg>
<status status="PASS" endtime="20170728 17:03:06.915" starttime="20170728 17:03:06.913"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 17:03:06.917" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:06.918" starttime="20170728 17:03:06.916"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:06.922" starttime="20170728 17:03:06.920"></status>
</kw>
<msg timestamp="20170728 17:03:06.923" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:03:06.924" starttime="20170728 17:03:06.919"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>order_num</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:06.927" starttime="20170728 17:03:06.926"></status>
</kw>
<msg timestamp="20170728 17:03:06.928" level="INFO">${args11_after} = order_num</msg>
<status status="PASS" endtime="20170728 17:03:06.928" starttime="20170728 17:03:06.925"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:06.932" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:06.945" starttime="20170728 17:03:06.931"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:06.946" starttime="20170728 17:03:06.930"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:06.947" starttime="20170728 17:03:06.929"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 17:03:06.949" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num='32102151361501037341' and channel_no='1' </msg>
<msg timestamp="20170728 17:03:06.960" level="INFO">${database1} = ((88888888, '32102151361501037341', 100000, 6135, 1, '32102151361501037341', '', Decimal('2.00'), 1, 8, 2, 0, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)),)</msg>
<status status="PASS" endtime="20170728 17:03:06.961" starttime="20170728 17:03:06.948"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 17:03:06.963" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 17:03:06.971" level="INFO">${database} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 11), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:06.972" starttime="20170728 17:03:06.962"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 17:03:06.975" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:06.975" starttime="20170728 17:03:06.973"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 17:03:06.977" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 17:03:06.978" starttime="20170728 17:03:06.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:06.980" level="INFO">获得account_id值为：6135</msg>
<status status="PASS" endtime="20170728 17:03:06.980" starttime="20170728 17:03:06.979"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:06.982" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:06.983" starttime="20170728 17:03:06.981"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:06.984" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:06.986" starttime="20170728 17:03:06.983"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:06.991" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:06.992" starttime="20170728 17:03:06.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:06.994" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 17:03:06.994" starttime="20170728 17:03:06.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 17:03:06.996" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:06.997" starttime="20170728 17:03:06.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:06.998" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:06.999" starttime="20170728 17:03:06.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:07.002" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:07.003" starttime="20170728 17:03:07.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:07.006" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:07.006" starttime="20170728 17:03:07.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:07.008" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:03:07.009" starttime="20170728 17:03:07.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 17:03:07.011" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:07.012" starttime="20170728 17:03:07.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 17:03:07.014" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</msg>
<status status="PASS" endtime="20170728 17:03:07.015" starttime="20170728 17:03:07.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170728 17:03:07.017" level="INFO">${database} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 11), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:07.017" starttime="20170728 17:03:07.016"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:07.019" starttime="20170728 17:03:06.912"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Ajb Withdraw Cancel" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:07.155" starttime="20170728 17:03:07.024"></status>
</kw>
<msg timestamp="20170728 17:03:07.158" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:07.160" starttime="20170728 17:03:07.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 17:03:07.168" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:07.170" starttime="20170728 17:03:07.163"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:07.173" starttime="20170728 17:03:07.020"></status>
</kw>
<kw name="字段验证" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:07.179" level="INFO">200</msg>
<status status="PASS" endtime="20170728 17:03:07.180" starttime="20170728 17:03:07.177"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 17:03:07.185" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:07.187" starttime="20170728 17:03:07.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 17:03:07.192" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 17:03:07.193" starttime="20170728 17:03:07.190"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 17:03:07.196" level="INFO">To JSON using : content={"data":null,"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 17:03:07.197" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 17:03:07.198" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': None, u'success': True}</msg>
<status status="PASS" endtime="20170728 17:03:07.199" starttime="20170728 17:03:07.194"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 17:03:07.202" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:07.203" starttime="20170728 17:03:07.200"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:07.206" starttime="20170728 17:03:07.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:07.209" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:07.210" starttime="20170728 17:03:07.208"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<assign>
<var>@{Link1}</var>
</assign>
<msg timestamp="20170728 17:03:07.211" level="INFO">@{Link1} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:07.212" starttime="20170728 17:03:07.210"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>"${value}" in @{Link1}</arg>
<arg>Get From Dictionary</arg>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${orderNum}</var>
</assign>
<msg timestamp="20170728 17:03:07.214" level="INFO">${orderNum} = None</msg>
<status status="PASS" endtime="20170728 17:03:07.216" starttime="20170728 17:03:07.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<msg timestamp="20170728 17:03:07.218" level="INFO">${orderNum} = None</msg>
<status status="PASS" endtime="20170728 17:03:07.220" starttime="20170728 17:03:07.217"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:07.221" starttime="20170728 17:03:07.175"></status>
</kw>
<kw name="确认取消的金额数" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:07.229" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:07.242" starttime="20170728 17:03:07.227"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:07.243" starttime="20170728 17:03:07.225"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:07.244" starttime="20170728 17:03:07.224"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>8</arg>
</arguments>
<assign>
<var>${event_code_judge}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>8</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:07.250" starttime="20170728 17:03:07.249"></status>
</kw>
<msg timestamp="20170728 17:03:07.251" level="INFO">${event_code_judge} = 8</msg>
<status status="PASS" endtime="20170728 17:03:07.251" starttime="20170728 17:03:07.246"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num ='${args11}' and event_code=${event_code_judge}</arg>
</arguments>
<assign>
<var>${search}</var>
</assign>
<msg timestamp="20170728 17:03:07.253" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num ='32102151361501037341' and event_code=8 </msg>
<msg timestamp="20170728 17:03:07.266" level="INFO">${search} = ((88888888, '32102151361501037341', 100000, 6135, 1, '32102151361501037341', '', Decimal('2.00'), 1, 8, 2, 0, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)),)</msg>
<status status="PASS" endtime="20170728 17:03:07.267" starttime="20170728 17:03:07.252"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${search[0][7]}</arg>
</arguments>
<assign>
<var>${change_total_amount}</var>
</assign>
<msg timestamp="20170728 17:03:07.272" level="INFO">${change_total_amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:03:07.272" starttime="20170728 17:03:07.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${change_total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:07.275" level="INFO">${change_total_amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:03:07.275" starttime="20170728 17:03:07.274"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:07.276" starttime="20170728 17:03:07.223"></status>
</kw>
<kw name="退款确认的account_unilateral_bill的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_unilateral_bill</arg>
</arguments>
<msg timestamp="20170728 17:03:07.281" level="INFO">现在开始校验表account_unilateral_bill</msg>
<status status="PASS" endtime="20170728 17:03:07.282" starttime="20170728 17:03:07.280"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:07.285" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:07.296" starttime="20170728 17:03:07.284"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:07.298" starttime="20170728 17:03:07.283"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:07.299" starttime="20170728 17:03:07.282"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>account_unilateral_bill</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:07.305" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:07.321" starttime="20170728 17:03:07.303"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:07.323" starttime="20170728 17:03:07.302"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:07.324" starttime="20170728 17:03:07.301"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:03:07.327" level="INFO">${current_time} = 2017-07-28 17:03:07.327</msg>
<status status="PASS" endtime="20170728 17:03:07.328" starttime="20170728 17:03:07.325"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>0 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:07.331" level="INFO">${current_time_before_30} = 2017-07-28 17:03:07.327</msg>
<status status="PASS" endtime="20170728 17:03:07.332" starttime="20170728 17:03:07.330"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:07.334" level="INFO">${current_time_after_30} = 2017-07-28 17:04:47.327</msg>
<status status="PASS" endtime="20170728 17:03:07.335" starttime="20170728 17:03:07.333"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 17:03:07.339" level="INFO">Executing : Query  |  select * from account_unilateral_bill where user_id='100000' and update_time between' 2017-07-28 17:03:07.327' and '2017-07-28 17:04:47.327' </msg>
<msg timestamp="20170728 17:03:07.353" level="INFO">${updatetime} = ((7701, '32102151361501230523', 100000, 6135, '32102151361501230522', 1, 10, 2, Decimal('2.00'), None, datetime.datetime(2017, 7, 28, 17, 4, 12), datetime.datetime(2017, 7, 28, 17, 4, 12), 0), (7702, ...</msg>
<status status="PASS" endtime="20170728 17:03:07.354" starttime="20170728 17:03:07.337"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 17:03:07.357" level="INFO">Length is 2</msg>
<status status="PASS" endtime="20170728 17:03:07.357" starttime="20170728 17:03:07.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 17:03:07.361" level="INFO">account_unilateral_bill表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 17:03:07.362" starttime="20170728 17:03:07.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:07.365" level="INFO">${current_time_before_30} = 2017-07-28 17:03:07.327</msg>
<status status="PASS" endtime="20170728 17:03:07.366" starttime="20170728 17:03:07.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:07.367" level="INFO">${current_time_after_30} = 2017-07-28 17:04:47.327</msg>
<status status="PASS" endtime="20170728 17:03:07.368" starttime="20170728 17:03:07.366"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:07.369" starttime="20170728 17:03:07.300"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id} 'and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:07.373" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6135 'and update_time between' 2017-07-28 17:03:07.327' and '2017-07-28 17:04:47.327' </msg>
<msg timestamp="20170728 17:03:07.381" level="INFO">${user_id} = ((7701, '32102151361501230523', 100000, 6135, '32102151361501230522', 1, 10, 2, Decimal('2.00'), None, datetime.datetime(2017, 7, 28, 17, 4, 12), datetime.datetime(2017, 7, 28, 17, 4, 12), 0), (7702, ...</msg>
<status status="PASS" endtime="20170728 17:03:07.382" starttime="20170728 17:03:07.371"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:07.384" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:07.384" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:07.385" starttime="20170728 17:03:07.383"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[1][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length2}</var>
</assign>
<msg timestamp="20170728 17:03:07.388" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:07.389" level="INFO">${bill_no_length2} = 20</msg>
<status status="PASS" endtime="20170728 17:03:07.390" starttime="20170728 17:03:07.386"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:07.393" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:07.393" starttime="20170728 17:03:07.391"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>${bill_no_length2}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:07.395" starttime="20170728 17:03:07.394"></status>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<doc>Fails if the given objects are equal.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
<arg>${user_id[1][1]}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:07.398" starttime="20170728 17:03:07.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，且不是相同bill_no,此时校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:07.399" level="INFO">bill_no的数据长度正确，且不是相同bill_no,此时校验成功</msg>
<status status="PASS" endtime="20170728 17:03:07.401" starttime="20170728 17:03:07.399"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:07.404" starttime="20170728 17:03:07.403"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id[1][2]}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:07.407" starttime="20170728 17:03:07.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:03:07.410" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:03:07.411" starttime="20170728 17:03:07.409"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:07.414" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:07.415" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:07.417" starttime="20170728 17:03:07.412"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:07.421" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:07.422" starttime="20170728 17:03:07.418"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${user_id[1][4]}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:07.425" starttime="20170728 17:03:07.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，且此时是同一个command_no,校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:07.427" level="INFO">commandl_no的数据长度正确，且此时是同一个command_no,校验成功</msg>
<status status="PASS" endtime="20170728 17:03:07.428" starttime="20170728 17:03:07.426"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:03:07.429" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:07.430" starttime="20170728 17:03:07.428"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>${user_id[1][5]}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:07.433" starttime="20170728 17:03:07.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 17:03:07.436" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 17:03:07.437" starttime="20170728 17:03:07.434"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>10</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:07.444" starttime="20170728 17:03:07.442"></status>
</kw>
<msg timestamp="20170728 17:03:07.445" level="INFO">${event_code} = 10</msg>
<status status="PASS" endtime="20170728 17:03:07.445" starttime="20170728 17:03:07.440"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:03:07.447" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:03:07.448" starttime="20170728 17:03:07.446"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:07.452" starttime="20170728 17:03:07.451"></status>
</kw>
<msg timestamp="20170728 17:03:07.454" level="INFO">${event_code_after} = 10</msg>
<status status="PASS" endtime="20170728 17:03:07.455" starttime="20170728 17:03:07.449"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:03:07.458" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:07.459" starttime="20170728 17:03:07.456"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:07.462" starttime="20170728 17:03:07.461"></status>
</kw>
<msg timestamp="20170728 17:03:07.464" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 17:03:07.465" starttime="20170728 17:03:07.459"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:07.472" starttime="20170728 17:03:07.470"></status>
</kw>
<msg timestamp="20170728 17:03:07.474" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:03:07.475" starttime="20170728 17:03:07.467"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:03:07.477" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:03:07.477" starttime="20170728 17:03:07.476"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:07.481" starttime="20170728 17:03:07.480"></status>
</kw>
<msg timestamp="20170728 17:03:07.481" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:07.482" starttime="20170728 17:03:07.478"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${total_amount_before}-${amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:07.488" starttime="20170728 17:03:07.485"></status>
</kw>
<msg timestamp="20170728 17:03:07.490" level="INFO">${total_amount} = 50421.0</msg>
<status status="PASS" endtime="20170728 17:03:07.490" starttime="20170728 17:03:07.483"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:07.495" starttime="20170728 17:03:07.494"></status>
</kw>
<msg timestamp="20170728 17:03:07.496" level="INFO">${balance_amount} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:07.497" starttime="20170728 17:03:07.491"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:07.503" starttime="20170728 17:03:07.501"></status>
</kw>
<msg timestamp="20170728 17:03:07.505" level="INFO">${frozen_amount} = 826.0</msg>
<status status="PASS" endtime="20170728 17:03:07.506" starttime="20170728 17:03:07.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:07.508" level="INFO">${event_code} = 10</msg>
<status status="PASS" endtime="20170728 17:03:07.508" starttime="20170728 17:03:07.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:07.511" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 17:03:07.512" starttime="20170728 17:03:07.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:07.514" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:07.515" starttime="20170728 17:03:07.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:07.517" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:03:07.517" starttime="20170728 17:03:07.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:07.519" level="INFO">${total_amount} = 50421.0</msg>
<status status="PASS" endtime="20170728 17:03:07.521" starttime="20170728 17:03:07.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:07.523" level="INFO">${balance_amount} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:07.524" starttime="20170728 17:03:07.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:07.526" level="INFO">${frozen_amount} = 826.0</msg>
<status status="PASS" endtime="20170728 17:03:07.526" starttime="20170728 17:03:07.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:07.530" level="INFO">${event_code_after} = 10</msg>
<status status="PASS" endtime="20170728 17:03:07.531" starttime="20170728 17:03:07.528"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:07.532" starttime="20170728 17:03:07.439"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:07.536" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:07.537" starttime="20170728 17:03:07.534"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>${user_id[1][6]}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:07.540" starttime="20170728 17:03:07.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:07.542" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 17:03:07.542" starttime="20170728 17:03:07.541"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:07.544" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:07.545" starttime="20170728 17:03:07.543"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[1][7]}</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20170728 17:03:07.549" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:07.550" starttime="20170728 17:03:07.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type俩者值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:07.552" level="INFO">command_type俩者值正确</msg>
<status status="PASS" endtime="20170728 17:03:07.553" starttime="20170728 17:03:07.551"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:07.557" starttime="20170728 17:03:07.555"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>0-${amount}</arg>
</arguments>
<assign>
<var>${amount_after}</var>
</assign>
<msg timestamp="20170728 17:03:07.560" level="INFO">${amount_after} = -2.0</msg>
<status status="PASS" endtime="20170728 17:03:07.561" starttime="20170728 17:03:07.559"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${user_id[1][8]}</arg>
<arg>${amount_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:07.563" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:07.564" starttime="20170728 17:03:07.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:07.565" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 17:03:07.566" starttime="20170728 17:03:07.565"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${user_id[0][10]}</arg>
<arg>${user_id[0][11]}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:07.568" starttime="20170728 17:03:07.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 17:03:07.571" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 17:03:07.572" starttime="20170728 17:03:07.569"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${user_id[0][10]}</arg>
<arg>${user_id[0][10]}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:07.575" starttime="20170728 17:03:07.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>则调用艾佳币回收确认的接口时，则直接同时发生解冻和转账俩步</arg>
</arguments>
<msg timestamp="20170728 17:03:07.577" level="INFO">则调用艾佳币回收确认的接口时，则直接同时发生解冻和转账俩步</msg>
<status status="PASS" endtime="20170728 17:03:07.578" starttime="20170728 17:03:07.576"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:07.579" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:07.580" starttime="20170728 17:03:07.578"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>${user_id[1][12]}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:07.582" starttime="20170728 17:03:07.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:07.584" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:07.585" starttime="20170728 17:03:07.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:07.586" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170728 17:03:07.587" starttime="20170728 17:03:07.586"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${user_id[1][0]}</arg>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>@{delete_unilateral_bill}</var>
</assign>
<msg timestamp="20170728 17:03:07.592" level="INFO">@{delete_unilateral_bill} = [ 7702 | 7701 ]</msg>
<status status="PASS" endtime="20170728 17:03:07.593" starttime="20170728 17:03:07.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{delete_unilateral_bill}</arg>
</arguments>
<msg timestamp="20170728 17:03:07.599" level="INFO">@{delete_unilateral_bill} = [ 7702 | 7701 ]</msg>
<status status="PASS" endtime="20170728 17:03:07.601" starttime="20170728 17:03:07.595"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[1][0]}'</arg>
</arguments>
<msg timestamp="20170728 17:03:07.605" level="INFO">Executing : Execute SQL String  |  delete from account_unilateral_bill where id ='7702' </msg>
<status status="PASS" endtime="20170728 17:03:07.722" starttime="20170728 17:03:07.603"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]}'</arg>
</arguments>
<msg timestamp="20170728 17:03:07.724" level="INFO">Executing : Execute SQL String  |  delete from account_unilateral_bill where id ='7701' </msg>
<status status="PASS" endtime="20170728 17:03:07.847" starttime="20170728 17:03:07.723"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:07.849" starttime="20170728 17:03:07.278"></status>
</kw>
<kw name="表ajb_account_transaction" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170728 17:03:07.855" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170728 17:03:07.857" starttime="20170728 17:03:07.853"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:07.864" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:07.884" starttime="20170728 17:03:07.862"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:07.885" starttime="20170728 17:03:07.861"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:07.886" starttime="20170728 17:03:07.859"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>ajb_account_transaction</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:07.894" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:07.904" starttime="20170728 17:03:07.892"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:07.906" starttime="20170728 17:03:07.891"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:07.907" starttime="20170728 17:03:07.889"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:03:07.909" level="INFO">${current_time} = 2017-07-28 17:03:07.909</msg>
<status status="PASS" endtime="20170728 17:03:07.909" starttime="20170728 17:03:07.908"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>0 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:07.911" level="INFO">${current_time_before_30} = 2017-07-28 17:03:07.909</msg>
<status status="PASS" endtime="20170728 17:03:07.912" starttime="20170728 17:03:07.910"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:07.914" level="INFO">${current_time_after_30} = 2017-07-28 17:04:47.909</msg>
<status status="PASS" endtime="20170728 17:03:07.915" starttime="20170728 17:03:07.913"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 17:03:07.917" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and update_time between' 2017-07-28 17:03:07.909' and '2017-07-28 17:04:47.909' </msg>
<msg timestamp="20170728 17:03:07.929" level="INFO">${updatetime} = ((88889797, '32102151361501230521', 100000, 6135, 1, '32102151361501037341', '20170728170409WEJ051700', Decimal('2.00'), 1, 10, 2, 0, datetime.datetime(2017, 7, 28, 17, 4, 12), datetime.datetime(2017,...</msg>
<status status="PASS" endtime="20170728 17:03:07.930" starttime="20170728 17:03:07.916"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 17:03:07.932" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 17:03:07.933" starttime="20170728 17:03:07.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 17:03:07.937" level="INFO">ajb_account_transaction表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 17:03:07.939" starttime="20170728 17:03:07.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:07.941" level="INFO">${current_time_before_30} = 2017-07-28 17:03:07.909</msg>
<status status="PASS" endtime="20170728 17:03:07.941" starttime="20170728 17:03:07.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:07.944" level="INFO">${current_time_after_30} = 2017-07-28 17:04:47.909</msg>
<status status="PASS" endtime="20170728 17:03:07.944" starttime="20170728 17:03:07.942"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:07.945" starttime="20170728 17:03:07.887"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:07.950" level="INFO">Executing : Query  |  select * from ajb_account_transaction where account_id ='6135' and update_time between' 2017-07-28 17:03:07.909' and '2017-07-28 17:04:47.909' </msg>
<msg timestamp="20170728 17:03:07.963" level="INFO">${user_id} = ((88889797, '32102151361501230521', 100000, 6135, 1, '32102151361501037341', '20170728170409WEJ051700', Decimal('2.00'), 1, 10, 2, 0, datetime.datetime(2017, 7, 28, 17, 4, 12), datetime.datetime(2017,...</msg>
<status status="PASS" endtime="20170728 17:03:07.965" starttime="20170728 17:03:07.946"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:07.967" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:07.968" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:07.969" starttime="20170728 17:03:07.966"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:07.973" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:07.974" starttime="20170728 17:03:07.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:07.976" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:07.977" starttime="20170728 17:03:07.975"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:07.982" starttime="20170728 17:03:07.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:03:07.986" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:03:07.987" starttime="20170728 17:03:07.984"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:07.992" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:07.994" starttime="20170728 17:03:07.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no的值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:07.997" level="INFO">channel_no的值正确</msg>
<status status="PASS" endtime="20170728 17:03:07.999" starttime="20170728 17:03:07.996"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${args11}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${orderNum}</arg>
</arguments>
<assign>
<var>${bill_order_num}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:08.005" starttime="20170728 17:03:08.003"></status>
</kw>
<msg timestamp="20170728 17:03:08.006" level="INFO">${bill_order_num} = 32102151361501037341</msg>
<status status="PASS" endtime="20170728 17:03:08.007" starttime="20170728 17:03:08.000"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>${bill_order_num}</arg>
</arguments>
<msg timestamp="20170728 17:03:08.010" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:08.011" starttime="20170728 17:03:08.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170728 17:03:08.016" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170728 17:03:08.017" starttime="20170728 17:03:08.014"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>10</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:08.031" starttime="20170728 17:03:08.028"></status>
</kw>
<msg timestamp="20170728 17:03:08.034" level="INFO">${event_code} = 10</msg>
<status status="PASS" endtime="20170728 17:03:08.035" starttime="20170728 17:03:08.022"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:03:08.041" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:03:08.043" starttime="20170728 17:03:08.038"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:08.055" starttime="20170728 17:03:08.052"></status>
</kw>
<msg timestamp="20170728 17:03:08.057" level="INFO">${event_code_after} = 10</msg>
<status status="PASS" endtime="20170728 17:03:08.059" starttime="20170728 17:03:08.049"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:03:08.064" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:08.066" starttime="20170728 17:03:08.061"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:08.076" starttime="20170728 17:03:08.074"></status>
</kw>
<msg timestamp="20170728 17:03:08.078" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 17:03:08.080" starttime="20170728 17:03:08.070"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:08.087" starttime="20170728 17:03:08.085"></status>
</kw>
<msg timestamp="20170728 17:03:08.091" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:03:08.092" starttime="20170728 17:03:08.082"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:03:08.097" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:03:08.099" starttime="20170728 17:03:08.095"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:08.106" starttime="20170728 17:03:08.104"></status>
</kw>
<msg timestamp="20170728 17:03:08.107" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:08.110" starttime="20170728 17:03:08.100"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${total_amount_before}-${amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:08.118" starttime="20170728 17:03:08.116"></status>
</kw>
<msg timestamp="20170728 17:03:08.120" level="INFO">${total_amount} = 50421.0</msg>
<status status="PASS" endtime="20170728 17:03:08.123" starttime="20170728 17:03:08.112"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:08.132" starttime="20170728 17:03:08.130"></status>
</kw>
<msg timestamp="20170728 17:03:08.134" level="INFO">${balance_amount} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:08.135" starttime="20170728 17:03:08.125"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:08.145" starttime="20170728 17:03:08.143"></status>
</kw>
<msg timestamp="20170728 17:03:08.146" level="INFO">${frozen_amount} = 826.0</msg>
<status status="PASS" endtime="20170728 17:03:08.148" starttime="20170728 17:03:08.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:08.153" level="INFO">${event_code} = 10</msg>
<status status="PASS" endtime="20170728 17:03:08.155" starttime="20170728 17:03:08.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:08.160" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 17:03:08.162" starttime="20170728 17:03:08.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:08.166" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:08.168" starttime="20170728 17:03:08.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:08.174" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:03:08.175" starttime="20170728 17:03:08.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:08.181" level="INFO">${total_amount} = 50421.0</msg>
<status status="PASS" endtime="20170728 17:03:08.183" starttime="20170728 17:03:08.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:08.189" level="INFO">${balance_amount} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:08.192" starttime="20170728 17:03:08.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:08.199" level="INFO">${frozen_amount} = 826.0</msg>
<status status="PASS" endtime="20170728 17:03:08.201" starttime="20170728 17:03:08.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:08.209" level="INFO">${event_code_after} = 10</msg>
<status status="PASS" endtime="20170728 17:03:08.216" starttime="20170728 17:03:08.204"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:08.218" starttime="20170728 17:03:08.019"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170728 17:03:08.226" level="INFO">${pay_no_after} = 20170728170409WEJ051700</msg>
<status status="PASS" endtime="20170728 17:03:08.227" starttime="20170728 17:03:08.223"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170728 17:03:08.232" level="INFO">Length is 23</msg>
<msg timestamp="20170728 17:03:08.235" level="INFO">${pay_no_after_length} = 23</msg>
<status status="PASS" endtime="20170728 17:03:08.238" starttime="20170728 17:03:08.229"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:08.244" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:08.246" starttime="20170728 17:03:08.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170728 17:03:08.251" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170728 17:03:08.252" starttime="20170728 17:03:08.248"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:08.260" starttime="20170728 17:03:08.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:08.265" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 17:03:08.266" starttime="20170728 17:03:08.262"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:03:08.271" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:08.273" starttime="20170728 17:03:08.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 17:03:08.277" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 17:03:08.280" starttime="20170728 17:03:08.275"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][9]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:08.285" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:08.288" starttime="20170728 17:03:08.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:08.293" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 17:03:08.295" starttime="20170728 17:03:08.291"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 17:03:08.300" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:08.302" starttime="20170728 17:03:08.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170728 17:03:08.309" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170728 17:03:08.310" starttime="20170728 17:03:08.305"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:08.314" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:08.315" starttime="20170728 17:03:08.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:08.319" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:08.322" starttime="20170728 17:03:08.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 17:03:08.326" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 17:03:08.327" starttime="20170728 17:03:08.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:08.331" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170728 17:03:08.333" starttime="20170728 17:03:08.329"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170728 17:03:08.338" level="INFO">${user_id[0][0]_transaction} = 88889797</msg>
<status status="PASS" endtime="20170728 17:03:08.340" starttime="20170728 17:03:08.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170728 17:03:08.345" level="INFO">${user_id[0][0]_transaction} = 88889797</msg>
<status status="PASS" endtime="20170728 17:03:08.347" starttime="20170728 17:03:08.342"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id[0][0]}'</arg>
</arguments>
<assign>
<var>${user_id_unilateral_delete1}</var>
</assign>
<msg timestamp="20170728 17:03:08.351" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88889797' </msg>
<msg timestamp="20170728 17:03:08.428" level="INFO">${user_id_unilateral_delete1} = None</msg>
<status status="PASS" endtime="20170728 17:03:08.429" starttime="20170728 17:03:08.349"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:08.431" starttime="20170728 17:03:07.851"></status>
</kw>
<kw name="表account_amount的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_amount</arg>
</arguments>
<msg timestamp="20170728 17:03:08.439" level="INFO">现在开始校验表account_amount</msg>
<status status="PASS" endtime="20170728 17:03:08.441" starttime="20170728 17:03:08.437"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:08.448" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:08.466" starttime="20170728 17:03:08.446"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:08.468" starttime="20170728 17:03:08.444"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:08.470" starttime="20170728 17:03:08.442"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time1}</var>
</assign>
<msg timestamp="20170728 17:03:08.474" level="INFO">${current_time1} = 2017-07-28 17:03:08.474</msg>
<status status="PASS" endtime="20170728 17:03:08.475" starttime="20170728 17:03:08.472"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:08.480" level="INFO">${current_time1_before_30} = 2017-07-28 17:02:08.474</msg>
<status status="PASS" endtime="20170728 17:03:08.482" starttime="20170728 17:03:08.477"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:08.487" level="INFO">${current_time1_after_30} = 2017-07-28 17:04:08.474</msg>
<status status="PASS" endtime="20170728 17:03:08.489" starttime="20170728 17:03:08.484"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:08.492" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 17:03:08.502" level="INFO">${user_id} = ((12449, 6135, Decimal('50421.00'), Decimal('49595.00'), Decimal('826.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 12), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:08.503" starttime="20170728 17:03:08.491"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>10</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:08.512" starttime="20170728 17:03:08.510"></status>
</kw>
<msg timestamp="20170728 17:03:08.514" level="INFO">${event_code} = 10</msg>
<status status="PASS" endtime="20170728 17:03:08.515" starttime="20170728 17:03:08.507"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:03:08.519" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:03:08.520" starttime="20170728 17:03:08.517"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:08.528" starttime="20170728 17:03:08.525"></status>
</kw>
<msg timestamp="20170728 17:03:08.530" level="INFO">${event_code_after} = 10</msg>
<status status="PASS" endtime="20170728 17:03:08.531" starttime="20170728 17:03:08.522"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:03:08.535" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:08.537" starttime="20170728 17:03:08.533"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:08.546" starttime="20170728 17:03:08.543"></status>
</kw>
<msg timestamp="20170728 17:03:08.547" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 17:03:08.549" starttime="20170728 17:03:08.540"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:08.554" starttime="20170728 17:03:08.552"></status>
</kw>
<msg timestamp="20170728 17:03:08.555" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:03:08.555" starttime="20170728 17:03:08.550"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:03:08.559" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:03:08.560" starttime="20170728 17:03:08.558"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:08.565" starttime="20170728 17:03:08.563"></status>
</kw>
<msg timestamp="20170728 17:03:08.566" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:08.567" starttime="20170728 17:03:08.561"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${total_amount_before}-${amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:08.574" starttime="20170728 17:03:08.572"></status>
</kw>
<msg timestamp="20170728 17:03:08.576" level="INFO">${total_amount} = 50421.0</msg>
<status status="PASS" endtime="20170728 17:03:08.576" starttime="20170728 17:03:08.568"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:08.581" starttime="20170728 17:03:08.580"></status>
</kw>
<msg timestamp="20170728 17:03:08.582" level="INFO">${balance_amount} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:08.582" starttime="20170728 17:03:08.577"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:08.587" starttime="20170728 17:03:08.585"></status>
</kw>
<msg timestamp="20170728 17:03:08.589" level="INFO">${frozen_amount} = 826.0</msg>
<status status="PASS" endtime="20170728 17:03:08.590" starttime="20170728 17:03:08.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:08.593" level="INFO">${event_code} = 10</msg>
<status status="PASS" endtime="20170728 17:03:08.594" starttime="20170728 17:03:08.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:08.596" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 17:03:08.597" starttime="20170728 17:03:08.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:08.599" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:08.600" starttime="20170728 17:03:08.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:08.602" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:03:08.604" starttime="20170728 17:03:08.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:08.607" level="INFO">${total_amount} = 50421.0</msg>
<status status="PASS" endtime="20170728 17:03:08.608" starttime="20170728 17:03:08.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:08.610" level="INFO">${balance_amount} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:08.610" starttime="20170728 17:03:08.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:08.612" level="INFO">${frozen_amount} = 826.0</msg>
<status status="PASS" endtime="20170728 17:03:08.613" starttime="20170728 17:03:08.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:08.615" level="INFO">${event_code_after} = 10</msg>
<status status="PASS" endtime="20170728 17:03:08.616" starttime="20170728 17:03:08.614"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:08.617" starttime="20170728 17:03:08.505"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:08.621" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:08.622" starttime="20170728 17:03:08.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:08.625" level="INFO">total_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:08.626" starttime="20170728 17:03:08.624"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:08.628" starttime="20170728 17:03:08.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:08.630" level="INFO">balance_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:08.631" starttime="20170728 17:03:08.629"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:08.632" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:08.633" starttime="20170728 17:03:08.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:08.635" level="INFO">frozen_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:08.637" starttime="20170728 17:03:08.634"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:08.640" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:08.641" starttime="20170728 17:03:08.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:08.642" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:08.643" starttime="20170728 17:03:08.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:08.645" level="INFO">表account_amount校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:08.645" starttime="20170728 17:03:08.644"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:08.646" starttime="20170728 17:03:08.433"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<msg timestamp="20170728 17:03:08.648" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=88888888 </msg>
<status status="PASS" endtime="20170728 17:03:08.731" starttime="20170728 17:03:08.647"></status>
</kw>
<kw name="艾佳币恢复数目" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:08.737" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:08.745" starttime="20170728 17:03:08.736"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:08.747" starttime="20170728 17:03:08.734"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:08.748" starttime="20170728 17:03:08.733"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount \ SET total_amount=${database[0][2]},balance_amount=${database[0][3]},frozen_amount=${database[0][4]}where account_id="${account_id}";</arg>
</arguments>
<msg timestamp="20170728 17:03:08.750" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount  SET total_amount=50423.00,balance_amount=49595.00,frozen_amount=828.00where account_id="6135"; </msg>
<status status="PASS" endtime="20170728 17:03:08.781" starttime="20170728 17:03:08.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170728 17:03:08.783" level="INFO">成功</msg>
<status status="PASS" endtime="20170728 17:03:08.784" starttime="20170728 17:03:08.782"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:08.785" starttime="20170728 17:03:08.732"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:08.786" critical="yes" starttime="20170728 17:03:06.656"></status>
</test>
<test id="s1-s1-s4-t2" name="order_num不属于艾佳币回收确认">
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>32102151361500531498</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:03:08.795" level="INFO">${args11} = 32102151361500531498</msg>
<status status="PASS" endtime="20170728 17:03:08.796" starttime="20170728 17:03:08.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:03:08.798" level="INFO">${args22} = </msg>
<status status="PASS" endtime="20170728 17:03:08.799" starttime="20170728 17:03:08.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 17:03:08.801" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170728 17:03:08.801" starttime="20170728 17:03:08.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 17:03:08.804" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 17:03:08.805" starttime="20170728 17:03:08.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 17:03:08.806" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</msg>
<status status="PASS" endtime="20170728 17:03:08.807" starttime="20170728 17:03:08.805"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:08.808" starttime="20170728 17:03:08.792"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 17:03:08.811" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</msg>
<status status="PASS" endtime="20170728 17:03:08.812" starttime="20170728 17:03:08.810"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 17:03:08.815" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:08.816" starttime="20170728 17:03:08.814"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:08.822" starttime="20170728 17:03:08.819"></status>
</kw>
<msg timestamp="20170728 17:03:08.824" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:03:08.825" starttime="20170728 17:03:08.817"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>order_num</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:08.830" starttime="20170728 17:03:08.829"></status>
</kw>
<msg timestamp="20170728 17:03:08.831" level="INFO">${args11_after} = order_num</msg>
<status status="PASS" endtime="20170728 17:03:08.832" starttime="20170728 17:03:08.827"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:08.837" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:08.845" starttime="20170728 17:03:08.835"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:08.846" starttime="20170728 17:03:08.834"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:08.847" starttime="20170728 17:03:08.833"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 17:03:08.849" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num='32102151361500531498' and channel_no='1' </msg>
<msg timestamp="20170728 17:03:08.861" level="INFO">${database1} = ((9613, '32102151361500531498', 1000000, 6131, 1, '32102151361500531498', None, Decimal('2.00'), 1, 8, 2, 0, datetime.datetime(2017, 7, 21, 14, 42, 40), datetime.datetime(2017, 7, 21, 14, 42, 40)), (9...</msg>
<status status="PASS" endtime="20170728 17:03:08.862" starttime="20170728 17:03:08.848"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 17:03:08.865" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6131' </msg>
<msg timestamp="20170728 17:03:08.869" level="INFO">${database} = ((12445, 6131, Decimal('50418.00'), Decimal('49596.00'), Decimal('822.00'), datetime.datetime(2017, 7, 12, 20, 3, 46), datetime.datetime(2017, 7, 28, 14, 27, 14), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:08.870" starttime="20170728 17:03:08.863"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 17:03:08.873" level="INFO">${user_id_real} = 1000000</msg>
<status status="PASS" endtime="20170728 17:03:08.874" starttime="20170728 17:03:08.871"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 17:03:08.876" level="INFO">${account_id} = 6131</msg>
<status status="PASS" endtime="20170728 17:03:08.877" starttime="20170728 17:03:08.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:08.878" level="INFO">获得account_id值为：6131</msg>
<status status="PASS" endtime="20170728 17:03:08.879" starttime="20170728 17:03:08.877"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:08.881" level="INFO">${total_amount_before} = 50418.00</msg>
<status status="PASS" endtime="20170728 17:03:08.881" starttime="20170728 17:03:08.880"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:08.883" level="INFO">${balance_amount_before} = 49596.00</msg>
<status status="PASS" endtime="20170728 17:03:08.884" starttime="20170728 17:03:08.882"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:08.886" level="INFO">${frozen_amount_before} = 822.00</msg>
<status status="PASS" endtime="20170728 17:03:08.887" starttime="20170728 17:03:08.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:08.890" level="INFO">${account_id} = 6131</msg>
<status status="PASS" endtime="20170728 17:03:08.891" starttime="20170728 17:03:08.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 17:03:08.893" level="INFO">${user_id_real} = 1000000</msg>
<status status="PASS" endtime="20170728 17:03:08.894" starttime="20170728 17:03:08.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:08.896" level="INFO">${total_amount_before} = 50418.00</msg>
<status status="PASS" endtime="20170728 17:03:08.897" starttime="20170728 17:03:08.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:08.899" level="INFO">${balance_amount_before} = 49596.00</msg>
<status status="PASS" endtime="20170728 17:03:08.899" starttime="20170728 17:03:08.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:08.904" level="INFO">${frozen_amount_before} = 822.00</msg>
<status status="PASS" endtime="20170728 17:03:08.905" starttime="20170728 17:03:08.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:08.908" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:03:08.909" starttime="20170728 17:03:08.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 17:03:08.911" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:08.912" starttime="20170728 17:03:08.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 17:03:08.913" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</msg>
<status status="PASS" endtime="20170728 17:03:08.914" starttime="20170728 17:03:08.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170728 17:03:08.916" level="INFO">${database} = ((12445, 6131, Decimal('50418.00'), Decimal('49596.00'), Decimal('822.00'), datetime.datetime(2017, 7, 12, 20, 3, 46), datetime.datetime(2017, 7, 28, 14, 27, 14), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:08.917" starttime="20170728 17:03:08.915"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:08.917" starttime="20170728 17:03:08.808"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Ajb Withdraw Cancel" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:08.946" starttime="20170728 17:03:08.923"></status>
</kw>
<msg timestamp="20170728 17:03:08.946" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:08.947" starttime="20170728 17:03:08.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 17:03:08.949" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:08.951" starttime="20170728 17:03:08.948"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:08.953" starttime="20170728 17:03:08.919"></status>
</kw>
<kw name="错误时字段验证" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:08.957" level="INFO">200</msg>
<status status="PASS" endtime="20170728 17:03:08.958" starttime="20170728 17:03:08.956"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 17:03:08.960" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:08.961" starttime="20170728 17:03:08.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 17:03:08.965" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 17:03:08.966" starttime="20170728 17:03:08.963"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 17:03:08.969" level="INFO">To JSON using : content={"data":null,"msg":"失败","code":0,"success":false} </msg>
<msg timestamp="20170728 17:03:08.970" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 17:03:08.970" level="INFO">${toJson} = {u'msg': u'\u5931\u8d25', u'code': 0, u'data': None, u'success': False}</msg>
<status status="PASS" endtime="20170728 17:03:08.971" starttime="20170728 17:03:08.967"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>False</arg>
</arguments>
<msg timestamp="20170728 17:03:08.973" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:08.974" starttime="20170728 17:03:08.972"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['data']}</arg>
<arg>None</arg>
</arguments>
<msg timestamp="20170728 17:03:08.976" level="INFO">Argument types are:
&lt;type 'NoneType'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:08.977" starttime="20170728 17:03:08.975"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${toJson['code']}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:08.978" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:08.979" starttime="20170728 17:03:08.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:08.982" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:08.983" starttime="20170728 17:03:08.981"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:08.984" starttime="20170728 17:03:08.955"></status>
</kw>
<kw name="amount和表里的校验" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:08.991" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:08.999" starttime="20170728 17:03:08.989"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:09.000" starttime="20170728 17:03:08.988"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:09.001" starttime="20170728 17:03:08.986"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:09.004" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6131' </msg>
<msg timestamp="20170728 17:03:09.011" level="INFO">${user_id} = ((12445, 6131, Decimal('50418.00'), Decimal('49596.00'), Decimal('822.00'), datetime.datetime(2017, 7, 12, 20, 3, 46), datetime.datetime(2017, 7, 28, 14, 27, 14), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:09.012" starttime="20170728 17:03:09.003"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:09.014" starttime="20170728 17:03:09.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 17:03:09.017" level="INFO">total_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 17:03:09.018" starttime="20170728 17:03:09.016"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:09.021" starttime="20170728 17:03:09.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 17:03:09.023" level="INFO">balance_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 17:03:09.024" starttime="20170728 17:03:09.022"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:09.027" starttime="20170728 17:03:09.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 17:03:09.030" level="INFO">frozen_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 17:03:09.031" starttime="20170728 17:03:09.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amounts的数据没有变化正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:09.034" level="INFO">amounts的数据没有变化正确的</msg>
<status status="PASS" endtime="20170728 17:03:09.035" starttime="20170728 17:03:09.033"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:09.038" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:09.039" starttime="20170728 17:03:09.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount内容没有发生变化</arg>
</arguments>
<msg timestamp="20170728 17:03:09.040" level="INFO">表account_amount内容没有发生变化</msg>
<status status="PASS" endtime="20170728 17:03:09.041" starttime="20170728 17:03:09.040"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:03:09.044" level="INFO">${current_time} = 2017-07-28 17:03:09.043</msg>
<status status="PASS" endtime="20170728 17:03:09.045" starttime="20170728 17:03:09.042"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:09.048" level="INFO">${current_time_before_30} = 2017-07-28 17:02:09.043</msg>
<status status="PASS" endtime="20170728 17:03:09.049" starttime="20170728 17:03:09.047"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:09.052" level="INFO">${current_time_after_30} = 2017-07-28 17:04:14.043</msg>
<status status="PASS" endtime="20170728 17:03:09.053" starttime="20170728 17:03:09.050"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${bill_check}</var>
</assign>
<msg timestamp="20170728 17:03:09.056" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6131' and update_time between' 2017-07-28 17:02:09.043' and '2017-07-28 17:04:14.043' </msg>
<msg timestamp="20170728 17:03:09.063" level="INFO">${bill_check} = ()</msg>
<status status="PASS" endtime="20170728 17:03:09.064" starttime="20170728 17:03:09.054"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${bill_check}</arg>
</arguments>
<assign>
<var>${bill_check_length}</var>
</assign>
<msg timestamp="20170728 17:03:09.066" level="INFO">Length is 0</msg>
<msg timestamp="20170728 17:03:09.067" level="INFO">${bill_check_length} = 0</msg>
<status status="PASS" endtime="20170728 17:03:09.067" starttime="20170728 17:03:09.065"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${bill_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:09.070" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:09.071" starttime="20170728 17:03:09.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>account_unilateral_bill里的没有相关数据</arg>
</arguments>
<msg timestamp="20170728 17:03:09.073" level="INFO">account_unilateral_bill里的没有相关数据</msg>
<status status="PASS" endtime="20170728 17:03:09.074" starttime="20170728 17:03:09.072"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num ='${args11}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${transaction_check}</var>
</assign>
<msg timestamp="20170728 17:03:09.076" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num ='32102151361500531498' and update_time between' 2017-07-28 17:02:09.043' and '2017-07-28 17:04:14.043' </msg>
<msg timestamp="20170728 17:03:09.088" level="INFO">${transaction_check} = ()</msg>
<status status="PASS" endtime="20170728 17:03:09.089" starttime="20170728 17:03:09.075"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${transaction_check}</arg>
</arguments>
<assign>
<var>${transaction_check_length}</var>
</assign>
<msg timestamp="20170728 17:03:09.092" level="INFO">Length is 0</msg>
<msg timestamp="20170728 17:03:09.093" level="INFO">${transaction_check_length} = 0</msg>
<status status="PASS" endtime="20170728 17:03:09.093" starttime="20170728 17:03:09.090"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${transaction_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:09.096" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:09.097" starttime="20170728 17:03:09.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>ajb_account_transaction里的没有相关数据</arg>
</arguments>
<msg timestamp="20170728 17:03:09.099" level="INFO">ajb_account_transaction里的没有相关数据</msg>
<status status="PASS" endtime="20170728 17:03:09.099" starttime="20170728 17:03:09.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库表里数据调用接口前后没有发生变化</arg>
</arguments>
<msg timestamp="20170728 17:03:09.101" level="INFO">数据库表里数据调用接口前后没有发生变化</msg>
<status status="PASS" endtime="20170728 17:03:09.103" starttime="20170728 17:03:09.100"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:09.104" starttime="20170728 17:03:08.984"></status>
</kw>
<kw name="艾佳币恢复数目" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:09.110" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:09.119" starttime="20170728 17:03:09.109"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:09.121" starttime="20170728 17:03:09.108"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:09.122" starttime="20170728 17:03:09.107"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount \ SET total_amount=${database[0][2]},balance_amount=${database[0][3]},frozen_amount=${database[0][4]}where account_id="${account_id}";</arg>
</arguments>
<msg timestamp="20170728 17:03:09.125" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount  SET total_amount=50418.00,balance_amount=49596.00,frozen_amount=822.00where account_id="6131"; </msg>
<status status="PASS" endtime="20170728 17:03:09.131" starttime="20170728 17:03:09.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170728 17:03:09.133" level="INFO">成功</msg>
<status status="PASS" endtime="20170728 17:03:09.133" starttime="20170728 17:03:09.132"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:09.134" starttime="20170728 17:03:09.106"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:09.136" critical="yes" starttime="20170728 17:03:08.788"></status>
</test>
<test id="s1-s1-s4-t3" name="输入库里面标记删除的订单号">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:09.147" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:09.159" starttime="20170728 17:03:09.145"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:09.160" starttime="20170728 17:03:09.144"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:09.161" starttime="20170728 17:03:09.142"></status>
</kw>
<kw name="清数据" library="myResource">
<arguments>
<arg>88800888</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:09.166" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:09.174" starttime="20170728 17:03:09.165"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:09.175" starttime="20170728 17:03:09.164"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:09.176" starttime="20170728 17:03:09.163"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170728 17:03:09.178" level="INFO">Executing : Query  |  select * from ajb_account_transaction where id=88800888 </msg>
<msg timestamp="20170728 17:03:09.182" level="INFO">${check} = ()</msg>
<status status="PASS" endtime="20170728 17:03:09.183" starttime="20170728 17:03:09.177"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170728 17:03:09.185" level="INFO">Length is 0</msg>
<msg timestamp="20170728 17:03:09.186" level="INFO">${check_length} = 0</msg>
<status status="PASS" endtime="20170728 17:03:09.188" starttime="20170728 17:03:09.184"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} != 0</arg>
<arg>execute sql string</arg>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>数据库之前没有数据</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库之前没有数据</arg>
</arguments>
<msg timestamp="20170728 17:03:09.193" level="INFO">数据库之前没有数据</msg>
<status status="PASS" endtime="20170728 17:03:09.194" starttime="20170728 17:03:09.192"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:09.195" starttime="20170728 17:03:09.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库里面的这条数据清理成功啦。</arg>
</arguments>
<msg timestamp="20170728 17:03:09.198" level="INFO">数据库里面的这条数据清理成功啦。</msg>
<status status="PASS" endtime="20170728 17:03:09.199" starttime="20170728 17:03:09.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_delete}</arg>
</arguments>
<msg timestamp="20170728 17:03:09.201" level="INFO">${id_delete} = 88800888</msg>
<status status="PASS" endtime="20170728 17:03:09.201" starttime="20170728 17:03:09.200"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:09.203" starttime="20170728 17:03:09.162"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("${id_delete}","32102151361501122443","100000","6135","1","32102151361501122443","","2","1","8","2","1","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170728 17:03:09.205" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("88800888","32102151361501122443","100000","6135","1","32102151361501122443","","2","1","8","2","1","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170728 17:03:09.273" starttime="20170728 17:03:09.204"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>32102151361501122443</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:03:09.277" level="INFO">${args11} = 32102151361501122443</msg>
<status status="PASS" endtime="20170728 17:03:09.278" starttime="20170728 17:03:09.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:03:09.280" level="INFO">${args22} = </msg>
<status status="PASS" endtime="20170728 17:03:09.280" starttime="20170728 17:03:09.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 17:03:09.282" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170728 17:03:09.283" starttime="20170728 17:03:09.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 17:03:09.285" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 17:03:09.286" starttime="20170728 17:03:09.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 17:03:09.287" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</msg>
<status status="PASS" endtime="20170728 17:03:09.289" starttime="20170728 17:03:09.287"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:09.290" starttime="20170728 17:03:09.274"></status>
</kw>
<kw name="order_num的校验" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:09.296" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:09.304" starttime="20170728 17:03:09.295"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:09.306" starttime="20170728 17:03:09.294"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:09.307" starttime="20170728 17:03:09.293"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num ='${args11}'</arg>
</arguments>
<assign>
<var>${check_order_num}</var>
</assign>
<msg timestamp="20170728 17:03:09.309" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num ='32102151361501122443' </msg>
<msg timestamp="20170728 17:03:09.320" level="INFO">${check_order_num} = ((88800888, '32102151361501122443', 100000, 6135, 1, '32102151361501122443', '', Decimal('2.00'), 1, 8, 2, 1, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)),)</msg>
<status status="PASS" endtime="20170728 17:03:09.321" starttime="20170728 17:03:09.308"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check_order_num}</arg>
</arguments>
<assign>
<var>${check_order_num_length}</var>
</assign>
<msg timestamp="20170728 17:03:09.325" level="INFO">Length is 1</msg>
<msg timestamp="20170728 17:03:09.326" level="INFO">${check_order_num_length} = 1</msg>
<status status="PASS" endtime="20170728 17:03:09.326" starttime="20170728 17:03:09.323"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_order_num_length}==1 and ${check_order_num[0][9]}==8</arg>
<arg>set variable</arg>
<arg>该订单属于艾佳币回收冻结订单</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>该订单不属于艾佳币回收冻结订单</arg>
</arguments>
<assign>
<var>${var}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>该订单属于艾佳币回收冻结订单</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:09.330" starttime="20170728 17:03:09.329"></status>
</kw>
<msg timestamp="20170728 17:03:09.332" level="INFO">${var} = 该订单属于艾佳币回收冻结订单</msg>
<status status="PASS" endtime="20170728 17:03:09.332" starttime="20170728 17:03:09.328"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${var}'=='该订单不属于艾佳币回收冻结订单'</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:09.336" starttime="20170728 17:03:09.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${var}</arg>
</arguments>
<msg timestamp="20170728 17:03:09.339" level="INFO">该订单属于艾佳币回收冻结订单</msg>
<status status="PASS" endtime="20170728 17:03:09.340" starttime="20170728 17:03:09.337"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:09.341" starttime="20170728 17:03:09.292"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 17:03:09.345" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</msg>
<status status="PASS" endtime="20170728 17:03:09.346" starttime="20170728 17:03:09.343"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 17:03:09.348" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:09.349" starttime="20170728 17:03:09.347"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:09.353" starttime="20170728 17:03:09.352"></status>
</kw>
<msg timestamp="20170728 17:03:09.354" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:03:09.355" starttime="20170728 17:03:09.350"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>order_num</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:09.359" starttime="20170728 17:03:09.357"></status>
</kw>
<msg timestamp="20170728 17:03:09.360" level="INFO">${args11_after} = order_num</msg>
<status status="PASS" endtime="20170728 17:03:09.361" starttime="20170728 17:03:09.356"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:09.365" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:09.425" starttime="20170728 17:03:09.364"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:09.426" starttime="20170728 17:03:09.363"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:09.427" starttime="20170728 17:03:09.362"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 17:03:09.429" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num='32102151361501122443' and channel_no='1' </msg>
<msg timestamp="20170728 17:03:09.440" level="INFO">${database1} = ((88800888, '32102151361501122443', 100000, 6135, 1, '32102151361501122443', '', Decimal('2.00'), 1, 8, 2, 1, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)),)</msg>
<status status="PASS" endtime="20170728 17:03:09.441" starttime="20170728 17:03:09.428"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 17:03:09.443" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 17:03:09.447" level="INFO">${database} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 14), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:09.448" starttime="20170728 17:03:09.442"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 17:03:09.452" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:09.452" starttime="20170728 17:03:09.450"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 17:03:09.454" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 17:03:09.455" starttime="20170728 17:03:09.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:09.457" level="INFO">获得account_id值为：6135</msg>
<status status="PASS" endtime="20170728 17:03:09.457" starttime="20170728 17:03:09.456"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:09.460" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:09.461" starttime="20170728 17:03:09.458"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:09.464" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:09.465" starttime="20170728 17:03:09.462"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:09.469" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:09.470" starttime="20170728 17:03:09.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:09.473" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 17:03:09.473" starttime="20170728 17:03:09.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 17:03:09.475" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:09.476" starttime="20170728 17:03:09.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:09.478" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:09.478" starttime="20170728 17:03:09.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:09.481" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:09.482" starttime="20170728 17:03:09.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:09.485" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:09.486" starttime="20170728 17:03:09.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:09.489" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:03:09.490" starttime="20170728 17:03:09.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 17:03:09.493" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:09.494" starttime="20170728 17:03:09.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 17:03:09.496" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</msg>
<status status="PASS" endtime="20170728 17:03:09.497" starttime="20170728 17:03:09.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170728 17:03:09.499" level="INFO">${database} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 14), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:09.500" starttime="20170728 17:03:09.498"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:09.501" starttime="20170728 17:03:09.342"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Ajb Withdraw Cancel" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:09.521" starttime="20170728 17:03:09.505"></status>
</kw>
<msg timestamp="20170728 17:03:09.523" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:09.525" starttime="20170728 17:03:09.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 17:03:09.527" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:09.528" starttime="20170728 17:03:09.526"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:09.530" starttime="20170728 17:03:09.502"></status>
</kw>
<kw name="错误时字段验证" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:09.535" level="INFO">200</msg>
<status status="PASS" endtime="20170728 17:03:09.536" starttime="20170728 17:03:09.533"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 17:03:09.540" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:09.541" starttime="20170728 17:03:09.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 17:03:09.543" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 17:03:09.543" starttime="20170728 17:03:09.542"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 17:03:09.546" level="INFO">To JSON using : content={"data":null,"msg":"失败","code":0,"success":false} </msg>
<msg timestamp="20170728 17:03:09.547" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 17:03:09.548" level="INFO">${toJson} = {u'msg': u'\u5931\u8d25', u'code': 0, u'data': None, u'success': False}</msg>
<status status="PASS" endtime="20170728 17:03:09.549" starttime="20170728 17:03:09.545"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>False</arg>
</arguments>
<msg timestamp="20170728 17:03:09.552" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:09.553" starttime="20170728 17:03:09.551"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['data']}</arg>
<arg>None</arg>
</arguments>
<msg timestamp="20170728 17:03:09.555" level="INFO">Argument types are:
&lt;type 'NoneType'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:09.556" starttime="20170728 17:03:09.554"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${toJson['code']}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:09.559" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:09.560" starttime="20170728 17:03:09.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:09.562" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:09.563" starttime="20170728 17:03:09.561"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:09.564" starttime="20170728 17:03:09.531"></status>
</kw>
<kw name="amount和表里的校验" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:09.571" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:09.579" starttime="20170728 17:03:09.569"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:09.581" starttime="20170728 17:03:09.567"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:09.582" starttime="20170728 17:03:09.566"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:09.585" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 17:03:09.591" level="INFO">${user_id} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 14), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:09.592" starttime="20170728 17:03:09.583"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:09.596" starttime="20170728 17:03:09.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 17:03:09.599" level="INFO">total_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 17:03:09.601" starttime="20170728 17:03:09.598"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:09.604" starttime="20170728 17:03:09.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 17:03:09.606" level="INFO">balance_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 17:03:09.606" starttime="20170728 17:03:09.605"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:09.609" starttime="20170728 17:03:09.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 17:03:09.611" level="INFO">frozen_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 17:03:09.612" starttime="20170728 17:03:09.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amounts的数据没有变化正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:09.614" level="INFO">amounts的数据没有变化正确的</msg>
<status status="PASS" endtime="20170728 17:03:09.615" starttime="20170728 17:03:09.613"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:09.617" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:09.619" starttime="20170728 17:03:09.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount内容没有发生变化</arg>
</arguments>
<msg timestamp="20170728 17:03:09.622" level="INFO">表account_amount内容没有发生变化</msg>
<status status="PASS" endtime="20170728 17:03:09.623" starttime="20170728 17:03:09.620"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:03:09.626" level="INFO">${current_time} = 2017-07-28 17:03:09.625</msg>
<status status="PASS" endtime="20170728 17:03:09.626" starttime="20170728 17:03:09.624"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:09.628" level="INFO">${current_time_before_30} = 2017-07-28 17:02:09.625</msg>
<status status="PASS" endtime="20170728 17:03:09.629" starttime="20170728 17:03:09.627"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:09.631" level="INFO">${current_time_after_30} = 2017-07-28 17:04:14.625</msg>
<status status="PASS" endtime="20170728 17:03:09.631" starttime="20170728 17:03:09.630"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${bill_check}</var>
</assign>
<msg timestamp="20170728 17:03:09.634" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6135' and update_time between' 2017-07-28 17:02:09.625' and '2017-07-28 17:04:14.625' </msg>
<msg timestamp="20170728 17:03:09.640" level="INFO">${bill_check} = ()</msg>
<status status="PASS" endtime="20170728 17:03:09.641" starttime="20170728 17:03:09.632"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${bill_check}</arg>
</arguments>
<assign>
<var>${bill_check_length}</var>
</assign>
<msg timestamp="20170728 17:03:09.643" level="INFO">Length is 0</msg>
<msg timestamp="20170728 17:03:09.643" level="INFO">${bill_check_length} = 0</msg>
<status status="PASS" endtime="20170728 17:03:09.644" starttime="20170728 17:03:09.642"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${bill_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:09.646" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:09.646" starttime="20170728 17:03:09.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>account_unilateral_bill里的没有相关数据</arg>
</arguments>
<msg timestamp="20170728 17:03:09.648" level="INFO">account_unilateral_bill里的没有相关数据</msg>
<status status="PASS" endtime="20170728 17:03:09.650" starttime="20170728 17:03:09.647"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num ='${args11}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${transaction_check}</var>
</assign>
<msg timestamp="20170728 17:03:09.653" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num ='32102151361501122443' and update_time between' 2017-07-28 17:02:09.625' and '2017-07-28 17:04:14.625' </msg>
<msg timestamp="20170728 17:03:09.664" level="INFO">${transaction_check} = ()</msg>
<status status="PASS" endtime="20170728 17:03:09.665" starttime="20170728 17:03:09.651"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${transaction_check}</arg>
</arguments>
<assign>
<var>${transaction_check_length}</var>
</assign>
<msg timestamp="20170728 17:03:09.667" level="INFO">Length is 0</msg>
<msg timestamp="20170728 17:03:09.668" level="INFO">${transaction_check_length} = 0</msg>
<status status="PASS" endtime="20170728 17:03:09.670" starttime="20170728 17:03:09.666"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${transaction_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:09.672" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:09.672" starttime="20170728 17:03:09.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>ajb_account_transaction里的没有相关数据</arg>
</arguments>
<msg timestamp="20170728 17:03:09.674" level="INFO">ajb_account_transaction里的没有相关数据</msg>
<status status="PASS" endtime="20170728 17:03:09.675" starttime="20170728 17:03:09.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库表里数据调用接口前后没有发生变化</arg>
</arguments>
<msg timestamp="20170728 17:03:09.676" level="INFO">数据库表里数据调用接口前后没有发生变化</msg>
<status status="PASS" endtime="20170728 17:03:09.677" starttime="20170728 17:03:09.675"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:09.678" starttime="20170728 17:03:09.565"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<msg timestamp="20170728 17:03:09.679" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=88800888 </msg>
<status status="PASS" endtime="20170728 17:03:09.723" starttime="20170728 17:03:09.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当订单号为库里面标记删除的时候，接口返回失败</arg>
</arguments>
<msg timestamp="20170728 17:03:09.726" level="INFO">当订单号为库里面标记删除的时候，接口返回失败</msg>
<status status="PASS" endtime="20170728 17:03:09.726" starttime="20170728 17:03:09.725"></status>
</kw>
<kw name="艾佳币恢复数目" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:09.733" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:09.740" starttime="20170728 17:03:09.732"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:09.742" starttime="20170728 17:03:09.730"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:09.744" starttime="20170728 17:03:09.728"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount \ SET total_amount=${database[0][2]},balance_amount=${database[0][3]},frozen_amount=${database[0][4]}where account_id="${account_id}";</arg>
</arguments>
<msg timestamp="20170728 17:03:09.747" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount  SET total_amount=50423.00,balance_amount=49595.00,frozen_amount=828.00where account_id="6135"; </msg>
<status status="PASS" endtime="20170728 17:03:09.752" starttime="20170728 17:03:09.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170728 17:03:09.754" level="INFO">成功</msg>
<status status="PASS" endtime="20170728 17:03:09.755" starttime="20170728 17:03:09.754"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:09.756" starttime="20170728 17:03:09.727"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:09.757" critical="yes" starttime="20170728 17:03:09.138"></status>
</test>
<status status="PASS" endtime="20170728 17:03:09.759" starttime="20170728 17:03:06.637"></status>
</suite>
<suite source="F:\logs and reports\账户中心\艾佳币\艾佳币活动充值.txt" id="s1-s1-s5" name="艾佳币活动充值">
<test id="s1-s1-s5-t1" name="艾佳币&quot;APP注册账号返艾佳币&quot;, 1(上)充值">
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>100000</arg>
<arg>2</arg>
<arg>1</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:03:09.795" level="INFO">${args11} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:09.796" starttime="20170728 17:03:09.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:03:09.799" level="INFO">${args22} = 2</msg>
<status status="PASS" endtime="20170728 17:03:09.799" starttime="20170728 17:03:09.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 17:03:09.801" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170728 17:03:09.805" starttime="20170728 17:03:09.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 17:03:09.809" level="INFO">${args44} = 1</msg>
<status status="PASS" endtime="20170728 17:03:09.810" starttime="20170728 17:03:09.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 17:03:09.812" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</msg>
<status status="PASS" endtime="20170728 17:03:09.813" starttime="20170728 17:03:09.811"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:09.814" starttime="20170728 17:03:09.791"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 17:03:09.817" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</msg>
<status status="PASS" endtime="20170728 17:03:09.818" starttime="20170728 17:03:09.816"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 17:03:09.821" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:09.822" starttime="20170728 17:03:09.819"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:09.825" starttime="20170728 17:03:09.824"></status>
</kw>
<msg timestamp="20170728 17:03:09.826" level="INFO">${channel_no} = 2</msg>
<status status="PASS" endtime="20170728 17:03:09.827" starttime="20170728 17:03:09.823"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>user_id</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:09.830" starttime="20170728 17:03:09.829"></status>
</kw>
<msg timestamp="20170728 17:03:09.831" level="INFO">${args11_after} = user_id</msg>
<status status="PASS" endtime="20170728 17:03:09.831" starttime="20170728 17:03:09.827"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:09.837" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:09.846" starttime="20170728 17:03:09.834"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:09.847" starttime="20170728 17:03:09.833"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:09.848" starttime="20170728 17:03:09.832"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 17:03:09.850" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and channel_no='2' </msg>
<msg timestamp="20170728 17:03:09.861" level="INFO">${database1} = ((88889680, '32102151361501229990', 100000, 6273, 2, '32102151361501229990', '20170728162839GNY051613', Decimal('10.00'), 1, 2, 2, 0, datetime.datetime(2017, 7, 28, 16, 28, 42), datetime.datetime(2017...</msg>
<status status="PASS" endtime="20170728 17:03:09.862" starttime="20170728 17:03:09.849"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 17:03:09.864" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6273' </msg>
<msg timestamp="20170728 17:03:09.869" level="INFO">${database} = ((12587, 6273, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 17, 3, 41), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:09.870" starttime="20170728 17:03:09.863"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 17:03:09.873" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:09.874" starttime="20170728 17:03:09.872"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 17:03:09.876" level="INFO">${account_id} = 6273</msg>
<status status="PASS" endtime="20170728 17:03:09.876" starttime="20170728 17:03:09.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:09.878" level="INFO">获得account_id值为：6273</msg>
<status status="PASS" endtime="20170728 17:03:09.879" starttime="20170728 17:03:09.877"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:09.881" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:09.881" starttime="20170728 17:03:09.880"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:09.884" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:09.885" starttime="20170728 17:03:09.882"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:09.889" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:09.891" starttime="20170728 17:03:09.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:09.893" level="INFO">${account_id} = 6273</msg>
<status status="PASS" endtime="20170728 17:03:09.893" starttime="20170728 17:03:09.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 17:03:09.896" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:09.896" starttime="20170728 17:03:09.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:09.898" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:09.899" starttime="20170728 17:03:09.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:09.903" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:09.904" starttime="20170728 17:03:09.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:09.907" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:09.908" starttime="20170728 17:03:09.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:09.910" level="INFO">${channel_no} = 2</msg>
<status status="PASS" endtime="20170728 17:03:09.911" starttime="20170728 17:03:09.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 17:03:09.913" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:09.913" starttime="20170728 17:03:09.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 17:03:09.915" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</msg>
<status status="PASS" endtime="20170728 17:03:09.916" starttime="20170728 17:03:09.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170728 17:03:09.921" level="INFO">${database} = ((12587, 6273, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 17, 3, 41), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:09.922" starttime="20170728 17:03:09.920"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:09.923" starttime="20170728 17:03:09.814"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Ajb Activity Recharge" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:09.992" starttime="20170728 17:03:09.928"></status>
</kw>
<msg timestamp="20170728 17:03:09.993" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:09.994" starttime="20170728 17:03:09.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 17:03:09.996" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:09.996" starttime="20170728 17:03:09.995"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:09.998" starttime="20170728 17:03:09.924"></status>
</kw>
<kw name="字段验证" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:10.000" level="INFO">200</msg>
<status status="PASS" endtime="20170728 17:03:10.001" starttime="20170728 17:03:09.999"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 17:03:10.003" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:10.004" starttime="20170728 17:03:10.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 17:03:10.005" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 17:03:10.006" starttime="20170728 17:03:10.005"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 17:03:10.009" level="INFO">To JSON using : content={"data":{"orderNum":"32102151361501230526"},"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 17:03:10.009" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 17:03:10.010" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': {u'orderNum': u'32102151361501230526'}, u'success': True}</msg>
<status status="PASS" endtime="20170728 17:03:10.010" starttime="20170728 17:03:10.007"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 17:03:10.012" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:10.013" starttime="20170728 17:03:10.011"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:10.015" starttime="20170728 17:03:10.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:10.017" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:10.017" starttime="20170728 17:03:10.016"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<assign>
<var>@{Link1}</var>
</assign>
<msg timestamp="20170728 17:03:10.020" level="INFO">@{Link1} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:10.020" starttime="20170728 17:03:10.018"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>"${value}" in @{Link1}</arg>
<arg>Get From Dictionary</arg>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${orderNum}</var>
</assign>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:10.026" starttime="20170728 17:03:10.024"></status>
</kw>
<msg timestamp="20170728 17:03:10.027" level="INFO">${orderNum} = 32102151361501230526</msg>
<status status="PASS" endtime="20170728 17:03:10.028" starttime="20170728 17:03:10.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<msg timestamp="20170728 17:03:10.031" level="INFO">${orderNum} = 32102151361501230526</msg>
<status status="PASS" endtime="20170728 17:03:10.031" starttime="20170728 17:03:10.029"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:10.032" starttime="20170728 17:03:09.998"></status>
</kw>
<kw name="表ajb_account_open_record的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_open_record</arg>
</arguments>
<msg timestamp="20170728 17:03:10.036" level="INFO">现在开始校验表ajb_account_open_record</msg>
<status status="PASS" endtime="20170728 17:03:10.037" starttime="20170728 17:03:10.034"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:10.042" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:10.049" starttime="20170728 17:03:10.041"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:10.050" starttime="20170728 17:03:10.040"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:10.051" starttime="20170728 17:03:10.039"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:10.054" level="INFO">Executing : Query  |  select * from ajb_account_open_record where account_id ='6273' </msg>
<msg timestamp="20170728 17:03:10.062" level="INFO">${user_id} = ((100000000010L, '32102151361501206852', 100000, 6273, 2, 2, 0, datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 10, 46, 53)),)</msg>
<status status="PASS" endtime="20170728 17:03:10.063" starttime="20170728 17:03:10.053"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:10.065" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:10.065" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:10.066" starttime="20170728 17:03:10.064"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:10.068" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:10.069" starttime="20170728 17:03:10.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:10.071" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:10.073" starttime="20170728 17:03:10.070"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:03:10.076" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:10.077" starttime="20170728 17:03:10.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:03:10.079" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:03:10.080" starttime="20170728 17:03:10.078"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:10.081" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:10.082" starttime="20170728 17:03:10.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no正确反映艾佳币账户渠道</arg>
</arguments>
<msg timestamp="20170728 17:03:10.085" level="INFO">channel_no正确反映艾佳币账户渠道</msg>
<status status="PASS" endtime="20170728 17:03:10.086" starttime="20170728 17:03:10.083"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 17:03:10.088" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:10.090" starttime="20170728 17:03:10.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>status的值为2,表示生效，是正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:10.092" level="INFO">status的值为2,表示生效，是正确的</msg>
<status status="PASS" endtime="20170728 17:03:10.093" starttime="20170728 17:03:10.091"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:10.095" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:10.096" starttime="20170728 17:03:10.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:10.097" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:10.098" starttime="20170728 17:03:10.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表里面的add_time和update_time的时间是一致的。校验正确。</arg>
</arguments>
<msg timestamp="20170728 17:03:10.099" level="INFO">表里面的add_time和update_time的时间是一致的。校验正确。</msg>
<status status="PASS" endtime="20170728 17:03:10.100" starttime="20170728 17:03:10.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_open_record的校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:10.103" level="INFO">表ajb_account_open_record的校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:10.104" starttime="20170728 17:03:10.102"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:10.105" starttime="20170728 17:03:10.033"></status>
</kw>
<kw name="表account_unilateral_bill的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_unilateral_bill</arg>
</arguments>
<msg timestamp="20170728 17:03:10.108" level="INFO">现在开始校验表account_unilateral_bill</msg>
<status status="PASS" endtime="20170728 17:03:10.109" starttime="20170728 17:03:10.107"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:10.113" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:10.122" starttime="20170728 17:03:10.112"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:10.124" starttime="20170728 17:03:10.110"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:10.125" starttime="20170728 17:03:10.109"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>account_unilateral_bill</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:10.131" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:10.139" starttime="20170728 17:03:10.130"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:10.140" starttime="20170728 17:03:10.128"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:10.141" starttime="20170728 17:03:10.127"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:03:10.143" level="INFO">${current_time} = 2017-07-28 17:03:10.143</msg>
<status status="PASS" endtime="20170728 17:03:10.143" starttime="20170728 17:03:10.142"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>0 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:10.145" level="INFO">${current_time_before_30} = 2017-07-28 17:03:10.143</msg>
<status status="PASS" endtime="20170728 17:03:10.146" starttime="20170728 17:03:10.144"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:10.149" level="INFO">${current_time_after_30} = 2017-07-28 17:04:50.143</msg>
<status status="PASS" endtime="20170728 17:03:10.150" starttime="20170728 17:03:10.147"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 17:03:10.154" level="INFO">Executing : Query  |  select * from account_unilateral_bill where user_id='100000' and update_time between' 2017-07-28 17:03:10.143' and '2017-07-28 17:04:50.143' </msg>
<msg timestamp="20170728 17:03:10.162" level="INFO">${updatetime} = ((7706, '32102151361501230530', 100000, 6273, '32102151361501230527', 1, 1, 3, Decimal('2.00'), None, datetime.datetime(2017, 7, 28, 17, 4, 15), datetime.datetime(2017, 7, 28, 17, 4, 15), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:10.163" starttime="20170728 17:03:10.152"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 17:03:10.165" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 17:03:10.166" starttime="20170728 17:03:10.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 17:03:10.169" level="INFO">account_unilateral_bill表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 17:03:10.170" starttime="20170728 17:03:10.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:10.173" level="INFO">${current_time_before_30} = 2017-07-28 17:03:10.143</msg>
<status status="PASS" endtime="20170728 17:03:10.174" starttime="20170728 17:03:10.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:10.176" level="INFO">${current_time_after_30} = 2017-07-28 17:04:50.143</msg>
<status status="PASS" endtime="20170728 17:03:10.176" starttime="20170728 17:03:10.175"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:10.177" starttime="20170728 17:03:10.126"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id} 'and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:10.179" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6273 'and update_time between' 2017-07-28 17:03:10.143' and '2017-07-28 17:04:50.143' </msg>
<msg timestamp="20170728 17:03:10.184" level="INFO">${user_id} = ((7706, '32102151361501230530', 100000, 6273, '32102151361501230527', 1, 1, 3, Decimal('2.00'), None, datetime.datetime(2017, 7, 28, 17, 4, 15), datetime.datetime(2017, 7, 28, 17, 4, 15), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:10.186" starttime="20170728 17:03:10.178"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:10.189" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:10.190" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:10.191" starttime="20170728 17:03:10.188"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:10.193" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:10.193" starttime="20170728 17:03:10.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:10.195" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:10.195" starttime="20170728 17:03:10.194"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:10.197" starttime="20170728 17:03:10.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:03:10.200" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:03:10.201" starttime="20170728 17:03:10.199"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:10.204" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:10.205" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:10.205" starttime="20170728 17:03:10.203"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:10.207" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:10.208" starttime="20170728 17:03:10.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:10.211" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:10.212" starttime="20170728 17:03:10.210"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:03:10.215" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:10.216" starttime="20170728 17:03:10.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 17:03:10.218" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 17:03:10.219" starttime="20170728 17:03:10.217"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>7</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:10.226" starttime="20170728 17:03:10.224"></status>
</kw>
<msg timestamp="20170728 17:03:10.228" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:03:10.229" starttime="20170728 17:03:10.222"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:03:10.232" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:03:10.233" starttime="20170728 17:03:10.231"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:10.238" starttime="20170728 17:03:10.236"></status>
</kw>
<msg timestamp="20170728 17:03:10.239" level="INFO">${event_code_after} = 1</msg>
<status status="PASS" endtime="20170728 17:03:10.239" starttime="20170728 17:03:10.234"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:03:10.241" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:10.242" starttime="20170728 17:03:10.240"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:10.246" starttime="20170728 17:03:10.245"></status>
</kw>
<msg timestamp="20170728 17:03:10.247" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:03:10.248" starttime="20170728 17:03:10.242"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:10.252" starttime="20170728 17:03:10.250"></status>
</kw>
<msg timestamp="20170728 17:03:10.253" level="INFO">${amount} = 2</msg>
<status status="PASS" endtime="20170728 17:03:10.253" starttime="20170728 17:03:10.249"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:03:10.256" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:03:10.256" starttime="20170728 17:03:10.254"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:10.259" starttime="20170728 17:03:10.258"></status>
</kw>
<msg timestamp="20170728 17:03:10.260" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:10.261" starttime="20170728 17:03:10.257"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:10.265" starttime="20170728 17:03:10.263"></status>
</kw>
<msg timestamp="20170728 17:03:10.267" level="INFO">${total_amount} = 50425.0</msg>
<status status="PASS" endtime="20170728 17:03:10.268" starttime="20170728 17:03:10.262"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:10.277" starttime="20170728 17:03:10.275"></status>
</kw>
<msg timestamp="20170728 17:03:10.278" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:10.279" starttime="20170728 17:03:10.270"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:10.285" starttime="20170728 17:03:10.283"></status>
</kw>
<msg timestamp="20170728 17:03:10.286" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:10.287" starttime="20170728 17:03:10.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:10.289" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:03:10.291" starttime="20170728 17:03:10.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:10.293" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:03:10.293" starttime="20170728 17:03:10.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:10.295" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:10.296" starttime="20170728 17:03:10.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:10.297" level="INFO">${amount} = 2</msg>
<status status="PASS" endtime="20170728 17:03:10.298" starttime="20170728 17:03:10.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:10.300" level="INFO">${total_amount} = 50425.0</msg>
<status status="PASS" endtime="20170728 17:03:10.300" starttime="20170728 17:03:10.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:10.303" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:10.304" starttime="20170728 17:03:10.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:10.306" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:10.307" starttime="20170728 17:03:10.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:10.312" level="INFO">${event_code_after} = 1</msg>
<status status="PASS" endtime="20170728 17:03:10.313" starttime="20170728 17:03:10.309"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:10.315" starttime="20170728 17:03:10.220"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:10.319" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:10.320" starttime="20170728 17:03:10.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:10.323" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 17:03:10.324" starttime="20170728 17:03:10.322"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:10.326" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:10.327" starttime="20170728 17:03:10.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:10.328" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170728 17:03:10.329" starttime="20170728 17:03:10.328"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:10.331" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:10.332" starttime="20170728 17:03:10.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:10.335" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 17:03:10.337" starttime="20170728 17:03:10.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 17:03:10.340" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 17:03:10.341" starttime="20170728 17:03:10.339"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:10.344" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:10.345" starttime="20170728 17:03:10.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:10.347" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:10.348" starttime="20170728 17:03:10.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:10.350" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170728 17:03:10.351" starttime="20170728 17:03:10.349"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_unilateral}</var>
</assign>
<msg timestamp="20170728 17:03:10.356" level="INFO">${user_id[0][0]_unilateral} = 7706</msg>
<status status="PASS" endtime="20170728 17:03:10.357" starttime="20170728 17:03:10.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_unilateral}</arg>
</arguments>
<msg timestamp="20170728 17:03:10.360" level="INFO">${user_id[0][0]_unilateral} = 7706</msg>
<status status="PASS" endtime="20170728 17:03:10.361" starttime="20170728 17:03:10.358"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]_unilateral}'</arg>
</arguments>
<msg timestamp="20170728 17:03:10.363" level="INFO">Executing : Execute SQL String  |  delete from account_unilateral_bill where id ='7706' </msg>
<status status="PASS" endtime="20170728 17:03:10.420" starttime="20170728 17:03:10.362"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:10.421" starttime="20170728 17:03:10.106"></status>
</kw>
<kw name="表ajb_account_transaction" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170728 17:03:10.424" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170728 17:03:10.424" starttime="20170728 17:03:10.423"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:10.430" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:10.438" starttime="20170728 17:03:10.428"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:10.440" starttime="20170728 17:03:10.426"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:10.440" starttime="20170728 17:03:10.425"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>ajb_account_transaction</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:10.446" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:10.454" starttime="20170728 17:03:10.445"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:10.455" starttime="20170728 17:03:10.443"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:10.456" starttime="20170728 17:03:10.442"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:03:10.458" level="INFO">${current_time} = 2017-07-28 17:03:10.458</msg>
<status status="PASS" endtime="20170728 17:03:10.459" starttime="20170728 17:03:10.457"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>0 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:10.463" level="INFO">${current_time_before_30} = 2017-07-28 17:03:10.458</msg>
<status status="PASS" endtime="20170728 17:03:10.465" starttime="20170728 17:03:10.461"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:10.469" level="INFO">${current_time_after_30} = 2017-07-28 17:04:50.458</msg>
<status status="PASS" endtime="20170728 17:03:10.470" starttime="20170728 17:03:10.467"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 17:03:10.473" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and update_time between' 2017-07-28 17:03:10.458' and '2017-07-28 17:04:50.458' </msg>
<msg timestamp="20170728 17:03:10.483" level="INFO">${updatetime} = ((88889798, '32102151361501230526', 100000, 6273, 2, '32102151361501230526', '20170728170412EEN051701', Decimal('2.00'), 1, 1, 2, 0, datetime.datetime(2017, 7, 28, 17, 4, 15), datetime.datetime(2017, ...</msg>
<status status="PASS" endtime="20170728 17:03:10.484" starttime="20170728 17:03:10.471"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 17:03:10.487" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 17:03:10.488" starttime="20170728 17:03:10.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 17:03:10.490" level="INFO">ajb_account_transaction表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 17:03:10.492" starttime="20170728 17:03:10.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:10.495" level="INFO">${current_time_before_30} = 2017-07-28 17:03:10.458</msg>
<status status="PASS" endtime="20170728 17:03:10.495" starttime="20170728 17:03:10.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:10.497" level="INFO">${current_time_after_30} = 2017-07-28 17:04:50.458</msg>
<status status="PASS" endtime="20170728 17:03:10.498" starttime="20170728 17:03:10.496"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:10.499" starttime="20170728 17:03:10.441"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:10.502" level="INFO">Executing : Query  |  select * from ajb_account_transaction where account_id ='6273' and update_time between' 2017-07-28 17:03:10.458' and '2017-07-28 17:04:50.458' </msg>
<msg timestamp="20170728 17:03:10.512" level="INFO">${user_id} = ((88889798, '32102151361501230526', 100000, 6273, 2, '32102151361501230526', '20170728170412EEN051701', Decimal('2.00'), 1, 1, 2, 0, datetime.datetime(2017, 7, 28, 17, 4, 15), datetime.datetime(2017, ...</msg>
<status status="PASS" endtime="20170728 17:03:10.513" starttime="20170728 17:03:10.500"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:10.515" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:10.515" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:10.516" starttime="20170728 17:03:10.514"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:10.519" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:10.519" starttime="20170728 17:03:10.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:10.523" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:10.524" starttime="20170728 17:03:10.522"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:10.527" starttime="20170728 17:03:10.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:03:10.529" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:03:10.529" starttime="20170728 17:03:10.528"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:10.531" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:10.532" starttime="20170728 17:03:10.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no的值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:10.534" level="INFO">channel_no的值正确</msg>
<status status="PASS" endtime="20170728 17:03:10.534" starttime="20170728 17:03:10.533"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${args11}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${orderNum}</arg>
</arguments>
<assign>
<var>${bill_order_num}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:10.540" starttime="20170728 17:03:10.538"></status>
</kw>
<msg timestamp="20170728 17:03:10.542" level="INFO">${bill_order_num} = 32102151361501230526</msg>
<status status="PASS" endtime="20170728 17:03:10.543" starttime="20170728 17:03:10.536"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>${bill_order_num}</arg>
</arguments>
<msg timestamp="20170728 17:03:10.546" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:10.546" starttime="20170728 17:03:10.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170728 17:03:10.548" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170728 17:03:10.549" starttime="20170728 17:03:10.547"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>7</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:10.555" starttime="20170728 17:03:10.554"></status>
</kw>
<msg timestamp="20170728 17:03:10.556" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:03:10.557" starttime="20170728 17:03:10.551"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:03:10.560" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:03:10.561" starttime="20170728 17:03:10.558"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:10.564" starttime="20170728 17:03:10.563"></status>
</kw>
<msg timestamp="20170728 17:03:10.565" level="INFO">${event_code_after} = 1</msg>
<status status="PASS" endtime="20170728 17:03:10.566" starttime="20170728 17:03:10.562"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:03:10.569" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:10.569" starttime="20170728 17:03:10.567"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:10.575" starttime="20170728 17:03:10.573"></status>
</kw>
<msg timestamp="20170728 17:03:10.576" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:03:10.576" starttime="20170728 17:03:10.570"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:10.580" starttime="20170728 17:03:10.579"></status>
</kw>
<msg timestamp="20170728 17:03:10.580" level="INFO">${amount} = 2</msg>
<status status="PASS" endtime="20170728 17:03:10.581" starttime="20170728 17:03:10.577"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:03:10.583" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:03:10.583" starttime="20170728 17:03:10.582"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:10.589" starttime="20170728 17:03:10.587"></status>
</kw>
<msg timestamp="20170728 17:03:10.591" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:10.591" starttime="20170728 17:03:10.585"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:10.597" starttime="20170728 17:03:10.595"></status>
</kw>
<msg timestamp="20170728 17:03:10.597" level="INFO">${total_amount} = 50425.0</msg>
<status status="PASS" endtime="20170728 17:03:10.598" starttime="20170728 17:03:10.593"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:10.603" starttime="20170728 17:03:10.602"></status>
</kw>
<msg timestamp="20170728 17:03:10.605" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:10.606" starttime="20170728 17:03:10.599"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:10.613" starttime="20170728 17:03:10.612"></status>
</kw>
<msg timestamp="20170728 17:03:10.615" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:10.617" starttime="20170728 17:03:10.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:10.621" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:03:10.623" starttime="20170728 17:03:10.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:10.626" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:03:10.627" starttime="20170728 17:03:10.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:10.631" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:10.633" starttime="20170728 17:03:10.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:10.637" level="INFO">${amount} = 2</msg>
<status status="PASS" endtime="20170728 17:03:10.638" starttime="20170728 17:03:10.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:10.640" level="INFO">${total_amount} = 50425.0</msg>
<status status="PASS" endtime="20170728 17:03:10.641" starttime="20170728 17:03:10.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:10.644" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:10.645" starttime="20170728 17:03:10.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:10.649" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:10.650" starttime="20170728 17:03:10.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:10.655" level="INFO">${event_code_after} = 1</msg>
<status status="PASS" endtime="20170728 17:03:10.657" starttime="20170728 17:03:10.653"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:10.659" starttime="20170728 17:03:10.549"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170728 17:03:10.662" level="INFO">${pay_no_after} = 20170728170412EEN051701</msg>
<status status="PASS" endtime="20170728 17:03:10.663" starttime="20170728 17:03:10.661"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170728 17:03:10.667" level="INFO">Length is 23</msg>
<msg timestamp="20170728 17:03:10.669" level="INFO">${pay_no_after_length} = 23</msg>
<status status="PASS" endtime="20170728 17:03:10.670" starttime="20170728 17:03:10.664"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:10.672" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:10.673" starttime="20170728 17:03:10.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170728 17:03:10.676" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170728 17:03:10.677" starttime="20170728 17:03:10.674"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:10.680" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:10.682" starttime="20170728 17:03:10.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:10.686" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 17:03:10.687" starttime="20170728 17:03:10.683"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:03:10.690" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:10.691" starttime="20170728 17:03:10.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 17:03:10.693" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 17:03:10.694" starttime="20170728 17:03:10.692"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][9]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:10.697" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:10.698" starttime="20170728 17:03:10.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:10.703" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 17:03:10.704" starttime="20170728 17:03:10.701"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 17:03:10.707" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:10.709" starttime="20170728 17:03:10.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170728 17:03:10.713" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170728 17:03:10.714" starttime="20170728 17:03:10.711"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:10.717" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:10.719" starttime="20170728 17:03:10.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:10.723" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:10.724" starttime="20170728 17:03:10.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 17:03:10.728" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 17:03:10.729" starttime="20170728 17:03:10.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:10.732" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170728 17:03:10.732" starttime="20170728 17:03:10.730"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170728 17:03:10.736" level="INFO">${user_id[0][0]_transaction} = 88889798</msg>
<status status="PASS" endtime="20170728 17:03:10.737" starttime="20170728 17:03:10.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170728 17:03:10.739" level="INFO">${user_id[0][0]_transaction} = 88889798</msg>
<status status="PASS" endtime="20170728 17:03:10.739" starttime="20170728 17:03:10.738"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id[0][0]}'</arg>
</arguments>
<assign>
<var>${user_id_unilateral_delete1}</var>
</assign>
<msg timestamp="20170728 17:03:10.741" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88889798' </msg>
<msg timestamp="20170728 17:03:10.853" level="INFO">${user_id_unilateral_delete1} = None</msg>
<status status="PASS" endtime="20170728 17:03:10.856" starttime="20170728 17:03:10.740"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:10.858" starttime="20170728 17:03:10.422"></status>
</kw>
<kw name="表account_amount的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_amount</arg>
</arguments>
<msg timestamp="20170728 17:03:10.864" level="INFO">现在开始校验表account_amount</msg>
<status status="PASS" endtime="20170728 17:03:10.866" starttime="20170728 17:03:10.863"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:10.878" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:10.889" starttime="20170728 17:03:10.875"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:10.893" starttime="20170728 17:03:10.871"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:10.895" starttime="20170728 17:03:10.868"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time1}</var>
</assign>
<msg timestamp="20170728 17:03:10.901" level="INFO">${current_time1} = 2017-07-28 17:03:10.901</msg>
<status status="PASS" endtime="20170728 17:03:10.903" starttime="20170728 17:03:10.898"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:10.908" level="INFO">${current_time1_before_30} = 2017-07-28 17:02:10.901</msg>
<status status="PASS" endtime="20170728 17:03:10.909" starttime="20170728 17:03:10.905"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:10.913" level="INFO">${current_time1_after_30} = 2017-07-28 17:04:10.901</msg>
<status status="PASS" endtime="20170728 17:03:10.915" starttime="20170728 17:03:10.911"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:10.921" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6273' </msg>
<msg timestamp="20170728 17:03:10.927" level="INFO">${user_id} = ((12587, 6273, Decimal('50425.00'), Decimal('49597.00'), Decimal('828.00'), datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 17, 4, 15), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:10.928" starttime="20170728 17:03:10.919"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>7</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:10.935" starttime="20170728 17:03:10.933"></status>
</kw>
<msg timestamp="20170728 17:03:10.937" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:03:10.937" starttime="20170728 17:03:10.930"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:03:10.939" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:03:10.940" starttime="20170728 17:03:10.938"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:10.944" starttime="20170728 17:03:10.943"></status>
</kw>
<msg timestamp="20170728 17:03:10.945" level="INFO">${event_code_after} = 1</msg>
<status status="PASS" endtime="20170728 17:03:10.945" starttime="20170728 17:03:10.941"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:03:10.948" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:10.948" starttime="20170728 17:03:10.946"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:10.953" starttime="20170728 17:03:10.952"></status>
</kw>
<msg timestamp="20170728 17:03:10.954" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:03:10.954" starttime="20170728 17:03:10.949"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:10.959" starttime="20170728 17:03:10.957"></status>
</kw>
<msg timestamp="20170728 17:03:10.960" level="INFO">${amount} = 2</msg>
<status status="PASS" endtime="20170728 17:03:10.961" starttime="20170728 17:03:10.955"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:03:10.963" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:03:10.964" starttime="20170728 17:03:10.962"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:10.970" starttime="20170728 17:03:10.969"></status>
</kw>
<msg timestamp="20170728 17:03:10.971" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:10.972" starttime="20170728 17:03:10.965"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:10.977" starttime="20170728 17:03:10.975"></status>
</kw>
<msg timestamp="20170728 17:03:10.979" level="INFO">${total_amount} = 50425.0</msg>
<status status="PASS" endtime="20170728 17:03:10.980" starttime="20170728 17:03:10.973"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:10.986" starttime="20170728 17:03:10.984"></status>
</kw>
<msg timestamp="20170728 17:03:10.987" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:10.987" starttime="20170728 17:03:10.981"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:10.993" starttime="20170728 17:03:10.992"></status>
</kw>
<msg timestamp="20170728 17:03:10.994" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:10.994" starttime="20170728 17:03:10.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:10.996" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:03:10.997" starttime="20170728 17:03:10.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:10.999" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:03:10.999" starttime="20170728 17:03:10.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.002" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:11.003" starttime="20170728 17:03:11.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.005" level="INFO">${amount} = 2</msg>
<status status="PASS" endtime="20170728 17:03:11.006" starttime="20170728 17:03:11.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.011" level="INFO">${total_amount} = 50425.0</msg>
<status status="PASS" endtime="20170728 17:03:11.012" starttime="20170728 17:03:11.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.014" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:11.014" starttime="20170728 17:03:11.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.017" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:11.019" starttime="20170728 17:03:11.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.021" level="INFO">${event_code_after} = 1</msg>
<status status="PASS" endtime="20170728 17:03:11.023" starttime="20170728 17:03:11.020"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:11.024" starttime="20170728 17:03:10.929"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.027" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:11.028" starttime="20170728 17:03:11.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:11.030" level="INFO">total_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:11.030" starttime="20170728 17:03:11.029"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.032" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:11.033" starttime="20170728 17:03:11.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:11.036" level="INFO">balance_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:11.037" starttime="20170728 17:03:11.035"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:11.040" starttime="20170728 17:03:11.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:11.042" level="INFO">frozen_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:11.043" starttime="20170728 17:03:11.041"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:11.045" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:11.045" starttime="20170728 17:03:11.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:11.047" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:11.048" starttime="20170728 17:03:11.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:11.050" level="INFO">表account_amount校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:11.050" starttime="20170728 17:03:11.048"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:11.052" starttime="20170728 17:03:10.860"></status>
</kw>
<kw name="艾佳币恢复数目" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:11.057" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:11.064" starttime="20170728 17:03:11.056"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:11.066" starttime="20170728 17:03:11.055"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:11.067" starttime="20170728 17:03:11.054"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount \ SET total_amount=${database[0][2]},balance_amount=${database[0][3]},frozen_amount=${database[0][4]}where account_id="${account_id}";</arg>
</arguments>
<msg timestamp="20170728 17:03:11.070" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount  SET total_amount=50423.00,balance_amount=49595.00,frozen_amount=828.00where account_id="6273"; </msg>
<status status="PASS" endtime="20170728 17:03:11.149" starttime="20170728 17:03:11.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170728 17:03:11.152" level="INFO">成功</msg>
<status status="PASS" endtime="20170728 17:03:11.153" starttime="20170728 17:03:11.151"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:11.153" starttime="20170728 17:03:11.053"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:11.154" critical="yes" starttime="20170728 17:03:09.785"></status>
</test>
<test id="s1-s1-s5-t2" name="艾佳币&quot;APP资料完善返艾佳币&quot;, 2（上）充值">
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>100000</arg>
<arg>2</arg>
<arg>2</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.163" level="INFO">${args11} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:11.164" starttime="20170728 17:03:11.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.167" level="INFO">${args22} = 2</msg>
<status status="PASS" endtime="20170728 17:03:11.168" starttime="20170728 17:03:11.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.170" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170728 17:03:11.171" starttime="20170728 17:03:11.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.173" level="INFO">${args44} = 2</msg>
<status status="PASS" endtime="20170728 17:03:11.173" starttime="20170728 17:03:11.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.175" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</msg>
<status status="PASS" endtime="20170728 17:03:11.176" starttime="20170728 17:03:11.174"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:11.177" starttime="20170728 17:03:11.160"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 17:03:11.181" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</msg>
<status status="PASS" endtime="20170728 17:03:11.182" starttime="20170728 17:03:11.180"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 17:03:11.184" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:11.185" starttime="20170728 17:03:11.183"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:11.189" starttime="20170728 17:03:11.187"></status>
</kw>
<msg timestamp="20170728 17:03:11.190" level="INFO">${channel_no} = 2</msg>
<status status="PASS" endtime="20170728 17:03:11.190" starttime="20170728 17:03:11.186"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>user_id</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:11.193" starttime="20170728 17:03:11.193"></status>
</kw>
<msg timestamp="20170728 17:03:11.194" level="INFO">${args11_after} = user_id</msg>
<status status="PASS" endtime="20170728 17:03:11.195" starttime="20170728 17:03:11.191"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:11.203" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:11.211" starttime="20170728 17:03:11.201"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:11.212" starttime="20170728 17:03:11.199"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:11.213" starttime="20170728 17:03:11.196"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 17:03:11.215" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and channel_no='2' </msg>
<msg timestamp="20170728 17:03:11.225" level="INFO">${database1} = ((88889680, '32102151361501229990', 100000, 6273, 2, '32102151361501229990', '20170728162839GNY051613', Decimal('10.00'), 1, 2, 2, 0, datetime.datetime(2017, 7, 28, 16, 28, 42), datetime.datetime(2017...</msg>
<status status="PASS" endtime="20170728 17:03:11.226" starttime="20170728 17:03:11.214"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 17:03:11.229" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6273' </msg>
<msg timestamp="20170728 17:03:11.233" level="INFO">${database} = ((12587, 6273, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 17, 4, 16), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:11.234" starttime="20170728 17:03:11.228"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 17:03:11.237" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:11.237" starttime="20170728 17:03:11.235"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 17:03:11.241" level="INFO">${account_id} = 6273</msg>
<status status="PASS" endtime="20170728 17:03:11.242" starttime="20170728 17:03:11.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.244" level="INFO">获得account_id值为：6273</msg>
<status status="PASS" endtime="20170728 17:03:11.245" starttime="20170728 17:03:11.243"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:11.247" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:11.248" starttime="20170728 17:03:11.246"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:11.250" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:11.251" starttime="20170728 17:03:11.249"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:11.253" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:11.254" starttime="20170728 17:03:11.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.256" level="INFO">${account_id} = 6273</msg>
<status status="PASS" endtime="20170728 17:03:11.257" starttime="20170728 17:03:11.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.259" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:11.260" starttime="20170728 17:03:11.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.262" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:11.262" starttime="20170728 17:03:11.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.264" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:11.265" starttime="20170728 17:03:11.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.268" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:11.268" starttime="20170728 17:03:11.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.270" level="INFO">${channel_no} = 2</msg>
<status status="PASS" endtime="20170728 17:03:11.272" starttime="20170728 17:03:11.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.275" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:11.276" starttime="20170728 17:03:11.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.279" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</msg>
<status status="PASS" endtime="20170728 17:03:11.280" starttime="20170728 17:03:11.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.282" level="INFO">${database} = ((12587, 6273, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 17, 4, 16), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:11.282" starttime="20170728 17:03:11.281"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:11.283" starttime="20170728 17:03:11.178"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Ajb Activity Recharge" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:11.367" starttime="20170728 17:03:11.287"></status>
</kw>
<msg timestamp="20170728 17:03:11.368" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:11.369" starttime="20170728 17:03:11.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.371" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:11.372" starttime="20170728 17:03:11.370"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:11.373" starttime="20170728 17:03:11.284"></status>
</kw>
<kw name="字段验证" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.376" level="INFO">200</msg>
<status status="PASS" endtime="20170728 17:03:11.377" starttime="20170728 17:03:11.374"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 17:03:11.379" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:11.380" starttime="20170728 17:03:11.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 17:03:11.382" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 17:03:11.382" starttime="20170728 17:03:11.381"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 17:03:11.384" level="INFO">To JSON using : content={"data":{"orderNum":"32102151361501230531"},"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 17:03:11.385" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 17:03:11.386" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': {u'orderNum': u'32102151361501230531'}, u'success': True}</msg>
<status status="PASS" endtime="20170728 17:03:11.388" starttime="20170728 17:03:11.383"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 17:03:11.391" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:11.392" starttime="20170728 17:03:11.389"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:11.394" starttime="20170728 17:03:11.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:11.397" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:11.398" starttime="20170728 17:03:11.396"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<assign>
<var>@{Link1}</var>
</assign>
<msg timestamp="20170728 17:03:11.401" level="INFO">@{Link1} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:11.402" starttime="20170728 17:03:11.399"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>"${value}" in @{Link1}</arg>
<arg>Get From Dictionary</arg>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${orderNum}</var>
</assign>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:11.406" starttime="20170728 17:03:11.405"></status>
</kw>
<msg timestamp="20170728 17:03:11.407" level="INFO">${orderNum} = 32102151361501230531</msg>
<status status="PASS" endtime="20170728 17:03:11.408" starttime="20170728 17:03:11.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.409" level="INFO">${orderNum} = 32102151361501230531</msg>
<status status="PASS" endtime="20170728 17:03:11.410" starttime="20170728 17:03:11.408"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:11.411" starttime="20170728 17:03:11.374"></status>
</kw>
<kw name="表ajb_account_open_record的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_open_record</arg>
</arguments>
<msg timestamp="20170728 17:03:11.417" level="INFO">现在开始校验表ajb_account_open_record</msg>
<status status="PASS" endtime="20170728 17:03:11.418" starttime="20170728 17:03:11.415"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:11.422" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:11.430" starttime="20170728 17:03:11.421"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:11.431" starttime="20170728 17:03:11.420"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:11.432" starttime="20170728 17:03:11.419"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:11.437" level="INFO">Executing : Query  |  select * from ajb_account_open_record where account_id ='6273' </msg>
<msg timestamp="20170728 17:03:11.445" level="INFO">${user_id} = ((100000000010L, '32102151361501206852', 100000, 6273, 2, 2, 0, datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 10, 46, 53)),)</msg>
<status status="PASS" endtime="20170728 17:03:11.447" starttime="20170728 17:03:11.435"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:11.449" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:11.450" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:11.472" starttime="20170728 17:03:11.448"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:11.473" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:11.475" starttime="20170728 17:03:11.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:11.479" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:11.480" starttime="20170728 17:03:11.477"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.482" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:11.482" starttime="20170728 17:03:11.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:03:11.485" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:03:11.486" starttime="20170728 17:03:11.484"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.489" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:11.490" starttime="20170728 17:03:11.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no正确反映艾佳币账户渠道</arg>
</arguments>
<msg timestamp="20170728 17:03:11.492" level="INFO">channel_no正确反映艾佳币账户渠道</msg>
<status status="PASS" endtime="20170728 17:03:11.493" starttime="20170728 17:03:11.491"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 17:03:11.495" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:11.495" starttime="20170728 17:03:11.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>status的值为2,表示生效，是正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:11.497" level="INFO">status的值为2,表示生效，是正确的</msg>
<status status="PASS" endtime="20170728 17:03:11.498" starttime="20170728 17:03:11.496"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:11.500" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:11.501" starttime="20170728 17:03:11.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:11.503" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:11.504" starttime="20170728 17:03:11.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表里面的add_time和update_time的时间是一致的。校验正确。</arg>
</arguments>
<msg timestamp="20170728 17:03:11.506" level="INFO">表里面的add_time和update_time的时间是一致的。校验正确。</msg>
<status status="PASS" endtime="20170728 17:03:11.507" starttime="20170728 17:03:11.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_open_record的校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:11.509" level="INFO">表ajb_account_open_record的校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:11.510" starttime="20170728 17:03:11.508"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:11.511" starttime="20170728 17:03:11.413"></status>
</kw>
<kw name="表account_unilateral_bill的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_unilateral_bill</arg>
</arguments>
<msg timestamp="20170728 17:03:11.513" level="INFO">现在开始校验表account_unilateral_bill</msg>
<status status="PASS" endtime="20170728 17:03:11.514" starttime="20170728 17:03:11.513"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:11.518" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:11.529" starttime="20170728 17:03:11.517"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:11.530" starttime="20170728 17:03:11.516"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:11.531" starttime="20170728 17:03:11.515"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>account_unilateral_bill</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:11.539" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:11.552" starttime="20170728 17:03:11.538"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:11.553" starttime="20170728 17:03:11.536"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:11.555" starttime="20170728 17:03:11.533"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:03:11.557" level="INFO">${current_time} = 2017-07-28 17:03:11.557</msg>
<status status="PASS" endtime="20170728 17:03:11.558" starttime="20170728 17:03:11.556"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>0 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:11.560" level="INFO">${current_time_before_30} = 2017-07-28 17:03:11.557</msg>
<status status="PASS" endtime="20170728 17:03:11.560" starttime="20170728 17:03:11.559"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:11.562" level="INFO">${current_time_after_30} = 2017-07-28 17:04:51.557</msg>
<status status="PASS" endtime="20170728 17:03:11.563" starttime="20170728 17:03:11.561"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 17:03:11.566" level="INFO">Executing : Query  |  select * from account_unilateral_bill where user_id='100000' and update_time between' 2017-07-28 17:03:11.557' and '2017-07-28 17:04:51.557' </msg>
<msg timestamp="20170728 17:03:11.576" level="INFO">${updatetime} = ((7709, '32102151361501230535', 100000, 6273, '32102151361501230532', 1, 2, 3, Decimal('2.00'), None, datetime.datetime(2017, 7, 28, 17, 4, 16), datetime.datetime(2017, 7, 28, 17, 4, 16), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:11.577" starttime="20170728 17:03:11.564"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.580" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 17:03:11.580" starttime="20170728 17:03:11.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 17:03:11.582" level="INFO">account_unilateral_bill表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 17:03:11.583" starttime="20170728 17:03:11.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.587" level="INFO">${current_time_before_30} = 2017-07-28 17:03:11.557</msg>
<status status="PASS" endtime="20170728 17:03:11.588" starttime="20170728 17:03:11.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.592" level="INFO">${current_time_after_30} = 2017-07-28 17:04:51.557</msg>
<status status="PASS" endtime="20170728 17:03:11.593" starttime="20170728 17:03:11.590"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:11.594" starttime="20170728 17:03:11.532"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id} 'and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:11.596" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6273 'and update_time between' 2017-07-28 17:03:11.557' and '2017-07-28 17:04:51.557' </msg>
<msg timestamp="20170728 17:03:11.602" level="INFO">${user_id} = ((7709, '32102151361501230535', 100000, 6273, '32102151361501230532', 1, 2, 3, Decimal('2.00'), None, datetime.datetime(2017, 7, 28, 17, 4, 16), datetime.datetime(2017, 7, 28, 17, 4, 16), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:11.602" starttime="20170728 17:03:11.595"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:11.604" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:11.605" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:11.606" starttime="20170728 17:03:11.603"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:11.608" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:11.608" starttime="20170728 17:03:11.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:11.610" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:11.611" starttime="20170728 17:03:11.609"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:11.613" starttime="20170728 17:03:11.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:03:11.614" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:03:11.615" starttime="20170728 17:03:11.613"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:11.617" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:11.619" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:11.620" starttime="20170728 17:03:11.616"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:11.623" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:11.624" starttime="20170728 17:03:11.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:11.626" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:11.627" starttime="20170728 17:03:11.625"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:03:11.631" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:11.632" starttime="20170728 17:03:11.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 17:03:11.635" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 17:03:11.636" starttime="20170728 17:03:11.633"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>7</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:11.641" starttime="20170728 17:03:11.640"></status>
</kw>
<msg timestamp="20170728 17:03:11.642" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:03:11.643" starttime="20170728 17:03:11.638"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:03:11.647" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:03:11.648" starttime="20170728 17:03:11.645"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:11.654" starttime="20170728 17:03:11.652"></status>
</kw>
<msg timestamp="20170728 17:03:11.655" level="INFO">${event_code_after} = 2</msg>
<status status="PASS" endtime="20170728 17:03:11.655" starttime="20170728 17:03:11.650"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:03:11.657" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:11.658" starttime="20170728 17:03:11.656"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:11.662" starttime="20170728 17:03:11.661"></status>
</kw>
<msg timestamp="20170728 17:03:11.662" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:03:11.663" starttime="20170728 17:03:11.659"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:11.670" starttime="20170728 17:03:11.669"></status>
</kw>
<msg timestamp="20170728 17:03:11.671" level="INFO">${amount} = 2</msg>
<status status="PASS" endtime="20170728 17:03:11.672" starttime="20170728 17:03:11.665"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:03:11.673" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:03:11.674" starttime="20170728 17:03:11.672"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:11.679" starttime="20170728 17:03:11.678"></status>
</kw>
<msg timestamp="20170728 17:03:11.680" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:11.681" starttime="20170728 17:03:11.676"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:11.686" starttime="20170728 17:03:11.685"></status>
</kw>
<msg timestamp="20170728 17:03:11.687" level="INFO">${total_amount} = 50425.0</msg>
<status status="PASS" endtime="20170728 17:03:11.688" starttime="20170728 17:03:11.682"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:11.693" starttime="20170728 17:03:11.692"></status>
</kw>
<msg timestamp="20170728 17:03:11.693" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:11.694" starttime="20170728 17:03:11.689"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:11.699" starttime="20170728 17:03:11.697"></status>
</kw>
<msg timestamp="20170728 17:03:11.700" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:11.701" starttime="20170728 17:03:11.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.704" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:03:11.704" starttime="20170728 17:03:11.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.707" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:03:11.708" starttime="20170728 17:03:11.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.711" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:11.712" starttime="20170728 17:03:11.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.715" level="INFO">${amount} = 2</msg>
<status status="PASS" endtime="20170728 17:03:11.717" starttime="20170728 17:03:11.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.719" level="INFO">${total_amount} = 50425.0</msg>
<status status="PASS" endtime="20170728 17:03:11.720" starttime="20170728 17:03:11.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.722" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:11.723" starttime="20170728 17:03:11.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.726" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:11.727" starttime="20170728 17:03:11.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.729" level="INFO">${event_code_after} = 2</msg>
<status status="PASS" endtime="20170728 17:03:11.730" starttime="20170728 17:03:11.728"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:11.731" starttime="20170728 17:03:11.637"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.733" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:11.735" starttime="20170728 17:03:11.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:11.737" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 17:03:11.738" starttime="20170728 17:03:11.736"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.741" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:11.742" starttime="20170728 17:03:11.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:11.744" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170728 17:03:11.744" starttime="20170728 17:03:11.743"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.746" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:11.747" starttime="20170728 17:03:11.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:11.749" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 17:03:11.749" starttime="20170728 17:03:11.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 17:03:11.752" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 17:03:11.753" starttime="20170728 17:03:11.751"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:11.754" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:11.755" starttime="20170728 17:03:11.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:11.758" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:11.760" starttime="20170728 17:03:11.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:11.762" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170728 17:03:11.762" starttime="20170728 17:03:11.761"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_unilateral}</var>
</assign>
<msg timestamp="20170728 17:03:11.764" level="INFO">${user_id[0][0]_unilateral} = 7709</msg>
<status status="PASS" endtime="20170728 17:03:11.765" starttime="20170728 17:03:11.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_unilateral}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.768" level="INFO">${user_id[0][0]_unilateral} = 7709</msg>
<status status="PASS" endtime="20170728 17:03:11.770" starttime="20170728 17:03:11.766"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]_unilateral}'</arg>
</arguments>
<msg timestamp="20170728 17:03:11.772" level="INFO">Executing : Execute SQL String  |  delete from account_unilateral_bill where id ='7709' </msg>
<status status="PASS" endtime="20170728 17:03:11.830" starttime="20170728 17:03:11.771"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:11.832" starttime="20170728 17:03:11.512"></status>
</kw>
<kw name="表ajb_account_transaction" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170728 17:03:11.837" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170728 17:03:11.838" starttime="20170728 17:03:11.836"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:11.842" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:11.854" starttime="20170728 17:03:11.841"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:11.856" starttime="20170728 17:03:11.840"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:11.857" starttime="20170728 17:03:11.839"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>ajb_account_transaction</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:11.862" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:11.870" starttime="20170728 17:03:11.861"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:11.871" starttime="20170728 17:03:11.860"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:11.872" starttime="20170728 17:03:11.859"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:03:11.874" level="INFO">${current_time} = 2017-07-28 17:03:11.874</msg>
<status status="PASS" endtime="20170728 17:03:11.875" starttime="20170728 17:03:11.873"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>0 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:11.878" level="INFO">${current_time_before_30} = 2017-07-28 17:03:11.874</msg>
<status status="PASS" endtime="20170728 17:03:11.879" starttime="20170728 17:03:11.876"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:11.881" level="INFO">${current_time_after_30} = 2017-07-28 17:04:51.874</msg>
<status status="PASS" endtime="20170728 17:03:11.882" starttime="20170728 17:03:11.879"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 17:03:11.887" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and update_time between' 2017-07-28 17:03:11.874' and '2017-07-28 17:04:51.874' </msg>
<msg timestamp="20170728 17:03:11.897" level="INFO">${updatetime} = ((88889799, '32102151361501230531', 100000, 6273, 2, '32102151361501230531', '20170728170413CNW051702', Decimal('2.00'), 1, 2, 2, 0, datetime.datetime(2017, 7, 28, 17, 4, 16), datetime.datetime(2017, ...</msg>
<status status="PASS" endtime="20170728 17:03:11.898" starttime="20170728 17:03:11.885"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.901" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 17:03:11.903" starttime="20170728 17:03:11.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 17:03:11.905" level="INFO">ajb_account_transaction表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 17:03:11.905" starttime="20170728 17:03:11.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.907" level="INFO">${current_time_before_30} = 2017-07-28 17:03:11.874</msg>
<status status="PASS" endtime="20170728 17:03:11.908" starttime="20170728 17:03:11.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.910" level="INFO">${current_time_after_30} = 2017-07-28 17:04:51.874</msg>
<status status="PASS" endtime="20170728 17:03:11.910" starttime="20170728 17:03:11.909"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:11.912" starttime="20170728 17:03:11.858"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:11.915" level="INFO">Executing : Query  |  select * from ajb_account_transaction where account_id ='6273' and update_time between' 2017-07-28 17:03:11.874' and '2017-07-28 17:04:51.874' </msg>
<msg timestamp="20170728 17:03:11.925" level="INFO">${user_id} = ((88889799, '32102151361501230531', 100000, 6273, 2, '32102151361501230531', '20170728170413CNW051702', Decimal('2.00'), 1, 2, 2, 0, datetime.datetime(2017, 7, 28, 17, 4, 16), datetime.datetime(2017, ...</msg>
<status status="PASS" endtime="20170728 17:03:11.926" starttime="20170728 17:03:11.913"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:11.929" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:11.930" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:11.931" starttime="20170728 17:03:11.927"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:11.933" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:11.935" starttime="20170728 17:03:11.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:11.937" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:11.937" starttime="20170728 17:03:11.936"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:11.939" starttime="20170728 17:03:11.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:03:11.941" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:03:11.942" starttime="20170728 17:03:11.940"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.944" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:11.944" starttime="20170728 17:03:11.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no的值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:11.946" level="INFO">channel_no的值正确</msg>
<status status="PASS" endtime="20170728 17:03:11.946" starttime="20170728 17:03:11.945"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${args11}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${orderNum}</arg>
</arguments>
<assign>
<var>${bill_order_num}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:11.952" starttime="20170728 17:03:11.950"></status>
</kw>
<msg timestamp="20170728 17:03:11.953" level="INFO">${bill_order_num} = 32102151361501230531</msg>
<status status="PASS" endtime="20170728 17:03:11.953" starttime="20170728 17:03:11.948"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>${bill_order_num}</arg>
</arguments>
<msg timestamp="20170728 17:03:11.955" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:11.957" starttime="20170728 17:03:11.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170728 17:03:11.961" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170728 17:03:11.962" starttime="20170728 17:03:11.959"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>7</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:11.968" starttime="20170728 17:03:11.966"></status>
</kw>
<msg timestamp="20170728 17:03:11.969" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:03:11.969" starttime="20170728 17:03:11.964"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:03:11.971" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:03:11.972" starttime="20170728 17:03:11.970"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:11.977" starttime="20170728 17:03:11.975"></status>
</kw>
<msg timestamp="20170728 17:03:11.978" level="INFO">${event_code_after} = 2</msg>
<status status="PASS" endtime="20170728 17:03:11.978" starttime="20170728 17:03:11.973"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:03:11.980" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:11.981" starttime="20170728 17:03:11.979"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:11.987" starttime="20170728 17:03:11.985"></status>
</kw>
<msg timestamp="20170728 17:03:11.989" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:03:11.990" starttime="20170728 17:03:11.982"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:11.995" starttime="20170728 17:03:11.994"></status>
</kw>
<msg timestamp="20170728 17:03:11.995" level="INFO">${amount} = 2</msg>
<status status="PASS" endtime="20170728 17:03:11.996" starttime="20170728 17:03:11.992"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:03:11.998" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:03:11.998" starttime="20170728 17:03:11.997"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:12.003" starttime="20170728 17:03:12.002"></status>
</kw>
<msg timestamp="20170728 17:03:12.004" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:12.004" starttime="20170728 17:03:12.000"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:12.010" starttime="20170728 17:03:12.008"></status>
</kw>
<msg timestamp="20170728 17:03:12.011" level="INFO">${total_amount} = 50425.0</msg>
<status status="PASS" endtime="20170728 17:03:12.011" starttime="20170728 17:03:12.005"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:12.016" starttime="20170728 17:03:12.014"></status>
</kw>
<msg timestamp="20170728 17:03:12.017" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:12.018" starttime="20170728 17:03:12.012"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:12.026" starttime="20170728 17:03:12.024"></status>
</kw>
<msg timestamp="20170728 17:03:12.027" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:12.028" starttime="20170728 17:03:12.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:12.031" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:03:12.031" starttime="20170728 17:03:12.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:12.034" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:03:12.035" starttime="20170728 17:03:12.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:12.039" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:12.040" starttime="20170728 17:03:12.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:12.042" level="INFO">${amount} = 2</msg>
<status status="PASS" endtime="20170728 17:03:12.042" starttime="20170728 17:03:12.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:12.044" level="INFO">${total_amount} = 50425.0</msg>
<status status="PASS" endtime="20170728 17:03:12.045" starttime="20170728 17:03:12.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:12.047" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:12.047" starttime="20170728 17:03:12.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:12.049" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:12.051" starttime="20170728 17:03:12.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:12.053" level="INFO">${event_code_after} = 2</msg>
<status status="PASS" endtime="20170728 17:03:12.054" starttime="20170728 17:03:12.052"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:12.056" starttime="20170728 17:03:11.962"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170728 17:03:12.058" level="INFO">${pay_no_after} = 20170728170413CNW051702</msg>
<status status="PASS" endtime="20170728 17:03:12.059" starttime="20170728 17:03:12.057"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170728 17:03:12.061" level="INFO">Length is 23</msg>
<msg timestamp="20170728 17:03:12.061" level="INFO">${pay_no_after_length} = 23</msg>
<status status="PASS" endtime="20170728 17:03:12.062" starttime="20170728 17:03:12.060"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:12.064" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:12.065" starttime="20170728 17:03:12.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170728 17:03:12.070" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170728 17:03:12.072" starttime="20170728 17:03:12.068"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:12.076" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:12.077" starttime="20170728 17:03:12.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:12.079" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 17:03:12.081" starttime="20170728 17:03:12.079"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:03:12.084" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:12.085" starttime="20170728 17:03:12.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 17:03:12.089" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 17:03:12.090" starttime="20170728 17:03:12.087"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][9]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:12.092" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:12.093" starttime="20170728 17:03:12.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:12.094" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 17:03:12.095" starttime="20170728 17:03:12.093"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 17:03:12.097" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:12.097" starttime="20170728 17:03:12.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170728 17:03:12.102" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170728 17:03:12.102" starttime="20170728 17:03:12.099"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:12.105" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:12.106" starttime="20170728 17:03:12.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:12.107" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:12.108" starttime="20170728 17:03:12.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 17:03:12.110" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 17:03:12.111" starttime="20170728 17:03:12.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:12.112" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170728 17:03:12.113" starttime="20170728 17:03:12.111"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170728 17:03:12.116" level="INFO">${user_id[0][0]_transaction} = 88889799</msg>
<status status="PASS" endtime="20170728 17:03:12.118" starttime="20170728 17:03:12.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170728 17:03:12.120" level="INFO">${user_id[0][0]_transaction} = 88889799</msg>
<status status="PASS" endtime="20170728 17:03:12.120" starttime="20170728 17:03:12.119"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id[0][0]}'</arg>
</arguments>
<assign>
<var>${user_id_unilateral_delete1}</var>
</assign>
<msg timestamp="20170728 17:03:12.123" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88889799' </msg>
<msg timestamp="20170728 17:03:12.175" level="INFO">${user_id_unilateral_delete1} = None</msg>
<status status="PASS" endtime="20170728 17:03:12.176" starttime="20170728 17:03:12.121"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:12.177" starttime="20170728 17:03:11.834"></status>
</kw>
<kw name="表account_amount的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_amount</arg>
</arguments>
<msg timestamp="20170728 17:03:12.181" level="INFO">现在开始校验表account_amount</msg>
<status status="PASS" endtime="20170728 17:03:12.182" starttime="20170728 17:03:12.180"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:12.188" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:12.201" starttime="20170728 17:03:12.187"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:12.203" starttime="20170728 17:03:12.185"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:12.204" starttime="20170728 17:03:12.184"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time1}</var>
</assign>
<msg timestamp="20170728 17:03:12.205" level="INFO">${current_time1} = 2017-07-28 17:03:12.205</msg>
<status status="PASS" endtime="20170728 17:03:12.206" starttime="20170728 17:03:12.204"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:12.209" level="INFO">${current_time1_before_30} = 2017-07-28 17:02:12.205</msg>
<status status="PASS" endtime="20170728 17:03:12.210" starttime="20170728 17:03:12.207"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:12.212" level="INFO">${current_time1_after_30} = 2017-07-28 17:04:12.205</msg>
<status status="PASS" endtime="20170728 17:03:12.213" starttime="20170728 17:03:12.211"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:12.215" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6273' </msg>
<msg timestamp="20170728 17:03:12.221" level="INFO">${user_id} = ((12587, 6273, Decimal('50425.00'), Decimal('49597.00'), Decimal('828.00'), datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 17, 4, 16), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:12.222" starttime="20170728 17:03:12.214"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>7</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:12.230" starttime="20170728 17:03:12.228"></status>
</kw>
<msg timestamp="20170728 17:03:12.231" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:03:12.233" starttime="20170728 17:03:12.224"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:03:12.239" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:03:12.240" starttime="20170728 17:03:12.236"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:12.244" starttime="20170728 17:03:12.243"></status>
</kw>
<msg timestamp="20170728 17:03:12.245" level="INFO">${event_code_after} = 2</msg>
<status status="PASS" endtime="20170728 17:03:12.245" starttime="20170728 17:03:12.242"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:03:12.247" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:12.248" starttime="20170728 17:03:12.246"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:12.253" starttime="20170728 17:03:12.251"></status>
</kw>
<msg timestamp="20170728 17:03:12.253" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:03:12.254" starttime="20170728 17:03:12.249"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:12.258" starttime="20170728 17:03:12.257"></status>
</kw>
<msg timestamp="20170728 17:03:12.259" level="INFO">${amount} = 2</msg>
<status status="PASS" endtime="20170728 17:03:12.260" starttime="20170728 17:03:12.255"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:03:12.262" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:03:12.262" starttime="20170728 17:03:12.261"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:12.265" starttime="20170728 17:03:12.265"></status>
</kw>
<msg timestamp="20170728 17:03:12.266" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:12.267" starttime="20170728 17:03:12.263"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:12.273" starttime="20170728 17:03:12.271"></status>
</kw>
<msg timestamp="20170728 17:03:12.274" level="INFO">${total_amount} = 50425.0</msg>
<status status="PASS" endtime="20170728 17:03:12.276" starttime="20170728 17:03:12.268"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:12.283" starttime="20170728 17:03:12.281"></status>
</kw>
<msg timestamp="20170728 17:03:12.286" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:12.287" starttime="20170728 17:03:12.278"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:12.292" starttime="20170728 17:03:12.291"></status>
</kw>
<msg timestamp="20170728 17:03:12.293" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:12.293" starttime="20170728 17:03:12.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:12.295" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:03:12.296" starttime="20170728 17:03:12.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:12.298" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:03:12.298" starttime="20170728 17:03:12.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:12.302" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:12.303" starttime="20170728 17:03:12.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:12.305" level="INFO">${amount} = 2</msg>
<status status="PASS" endtime="20170728 17:03:12.305" starttime="20170728 17:03:12.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:12.307" level="INFO">${total_amount} = 50425.0</msg>
<status status="PASS" endtime="20170728 17:03:12.308" starttime="20170728 17:03:12.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:12.310" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:12.310" starttime="20170728 17:03:12.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:12.312" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:12.313" starttime="20170728 17:03:12.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:12.315" level="INFO">${event_code_after} = 2</msg>
<status status="PASS" endtime="20170728 17:03:12.315" starttime="20170728 17:03:12.314"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:12.316" starttime="20170728 17:03:12.223"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:12.321" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:12.323" starttime="20170728 17:03:12.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:12.328" level="INFO">total_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:12.329" starttime="20170728 17:03:12.325"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:12.331" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:12.333" starttime="20170728 17:03:12.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:12.336" level="INFO">balance_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:12.337" starttime="20170728 17:03:12.335"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:12.341" starttime="20170728 17:03:12.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:12.343" level="INFO">frozen_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:12.343" starttime="20170728 17:03:12.342"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:12.345" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:12.346" starttime="20170728 17:03:12.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:12.347" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:12.348" starttime="20170728 17:03:12.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:12.352" level="INFO">表account_amount校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:12.352" starttime="20170728 17:03:12.351"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:12.353" starttime="20170728 17:03:12.178"></status>
</kw>
<kw name="艾佳币恢复数目" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:12.360" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:12.415" starttime="20170728 17:03:12.358"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:12.416" starttime="20170728 17:03:12.357"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:12.417" starttime="20170728 17:03:12.356"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount \ SET total_amount=${database[0][2]},balance_amount=${database[0][3]},frozen_amount=${database[0][4]}where account_id="${account_id}";</arg>
</arguments>
<msg timestamp="20170728 17:03:12.420" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount  SET total_amount=50423.00,balance_amount=49595.00,frozen_amount=828.00where account_id="6273"; </msg>
<status status="PASS" endtime="20170728 17:03:12.474" starttime="20170728 17:03:12.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170728 17:03:12.477" level="INFO">成功</msg>
<status status="PASS" endtime="20170728 17:03:12.478" starttime="20170728 17:03:12.476"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:12.479" starttime="20170728 17:03:12.355"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:12.480" critical="yes" starttime="20170728 17:03:11.156"></status>
</test>
<test id="s1-s1-s5-t3" name="艾佳币&quot;APP晒家返艾佳币&quot;, 3（下）充值">
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>100000</arg>
<arg>2</arg>
<arg>3</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:03:12.490" level="INFO">${args11} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:12.491" starttime="20170728 17:03:12.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:03:12.493" level="INFO">${args22} = 2</msg>
<status status="PASS" endtime="20170728 17:03:12.493" starttime="20170728 17:03:12.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 17:03:12.495" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170728 17:03:12.496" starttime="20170728 17:03:12.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 17:03:12.497" level="INFO">${args44} = 3</msg>
<status status="PASS" endtime="20170728 17:03:12.498" starttime="20170728 17:03:12.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 17:03:12.500" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</msg>
<status status="PASS" endtime="20170728 17:03:12.500" starttime="20170728 17:03:12.499"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:12.501" starttime="20170728 17:03:12.486"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 17:03:12.504" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</msg>
<status status="PASS" endtime="20170728 17:03:12.506" starttime="20170728 17:03:12.503"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 17:03:12.510" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:12.511" starttime="20170728 17:03:12.508"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:12.515" starttime="20170728 17:03:12.514"></status>
</kw>
<msg timestamp="20170728 17:03:12.516" level="INFO">${channel_no} = 2</msg>
<status status="PASS" endtime="20170728 17:03:12.516" starttime="20170728 17:03:12.512"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>user_id</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:12.523" starttime="20170728 17:03:12.521"></status>
</kw>
<msg timestamp="20170728 17:03:12.524" level="INFO">${args11_after} = user_id</msg>
<status status="PASS" endtime="20170728 17:03:12.525" starttime="20170728 17:03:12.517"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:12.531" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:12.540" starttime="20170728 17:03:12.530"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:12.541" starttime="20170728 17:03:12.529"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:12.542" starttime="20170728 17:03:12.527"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 17:03:12.544" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and channel_no='2' </msg>
<msg timestamp="20170728 17:03:12.554" level="INFO">${database1} = ((88889680, '32102151361501229990', 100000, 6273, 2, '32102151361501229990', '20170728162839GNY051613', Decimal('10.00'), 1, 2, 2, 0, datetime.datetime(2017, 7, 28, 16, 28, 42), datetime.datetime(2017...</msg>
<status status="PASS" endtime="20170728 17:03:12.555" starttime="20170728 17:03:12.543"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 17:03:12.559" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6273' </msg>
<msg timestamp="20170728 17:03:12.565" level="INFO">${database} = ((12587, 6273, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 17, 4, 17), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:12.566" starttime="20170728 17:03:12.557"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 17:03:12.569" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:12.570" starttime="20170728 17:03:12.568"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 17:03:12.572" level="INFO">${account_id} = 6273</msg>
<status status="PASS" endtime="20170728 17:03:12.573" starttime="20170728 17:03:12.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:12.576" level="INFO">获得account_id值为：6273</msg>
<status status="PASS" endtime="20170728 17:03:12.577" starttime="20170728 17:03:12.575"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:12.579" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:12.580" starttime="20170728 17:03:12.578"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:12.584" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:12.585" starttime="20170728 17:03:12.582"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:12.588" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:12.589" starttime="20170728 17:03:12.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:12.591" level="INFO">${account_id} = 6273</msg>
<status status="PASS" endtime="20170728 17:03:12.591" starttime="20170728 17:03:12.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 17:03:12.593" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:12.594" starttime="20170728 17:03:12.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:12.596" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:12.596" starttime="20170728 17:03:12.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:12.598" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:12.599" starttime="20170728 17:03:12.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:12.601" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:12.602" starttime="20170728 17:03:12.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:12.605" level="INFO">${channel_no} = 2</msg>
<status status="PASS" endtime="20170728 17:03:12.606" starttime="20170728 17:03:12.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 17:03:12.609" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:12.611" starttime="20170728 17:03:12.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 17:03:12.614" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</msg>
<status status="PASS" endtime="20170728 17:03:12.616" starttime="20170728 17:03:12.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170728 17:03:12.620" level="INFO">${database} = ((12587, 6273, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 17, 4, 17), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:12.621" starttime="20170728 17:03:12.618"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:12.622" starttime="20170728 17:03:12.502"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Ajb Activity Recharge" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:12.761" starttime="20170728 17:03:12.627"></status>
</kw>
<msg timestamp="20170728 17:03:12.762" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:12.763" starttime="20170728 17:03:12.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 17:03:12.765" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:12.765" starttime="20170728 17:03:12.764"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:12.766" starttime="20170728 17:03:12.623"></status>
</kw>
<kw name="字段验证" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:12.770" level="INFO">200</msg>
<status status="PASS" endtime="20170728 17:03:12.771" starttime="20170728 17:03:12.769"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 17:03:12.774" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:12.775" starttime="20170728 17:03:12.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 17:03:12.777" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 17:03:12.778" starttime="20170728 17:03:12.776"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 17:03:12.780" level="INFO">To JSON using : content={"data":{"orderNum":"32102151361501230536"},"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 17:03:12.781" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 17:03:12.781" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': {u'orderNum': u'32102151361501230536'}, u'success': True}</msg>
<status status="PASS" endtime="20170728 17:03:12.782" starttime="20170728 17:03:12.779"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 17:03:12.784" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:12.785" starttime="20170728 17:03:12.783"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:12.788" starttime="20170728 17:03:12.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:12.791" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:12.792" starttime="20170728 17:03:12.790"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<assign>
<var>@{Link1}</var>
</assign>
<msg timestamp="20170728 17:03:12.794" level="INFO">@{Link1} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:12.795" starttime="20170728 17:03:12.793"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>"${value}" in @{Link1}</arg>
<arg>Get From Dictionary</arg>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${orderNum}</var>
</assign>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:12.798" starttime="20170728 17:03:12.797"></status>
</kw>
<msg timestamp="20170728 17:03:12.800" level="INFO">${orderNum} = 32102151361501230536</msg>
<status status="PASS" endtime="20170728 17:03:12.802" starttime="20170728 17:03:12.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<msg timestamp="20170728 17:03:12.804" level="INFO">${orderNum} = 32102151361501230536</msg>
<status status="PASS" endtime="20170728 17:03:12.805" starttime="20170728 17:03:12.803"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:12.806" starttime="20170728 17:03:12.767"></status>
</kw>
<kw name="表ajb_account_open_record的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_open_record</arg>
</arguments>
<msg timestamp="20170728 17:03:12.809" level="INFO">现在开始校验表ajb_account_open_record</msg>
<status status="PASS" endtime="20170728 17:03:12.810" starttime="20170728 17:03:12.808"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:12.814" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:12.822" starttime="20170728 17:03:12.813"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:12.824" starttime="20170728 17:03:12.812"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:12.825" starttime="20170728 17:03:12.811"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:12.828" level="INFO">Executing : Query  |  select * from ajb_account_open_record where account_id ='6273' </msg>
<msg timestamp="20170728 17:03:12.837" level="INFO">${user_id} = ((100000000010L, '32102151361501206852', 100000, 6273, 2, 2, 0, datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 10, 46, 53)),)</msg>
<status status="PASS" endtime="20170728 17:03:12.838" starttime="20170728 17:03:12.827"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:12.842" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:12.843" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:12.843" starttime="20170728 17:03:12.840"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:12.847" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:12.849" starttime="20170728 17:03:12.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:12.852" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:12.853" starttime="20170728 17:03:12.851"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:03:12.855" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:12.855" starttime="20170728 17:03:12.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:03:12.857" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:03:12.858" starttime="20170728 17:03:12.856"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:12.859" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:12.860" starttime="20170728 17:03:12.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no正确反映艾佳币账户渠道</arg>
</arguments>
<msg timestamp="20170728 17:03:12.862" level="INFO">channel_no正确反映艾佳币账户渠道</msg>
<status status="PASS" endtime="20170728 17:03:12.862" starttime="20170728 17:03:12.861"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 17:03:12.864" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:12.865" starttime="20170728 17:03:12.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>status的值为2,表示生效，是正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:12.869" level="INFO">status的值为2,表示生效，是正确的</msg>
<status status="PASS" endtime="20170728 17:03:12.869" starttime="20170728 17:03:12.868"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:12.871" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:12.872" starttime="20170728 17:03:12.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:12.874" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:12.874" starttime="20170728 17:03:12.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表里面的add_time和update_time的时间是一致的。校验正确。</arg>
</arguments>
<msg timestamp="20170728 17:03:12.877" level="INFO">表里面的add_time和update_time的时间是一致的。校验正确。</msg>
<status status="PASS" endtime="20170728 17:03:12.878" starttime="20170728 17:03:12.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_open_record的校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:12.880" level="INFO">表ajb_account_open_record的校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:12.880" starttime="20170728 17:03:12.879"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:12.881" starttime="20170728 17:03:12.807"></status>
</kw>
<kw name="表account_unilateral_bill的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_unilateral_bill</arg>
</arguments>
<msg timestamp="20170728 17:03:12.885" level="INFO">现在开始校验表account_unilateral_bill</msg>
<status status="PASS" endtime="20170728 17:03:12.886" starttime="20170728 17:03:12.884"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:12.892" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:12.901" starttime="20170728 17:03:12.891"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:12.902" starttime="20170728 17:03:12.890"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:12.903" starttime="20170728 17:03:12.888"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>account_unilateral_bill</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:12.908" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:12.915" starttime="20170728 17:03:12.907"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:12.916" starttime="20170728 17:03:12.906"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:12.917" starttime="20170728 17:03:12.905"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:03:12.919" level="INFO">${current_time} = 2017-07-28 17:03:12.919</msg>
<status status="PASS" endtime="20170728 17:03:12.920" starttime="20170728 17:03:12.918"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>0 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:12.922" level="INFO">${current_time_before_30} = 2017-07-28 17:03:12.919</msg>
<status status="PASS" endtime="20170728 17:03:12.923" starttime="20170728 17:03:12.921"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:12.925" level="INFO">${current_time_after_30} = 2017-07-28 17:04:52.919</msg>
<status status="PASS" endtime="20170728 17:03:12.926" starttime="20170728 17:03:12.924"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 17:03:12.929" level="INFO">Executing : Query  |  select * from account_unilateral_bill where user_id='100000' and update_time between' 2017-07-28 17:03:12.919' and '2017-07-28 17:04:52.919' </msg>
<msg timestamp="20170728 17:03:12.944" level="INFO">${updatetime} = ((7712, '32102151361501230540', 100000, 6273, '32102151361501230537', 1, 3, 3, Decimal('2.00'), None, datetime.datetime(2017, 7, 28, 17, 4, 18), datetime.datetime(2017, 7, 28, 17, 4, 18), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:12.945" starttime="20170728 17:03:12.927"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 17:03:12.947" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 17:03:12.948" starttime="20170728 17:03:12.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 17:03:12.951" level="INFO">account_unilateral_bill表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 17:03:12.951" starttime="20170728 17:03:12.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:12.953" level="INFO">${current_time_before_30} = 2017-07-28 17:03:12.919</msg>
<status status="PASS" endtime="20170728 17:03:12.954" starttime="20170728 17:03:12.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:12.958" level="INFO">${current_time_after_30} = 2017-07-28 17:04:52.919</msg>
<status status="PASS" endtime="20170728 17:03:12.959" starttime="20170728 17:03:12.956"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:12.961" starttime="20170728 17:03:12.904"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id} 'and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:12.964" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6273 'and update_time between' 2017-07-28 17:03:12.919' and '2017-07-28 17:04:52.919' </msg>
<msg timestamp="20170728 17:03:12.969" level="INFO">${user_id} = ((7712, '32102151361501230540', 100000, 6273, '32102151361501230537', 1, 3, 3, Decimal('2.00'), None, datetime.datetime(2017, 7, 28, 17, 4, 18), datetime.datetime(2017, 7, 28, 17, 4, 18), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:12.970" starttime="20170728 17:03:12.962"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:12.972" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:12.973" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:12.974" starttime="20170728 17:03:12.970"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:12.978" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:12.979" starttime="20170728 17:03:12.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:12.981" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:12.983" starttime="20170728 17:03:12.980"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:12.986" starttime="20170728 17:03:12.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:03:12.989" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:03:12.990" starttime="20170728 17:03:12.987"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:12.992" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:12.993" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:12.993" starttime="20170728 17:03:12.991"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:12.995" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:12.996" starttime="20170728 17:03:12.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:12.998" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:12.998" starttime="20170728 17:03:12.997"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:03:13.001" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:13.002" starttime="20170728 17:03:13.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 17:03:13.004" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 17:03:13.004" starttime="20170728 17:03:13.003"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>7</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:13.011" starttime="20170728 17:03:13.010"></status>
</kw>
<msg timestamp="20170728 17:03:13.012" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:03:13.012" starttime="20170728 17:03:13.007"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:03:13.014" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:03:13.015" starttime="20170728 17:03:13.013"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:13.020" starttime="20170728 17:03:13.018"></status>
</kw>
<msg timestamp="20170728 17:03:13.021" level="INFO">${event_code_after} = 3</msg>
<status status="PASS" endtime="20170728 17:03:13.022" starttime="20170728 17:03:13.016"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:03:13.024" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:13.026" starttime="20170728 17:03:13.023"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:13.031" starttime="20170728 17:03:13.030"></status>
</kw>
<msg timestamp="20170728 17:03:13.033" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:03:13.034" starttime="20170728 17:03:13.028"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:13.040" starttime="20170728 17:03:13.039"></status>
</kw>
<msg timestamp="20170728 17:03:13.041" level="INFO">${amount} = 2</msg>
<status status="PASS" endtime="20170728 17:03:13.041" starttime="20170728 17:03:13.037"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:03:13.043" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:03:13.044" starttime="20170728 17:03:13.042"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:13.047" starttime="20170728 17:03:13.046"></status>
</kw>
<msg timestamp="20170728 17:03:13.048" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:13.048" starttime="20170728 17:03:13.044"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:13.054" starttime="20170728 17:03:13.052"></status>
</kw>
<msg timestamp="20170728 17:03:13.055" level="INFO">${total_amount} = 50425.0</msg>
<status status="PASS" endtime="20170728 17:03:13.056" starttime="20170728 17:03:13.050"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:13.061" starttime="20170728 17:03:13.059"></status>
</kw>
<msg timestamp="20170728 17:03:13.062" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:13.062" starttime="20170728 17:03:13.057"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:13.066" starttime="20170728 17:03:13.065"></status>
</kw>
<msg timestamp="20170728 17:03:13.067" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:13.068" starttime="20170728 17:03:13.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:13.069" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:03:13.070" starttime="20170728 17:03:13.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:13.072" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:03:13.074" starttime="20170728 17:03:13.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:13.078" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:13.079" starttime="20170728 17:03:13.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:13.084" level="INFO">${amount} = 2</msg>
<status status="PASS" endtime="20170728 17:03:13.085" starttime="20170728 17:03:13.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:13.087" level="INFO">${total_amount} = 50425.0</msg>
<status status="PASS" endtime="20170728 17:03:13.089" starttime="20170728 17:03:13.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:13.091" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:13.092" starttime="20170728 17:03:13.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:13.094" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:13.094" starttime="20170728 17:03:13.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:13.096" level="INFO">${event_code_after} = 3</msg>
<status status="PASS" endtime="20170728 17:03:13.097" starttime="20170728 17:03:13.095"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:13.098" starttime="20170728 17:03:13.005"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:13.101" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:13.103" starttime="20170728 17:03:13.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:13.104" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 17:03:13.105" starttime="20170728 17:03:13.104"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:13.107" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:13.108" starttime="20170728 17:03:13.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:13.109" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170728 17:03:13.110" starttime="20170728 17:03:13.108"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:13.115" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:13.116" starttime="20170728 17:03:13.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:13.119" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 17:03:13.120" starttime="20170728 17:03:13.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 17:03:13.121" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 17:03:13.122" starttime="20170728 17:03:13.120"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:13.124" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:13.124" starttime="20170728 17:03:13.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:13.127" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:13.128" starttime="20170728 17:03:13.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:13.131" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170728 17:03:13.131" starttime="20170728 17:03:13.129"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_unilateral}</var>
</assign>
<msg timestamp="20170728 17:03:13.135" level="INFO">${user_id[0][0]_unilateral} = 7712</msg>
<status status="PASS" endtime="20170728 17:03:13.136" starttime="20170728 17:03:13.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_unilateral}</arg>
</arguments>
<msg timestamp="20170728 17:03:13.138" level="INFO">${user_id[0][0]_unilateral} = 7712</msg>
<status status="PASS" endtime="20170728 17:03:13.139" starttime="20170728 17:03:13.137"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]_unilateral}'</arg>
</arguments>
<msg timestamp="20170728 17:03:13.141" level="INFO">Executing : Execute SQL String  |  delete from account_unilateral_bill where id ='7712' </msg>
<status status="PASS" endtime="20170728 17:03:13.249" starttime="20170728 17:03:13.140"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:13.251" starttime="20170728 17:03:12.882"></status>
</kw>
<kw name="表ajb_account_transaction" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170728 17:03:13.255" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170728 17:03:13.255" starttime="20170728 17:03:13.253"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:13.259" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:13.268" starttime="20170728 17:03:13.258"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:13.269" starttime="20170728 17:03:13.257"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:13.271" starttime="20170728 17:03:13.256"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>ajb_account_transaction</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:13.276" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:13.283" starttime="20170728 17:03:13.275"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:13.285" starttime="20170728 17:03:13.274"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:13.286" starttime="20170728 17:03:13.273"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:03:13.288" level="INFO">${current_time} = 2017-07-28 17:03:13.288</msg>
<status status="PASS" endtime="20170728 17:03:13.289" starttime="20170728 17:03:13.286"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>0 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:13.291" level="INFO">${current_time_before_30} = 2017-07-28 17:03:13.288</msg>
<status status="PASS" endtime="20170728 17:03:13.291" starttime="20170728 17:03:13.290"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:13.294" level="INFO">${current_time_after_30} = 2017-07-28 17:04:53.288</msg>
<status status="PASS" endtime="20170728 17:03:13.294" starttime="20170728 17:03:13.292"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 17:03:13.296" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and update_time between' 2017-07-28 17:03:13.288' and '2017-07-28 17:04:53.288' </msg>
<msg timestamp="20170728 17:03:13.306" level="INFO">${updatetime} = ((88889800, '32102151361501230536', 100000, 6273, 2, '32102151361501230536', '20170728170415FMU051703', Decimal('2.00'), 1, 3, 2, 0, datetime.datetime(2017, 7, 28, 17, 4, 18), datetime.datetime(2017, ...</msg>
<status status="PASS" endtime="20170728 17:03:13.307" starttime="20170728 17:03:13.295"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 17:03:13.309" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 17:03:13.310" starttime="20170728 17:03:13.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 17:03:13.311" level="INFO">ajb_account_transaction表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 17:03:13.312" starttime="20170728 17:03:13.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:13.314" level="INFO">${current_time_before_30} = 2017-07-28 17:03:13.288</msg>
<status status="PASS" endtime="20170728 17:03:13.316" starttime="20170728 17:03:13.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:13.318" level="INFO">${current_time_after_30} = 2017-07-28 17:04:53.288</msg>
<status status="PASS" endtime="20170728 17:03:13.319" starttime="20170728 17:03:13.317"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:13.320" starttime="20170728 17:03:13.272"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:13.322" level="INFO">Executing : Query  |  select * from ajb_account_transaction where account_id ='6273' and update_time between' 2017-07-28 17:03:13.288' and '2017-07-28 17:04:53.288' </msg>
<msg timestamp="20170728 17:03:13.333" level="INFO">${user_id} = ((88889800, '32102151361501230536', 100000, 6273, 2, '32102151361501230536', '20170728170415FMU051703', Decimal('2.00'), 1, 3, 2, 0, datetime.datetime(2017, 7, 28, 17, 4, 18), datetime.datetime(2017, ...</msg>
<status status="PASS" endtime="20170728 17:03:13.334" starttime="20170728 17:03:13.321"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:13.336" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:13.337" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:13.338" starttime="20170728 17:03:13.335"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:13.340" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:13.341" starttime="20170728 17:03:13.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:13.342" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:13.343" starttime="20170728 17:03:13.342"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:13.345" starttime="20170728 17:03:13.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:03:13.347" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:03:13.348" starttime="20170728 17:03:13.346"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:13.352" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:13.354" starttime="20170728 17:03:13.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no的值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:13.356" level="INFO">channel_no的值正确</msg>
<status status="PASS" endtime="20170728 17:03:13.356" starttime="20170728 17:03:13.355"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${args11}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${orderNum}</arg>
</arguments>
<assign>
<var>${bill_order_num}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:13.361" starttime="20170728 17:03:13.360"></status>
</kw>
<msg timestamp="20170728 17:03:13.362" level="INFO">${bill_order_num} = 32102151361501230536</msg>
<status status="PASS" endtime="20170728 17:03:13.363" starttime="20170728 17:03:13.358"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>${bill_order_num}</arg>
</arguments>
<msg timestamp="20170728 17:03:13.365" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:13.367" starttime="20170728 17:03:13.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170728 17:03:13.370" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170728 17:03:13.370" starttime="20170728 17:03:13.369"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>7</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:13.378" starttime="20170728 17:03:13.375"></status>
</kw>
<msg timestamp="20170728 17:03:13.379" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:03:13.380" starttime="20170728 17:03:13.372"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:03:13.383" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:03:13.384" starttime="20170728 17:03:13.381"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:13.389" starttime="20170728 17:03:13.387"></status>
</kw>
<msg timestamp="20170728 17:03:13.390" level="INFO">${event_code_after} = 3</msg>
<status status="PASS" endtime="20170728 17:03:13.390" starttime="20170728 17:03:13.385"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:03:13.394" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:13.395" starttime="20170728 17:03:13.393"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:13.402" starttime="20170728 17:03:13.400"></status>
</kw>
<msg timestamp="20170728 17:03:13.403" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:03:13.404" starttime="20170728 17:03:13.397"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:13.407" starttime="20170728 17:03:13.406"></status>
</kw>
<msg timestamp="20170728 17:03:13.408" level="INFO">${amount} = 2</msg>
<status status="PASS" endtime="20170728 17:03:13.409" starttime="20170728 17:03:13.405"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:03:13.411" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:03:13.411" starttime="20170728 17:03:13.410"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:13.419" starttime="20170728 17:03:13.417"></status>
</kw>
<msg timestamp="20170728 17:03:13.420" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:13.420" starttime="20170728 17:03:13.413"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:13.426" starttime="20170728 17:03:13.424"></status>
</kw>
<msg timestamp="20170728 17:03:13.426" level="INFO">${total_amount} = 50425.0</msg>
<status status="PASS" endtime="20170728 17:03:13.427" starttime="20170728 17:03:13.422"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:13.431" starttime="20170728 17:03:13.430"></status>
</kw>
<msg timestamp="20170728 17:03:13.433" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:13.434" starttime="20170728 17:03:13.428"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:13.438" starttime="20170728 17:03:13.437"></status>
</kw>
<msg timestamp="20170728 17:03:13.439" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:13.441" starttime="20170728 17:03:13.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:13.444" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:03:13.445" starttime="20170728 17:03:13.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:13.447" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:03:13.447" starttime="20170728 17:03:13.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:13.451" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:13.452" starttime="20170728 17:03:13.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:13.457" level="INFO">${amount} = 2</msg>
<status status="PASS" endtime="20170728 17:03:13.458" starttime="20170728 17:03:13.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:13.462" level="INFO">${total_amount} = 50425.0</msg>
<status status="PASS" endtime="20170728 17:03:13.464" starttime="20170728 17:03:13.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:13.468" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:13.470" starttime="20170728 17:03:13.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:13.474" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:13.476" starttime="20170728 17:03:13.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:13.478" level="INFO">${event_code_after} = 3</msg>
<status status="PASS" endtime="20170728 17:03:13.480" starttime="20170728 17:03:13.477"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:13.483" starttime="20170728 17:03:13.371"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170728 17:03:13.488" level="INFO">${pay_no_after} = 20170728170415FMU051703</msg>
<status status="PASS" endtime="20170728 17:03:13.490" starttime="20170728 17:03:13.484"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170728 17:03:13.493" level="INFO">Length is 23</msg>
<msg timestamp="20170728 17:03:13.494" level="INFO">${pay_no_after_length} = 23</msg>
<status status="PASS" endtime="20170728 17:03:13.495" starttime="20170728 17:03:13.492"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:13.498" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:13.499" starttime="20170728 17:03:13.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170728 17:03:13.503" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170728 17:03:13.505" starttime="20170728 17:03:13.502"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:13.509" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:13.510" starttime="20170728 17:03:13.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:13.514" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 17:03:13.515" starttime="20170728 17:03:13.512"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:03:13.520" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:13.522" starttime="20170728 17:03:13.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 17:03:13.525" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 17:03:13.527" starttime="20170728 17:03:13.524"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][9]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:13.530" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:13.531" starttime="20170728 17:03:13.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:13.535" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 17:03:13.537" starttime="20170728 17:03:13.533"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 17:03:13.541" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:13.543" starttime="20170728 17:03:13.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170728 17:03:13.546" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170728 17:03:13.547" starttime="20170728 17:03:13.545"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:13.553" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:13.555" starttime="20170728 17:03:13.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:13.560" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:13.561" starttime="20170728 17:03:13.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 17:03:13.567" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 17:03:13.568" starttime="20170728 17:03:13.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:13.571" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170728 17:03:13.573" starttime="20170728 17:03:13.570"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170728 17:03:13.579" level="INFO">${user_id[0][0]_transaction} = 88889800</msg>
<status status="PASS" endtime="20170728 17:03:13.581" starttime="20170728 17:03:13.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170728 17:03:13.585" level="INFO">${user_id[0][0]_transaction} = 88889800</msg>
<status status="PASS" endtime="20170728 17:03:13.587" starttime="20170728 17:03:13.583"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id[0][0]}'</arg>
</arguments>
<assign>
<var>${user_id_unilateral_delete1}</var>
</assign>
<msg timestamp="20170728 17:03:13.591" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88889800' </msg>
<msg timestamp="20170728 17:03:13.651" level="INFO">${user_id_unilateral_delete1} = None</msg>
<status status="PASS" endtime="20170728 17:03:13.653" starttime="20170728 17:03:13.589"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:13.654" starttime="20170728 17:03:13.252"></status>
</kw>
<kw name="表account_amount的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_amount</arg>
</arguments>
<msg timestamp="20170728 17:03:13.661" level="INFO">现在开始校验表account_amount</msg>
<status status="PASS" endtime="20170728 17:03:13.662" starttime="20170728 17:03:13.659"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:13.670" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:13.681" starttime="20170728 17:03:13.668"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:13.683" starttime="20170728 17:03:13.666"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:13.685" starttime="20170728 17:03:13.664"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time1}</var>
</assign>
<msg timestamp="20170728 17:03:13.689" level="INFO">${current_time1} = 2017-07-28 17:03:13.689</msg>
<status status="PASS" endtime="20170728 17:03:13.691" starttime="20170728 17:03:13.686"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:13.695" level="INFO">${current_time1_before_30} = 2017-07-28 17:02:13.689</msg>
<status status="PASS" endtime="20170728 17:03:13.696" starttime="20170728 17:03:13.693"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:13.702" level="INFO">${current_time1_after_30} = 2017-07-28 17:04:13.689</msg>
<status status="PASS" endtime="20170728 17:03:13.704" starttime="20170728 17:03:13.699"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:13.708" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6273' </msg>
<msg timestamp="20170728 17:03:13.715" level="INFO">${user_id} = ((12587, 6273, Decimal('50425.00'), Decimal('49597.00'), Decimal('828.00'), datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 17, 4, 18), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:13.716" starttime="20170728 17:03:13.706"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>7</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:13.727" starttime="20170728 17:03:13.725"></status>
</kw>
<msg timestamp="20170728 17:03:13.729" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:03:13.730" starttime="20170728 17:03:13.720"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:03:13.736" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:03:13.737" starttime="20170728 17:03:13.733"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:13.744" starttime="20170728 17:03:13.742"></status>
</kw>
<msg timestamp="20170728 17:03:13.745" level="INFO">${event_code_after} = 3</msg>
<status status="PASS" endtime="20170728 17:03:13.747" starttime="20170728 17:03:13.739"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:03:13.752" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:13.754" starttime="20170728 17:03:13.749"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:13.761" starttime="20170728 17:03:13.759"></status>
</kw>
<msg timestamp="20170728 17:03:13.763" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:03:13.764" starttime="20170728 17:03:13.756"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:13.775" starttime="20170728 17:03:13.773"></status>
</kw>
<msg timestamp="20170728 17:03:13.778" level="INFO">${amount} = 2</msg>
<status status="PASS" endtime="20170728 17:03:13.779" starttime="20170728 17:03:13.769"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:03:13.785" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:03:13.786" starttime="20170728 17:03:13.782"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:13.793" starttime="20170728 17:03:13.791"></status>
</kw>
<msg timestamp="20170728 17:03:13.795" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:13.796" starttime="20170728 17:03:13.788"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:13.805" starttime="20170728 17:03:13.802"></status>
</kw>
<msg timestamp="20170728 17:03:13.807" level="INFO">${total_amount} = 50425.0</msg>
<status status="PASS" endtime="20170728 17:03:13.808" starttime="20170728 17:03:13.798"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:13.818" starttime="20170728 17:03:13.816"></status>
</kw>
<msg timestamp="20170728 17:03:13.821" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:13.822" starttime="20170728 17:03:13.810"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:13.830" starttime="20170728 17:03:13.828"></status>
</kw>
<msg timestamp="20170728 17:03:13.833" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:13.836" starttime="20170728 17:03:13.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:13.840" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:03:13.842" starttime="20170728 17:03:13.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:13.847" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:03:13.849" starttime="20170728 17:03:13.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:13.853" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:13.854" starttime="20170728 17:03:13.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:13.859" level="INFO">${amount} = 2</msg>
<status status="PASS" endtime="20170728 17:03:13.861" starttime="20170728 17:03:13.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:13.866" level="INFO">${total_amount} = 50425.0</msg>
<status status="PASS" endtime="20170728 17:03:13.868" starttime="20170728 17:03:13.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:13.872" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:13.873" starttime="20170728 17:03:13.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:13.877" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:13.879" starttime="20170728 17:03:13.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:13.885" level="INFO">${event_code_after} = 3</msg>
<status status="PASS" endtime="20170728 17:03:13.886" starttime="20170728 17:03:13.882"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:13.888" starttime="20170728 17:03:13.718"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:13.893" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:13.895" starttime="20170728 17:03:13.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:13.899" level="INFO">total_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:13.900" starttime="20170728 17:03:13.897"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:13.904" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:13.906" starttime="20170728 17:03:13.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:13.910" level="INFO">balance_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:13.912" starttime="20170728 17:03:13.908"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:13.917" starttime="20170728 17:03:13.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:13.920" level="INFO">frozen_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:13.922" starttime="20170728 17:03:13.918"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:13.926" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:13.928" starttime="20170728 17:03:13.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:13.932" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:13.934" starttime="20170728 17:03:13.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:13.938" level="INFO">表account_amount校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:13.939" starttime="20170728 17:03:13.935"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:13.940" starttime="20170728 17:03:13.657"></status>
</kw>
<kw name="艾佳币恢复数目" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:13.950" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:13.962" starttime="20170728 17:03:13.948"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:13.964" starttime="20170728 17:03:13.946"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:13.966" starttime="20170728 17:03:13.944"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount \ SET total_amount=${database[0][2]},balance_amount=${database[0][3]},frozen_amount=${database[0][4]}where account_id="${account_id}";</arg>
</arguments>
<msg timestamp="20170728 17:03:13.972" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount  SET total_amount=50423.00,balance_amount=49595.00,frozen_amount=828.00where account_id="6273"; </msg>
<status status="PASS" endtime="20170728 17:03:14.078" starttime="20170728 17:03:13.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170728 17:03:14.081" level="INFO">成功</msg>
<status status="PASS" endtime="20170728 17:03:14.082" starttime="20170728 17:03:14.079"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:14.083" starttime="20170728 17:03:13.942"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:14.084" critical="yes" starttime="20170728 17:03:12.481"></status>
</test>
<test id="s1-s1-s5-t4" name="艾佳币&quot;APP元宵节猜灯谜活动返艾佳币&quot;, 4（下）充值">
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>100000</arg>
<arg>2</arg>
<arg>4</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:03:14.093" level="INFO">${args11} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:14.093" starttime="20170728 17:03:14.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:03:14.095" level="INFO">${args22} = 2</msg>
<status status="PASS" endtime="20170728 17:03:14.096" starttime="20170728 17:03:14.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 17:03:14.098" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170728 17:03:14.099" starttime="20170728 17:03:14.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 17:03:14.102" level="INFO">${args44} = 4</msg>
<status status="PASS" endtime="20170728 17:03:14.103" starttime="20170728 17:03:14.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 17:03:14.106" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</msg>
<status status="PASS" endtime="20170728 17:03:14.107" starttime="20170728 17:03:14.104"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:14.108" starttime="20170728 17:03:14.090"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 17:03:14.112" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</msg>
<status status="PASS" endtime="20170728 17:03:14.113" starttime="20170728 17:03:14.111"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 17:03:14.116" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:14.118" starttime="20170728 17:03:14.113"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:14.121" starttime="20170728 17:03:14.121"></status>
</kw>
<msg timestamp="20170728 17:03:14.122" level="INFO">${channel_no} = 2</msg>
<status status="PASS" endtime="20170728 17:03:14.123" starttime="20170728 17:03:14.119"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>user_id</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:14.128" starttime="20170728 17:03:14.126"></status>
</kw>
<msg timestamp="20170728 17:03:14.128" level="INFO">${args11_after} = user_id</msg>
<status status="PASS" endtime="20170728 17:03:14.129" starttime="20170728 17:03:14.125"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:14.133" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:14.141" starttime="20170728 17:03:14.132"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:14.143" starttime="20170728 17:03:14.131"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:14.144" starttime="20170728 17:03:14.130"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 17:03:14.147" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and channel_no='2' </msg>
<msg timestamp="20170728 17:03:14.158" level="INFO">${database1} = ((88889680, '32102151361501229990', 100000, 6273, 2, '32102151361501229990', '20170728162839GNY051613', Decimal('10.00'), 1, 2, 2, 0, datetime.datetime(2017, 7, 28, 16, 28, 42), datetime.datetime(2017...</msg>
<status status="PASS" endtime="20170728 17:03:14.161" starttime="20170728 17:03:14.145"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 17:03:14.164" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6273' </msg>
<msg timestamp="20170728 17:03:14.174" level="INFO">${database} = ((12587, 6273, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 17, 4, 19), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:14.175" starttime="20170728 17:03:14.162"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 17:03:14.177" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:14.177" starttime="20170728 17:03:14.176"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 17:03:14.179" level="INFO">${account_id} = 6273</msg>
<status status="PASS" endtime="20170728 17:03:14.180" starttime="20170728 17:03:14.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:14.183" level="INFO">获得account_id值为：6273</msg>
<status status="PASS" endtime="20170728 17:03:14.184" starttime="20170728 17:03:14.181"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:14.186" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:14.186" starttime="20170728 17:03:14.185"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:14.189" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:14.190" starttime="20170728 17:03:14.187"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:14.195" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:14.196" starttime="20170728 17:03:14.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:14.199" level="INFO">${account_id} = 6273</msg>
<status status="PASS" endtime="20170728 17:03:14.200" starttime="20170728 17:03:14.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 17:03:14.204" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:14.206" starttime="20170728 17:03:14.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:14.209" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:14.210" starttime="20170728 17:03:14.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:14.213" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:14.214" starttime="20170728 17:03:14.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:14.217" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:14.219" starttime="20170728 17:03:14.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:14.222" level="INFO">${channel_no} = 2</msg>
<status status="PASS" endtime="20170728 17:03:14.223" starttime="20170728 17:03:14.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 17:03:14.225" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:14.226" starttime="20170728 17:03:14.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 17:03:14.228" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</msg>
<status status="PASS" endtime="20170728 17:03:14.229" starttime="20170728 17:03:14.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170728 17:03:14.231" level="INFO">${database} = ((12587, 6273, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 17, 4, 19), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:14.232" starttime="20170728 17:03:14.230"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:14.234" starttime="20170728 17:03:14.110"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Ajb Activity Recharge" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:14.407" starttime="20170728 17:03:14.242"></status>
</kw>
<msg timestamp="20170728 17:03:14.410" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:14.411" starttime="20170728 17:03:14.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 17:03:14.416" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:14.418" starttime="20170728 17:03:14.413"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:14.420" starttime="20170728 17:03:14.237"></status>
</kw>
<kw name="字段验证" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:14.427" level="INFO">200</msg>
<status status="PASS" endtime="20170728 17:03:14.429" starttime="20170728 17:03:14.425"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 17:03:14.433" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:14.434" starttime="20170728 17:03:14.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 17:03:14.436" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 17:03:14.437" starttime="20170728 17:03:14.435"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 17:03:14.440" level="INFO">To JSON using : content={"data":{"orderNum":"32102151361501230541"},"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 17:03:14.441" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 17:03:14.441" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': {u'orderNum': u'32102151361501230541'}, u'success': True}</msg>
<status status="PASS" endtime="20170728 17:03:14.442" starttime="20170728 17:03:14.439"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 17:03:14.444" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:14.445" starttime="20170728 17:03:14.443"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:14.447" starttime="20170728 17:03:14.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:14.449" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:14.450" starttime="20170728 17:03:14.448"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<assign>
<var>@{Link1}</var>
</assign>
<msg timestamp="20170728 17:03:14.453" level="INFO">@{Link1} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:14.454" starttime="20170728 17:03:14.451"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>"${value}" in @{Link1}</arg>
<arg>Get From Dictionary</arg>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${orderNum}</var>
</assign>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:14.460" starttime="20170728 17:03:14.458"></status>
</kw>
<msg timestamp="20170728 17:03:14.461" level="INFO">${orderNum} = 32102151361501230541</msg>
<status status="PASS" endtime="20170728 17:03:14.462" starttime="20170728 17:03:14.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<msg timestamp="20170728 17:03:14.464" level="INFO">${orderNum} = 32102151361501230541</msg>
<status status="PASS" endtime="20170728 17:03:14.465" starttime="20170728 17:03:14.463"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:14.466" starttime="20170728 17:03:14.422"></status>
</kw>
<kw name="表ajb_account_open_record的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_open_record</arg>
</arguments>
<msg timestamp="20170728 17:03:14.469" level="INFO">现在开始校验表ajb_account_open_record</msg>
<status status="PASS" endtime="20170728 17:03:14.470" starttime="20170728 17:03:14.468"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:14.474" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:14.484" starttime="20170728 17:03:14.472"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:14.485" starttime="20170728 17:03:14.471"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:14.487" starttime="20170728 17:03:14.470"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:14.490" level="INFO">Executing : Query  |  select * from ajb_account_open_record where account_id ='6273' </msg>
<msg timestamp="20170728 17:03:14.499" level="INFO">${user_id} = ((100000000010L, '32102151361501206852', 100000, 6273, 2, 2, 0, datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 10, 46, 53)),)</msg>
<status status="PASS" endtime="20170728 17:03:14.500" starttime="20170728 17:03:14.488"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:14.504" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:14.505" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:14.505" starttime="20170728 17:03:14.502"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:14.507" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:14.508" starttime="20170728 17:03:14.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:14.509" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:14.510" starttime="20170728 17:03:14.508"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:03:14.512" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:14.513" starttime="20170728 17:03:14.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:03:14.516" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:03:14.517" starttime="20170728 17:03:14.514"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:14.520" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:14.521" starttime="20170728 17:03:14.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no正确反映艾佳币账户渠道</arg>
</arguments>
<msg timestamp="20170728 17:03:14.524" level="INFO">channel_no正确反映艾佳币账户渠道</msg>
<status status="PASS" endtime="20170728 17:03:14.524" starttime="20170728 17:03:14.522"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 17:03:14.526" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:14.527" starttime="20170728 17:03:14.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>status的值为2,表示生效，是正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:14.529" level="INFO">status的值为2,表示生效，是正确的</msg>
<status status="PASS" endtime="20170728 17:03:14.529" starttime="20170728 17:03:14.528"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:14.533" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:14.534" starttime="20170728 17:03:14.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:14.536" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:14.537" starttime="20170728 17:03:14.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表里面的add_time和update_time的时间是一致的。校验正确。</arg>
</arguments>
<msg timestamp="20170728 17:03:14.539" level="INFO">表里面的add_time和update_time的时间是一致的。校验正确。</msg>
<status status="PASS" endtime="20170728 17:03:14.539" starttime="20170728 17:03:14.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_open_record的校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:14.541" level="INFO">表ajb_account_open_record的校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:14.542" starttime="20170728 17:03:14.540"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:14.543" starttime="20170728 17:03:14.467"></status>
</kw>
<kw name="表account_unilateral_bill的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_unilateral_bill</arg>
</arguments>
<msg timestamp="20170728 17:03:14.545" level="INFO">现在开始校验表account_unilateral_bill</msg>
<status status="PASS" endtime="20170728 17:03:14.546" starttime="20170728 17:03:14.544"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:14.552" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:14.571" starttime="20170728 17:03:14.550"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:14.573" starttime="20170728 17:03:14.548"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:14.575" starttime="20170728 17:03:14.547"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>account_unilateral_bill</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:14.584" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:14.592" starttime="20170728 17:03:14.583"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:14.594" starttime="20170728 17:03:14.580"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:14.595" starttime="20170728 17:03:14.578"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:03:14.597" level="INFO">${current_time} = 2017-07-28 17:03:14.597</msg>
<status status="PASS" endtime="20170728 17:03:14.599" starttime="20170728 17:03:14.596"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>0 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:14.602" level="INFO">${current_time_before_30} = 2017-07-28 17:03:14.597</msg>
<status status="PASS" endtime="20170728 17:03:14.602" starttime="20170728 17:03:14.600"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:14.604" level="INFO">${current_time_after_30} = 2017-07-28 17:04:54.597</msg>
<status status="PASS" endtime="20170728 17:03:14.605" starttime="20170728 17:03:14.603"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 17:03:14.607" level="INFO">Executing : Query  |  select * from account_unilateral_bill where user_id='100000' and update_time between' 2017-07-28 17:03:14.597' and '2017-07-28 17:04:54.597' </msg>
<msg timestamp="20170728 17:03:14.618" level="INFO">${updatetime} = ((7715, '32102151361501230545', 100000, 6273, '32102151361501230542', 1, 4, 3, Decimal('2.00'), None, datetime.datetime(2017, 7, 28, 17, 4, 19), datetime.datetime(2017, 7, 28, 17, 4, 19), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:14.619" starttime="20170728 17:03:14.606"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 17:03:14.621" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 17:03:14.622" starttime="20170728 17:03:14.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 17:03:14.625" level="INFO">account_unilateral_bill表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 17:03:14.626" starttime="20170728 17:03:14.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:14.630" level="INFO">${current_time_before_30} = 2017-07-28 17:03:14.597</msg>
<status status="PASS" endtime="20170728 17:03:14.630" starttime="20170728 17:03:14.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:14.633" level="INFO">${current_time_after_30} = 2017-07-28 17:04:54.597</msg>
<status status="PASS" endtime="20170728 17:03:14.634" starttime="20170728 17:03:14.632"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:14.635" starttime="20170728 17:03:14.576"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id} 'and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:14.638" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6273 'and update_time between' 2017-07-28 17:03:14.597' and '2017-07-28 17:04:54.597' </msg>
<msg timestamp="20170728 17:03:14.645" level="INFO">${user_id} = ((7715, '32102151361501230545', 100000, 6273, '32102151361501230542', 1, 4, 3, Decimal('2.00'), None, datetime.datetime(2017, 7, 28, 17, 4, 19), datetime.datetime(2017, 7, 28, 17, 4, 19), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:14.646" starttime="20170728 17:03:14.636"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:14.648" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:14.649" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:14.650" starttime="20170728 17:03:14.646"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:14.652" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:14.653" starttime="20170728 17:03:14.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:14.655" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:14.656" starttime="20170728 17:03:14.654"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:14.658" starttime="20170728 17:03:14.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:03:14.662" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:03:14.663" starttime="20170728 17:03:14.660"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:14.666" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:14.667" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:14.668" starttime="20170728 17:03:14.664"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:14.670" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:14.672" starttime="20170728 17:03:14.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:14.674" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:14.674" starttime="20170728 17:03:14.673"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:03:14.676" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:14.677" starttime="20170728 17:03:14.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 17:03:14.678" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 17:03:14.679" starttime="20170728 17:03:14.678"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>7</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:14.688" starttime="20170728 17:03:14.686"></status>
</kw>
<msg timestamp="20170728 17:03:14.690" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:03:14.690" starttime="20170728 17:03:14.683"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:03:14.692" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:03:14.693" starttime="20170728 17:03:14.691"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:14.696" starttime="20170728 17:03:14.695"></status>
</kw>
<msg timestamp="20170728 17:03:14.697" level="INFO">${event_code_after} = 4</msg>
<status status="PASS" endtime="20170728 17:03:14.698" starttime="20170728 17:03:14.694"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:03:14.700" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:14.701" starttime="20170728 17:03:14.699"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:14.706" starttime="20170728 17:03:14.704"></status>
</kw>
<msg timestamp="20170728 17:03:14.708" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:03:14.709" starttime="20170728 17:03:14.702"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:14.715" starttime="20170728 17:03:14.712"></status>
</kw>
<msg timestamp="20170728 17:03:14.716" level="INFO">${amount} = 2</msg>
<status status="PASS" endtime="20170728 17:03:14.717" starttime="20170728 17:03:14.710"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:03:14.719" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:03:14.720" starttime="20170728 17:03:14.718"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:14.725" starttime="20170728 17:03:14.724"></status>
</kw>
<msg timestamp="20170728 17:03:14.726" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:14.726" starttime="20170728 17:03:14.722"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:14.730" starttime="20170728 17:03:14.729"></status>
</kw>
<msg timestamp="20170728 17:03:14.732" level="INFO">${total_amount} = 50425.0</msg>
<status status="PASS" endtime="20170728 17:03:14.733" starttime="20170728 17:03:14.727"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:14.738" starttime="20170728 17:03:14.737"></status>
</kw>
<msg timestamp="20170728 17:03:14.739" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:14.740" starttime="20170728 17:03:14.733"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:14.744" starttime="20170728 17:03:14.743"></status>
</kw>
<msg timestamp="20170728 17:03:14.744" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:14.745" starttime="20170728 17:03:14.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:14.747" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:03:14.748" starttime="20170728 17:03:14.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:14.750" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:03:14.751" starttime="20170728 17:03:14.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:14.754" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:14.756" starttime="20170728 17:03:14.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:14.758" level="INFO">${amount} = 2</msg>
<status status="PASS" endtime="20170728 17:03:14.758" starttime="20170728 17:03:14.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:14.760" level="INFO">${total_amount} = 50425.0</msg>
<status status="PASS" endtime="20170728 17:03:14.761" starttime="20170728 17:03:14.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:14.763" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:14.763" starttime="20170728 17:03:14.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:14.767" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:14.768" starttime="20170728 17:03:14.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:14.771" level="INFO">${event_code_after} = 4</msg>
<status status="PASS" endtime="20170728 17:03:14.773" starttime="20170728 17:03:14.769"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:14.774" starttime="20170728 17:03:14.681"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:14.776" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:14.777" starttime="20170728 17:03:14.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:14.779" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 17:03:14.779" starttime="20170728 17:03:14.778"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:14.783" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:14.784" starttime="20170728 17:03:14.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:14.786" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170728 17:03:14.786" starttime="20170728 17:03:14.785"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:14.789" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:14.790" starttime="20170728 17:03:14.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:14.791" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 17:03:14.792" starttime="20170728 17:03:14.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 17:03:14.794" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 17:03:14.794" starttime="20170728 17:03:14.793"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:14.796" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:14.797" starttime="20170728 17:03:14.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:14.800" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:14.801" starttime="20170728 17:03:14.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:14.804" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170728 17:03:14.805" starttime="20170728 17:03:14.803"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_unilateral}</var>
</assign>
<msg timestamp="20170728 17:03:14.807" level="INFO">${user_id[0][0]_unilateral} = 7715</msg>
<status status="PASS" endtime="20170728 17:03:14.807" starttime="20170728 17:03:14.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_unilateral}</arg>
</arguments>
<msg timestamp="20170728 17:03:14.809" level="INFO">${user_id[0][0]_unilateral} = 7715</msg>
<status status="PASS" endtime="20170728 17:03:14.810" starttime="20170728 17:03:14.808"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]_unilateral}'</arg>
</arguments>
<msg timestamp="20170728 17:03:14.812" level="INFO">Executing : Execute SQL String  |  delete from account_unilateral_bill where id ='7715' </msg>
<status status="PASS" endtime="20170728 17:03:14.861" starttime="20170728 17:03:14.811"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:14.862" starttime="20170728 17:03:14.543"></status>
</kw>
<kw name="表ajb_account_transaction" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170728 17:03:14.866" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170728 17:03:14.866" starttime="20170728 17:03:14.864"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:14.871" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:14.878" starttime="20170728 17:03:14.869"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:14.879" starttime="20170728 17:03:14.868"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:14.881" starttime="20170728 17:03:14.867"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>ajb_account_transaction</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:14.886" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:14.897" starttime="20170728 17:03:14.885"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:14.899" starttime="20170728 17:03:14.883"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:14.900" starttime="20170728 17:03:14.882"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:03:14.902" level="INFO">${current_time} = 2017-07-28 17:03:14.902</msg>
<status status="PASS" endtime="20170728 17:03:14.902" starttime="20170728 17:03:14.901"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>0 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:14.905" level="INFO">${current_time_before_30} = 2017-07-28 17:03:14.902</msg>
<status status="PASS" endtime="20170728 17:03:14.905" starttime="20170728 17:03:14.903"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:14.909" level="INFO">${current_time_after_30} = 2017-07-28 17:04:54.902</msg>
<status status="PASS" endtime="20170728 17:03:14.910" starttime="20170728 17:03:14.907"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 17:03:14.912" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and update_time between' 2017-07-28 17:03:14.902' and '2017-07-28 17:04:54.902' </msg>
<msg timestamp="20170728 17:03:14.923" level="INFO">${updatetime} = ((88889801, '32102151361501230541', 100000, 6273, 2, '32102151361501230541', '20170728170416FTV051704', Decimal('2.00'), 1, 4, 2, 0, datetime.datetime(2017, 7, 28, 17, 4, 19), datetime.datetime(2017, ...</msg>
<status status="PASS" endtime="20170728 17:03:14.925" starttime="20170728 17:03:14.911"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 17:03:14.927" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 17:03:14.927" starttime="20170728 17:03:14.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 17:03:14.929" level="INFO">ajb_account_transaction表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 17:03:14.930" starttime="20170728 17:03:14.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:14.933" level="INFO">${current_time_before_30} = 2017-07-28 17:03:14.902</msg>
<status status="PASS" endtime="20170728 17:03:14.933" starttime="20170728 17:03:14.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:14.935" level="INFO">${current_time_after_30} = 2017-07-28 17:04:54.902</msg>
<status status="PASS" endtime="20170728 17:03:14.937" starttime="20170728 17:03:14.934"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:14.939" starttime="20170728 17:03:14.881"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:14.943" level="INFO">Executing : Query  |  select * from ajb_account_transaction where account_id ='6273' and update_time between' 2017-07-28 17:03:14.902' and '2017-07-28 17:04:54.902' </msg>
<msg timestamp="20170728 17:03:14.954" level="INFO">${user_id} = ((88889801, '32102151361501230541', 100000, 6273, 2, '32102151361501230541', '20170728170416FTV051704', Decimal('2.00'), 1, 4, 2, 0, datetime.datetime(2017, 7, 28, 17, 4, 19), datetime.datetime(2017, ...</msg>
<status status="PASS" endtime="20170728 17:03:14.955" starttime="20170728 17:03:14.941"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:14.957" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:14.958" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:14.958" starttime="20170728 17:03:14.956"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:14.960" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:14.961" starttime="20170728 17:03:14.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:14.962" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:14.963" starttime="20170728 17:03:14.962"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:14.967" starttime="20170728 17:03:14.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:03:14.969" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:03:14.970" starttime="20170728 17:03:14.968"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:14.972" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:14.973" starttime="20170728 17:03:14.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no的值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:14.974" level="INFO">channel_no的值正确</msg>
<status status="PASS" endtime="20170728 17:03:14.975" starttime="20170728 17:03:14.973"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${args11}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${orderNum}</arg>
</arguments>
<assign>
<var>${bill_order_num}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:14.979" starttime="20170728 17:03:14.978"></status>
</kw>
<msg timestamp="20170728 17:03:14.979" level="INFO">${bill_order_num} = 32102151361501230541</msg>
<status status="PASS" endtime="20170728 17:03:14.980" starttime="20170728 17:03:14.976"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>${bill_order_num}</arg>
</arguments>
<msg timestamp="20170728 17:03:14.983" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:14.983" starttime="20170728 17:03:14.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170728 17:03:14.985" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170728 17:03:14.986" starttime="20170728 17:03:14.984"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>7</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:14.995" starttime="20170728 17:03:14.994"></status>
</kw>
<msg timestamp="20170728 17:03:14.995" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:03:14.996" starttime="20170728 17:03:14.990"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:03:14.999" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:03:15.000" starttime="20170728 17:03:14.997"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:15.004" starttime="20170728 17:03:15.003"></status>
</kw>
<msg timestamp="20170728 17:03:15.005" level="INFO">${event_code_after} = 4</msg>
<status status="PASS" endtime="20170728 17:03:15.006" starttime="20170728 17:03:15.002"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:03:15.007" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:15.008" starttime="20170728 17:03:15.006"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:15.012" starttime="20170728 17:03:15.011"></status>
</kw>
<msg timestamp="20170728 17:03:15.012" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:03:15.013" starttime="20170728 17:03:15.009"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:15.020" starttime="20170728 17:03:15.018"></status>
</kw>
<msg timestamp="20170728 17:03:15.021" level="INFO">${amount} = 2</msg>
<status status="PASS" endtime="20170728 17:03:15.022" starttime="20170728 17:03:15.014"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:03:15.024" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:03:15.025" starttime="20170728 17:03:15.023"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:15.028" starttime="20170728 17:03:15.027"></status>
</kw>
<msg timestamp="20170728 17:03:15.029" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:15.030" starttime="20170728 17:03:15.026"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:15.036" starttime="20170728 17:03:15.034"></status>
</kw>
<msg timestamp="20170728 17:03:15.037" level="INFO">${total_amount} = 50425.0</msg>
<status status="PASS" endtime="20170728 17:03:15.038" starttime="20170728 17:03:15.031"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:15.042" starttime="20170728 17:03:15.041"></status>
</kw>
<msg timestamp="20170728 17:03:15.043" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:15.044" starttime="20170728 17:03:15.039"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:15.048" starttime="20170728 17:03:15.046"></status>
</kw>
<msg timestamp="20170728 17:03:15.050" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:15.051" starttime="20170728 17:03:15.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:15.054" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:03:15.055" starttime="20170728 17:03:15.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:15.057" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:03:15.057" starttime="20170728 17:03:15.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:15.060" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:15.061" starttime="20170728 17:03:15.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:15.063" level="INFO">${amount} = 2</msg>
<status status="PASS" endtime="20170728 17:03:15.064" starttime="20170728 17:03:15.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:15.067" level="INFO">${total_amount} = 50425.0</msg>
<status status="PASS" endtime="20170728 17:03:15.067" starttime="20170728 17:03:15.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:15.069" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:15.070" starttime="20170728 17:03:15.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:15.072" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:15.073" starttime="20170728 17:03:15.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:15.075" level="INFO">${event_code_after} = 4</msg>
<status status="PASS" endtime="20170728 17:03:15.075" starttime="20170728 17:03:15.074"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:15.076" starttime="20170728 17:03:14.988"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170728 17:03:15.080" level="INFO">${pay_no_after} = 20170728170416FTV051704</msg>
<status status="PASS" endtime="20170728 17:03:15.081" starttime="20170728 17:03:15.078"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170728 17:03:15.084" level="INFO">Length is 23</msg>
<msg timestamp="20170728 17:03:15.085" level="INFO">${pay_no_after_length} = 23</msg>
<status status="PASS" endtime="20170728 17:03:15.085" starttime="20170728 17:03:15.082"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:15.088" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:15.089" starttime="20170728 17:03:15.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170728 17:03:15.091" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170728 17:03:15.091" starttime="20170728 17:03:15.090"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:15.093" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:15.094" starttime="20170728 17:03:15.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:15.096" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 17:03:15.096" starttime="20170728 17:03:15.095"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:03:15.100" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:15.101" starttime="20170728 17:03:15.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 17:03:15.103" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 17:03:15.104" starttime="20170728 17:03:15.102"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][9]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:15.105" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:15.106" starttime="20170728 17:03:15.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:15.109" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 17:03:15.110" starttime="20170728 17:03:15.107"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 17:03:15.112" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:15.113" starttime="20170728 17:03:15.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170728 17:03:15.115" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170728 17:03:15.116" starttime="20170728 17:03:15.114"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:15.118" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:15.118" starttime="20170728 17:03:15.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:15.120" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:15.121" starttime="20170728 17:03:15.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 17:03:15.123" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 17:03:15.125" starttime="20170728 17:03:15.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:15.127" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170728 17:03:15.128" starttime="20170728 17:03:15.126"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170728 17:03:15.132" level="INFO">${user_id[0][0]_transaction} = 88889801</msg>
<status status="PASS" endtime="20170728 17:03:15.133" starttime="20170728 17:03:15.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170728 17:03:15.135" level="INFO">${user_id[0][0]_transaction} = 88889801</msg>
<status status="PASS" endtime="20170728 17:03:15.136" starttime="20170728 17:03:15.133"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id[0][0]}'</arg>
</arguments>
<assign>
<var>${user_id_unilateral_delete1}</var>
</assign>
<msg timestamp="20170728 17:03:15.139" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88889801' </msg>
<msg timestamp="20170728 17:03:15.225" level="INFO">${user_id_unilateral_delete1} = None</msg>
<status status="PASS" endtime="20170728 17:03:15.225" starttime="20170728 17:03:15.137"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:15.226" starttime="20170728 17:03:14.863"></status>
</kw>
<kw name="表account_amount的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_amount</arg>
</arguments>
<msg timestamp="20170728 17:03:15.229" level="INFO">现在开始校验表account_amount</msg>
<status status="PASS" endtime="20170728 17:03:15.229" starttime="20170728 17:03:15.228"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:15.235" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:15.253" starttime="20170728 17:03:15.233"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:15.254" starttime="20170728 17:03:15.232"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:15.255" starttime="20170728 17:03:15.231"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time1}</var>
</assign>
<msg timestamp="20170728 17:03:15.257" level="INFO">${current_time1} = 2017-07-28 17:03:15.257</msg>
<status status="PASS" endtime="20170728 17:03:15.258" starttime="20170728 17:03:15.256"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:15.260" level="INFO">${current_time1_before_30} = 2017-07-28 17:02:15.257</msg>
<status status="PASS" endtime="20170728 17:03:15.260" starttime="20170728 17:03:15.258"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:15.262" level="INFO">${current_time1_after_30} = 2017-07-28 17:04:15.257</msg>
<status status="PASS" endtime="20170728 17:03:15.263" starttime="20170728 17:03:15.261"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:15.266" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6273' </msg>
<msg timestamp="20170728 17:03:15.278" level="INFO">${user_id} = ((12587, 6273, Decimal('50425.00'), Decimal('49597.00'), Decimal('828.00'), datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 17, 4, 19), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:15.279" starttime="20170728 17:03:15.264"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>7</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:15.288" starttime="20170728 17:03:15.286"></status>
</kw>
<msg timestamp="20170728 17:03:15.289" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:03:15.289" starttime="20170728 17:03:15.283"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:03:15.292" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:03:15.292" starttime="20170728 17:03:15.290"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:15.295" starttime="20170728 17:03:15.294"></status>
</kw>
<msg timestamp="20170728 17:03:15.296" level="INFO">${event_code_after} = 4</msg>
<status status="PASS" endtime="20170728 17:03:15.297" starttime="20170728 17:03:15.293"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:03:15.299" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:15.300" starttime="20170728 17:03:15.298"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:15.305" starttime="20170728 17:03:15.304"></status>
</kw>
<msg timestamp="20170728 17:03:15.306" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:03:15.306" starttime="20170728 17:03:15.302"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:15.312" starttime="20170728 17:03:15.310"></status>
</kw>
<msg timestamp="20170728 17:03:15.313" level="INFO">${amount} = 2</msg>
<status status="PASS" endtime="20170728 17:03:15.315" starttime="20170728 17:03:15.307"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:03:15.317" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:03:15.318" starttime="20170728 17:03:15.316"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:15.321" starttime="20170728 17:03:15.320"></status>
</kw>
<msg timestamp="20170728 17:03:15.322" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:15.322" starttime="20170728 17:03:15.319"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:15.326" starttime="20170728 17:03:15.325"></status>
</kw>
<msg timestamp="20170728 17:03:15.328" level="INFO">${total_amount} = 50425.0</msg>
<status status="PASS" endtime="20170728 17:03:15.329" starttime="20170728 17:03:15.323"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:15.337" starttime="20170728 17:03:15.335"></status>
</kw>
<msg timestamp="20170728 17:03:15.338" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:15.339" starttime="20170728 17:03:15.331"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:15.343" starttime="20170728 17:03:15.342"></status>
</kw>
<msg timestamp="20170728 17:03:15.343" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:15.344" starttime="20170728 17:03:15.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:15.348" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:03:15.349" starttime="20170728 17:03:15.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:15.351" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:03:15.352" starttime="20170728 17:03:15.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:15.354" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:15.355" starttime="20170728 17:03:15.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:15.356" level="INFO">${amount} = 2</msg>
<status status="PASS" endtime="20170728 17:03:15.357" starttime="20170728 17:03:15.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:15.359" level="INFO">${total_amount} = 50425.0</msg>
<status status="PASS" endtime="20170728 17:03:15.360" starttime="20170728 17:03:15.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:15.362" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:15.362" starttime="20170728 17:03:15.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:15.366" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:15.367" starttime="20170728 17:03:15.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:15.370" level="INFO">${event_code_after} = 4</msg>
<status status="PASS" endtime="20170728 17:03:15.370" starttime="20170728 17:03:15.368"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:15.371" starttime="20170728 17:03:15.281"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:15.376" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:15.378" starttime="20170728 17:03:15.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:15.381" level="INFO">total_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:15.383" starttime="20170728 17:03:15.379"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:15.385" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:15.385" starttime="20170728 17:03:15.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:15.387" level="INFO">balance_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:15.390" starttime="20170728 17:03:15.386"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:15.393" starttime="20170728 17:03:15.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:15.396" level="INFO">frozen_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:15.396" starttime="20170728 17:03:15.395"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:15.400" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:15.400" starttime="20170728 17:03:15.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:15.402" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:15.403" starttime="20170728 17:03:15.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:15.407" level="INFO">表account_amount校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:15.408" starttime="20170728 17:03:15.405"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:15.408" starttime="20170728 17:03:15.227"></status>
</kw>
<kw name="艾佳币恢复数目" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:15.415" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:15.423" starttime="20170728 17:03:15.412"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:15.425" starttime="20170728 17:03:15.411"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:15.426" starttime="20170728 17:03:15.410"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount \ SET total_amount=${database[0][2]},balance_amount=${database[0][3]},frozen_amount=${database[0][4]}where account_id="${account_id}";</arg>
</arguments>
<msg timestamp="20170728 17:03:15.428" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount  SET total_amount=50423.00,balance_amount=49595.00,frozen_amount=828.00where account_id="6273"; </msg>
<status status="PASS" endtime="20170728 17:03:15.473" starttime="20170728 17:03:15.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170728 17:03:15.475" level="INFO">成功</msg>
<status status="PASS" endtime="20170728 17:03:15.476" starttime="20170728 17:03:15.474"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:15.476" starttime="20170728 17:03:15.409"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:15.477" critical="yes" starttime="20170728 17:03:14.085"></status>
</test>
<test id="s1-s1-s5-t5" name="艾佳币&quot;APP情人节返艾佳币&quot;,5（下）充值">
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>100000</arg>
<arg>2</arg>
<arg>5</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:03:15.487" level="INFO">${args11} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:15.488" starttime="20170728 17:03:15.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:03:15.490" level="INFO">${args22} = 2</msg>
<status status="PASS" endtime="20170728 17:03:15.491" starttime="20170728 17:03:15.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 17:03:15.493" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170728 17:03:15.494" starttime="20170728 17:03:15.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 17:03:15.496" level="INFO">${args44} = 5</msg>
<status status="PASS" endtime="20170728 17:03:15.496" starttime="20170728 17:03:15.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 17:03:15.499" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</msg>
<status status="PASS" endtime="20170728 17:03:15.499" starttime="20170728 17:03:15.497"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:15.500" starttime="20170728 17:03:15.484"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 17:03:15.504" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</msg>
<status status="PASS" endtime="20170728 17:03:15.505" starttime="20170728 17:03:15.503"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 17:03:15.508" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:15.509" starttime="20170728 17:03:15.506"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:15.512" starttime="20170728 17:03:15.511"></status>
</kw>
<msg timestamp="20170728 17:03:15.513" level="INFO">${channel_no} = 2</msg>
<status status="PASS" endtime="20170728 17:03:15.515" starttime="20170728 17:03:15.510"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>user_id</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:15.521" starttime="20170728 17:03:15.519"></status>
</kw>
<msg timestamp="20170728 17:03:15.523" level="INFO">${args11_after} = user_id</msg>
<status status="PASS" endtime="20170728 17:03:15.523" starttime="20170728 17:03:15.517"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:15.527" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:15.546" starttime="20170728 17:03:15.526"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:15.548" starttime="20170728 17:03:15.525"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:15.549" starttime="20170728 17:03:15.524"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 17:03:15.552" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and channel_no='2' </msg>
<msg timestamp="20170728 17:03:15.562" level="INFO">${database1} = ((88889680, '32102151361501229990', 100000, 6273, 2, '32102151361501229990', '20170728162839GNY051613', Decimal('10.00'), 1, 2, 2, 0, datetime.datetime(2017, 7, 28, 16, 28, 42), datetime.datetime(2017...</msg>
<status status="PASS" endtime="20170728 17:03:15.563" starttime="20170728 17:03:15.549"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 17:03:15.567" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6273' </msg>
<msg timestamp="20170728 17:03:15.573" level="INFO">${database} = ((12587, 6273, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 17, 4, 20), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:15.574" starttime="20170728 17:03:15.565"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 17:03:15.577" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:15.578" starttime="20170728 17:03:15.575"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 17:03:15.582" level="INFO">${account_id} = 6273</msg>
<status status="PASS" endtime="20170728 17:03:15.583" starttime="20170728 17:03:15.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:15.585" level="INFO">获得account_id值为：6273</msg>
<status status="PASS" endtime="20170728 17:03:15.586" starttime="20170728 17:03:15.584"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:15.588" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:15.589" starttime="20170728 17:03:15.586"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:15.592" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:15.593" starttime="20170728 17:03:15.590"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:15.596" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:15.598" starttime="20170728 17:03:15.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:15.601" level="INFO">${account_id} = 6273</msg>
<status status="PASS" endtime="20170728 17:03:15.601" starttime="20170728 17:03:15.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 17:03:15.603" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:15.604" starttime="20170728 17:03:15.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:15.606" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:15.606" starttime="20170728 17:03:15.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:15.608" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:15.609" starttime="20170728 17:03:15.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:15.611" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:15.612" starttime="20170728 17:03:15.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:15.615" level="INFO">${channel_no} = 2</msg>
<status status="PASS" endtime="20170728 17:03:15.616" starttime="20170728 17:03:15.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 17:03:15.618" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:15.618" starttime="20170728 17:03:15.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 17:03:15.620" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</msg>
<status status="PASS" endtime="20170728 17:03:15.621" starttime="20170728 17:03:15.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170728 17:03:15.624" level="INFO">${database} = ((12587, 6273, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 17, 4, 20), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:15.625" starttime="20170728 17:03:15.623"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:15.626" starttime="20170728 17:03:15.501"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Ajb Activity Recharge" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:15.693" starttime="20170728 17:03:15.630"></status>
</kw>
<msg timestamp="20170728 17:03:15.694" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:15.694" starttime="20170728 17:03:15.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 17:03:15.697" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:15.698" starttime="20170728 17:03:15.696"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:15.699" starttime="20170728 17:03:15.627"></status>
</kw>
<kw name="字段验证" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:15.703" level="INFO">200</msg>
<status status="PASS" endtime="20170728 17:03:15.704" starttime="20170728 17:03:15.701"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 17:03:15.706" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:15.707" starttime="20170728 17:03:15.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 17:03:15.708" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 17:03:15.709" starttime="20170728 17:03:15.708"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 17:03:15.711" level="INFO">To JSON using : content={"data":{"orderNum":"32102151361501230546"},"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 17:03:15.711" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 17:03:15.712" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': {u'orderNum': u'32102151361501230546'}, u'success': True}</msg>
<status status="PASS" endtime="20170728 17:03:15.713" starttime="20170728 17:03:15.710"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 17:03:15.715" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:15.715" starttime="20170728 17:03:15.713"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:15.718" starttime="20170728 17:03:15.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:15.720" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:15.721" starttime="20170728 17:03:15.719"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<assign>
<var>@{Link1}</var>
</assign>
<msg timestamp="20170728 17:03:15.723" level="INFO">@{Link1} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:15.723" starttime="20170728 17:03:15.722"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>"${value}" in @{Link1}</arg>
<arg>Get From Dictionary</arg>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${orderNum}</var>
</assign>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:15.727" starttime="20170728 17:03:15.725"></status>
</kw>
<msg timestamp="20170728 17:03:15.727" level="INFO">${orderNum} = 32102151361501230546</msg>
<status status="PASS" endtime="20170728 17:03:15.728" starttime="20170728 17:03:15.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<msg timestamp="20170728 17:03:15.730" level="INFO">${orderNum} = 32102151361501230546</msg>
<status status="PASS" endtime="20170728 17:03:15.731" starttime="20170728 17:03:15.729"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:15.732" starttime="20170728 17:03:15.700"></status>
</kw>
<kw name="表ajb_account_open_record的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_open_record</arg>
</arguments>
<msg timestamp="20170728 17:03:15.735" level="INFO">现在开始校验表ajb_account_open_record</msg>
<status status="PASS" endtime="20170728 17:03:15.737" starttime="20170728 17:03:15.733"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:15.742" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:15.751" starttime="20170728 17:03:15.741"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:15.752" starttime="20170728 17:03:15.740"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:15.753" starttime="20170728 17:03:15.738"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:15.755" level="INFO">Executing : Query  |  select * from ajb_account_open_record where account_id ='6273' </msg>
<msg timestamp="20170728 17:03:15.764" level="INFO">${user_id} = ((100000000010L, '32102151361501206852', 100000, 6273, 2, 2, 0, datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 10, 46, 53)),)</msg>
<status status="PASS" endtime="20170728 17:03:15.765" starttime="20170728 17:03:15.754"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:15.768" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:15.769" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:15.769" starttime="20170728 17:03:15.766"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:15.771" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:15.772" starttime="20170728 17:03:15.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:15.774" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:15.774" starttime="20170728 17:03:15.773"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:03:15.777" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:15.777" starttime="20170728 17:03:15.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:03:15.779" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:03:15.781" starttime="20170728 17:03:15.778"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:15.786" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:15.787" starttime="20170728 17:03:15.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no正确反映艾佳币账户渠道</arg>
</arguments>
<msg timestamp="20170728 17:03:15.790" level="INFO">channel_no正确反映艾佳币账户渠道</msg>
<status status="PASS" endtime="20170728 17:03:15.790" starttime="20170728 17:03:15.789"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 17:03:15.792" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:15.793" starttime="20170728 17:03:15.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>status的值为2,表示生效，是正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:15.795" level="INFO">status的值为2,表示生效，是正确的</msg>
<status status="PASS" endtime="20170728 17:03:15.797" starttime="20170728 17:03:15.794"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:15.800" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:15.801" starttime="20170728 17:03:15.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:15.804" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:15.804" starttime="20170728 17:03:15.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表里面的add_time和update_time的时间是一致的。校验正确。</arg>
</arguments>
<msg timestamp="20170728 17:03:15.806" level="INFO">表里面的add_time和update_time的时间是一致的。校验正确。</msg>
<status status="PASS" endtime="20170728 17:03:15.807" starttime="20170728 17:03:15.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_open_record的校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:15.808" level="INFO">表ajb_account_open_record的校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:15.809" starttime="20170728 17:03:15.808"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:15.810" starttime="20170728 17:03:15.732"></status>
</kw>
<kw name="表account_unilateral_bill的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_unilateral_bill</arg>
</arguments>
<msg timestamp="20170728 17:03:15.812" level="INFO">现在开始校验表account_unilateral_bill</msg>
<status status="PASS" endtime="20170728 17:03:15.813" starttime="20170728 17:03:15.811"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:15.820" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:15.830" starttime="20170728 17:03:15.818"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:15.832" starttime="20170728 17:03:15.817"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:15.833" starttime="20170728 17:03:15.816"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>account_unilateral_bill</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:15.840" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:15.861" starttime="20170728 17:03:15.839"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:15.862" starttime="20170728 17:03:15.837"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:15.863" starttime="20170728 17:03:15.836"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:03:15.866" level="INFO">${current_time} = 2017-07-28 17:03:15.866</msg>
<status status="PASS" endtime="20170728 17:03:15.867" starttime="20170728 17:03:15.864"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>0 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:15.869" level="INFO">${current_time_before_30} = 2017-07-28 17:03:15.866</msg>
<status status="PASS" endtime="20170728 17:03:15.870" starttime="20170728 17:03:15.868"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:15.872" level="INFO">${current_time_after_30} = 2017-07-28 17:04:55.866</msg>
<status status="PASS" endtime="20170728 17:03:15.873" starttime="20170728 17:03:15.871"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 17:03:15.876" level="INFO">Executing : Query  |  select * from account_unilateral_bill where user_id='100000' and update_time between' 2017-07-28 17:03:15.866' and '2017-07-28 17:04:55.866' </msg>
<msg timestamp="20170728 17:03:15.886" level="INFO">${updatetime} = ((7718, '32102151361501230550', 100000, 6273, '32102151361501230547', 1, 5, 3, Decimal('2.00'), None, datetime.datetime(2017, 7, 28, 17, 4, 21), datetime.datetime(2017, 7, 28, 17, 4, 21), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:15.887" starttime="20170728 17:03:15.873"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 17:03:15.890" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 17:03:15.891" starttime="20170728 17:03:15.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 17:03:15.894" level="INFO">account_unilateral_bill表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 17:03:15.895" starttime="20170728 17:03:15.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:15.898" level="INFO">${current_time_before_30} = 2017-07-28 17:03:15.866</msg>
<status status="PASS" endtime="20170728 17:03:15.899" starttime="20170728 17:03:15.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:15.901" level="INFO">${current_time_after_30} = 2017-07-28 17:04:55.866</msg>
<status status="PASS" endtime="20170728 17:03:15.901" starttime="20170728 17:03:15.900"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:15.902" starttime="20170728 17:03:15.835"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id} 'and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:15.904" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6273 'and update_time between' 2017-07-28 17:03:15.866' and '2017-07-28 17:04:55.866' </msg>
<msg timestamp="20170728 17:03:15.911" level="INFO">${user_id} = ((7718, '32102151361501230550', 100000, 6273, '32102151361501230547', 1, 5, 3, Decimal('2.00'), None, datetime.datetime(2017, 7, 28, 17, 4, 21), datetime.datetime(2017, 7, 28, 17, 4, 21), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:15.911" starttime="20170728 17:03:15.903"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:15.914" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:15.915" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:15.916" starttime="20170728 17:03:15.912"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:15.917" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:15.918" starttime="20170728 17:03:15.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:15.920" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:15.921" starttime="20170728 17:03:15.919"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:15.925" starttime="20170728 17:03:15.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:03:15.927" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:03:15.928" starttime="20170728 17:03:15.926"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:15.931" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:15.932" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:15.932" starttime="20170728 17:03:15.929"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:15.935" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:15.936" starttime="20170728 17:03:15.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:15.938" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:15.939" starttime="20170728 17:03:15.937"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:03:15.941" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:15.942" starttime="20170728 17:03:15.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 17:03:15.943" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 17:03:15.944" starttime="20170728 17:03:15.943"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>7</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:15.952" starttime="20170728 17:03:15.951"></status>
</kw>
<msg timestamp="20170728 17:03:15.953" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:03:15.954" starttime="20170728 17:03:15.946"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:03:15.956" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:03:15.957" starttime="20170728 17:03:15.955"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:15.961" starttime="20170728 17:03:15.960"></status>
</kw>
<msg timestamp="20170728 17:03:15.962" level="INFO">${event_code_after} = 5</msg>
<status status="PASS" endtime="20170728 17:03:15.962" starttime="20170728 17:03:15.959"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:03:15.965" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:15.965" starttime="20170728 17:03:15.963"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:15.970" starttime="20170728 17:03:15.969"></status>
</kw>
<msg timestamp="20170728 17:03:15.971" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:03:15.972" starttime="20170728 17:03:15.966"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:15.975" starttime="20170728 17:03:15.974"></status>
</kw>
<msg timestamp="20170728 17:03:15.976" level="INFO">${amount} = 2</msg>
<status status="PASS" endtime="20170728 17:03:15.977" starttime="20170728 17:03:15.973"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:03:15.979" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:03:15.980" starttime="20170728 17:03:15.978"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:15.984" starttime="20170728 17:03:15.983"></status>
</kw>
<msg timestamp="20170728 17:03:15.985" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:15.985" starttime="20170728 17:03:15.982"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:15.991" starttime="20170728 17:03:15.990"></status>
</kw>
<msg timestamp="20170728 17:03:15.992" level="INFO">${total_amount} = 50425.0</msg>
<status status="PASS" endtime="20170728 17:03:15.993" starttime="20170728 17:03:15.986"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:15.997" starttime="20170728 17:03:15.996"></status>
</kw>
<msg timestamp="20170728 17:03:15.998" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:15.999" starttime="20170728 17:03:15.994"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:16.006" starttime="20170728 17:03:16.004"></status>
</kw>
<msg timestamp="20170728 17:03:16.006" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:16.007" starttime="20170728 17:03:16.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.009" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:03:16.009" starttime="20170728 17:03:16.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.013" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:03:16.014" starttime="20170728 17:03:16.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.016" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:16.017" starttime="20170728 17:03:16.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.020" level="INFO">${amount} = 2</msg>
<status status="PASS" endtime="20170728 17:03:16.021" starttime="20170728 17:03:16.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.025" level="INFO">${total_amount} = 50425.0</msg>
<status status="PASS" endtime="20170728 17:03:16.026" starttime="20170728 17:03:16.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.028" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:16.029" starttime="20170728 17:03:16.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.034" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:16.036" starttime="20170728 17:03:16.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.039" level="INFO">${event_code_after} = 5</msg>
<status status="PASS" endtime="20170728 17:03:16.039" starttime="20170728 17:03:16.037"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:16.040" starttime="20170728 17:03:15.945"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.042" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:16.043" starttime="20170728 17:03:16.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:16.044" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 17:03:16.045" starttime="20170728 17:03:16.044"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.048" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:16.049" starttime="20170728 17:03:16.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:16.052" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170728 17:03:16.053" starttime="20170728 17:03:16.051"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.055" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:16.056" starttime="20170728 17:03:16.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:16.057" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 17:03:16.058" starttime="20170728 17:03:16.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 17:03:16.060" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 17:03:16.062" starttime="20170728 17:03:16.059"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:16.066" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:16.066" starttime="20170728 17:03:16.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:16.068" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:16.069" starttime="20170728 17:03:16.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:16.070" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170728 17:03:16.071" starttime="20170728 17:03:16.070"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_unilateral}</var>
</assign>
<msg timestamp="20170728 17:03:16.073" level="INFO">${user_id[0][0]_unilateral} = 7718</msg>
<status status="PASS" endtime="20170728 17:03:16.074" starttime="20170728 17:03:16.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_unilateral}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.077" level="INFO">${user_id[0][0]_unilateral} = 7718</msg>
<status status="PASS" endtime="20170728 17:03:16.077" starttime="20170728 17:03:16.075"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]_unilateral}'</arg>
</arguments>
<msg timestamp="20170728 17:03:16.081" level="INFO">Executing : Execute SQL String  |  delete from account_unilateral_bill where id ='7718' </msg>
<status status="PASS" endtime="20170728 17:03:16.126" starttime="20170728 17:03:16.079"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:16.127" starttime="20170728 17:03:15.810"></status>
</kw>
<kw name="表ajb_account_transaction" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170728 17:03:16.131" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170728 17:03:16.132" starttime="20170728 17:03:16.129"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:16.136" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:16.147" starttime="20170728 17:03:16.135"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:16.148" starttime="20170728 17:03:16.133"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:16.149" starttime="20170728 17:03:16.133"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>ajb_account_transaction</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:16.154" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:16.163" starttime="20170728 17:03:16.153"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:16.165" starttime="20170728 17:03:16.152"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:16.166" starttime="20170728 17:03:16.151"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:03:16.169" level="INFO">${current_time} = 2017-07-28 17:03:16.169</msg>
<status status="PASS" endtime="20170728 17:03:16.170" starttime="20170728 17:03:16.168"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>0 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:16.172" level="INFO">${current_time_before_30} = 2017-07-28 17:03:16.169</msg>
<status status="PASS" endtime="20170728 17:03:16.173" starttime="20170728 17:03:16.171"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:16.175" level="INFO">${current_time_after_30} = 2017-07-28 17:04:56.169</msg>
<status status="PASS" endtime="20170728 17:03:16.176" starttime="20170728 17:03:16.174"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 17:03:16.178" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and update_time between' 2017-07-28 17:03:16.169' and '2017-07-28 17:04:56.169' </msg>
<msg timestamp="20170728 17:03:16.190" level="INFO">${updatetime} = ((88889802, '32102151361501230546', 100000, 6273, 2, '32102151361501230546', '20170728170418CEY051705', Decimal('2.00'), 1, 5, 2, 0, datetime.datetime(2017, 7, 28, 17, 4, 21), datetime.datetime(2017, ...</msg>
<status status="PASS" endtime="20170728 17:03:16.191" starttime="20170728 17:03:16.177"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.193" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 17:03:16.193" starttime="20170728 17:03:16.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 17:03:16.195" level="INFO">ajb_account_transaction表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 17:03:16.196" starttime="20170728 17:03:16.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.199" level="INFO">${current_time_before_30} = 2017-07-28 17:03:16.169</msg>
<status status="PASS" endtime="20170728 17:03:16.199" starttime="20170728 17:03:16.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.202" level="INFO">${current_time_after_30} = 2017-07-28 17:04:56.169</msg>
<status status="PASS" endtime="20170728 17:03:16.203" starttime="20170728 17:03:16.201"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:16.205" starttime="20170728 17:03:16.150"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:16.208" level="INFO">Executing : Query  |  select * from ajb_account_transaction where account_id ='6273' and update_time between' 2017-07-28 17:03:16.169' and '2017-07-28 17:04:56.169' </msg>
<msg timestamp="20170728 17:03:16.220" level="INFO">${user_id} = ((88889802, '32102151361501230546', 100000, 6273, 2, '32102151361501230546', '20170728170418CEY051705', Decimal('2.00'), 1, 5, 2, 0, datetime.datetime(2017, 7, 28, 17, 4, 21), datetime.datetime(2017, ...</msg>
<status status="PASS" endtime="20170728 17:03:16.220" starttime="20170728 17:03:16.206"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:16.222" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:16.223" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:16.224" starttime="20170728 17:03:16.221"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:16.225" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:16.226" starttime="20170728 17:03:16.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:16.228" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:16.229" starttime="20170728 17:03:16.227"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:16.232" starttime="20170728 17:03:16.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:03:16.235" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:03:16.236" starttime="20170728 17:03:16.234"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.238" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:16.238" starttime="20170728 17:03:16.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no的值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:16.240" level="INFO">channel_no的值正确</msg>
<status status="PASS" endtime="20170728 17:03:16.241" starttime="20170728 17:03:16.239"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${args11}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${orderNum}</arg>
</arguments>
<assign>
<var>${bill_order_num}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:16.245" starttime="20170728 17:03:16.244"></status>
</kw>
<msg timestamp="20170728 17:03:16.246" level="INFO">${bill_order_num} = 32102151361501230546</msg>
<status status="PASS" endtime="20170728 17:03:16.247" starttime="20170728 17:03:16.242"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>${bill_order_num}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.250" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:16.251" starttime="20170728 17:03:16.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170728 17:03:16.254" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170728 17:03:16.255" starttime="20170728 17:03:16.253"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>7</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:16.261" starttime="20170728 17:03:16.260"></status>
</kw>
<msg timestamp="20170728 17:03:16.262" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:03:16.263" starttime="20170728 17:03:16.257"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:03:16.267" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:03:16.268" starttime="20170728 17:03:16.265"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:16.272" starttime="20170728 17:03:16.271"></status>
</kw>
<msg timestamp="20170728 17:03:16.273" level="INFO">${event_code_after} = 5</msg>
<status status="PASS" endtime="20170728 17:03:16.274" starttime="20170728 17:03:16.269"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:03:16.276" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:16.276" starttime="20170728 17:03:16.275"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:16.281" starttime="20170728 17:03:16.279"></status>
</kw>
<msg timestamp="20170728 17:03:16.282" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:03:16.283" starttime="20170728 17:03:16.277"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:16.287" starttime="20170728 17:03:16.285"></status>
</kw>
<msg timestamp="20170728 17:03:16.288" level="INFO">${amount} = 2</msg>
<status status="PASS" endtime="20170728 17:03:16.289" starttime="20170728 17:03:16.284"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:03:16.291" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:03:16.292" starttime="20170728 17:03:16.290"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:16.298" starttime="20170728 17:03:16.295"></status>
</kw>
<msg timestamp="20170728 17:03:16.299" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:16.299" starttime="20170728 17:03:16.293"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:16.303" starttime="20170728 17:03:16.302"></status>
</kw>
<msg timestamp="20170728 17:03:16.304" level="INFO">${total_amount} = 50425.0</msg>
<status status="PASS" endtime="20170728 17:03:16.305" starttime="20170728 17:03:16.300"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:16.309" starttime="20170728 17:03:16.308"></status>
</kw>
<msg timestamp="20170728 17:03:16.310" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:16.311" starttime="20170728 17:03:16.306"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:16.316" starttime="20170728 17:03:16.315"></status>
</kw>
<msg timestamp="20170728 17:03:16.317" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:16.317" starttime="20170728 17:03:16.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.319" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:03:16.320" starttime="20170728 17:03:16.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.322" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:03:16.322" starttime="20170728 17:03:16.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.324" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:16.325" starttime="20170728 17:03:16.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.329" level="INFO">${amount} = 2</msg>
<status status="PASS" endtime="20170728 17:03:16.330" starttime="20170728 17:03:16.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.334" level="INFO">${total_amount} = 50425.0</msg>
<status status="PASS" endtime="20170728 17:03:16.335" starttime="20170728 17:03:16.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.338" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:16.339" starttime="20170728 17:03:16.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.341" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:16.341" starttime="20170728 17:03:16.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.343" level="INFO">${event_code_after} = 5</msg>
<status status="PASS" endtime="20170728 17:03:16.344" starttime="20170728 17:03:16.342"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:16.345" starttime="20170728 17:03:16.256"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170728 17:03:16.349" level="INFO">${pay_no_after} = 20170728170418CEY051705</msg>
<status status="PASS" endtime="20170728 17:03:16.350" starttime="20170728 17:03:16.348"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170728 17:03:16.352" level="INFO">Length is 23</msg>
<msg timestamp="20170728 17:03:16.353" level="INFO">${pay_no_after_length} = 23</msg>
<status status="PASS" endtime="20170728 17:03:16.353" starttime="20170728 17:03:16.351"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.355" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:16.356" starttime="20170728 17:03:16.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170728 17:03:16.360" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170728 17:03:16.361" starttime="20170728 17:03:16.358"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.365" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:16.367" starttime="20170728 17:03:16.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:16.369" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 17:03:16.370" starttime="20170728 17:03:16.368"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:03:16.372" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:16.372" starttime="20170728 17:03:16.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 17:03:16.374" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 17:03:16.375" starttime="20170728 17:03:16.373"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][9]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.378" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:16.379" starttime="20170728 17:03:16.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:16.381" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 17:03:16.382" starttime="20170728 17:03:16.380"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 17:03:16.385" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:16.386" starttime="20170728 17:03:16.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170728 17:03:16.389" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170728 17:03:16.390" starttime="20170728 17:03:16.387"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:16.394" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:16.395" starttime="20170728 17:03:16.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:16.399" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:16.400" starttime="20170728 17:03:16.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 17:03:16.402" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 17:03:16.403" starttime="20170728 17:03:16.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:16.404" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170728 17:03:16.406" starttime="20170728 17:03:16.404"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170728 17:03:16.408" level="INFO">${user_id[0][0]_transaction} = 88889802</msg>
<status status="PASS" endtime="20170728 17:03:16.409" starttime="20170728 17:03:16.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.411" level="INFO">${user_id[0][0]_transaction} = 88889802</msg>
<status status="PASS" endtime="20170728 17:03:16.411" starttime="20170728 17:03:16.409"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id[0][0]}'</arg>
</arguments>
<assign>
<var>${user_id_unilateral_delete1}</var>
</assign>
<msg timestamp="20170728 17:03:16.414" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88889802' </msg>
<msg timestamp="20170728 17:03:16.462" level="INFO">${user_id_unilateral_delete1} = None</msg>
<status status="PASS" endtime="20170728 17:03:16.463" starttime="20170728 17:03:16.412"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:16.464" starttime="20170728 17:03:16.128"></status>
</kw>
<kw name="表account_amount的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_amount</arg>
</arguments>
<msg timestamp="20170728 17:03:16.468" level="INFO">现在开始校验表account_amount</msg>
<status status="PASS" endtime="20170728 17:03:16.469" starttime="20170728 17:03:16.466"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:16.475" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:16.495" starttime="20170728 17:03:16.474"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:16.496" starttime="20170728 17:03:16.472"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:16.498" starttime="20170728 17:03:16.470"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time1}</var>
</assign>
<msg timestamp="20170728 17:03:16.500" level="INFO">${current_time1} = 2017-07-28 17:03:16.500</msg>
<status status="PASS" endtime="20170728 17:03:16.501" starttime="20170728 17:03:16.499"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:16.503" level="INFO">${current_time1_before_30} = 2017-07-28 17:02:16.500</msg>
<status status="PASS" endtime="20170728 17:03:16.504" starttime="20170728 17:03:16.502"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:16.506" level="INFO">${current_time1_after_30} = 2017-07-28 17:04:16.500</msg>
<status status="PASS" endtime="20170728 17:03:16.507" starttime="20170728 17:03:16.505"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:16.509" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6273' </msg>
<msg timestamp="20170728 17:03:16.514" level="INFO">${user_id} = ((12587, 6273, Decimal('50425.00'), Decimal('49597.00'), Decimal('828.00'), datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 17, 4, 21), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:16.515" starttime="20170728 17:03:16.508"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>7</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:16.521" starttime="20170728 17:03:16.520"></status>
</kw>
<msg timestamp="20170728 17:03:16.522" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:03:16.522" starttime="20170728 17:03:16.517"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:03:16.524" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:03:16.525" starttime="20170728 17:03:16.523"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:16.531" starttime="20170728 17:03:16.529"></status>
</kw>
<msg timestamp="20170728 17:03:16.532" level="INFO">${event_code_after} = 5</msg>
<status status="PASS" endtime="20170728 17:03:16.533" starttime="20170728 17:03:16.527"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:03:16.536" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:16.536" starttime="20170728 17:03:16.534"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:16.540" starttime="20170728 17:03:16.539"></status>
</kw>
<msg timestamp="20170728 17:03:16.541" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:03:16.542" starttime="20170728 17:03:16.537"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:16.548" starttime="20170728 17:03:16.545"></status>
</kw>
<msg timestamp="20170728 17:03:16.549" level="INFO">${amount} = 2</msg>
<status status="PASS" endtime="20170728 17:03:16.549" starttime="20170728 17:03:16.543"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:03:16.551" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:03:16.552" starttime="20170728 17:03:16.550"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:16.555" starttime="20170728 17:03:16.554"></status>
</kw>
<msg timestamp="20170728 17:03:16.556" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:16.556" starttime="20170728 17:03:16.553"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:16.561" starttime="20170728 17:03:16.559"></status>
</kw>
<msg timestamp="20170728 17:03:16.563" level="INFO">${total_amount} = 50425.0</msg>
<status status="PASS" endtime="20170728 17:03:16.564" starttime="20170728 17:03:16.557"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:16.569" starttime="20170728 17:03:16.568"></status>
</kw>
<msg timestamp="20170728 17:03:16.570" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:16.570" starttime="20170728 17:03:16.565"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:16.574" starttime="20170728 17:03:16.573"></status>
</kw>
<msg timestamp="20170728 17:03:16.576" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:16.577" starttime="20170728 17:03:16.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.581" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:03:16.582" starttime="20170728 17:03:16.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.584" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:03:16.585" starttime="20170728 17:03:16.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.589" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:16.590" starttime="20170728 17:03:16.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.592" level="INFO">${amount} = 2</msg>
<status status="PASS" endtime="20170728 17:03:16.592" starttime="20170728 17:03:16.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.595" level="INFO">${total_amount} = 50425.0</msg>
<status status="PASS" endtime="20170728 17:03:16.597" starttime="20170728 17:03:16.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.599" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:16.600" starttime="20170728 17:03:16.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.602" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:16.602" starttime="20170728 17:03:16.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.604" level="INFO">${event_code_after} = 5</msg>
<status status="PASS" endtime="20170728 17:03:16.605" starttime="20170728 17:03:16.603"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:16.605" starttime="20170728 17:03:16.516"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.607" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:16.608" starttime="20170728 17:03:16.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:16.610" level="INFO">total_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:16.610" starttime="20170728 17:03:16.609"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.614" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:16.615" starttime="20170728 17:03:16.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:16.617" level="INFO">balance_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:16.617" starttime="20170728 17:03:16.616"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:16.620" starttime="20170728 17:03:16.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:16.623" level="INFO">frozen_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:16.624" starttime="20170728 17:03:16.622"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:16.626" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:16.627" starttime="20170728 17:03:16.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:16.628" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:16.629" starttime="20170728 17:03:16.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:16.631" level="INFO">表account_amount校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:16.632" starttime="20170728 17:03:16.630"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:16.633" starttime="20170728 17:03:16.465"></status>
</kw>
<kw name="艾佳币恢复数目" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:16.640" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:16.647" starttime="20170728 17:03:16.638"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:16.649" starttime="20170728 17:03:16.637"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:16.650" starttime="20170728 17:03:16.635"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount \ SET total_amount=${database[0][2]},balance_amount=${database[0][3]},frozen_amount=${database[0][4]}where account_id="${account_id}";</arg>
</arguments>
<msg timestamp="20170728 17:03:16.652" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount  SET total_amount=50423.00,balance_amount=49595.00,frozen_amount=828.00where account_id="6273"; </msg>
<status status="PASS" endtime="20170728 17:03:16.692" starttime="20170728 17:03:16.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170728 17:03:16.694" level="INFO">成功</msg>
<status status="PASS" endtime="20170728 17:03:16.695" starttime="20170728 17:03:16.693"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:16.696" starttime="20170728 17:03:16.633"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:16.697" critical="yes" starttime="20170728 17:03:15.478"></status>
</test>
<test id="s1-s1-s5-t6" name="艾佳币&quot;关注艾佳生活志返艾佳币&quot;, 6充值">
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>100000</arg>
<arg>2</arg>
<arg>6</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.707" level="INFO">${args11} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:16.708" starttime="20170728 17:03:16.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.710" level="INFO">${args22} = 2</msg>
<status status="PASS" endtime="20170728 17:03:16.710" starttime="20170728 17:03:16.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.712" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170728 17:03:16.713" starttime="20170728 17:03:16.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.715" level="INFO">${args44} = 6</msg>
<status status="PASS" endtime="20170728 17:03:16.716" starttime="20170728 17:03:16.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.720" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</msg>
<status status="PASS" endtime="20170728 17:03:16.721" starttime="20170728 17:03:16.718"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:16.722" starttime="20170728 17:03:16.704"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 17:03:16.727" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</msg>
<status status="PASS" endtime="20170728 17:03:16.727" starttime="20170728 17:03:16.725"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 17:03:16.730" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:16.732" starttime="20170728 17:03:16.728"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:16.736" starttime="20170728 17:03:16.734"></status>
</kw>
<msg timestamp="20170728 17:03:16.737" level="INFO">${channel_no} = 2</msg>
<status status="PASS" endtime="20170728 17:03:16.738" starttime="20170728 17:03:16.733"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>user_id</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:16.741" starttime="20170728 17:03:16.740"></status>
</kw>
<msg timestamp="20170728 17:03:16.742" level="INFO">${args11_after} = user_id</msg>
<status status="PASS" endtime="20170728 17:03:16.742" starttime="20170728 17:03:16.739"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:16.747" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:16.766" starttime="20170728 17:03:16.745"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:16.768" starttime="20170728 17:03:16.744"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:16.769" starttime="20170728 17:03:16.743"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 17:03:16.772" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and channel_no='2' </msg>
<msg timestamp="20170728 17:03:16.783" level="INFO">${database1} = ((88889680, '32102151361501229990', 100000, 6273, 2, '32102151361501229990', '20170728162839GNY051613', Decimal('10.00'), 1, 2, 2, 0, datetime.datetime(2017, 7, 28, 16, 28, 42), datetime.datetime(2017...</msg>
<status status="PASS" endtime="20170728 17:03:16.784" starttime="20170728 17:03:16.771"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 17:03:16.786" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6273' </msg>
<msg timestamp="20170728 17:03:16.791" level="INFO">${database} = ((12587, 6273, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 17, 4, 22), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:16.792" starttime="20170728 17:03:16.785"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 17:03:16.795" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:16.796" starttime="20170728 17:03:16.793"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 17:03:16.799" level="INFO">${account_id} = 6273</msg>
<status status="PASS" endtime="20170728 17:03:16.799" starttime="20170728 17:03:16.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.801" level="INFO">获得account_id值为：6273</msg>
<status status="PASS" endtime="20170728 17:03:16.802" starttime="20170728 17:03:16.800"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:16.804" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:16.805" starttime="20170728 17:03:16.803"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:16.807" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:16.807" starttime="20170728 17:03:16.805"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:16.809" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:16.810" starttime="20170728 17:03:16.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.812" level="INFO">${account_id} = 6273</msg>
<status status="PASS" endtime="20170728 17:03:16.812" starttime="20170728 17:03:16.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.816" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:16.817" starttime="20170728 17:03:16.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.819" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:16.820" starttime="20170728 17:03:16.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.822" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:16.823" starttime="20170728 17:03:16.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.826" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:16.828" starttime="20170728 17:03:16.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.831" level="INFO">${channel_no} = 2</msg>
<status status="PASS" endtime="20170728 17:03:16.832" starttime="20170728 17:03:16.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.834" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:16.834" starttime="20170728 17:03:16.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.837" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</msg>
<status status="PASS" endtime="20170728 17:03:16.839" starttime="20170728 17:03:16.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.841" level="INFO">${database} = ((12587, 6273, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 17, 4, 22), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:16.842" starttime="20170728 17:03:16.840"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:16.843" starttime="20170728 17:03:16.724"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Ajb Activity Recharge" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:16.951" starttime="20170728 17:03:16.846"></status>
</kw>
<msg timestamp="20170728 17:03:16.953" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:16.954" starttime="20170728 17:03:16.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.958" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:16.959" starttime="20170728 17:03:16.956"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:16.961" starttime="20170728 17:03:16.843"></status>
</kw>
<kw name="字段验证" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:16.966" level="INFO">200</msg>
<status status="PASS" endtime="20170728 17:03:16.967" starttime="20170728 17:03:16.964"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 17:03:16.971" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:16.973" starttime="20170728 17:03:16.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 17:03:16.976" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 17:03:16.977" starttime="20170728 17:03:16.975"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 17:03:16.980" level="INFO">To JSON using : content={"data":{"orderNum":"32102151361501230551"},"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 17:03:16.981" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 17:03:16.981" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': {u'orderNum': u'32102151361501230551'}, u'success': True}</msg>
<status status="PASS" endtime="20170728 17:03:16.984" starttime="20170728 17:03:16.979"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 17:03:16.986" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:16.987" starttime="20170728 17:03:16.985"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:16.990" starttime="20170728 17:03:16.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:16.992" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:16.992" starttime="20170728 17:03:16.991"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<assign>
<var>@{Link1}</var>
</assign>
<msg timestamp="20170728 17:03:16.994" level="INFO">@{Link1} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:16.995" starttime="20170728 17:03:16.993"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>"${value}" in @{Link1}</arg>
<arg>Get From Dictionary</arg>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${orderNum}</var>
</assign>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:16.999" starttime="20170728 17:03:16.997"></status>
</kw>
<msg timestamp="20170728 17:03:17.001" level="INFO">${orderNum} = 32102151361501230551</msg>
<status status="PASS" endtime="20170728 17:03:17.001" starttime="20170728 17:03:16.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<msg timestamp="20170728 17:03:17.004" level="INFO">${orderNum} = 32102151361501230551</msg>
<status status="PASS" endtime="20170728 17:03:17.004" starttime="20170728 17:03:17.003"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:17.005" starttime="20170728 17:03:16.962"></status>
</kw>
<kw name="表ajb_account_open_record的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_open_record</arg>
</arguments>
<msg timestamp="20170728 17:03:17.008" level="INFO">现在开始校验表ajb_account_open_record</msg>
<status status="PASS" endtime="20170728 17:03:17.009" starttime="20170728 17:03:17.007"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:17.018" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:17.028" starttime="20170728 17:03:17.016"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:17.029" starttime="20170728 17:03:17.013"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:17.031" starttime="20170728 17:03:17.010"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:17.033" level="INFO">Executing : Query  |  select * from ajb_account_open_record where account_id ='6273' </msg>
<msg timestamp="20170728 17:03:17.041" level="INFO">${user_id} = ((100000000010L, '32102151361501206852', 100000, 6273, 2, 2, 0, datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 10, 46, 53)),)</msg>
<status status="PASS" endtime="20170728 17:03:17.042" starttime="20170728 17:03:17.032"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:17.044" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:17.045" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:17.046" starttime="20170728 17:03:17.043"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:17.050" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:17.052" starttime="20170728 17:03:17.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:17.054" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:17.054" starttime="20170728 17:03:17.053"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:03:17.057" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:17.058" starttime="20170728 17:03:17.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:03:17.059" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:03:17.060" starttime="20170728 17:03:17.058"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:17.065" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:17.066" starttime="20170728 17:03:17.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no正确反映艾佳币账户渠道</arg>
</arguments>
<msg timestamp="20170728 17:03:17.068" level="INFO">channel_no正确反映艾佳币账户渠道</msg>
<status status="PASS" endtime="20170728 17:03:17.069" starttime="20170728 17:03:17.068"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 17:03:17.071" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:17.072" starttime="20170728 17:03:17.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>status的值为2,表示生效，是正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:17.075" level="INFO">status的值为2,表示生效，是正确的</msg>
<status status="PASS" endtime="20170728 17:03:17.076" starttime="20170728 17:03:17.073"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:17.078" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:17.080" starttime="20170728 17:03:17.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:17.082" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:17.083" starttime="20170728 17:03:17.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表里面的add_time和update_time的时间是一致的。校验正确。</arg>
</arguments>
<msg timestamp="20170728 17:03:17.084" level="INFO">表里面的add_time和update_time的时间是一致的。校验正确。</msg>
<status status="PASS" endtime="20170728 17:03:17.085" starttime="20170728 17:03:17.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_open_record的校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:17.087" level="INFO">表ajb_account_open_record的校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:17.088" starttime="20170728 17:03:17.086"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:17.089" starttime="20170728 17:03:17.006"></status>
</kw>
<kw name="表account_unilateral_bill的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_unilateral_bill</arg>
</arguments>
<msg timestamp="20170728 17:03:17.095" level="INFO">现在开始校验表account_unilateral_bill</msg>
<status status="PASS" endtime="20170728 17:03:17.096" starttime="20170728 17:03:17.093"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:17.102" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:17.110" starttime="20170728 17:03:17.101"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:17.111" starttime="20170728 17:03:17.099"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:17.112" starttime="20170728 17:03:17.097"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>account_unilateral_bill</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:17.118" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:17.125" starttime="20170728 17:03:17.117"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:17.126" starttime="20170728 17:03:17.116"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:17.127" starttime="20170728 17:03:17.115"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:03:17.129" level="INFO">${current_time} = 2017-07-28 17:03:17.129</msg>
<status status="PASS" endtime="20170728 17:03:17.130" starttime="20170728 17:03:17.128"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>0 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:17.132" level="INFO">${current_time_before_30} = 2017-07-28 17:03:17.129</msg>
<status status="PASS" endtime="20170728 17:03:17.133" starttime="20170728 17:03:17.131"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:17.136" level="INFO">${current_time_after_30} = 2017-07-28 17:04:57.129</msg>
<status status="PASS" endtime="20170728 17:03:17.137" starttime="20170728 17:03:17.134"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 17:03:17.140" level="INFO">Executing : Query  |  select * from account_unilateral_bill where user_id='100000' and update_time between' 2017-07-28 17:03:17.129' and '2017-07-28 17:04:57.129' </msg>
<msg timestamp="20170728 17:03:17.149" level="INFO">${updatetime} = ((7721, '32102151361501230555', 100000, 6273, '32102151361501230552', 1, 6, 3, Decimal('2.00'), None, datetime.datetime(2017, 7, 28, 17, 4, 22), datetime.datetime(2017, 7, 28, 17, 4, 22), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:17.150" starttime="20170728 17:03:17.138"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 17:03:17.151" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 17:03:17.152" starttime="20170728 17:03:17.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 17:03:17.154" level="INFO">account_unilateral_bill表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 17:03:17.155" starttime="20170728 17:03:17.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:17.158" level="INFO">${current_time_before_30} = 2017-07-28 17:03:17.129</msg>
<status status="PASS" endtime="20170728 17:03:17.158" starttime="20170728 17:03:17.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:17.160" level="INFO">${current_time_after_30} = 2017-07-28 17:04:57.129</msg>
<status status="PASS" endtime="20170728 17:03:17.161" starttime="20170728 17:03:17.159"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:17.162" starttime="20170728 17:03:17.114"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id} 'and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:17.165" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6273 'and update_time between' 2017-07-28 17:03:17.129' and '2017-07-28 17:04:57.129' </msg>
<msg timestamp="20170728 17:03:17.178" level="INFO">${user_id} = ((7721, '32102151361501230555', 100000, 6273, '32102151361501230552', 1, 6, 3, Decimal('2.00'), None, datetime.datetime(2017, 7, 28, 17, 4, 22), datetime.datetime(2017, 7, 28, 17, 4, 22), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:17.180" starttime="20170728 17:03:17.164"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:17.184" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:17.185" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:17.186" starttime="20170728 17:03:17.182"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:17.189" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:17.190" starttime="20170728 17:03:17.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:17.192" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:17.192" starttime="20170728 17:03:17.191"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:17.194" starttime="20170728 17:03:17.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:03:17.198" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:03:17.199" starttime="20170728 17:03:17.195"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:17.202" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:17.203" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:17.204" starttime="20170728 17:03:17.200"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:17.206" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:17.206" starttime="20170728 17:03:17.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:17.208" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:17.209" starttime="20170728 17:03:17.207"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:03:17.210" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:17.211" starttime="20170728 17:03:17.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 17:03:17.214" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 17:03:17.215" starttime="20170728 17:03:17.212"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>7</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:17.222" starttime="20170728 17:03:17.221"></status>
</kw>
<msg timestamp="20170728 17:03:17.223" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:03:17.223" starttime="20170728 17:03:17.217"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:03:17.225" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:03:17.226" starttime="20170728 17:03:17.224"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:17.231" starttime="20170728 17:03:17.229"></status>
</kw>
<msg timestamp="20170728 17:03:17.233" level="INFO">${event_code_after} = 6</msg>
<status status="PASS" endtime="20170728 17:03:17.234" starttime="20170728 17:03:17.227"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:03:17.237" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:17.238" starttime="20170728 17:03:17.236"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:17.241" starttime="20170728 17:03:17.240"></status>
</kw>
<msg timestamp="20170728 17:03:17.242" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:03:17.243" starttime="20170728 17:03:17.238"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:17.248" starttime="20170728 17:03:17.247"></status>
</kw>
<msg timestamp="20170728 17:03:17.249" level="INFO">${amount} = 2</msg>
<status status="PASS" endtime="20170728 17:03:17.250" starttime="20170728 17:03:17.245"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:03:17.252" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:03:17.252" starttime="20170728 17:03:17.251"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:17.255" starttime="20170728 17:03:17.254"></status>
</kw>
<msg timestamp="20170728 17:03:17.256" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:17.257" starttime="20170728 17:03:17.253"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:17.262" starttime="20170728 17:03:17.260"></status>
</kw>
<msg timestamp="20170728 17:03:17.263" level="INFO">${total_amount} = 50425.0</msg>
<status status="PASS" endtime="20170728 17:03:17.265" starttime="20170728 17:03:17.257"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:17.270" starttime="20170728 17:03:17.269"></status>
</kw>
<msg timestamp="20170728 17:03:17.271" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:17.271" starttime="20170728 17:03:17.266"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:17.277" starttime="20170728 17:03:17.275"></status>
</kw>
<msg timestamp="20170728 17:03:17.279" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:17.280" starttime="20170728 17:03:17.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:17.282" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:03:17.283" starttime="20170728 17:03:17.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:17.285" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:03:17.285" starttime="20170728 17:03:17.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:17.287" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:17.289" starttime="20170728 17:03:17.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:17.291" level="INFO">${amount} = 2</msg>
<status status="PASS" endtime="20170728 17:03:17.291" starttime="20170728 17:03:17.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:17.295" level="INFO">${total_amount} = 50425.0</msg>
<status status="PASS" endtime="20170728 17:03:17.296" starttime="20170728 17:03:17.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:17.299" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:17.299" starttime="20170728 17:03:17.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:17.301" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:17.302" starttime="20170728 17:03:17.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:17.304" level="INFO">${event_code_after} = 6</msg>
<status status="PASS" endtime="20170728 17:03:17.304" starttime="20170728 17:03:17.303"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:17.305" starttime="20170728 17:03:17.216"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:17.308" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:17.309" starttime="20170728 17:03:17.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:17.311" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 17:03:17.312" starttime="20170728 17:03:17.310"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:17.314" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:17.315" starttime="20170728 17:03:17.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:17.316" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170728 17:03:17.317" starttime="20170728 17:03:17.316"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:17.319" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:17.320" starttime="20170728 17:03:17.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:17.322" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 17:03:17.323" starttime="20170728 17:03:17.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 17:03:17.326" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 17:03:17.327" starttime="20170728 17:03:17.324"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:17.330" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:17.331" starttime="20170728 17:03:17.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:17.333" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:17.334" starttime="20170728 17:03:17.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:17.337" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170728 17:03:17.337" starttime="20170728 17:03:17.336"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_unilateral}</var>
</assign>
<msg timestamp="20170728 17:03:17.340" level="INFO">${user_id[0][0]_unilateral} = 7721</msg>
<status status="PASS" endtime="20170728 17:03:17.341" starttime="20170728 17:03:17.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_unilateral}</arg>
</arguments>
<msg timestamp="20170728 17:03:17.343" level="INFO">${user_id[0][0]_unilateral} = 7721</msg>
<status status="PASS" endtime="20170728 17:03:17.344" starttime="20170728 17:03:17.342"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]_unilateral}'</arg>
</arguments>
<msg timestamp="20170728 17:03:17.347" level="INFO">Executing : Execute SQL String  |  delete from account_unilateral_bill where id ='7721' </msg>
<status status="PASS" endtime="20170728 17:03:17.537" starttime="20170728 17:03:17.345"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:17.540" starttime="20170728 17:03:17.091"></status>
</kw>
<kw name="表ajb_account_transaction" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170728 17:03:17.550" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170728 17:03:17.551" starttime="20170728 17:03:17.547"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:17.559" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:17.573" starttime="20170728 17:03:17.556"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:17.575" starttime="20170728 17:03:17.554"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:17.576" starttime="20170728 17:03:17.552"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>ajb_account_transaction</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:17.586" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:17.597" starttime="20170728 17:03:17.584"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:17.598" starttime="20170728 17:03:17.583"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:17.599" starttime="20170728 17:03:17.581"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:03:17.601" level="INFO">${current_time} = 2017-07-28 17:03:17.601</msg>
<status status="PASS" endtime="20170728 17:03:17.601" starttime="20170728 17:03:17.600"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>0 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:17.603" level="INFO">${current_time_before_30} = 2017-07-28 17:03:17.601</msg>
<status status="PASS" endtime="20170728 17:03:17.604" starttime="20170728 17:03:17.602"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:17.606" level="INFO">${current_time_after_30} = 2017-07-28 17:04:57.601</msg>
<status status="PASS" endtime="20170728 17:03:17.607" starttime="20170728 17:03:17.605"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 17:03:17.610" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and update_time between' 2017-07-28 17:03:17.601' and '2017-07-28 17:04:57.601' </msg>
<msg timestamp="20170728 17:03:17.622" level="INFO">${updatetime} = ((88889803, '32102151361501230551', 100000, 6273, 2, '32102151361501230551', '20170728170419DIA051706', Decimal('2.00'), 1, 6, 2, 0, datetime.datetime(2017, 7, 28, 17, 4, 22), datetime.datetime(2017, ...</msg>
<status status="PASS" endtime="20170728 17:03:17.623" starttime="20170728 17:03:17.608"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 17:03:17.625" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 17:03:17.626" starttime="20170728 17:03:17.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 17:03:17.630" level="INFO">ajb_account_transaction表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 17:03:17.631" starttime="20170728 17:03:17.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:17.633" level="INFO">${current_time_before_30} = 2017-07-28 17:03:17.601</msg>
<status status="PASS" endtime="20170728 17:03:17.635" starttime="20170728 17:03:17.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:17.638" level="INFO">${current_time_after_30} = 2017-07-28 17:04:57.601</msg>
<status status="PASS" endtime="20170728 17:03:17.639" starttime="20170728 17:03:17.637"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:17.640" starttime="20170728 17:03:17.579"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:17.643" level="INFO">Executing : Query  |  select * from ajb_account_transaction where account_id ='6273' and update_time between' 2017-07-28 17:03:17.601' and '2017-07-28 17:04:57.601' </msg>
<msg timestamp="20170728 17:03:17.655" level="INFO">${user_id} = ((88889803, '32102151361501230551', 100000, 6273, 2, '32102151361501230551', '20170728170419DIA051706', Decimal('2.00'), 1, 6, 2, 0, datetime.datetime(2017, 7, 28, 17, 4, 22), datetime.datetime(2017, ...</msg>
<status status="PASS" endtime="20170728 17:03:17.656" starttime="20170728 17:03:17.641"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:17.658" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:17.659" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:17.659" starttime="20170728 17:03:17.657"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:17.661" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:17.662" starttime="20170728 17:03:17.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:17.664" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:17.665" starttime="20170728 17:03:17.663"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:17.669" starttime="20170728 17:03:17.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:03:17.672" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:03:17.672" starttime="20170728 17:03:17.671"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:17.674" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:17.676" starttime="20170728 17:03:17.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no的值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:17.678" level="INFO">channel_no的值正确</msg>
<status status="PASS" endtime="20170728 17:03:17.679" starttime="20170728 17:03:17.677"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${args11}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${orderNum}</arg>
</arguments>
<assign>
<var>${bill_order_num}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:17.684" starttime="20170728 17:03:17.682"></status>
</kw>
<msg timestamp="20170728 17:03:17.685" level="INFO">${bill_order_num} = 32102151361501230551</msg>
<status status="PASS" endtime="20170728 17:03:17.686" starttime="20170728 17:03:17.680"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>${bill_order_num}</arg>
</arguments>
<msg timestamp="20170728 17:03:17.688" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:17.689" starttime="20170728 17:03:17.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170728 17:03:17.691" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170728 17:03:17.692" starttime="20170728 17:03:17.690"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>7</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:17.699" starttime="20170728 17:03:17.697"></status>
</kw>
<msg timestamp="20170728 17:03:17.700" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:03:17.701" starttime="20170728 17:03:17.694"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:03:17.703" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:03:17.704" starttime="20170728 17:03:17.702"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:17.709" starttime="20170728 17:03:17.708"></status>
</kw>
<msg timestamp="20170728 17:03:17.710" level="INFO">${event_code_after} = 6</msg>
<status status="PASS" endtime="20170728 17:03:17.710" starttime="20170728 17:03:17.706"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:03:17.714" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:17.715" starttime="20170728 17:03:17.712"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:17.718" starttime="20170728 17:03:17.717"></status>
</kw>
<msg timestamp="20170728 17:03:17.719" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:03:17.720" starttime="20170728 17:03:17.716"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:17.724" starttime="20170728 17:03:17.723"></status>
</kw>
<msg timestamp="20170728 17:03:17.725" level="INFO">${amount} = 2</msg>
<status status="PASS" endtime="20170728 17:03:17.726" starttime="20170728 17:03:17.721"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:03:17.729" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:03:17.730" starttime="20170728 17:03:17.728"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:17.734" starttime="20170728 17:03:17.733"></status>
</kw>
<msg timestamp="20170728 17:03:17.735" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:17.735" starttime="20170728 17:03:17.731"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:17.739" starttime="20170728 17:03:17.738"></status>
</kw>
<msg timestamp="20170728 17:03:17.740" level="INFO">${total_amount} = 50425.0</msg>
<status status="PASS" endtime="20170728 17:03:17.741" starttime="20170728 17:03:17.736"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:17.746" starttime="20170728 17:03:17.744"></status>
</kw>
<msg timestamp="20170728 17:03:17.747" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:17.747" starttime="20170728 17:03:17.742"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:17.753" starttime="20170728 17:03:17.751"></status>
</kw>
<msg timestamp="20170728 17:03:17.754" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:17.754" starttime="20170728 17:03:17.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:17.756" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:03:17.757" starttime="20170728 17:03:17.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:17.759" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:03:17.759" starttime="20170728 17:03:17.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:17.763" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:17.765" starttime="20170728 17:03:17.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:17.767" level="INFO">${amount} = 2</msg>
<status status="PASS" endtime="20170728 17:03:17.768" starttime="20170728 17:03:17.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:17.770" level="INFO">${total_amount} = 50425.0</msg>
<status status="PASS" endtime="20170728 17:03:17.771" starttime="20170728 17:03:17.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:17.773" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:17.773" starttime="20170728 17:03:17.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:17.777" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:17.778" starttime="20170728 17:03:17.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:17.781" level="INFO">${event_code_after} = 6</msg>
<status status="PASS" endtime="20170728 17:03:17.782" starttime="20170728 17:03:17.780"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:17.783" starttime="20170728 17:03:17.693"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170728 17:03:17.785" level="INFO">${pay_no_after} = 20170728170419DIA051706</msg>
<status status="PASS" endtime="20170728 17:03:17.785" starttime="20170728 17:03:17.784"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170728 17:03:17.787" level="INFO">Length is 23</msg>
<msg timestamp="20170728 17:03:17.788" level="INFO">${pay_no_after_length} = 23</msg>
<status status="PASS" endtime="20170728 17:03:17.789" starttime="20170728 17:03:17.786"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:17.791" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:17.792" starttime="20170728 17:03:17.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170728 17:03:17.796" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170728 17:03:17.797" starttime="20170728 17:03:17.794"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:17.800" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:17.800" starttime="20170728 17:03:17.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:17.802" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 17:03:17.803" starttime="20170728 17:03:17.801"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:03:17.805" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:17.805" starttime="20170728 17:03:17.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 17:03:17.807" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 17:03:17.808" starttime="20170728 17:03:17.806"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][9]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:17.809" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:17.811" starttime="20170728 17:03:17.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:17.814" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 17:03:17.814" starttime="20170728 17:03:17.812"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 17:03:17.816" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:17.817" starttime="20170728 17:03:17.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170728 17:03:17.819" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170728 17:03:17.820" starttime="20170728 17:03:17.818"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:17.823" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:17.824" starttime="20170728 17:03:17.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:17.827" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:17.829" starttime="20170728 17:03:17.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 17:03:17.831" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 17:03:17.832" starttime="20170728 17:03:17.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:17.834" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170728 17:03:17.834" starttime="20170728 17:03:17.833"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170728 17:03:17.837" level="INFO">${user_id[0][0]_transaction} = 88889803</msg>
<status status="PASS" endtime="20170728 17:03:17.838" starttime="20170728 17:03:17.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170728 17:03:17.841" level="INFO">${user_id[0][0]_transaction} = 88889803</msg>
<status status="PASS" endtime="20170728 17:03:17.842" starttime="20170728 17:03:17.839"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id[0][0]}'</arg>
</arguments>
<assign>
<var>${user_id_unilateral_delete1}</var>
</assign>
<msg timestamp="20170728 17:03:17.845" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88889803' </msg>
<msg timestamp="20170728 17:03:17.905" level="INFO">${user_id_unilateral_delete1} = None</msg>
<status status="PASS" endtime="20170728 17:03:17.906" starttime="20170728 17:03:17.843"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:17.907" starttime="20170728 17:03:17.542"></status>
</kw>
<kw name="表account_amount的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_amount</arg>
</arguments>
<msg timestamp="20170728 17:03:17.909" level="INFO">现在开始校验表account_amount</msg>
<status status="PASS" endtime="20170728 17:03:17.910" starttime="20170728 17:03:17.909"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:17.915" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:17.932" starttime="20170728 17:03:17.914"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:17.933" starttime="20170728 17:03:17.912"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:17.935" starttime="20170728 17:03:17.911"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time1}</var>
</assign>
<msg timestamp="20170728 17:03:17.938" level="INFO">${current_time1} = 2017-07-28 17:03:17.938</msg>
<status status="PASS" endtime="20170728 17:03:17.939" starttime="20170728 17:03:17.937"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:17.942" level="INFO">${current_time1_before_30} = 2017-07-28 17:02:17.938</msg>
<status status="PASS" endtime="20170728 17:03:17.943" starttime="20170728 17:03:17.940"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:17.945" level="INFO">${current_time1_after_30} = 2017-07-28 17:04:17.938</msg>
<status status="PASS" endtime="20170728 17:03:17.946" starttime="20170728 17:03:17.944"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:17.949" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6273' </msg>
<msg timestamp="20170728 17:03:17.953" level="INFO">${user_id} = ((12587, 6273, Decimal('50425.00'), Decimal('49597.00'), Decimal('828.00'), datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 17, 4, 22), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:17.954" starttime="20170728 17:03:17.948"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>7</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:17.960" starttime="20170728 17:03:17.959"></status>
</kw>
<msg timestamp="20170728 17:03:17.961" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:03:17.962" starttime="20170728 17:03:17.956"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:03:17.965" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:03:17.966" starttime="20170728 17:03:17.963"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:17.970" starttime="20170728 17:03:17.969"></status>
</kw>
<msg timestamp="20170728 17:03:17.970" level="INFO">${event_code_after} = 6</msg>
<status status="PASS" endtime="20170728 17:03:17.971" starttime="20170728 17:03:17.967"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:03:17.973" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:17.973" starttime="20170728 17:03:17.972"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:17.978" starttime="20170728 17:03:17.977"></status>
</kw>
<msg timestamp="20170728 17:03:17.980" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:03:17.980" starttime="20170728 17:03:17.975"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:17.985" starttime="20170728 17:03:17.983"></status>
</kw>
<msg timestamp="20170728 17:03:17.986" level="INFO">${amount} = 2</msg>
<status status="PASS" endtime="20170728 17:03:17.988" starttime="20170728 17:03:17.981"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:03:17.991" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:03:17.991" starttime="20170728 17:03:17.989"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:17.997" starttime="20170728 17:03:17.994"></status>
</kw>
<msg timestamp="20170728 17:03:17.998" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:17.999" starttime="20170728 17:03:17.992"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:18.003" starttime="20170728 17:03:18.002"></status>
</kw>
<msg timestamp="20170728 17:03:18.004" level="INFO">${total_amount} = 50425.0</msg>
<status status="PASS" endtime="20170728 17:03:18.004" starttime="20170728 17:03:18.000"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:18.009" starttime="20170728 17:03:18.007"></status>
</kw>
<msg timestamp="20170728 17:03:18.010" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:18.010" starttime="20170728 17:03:18.005"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:18.016" starttime="20170728 17:03:18.015"></status>
</kw>
<msg timestamp="20170728 17:03:18.017" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:18.018" starttime="20170728 17:03:18.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:18.020" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:03:18.021" starttime="20170728 17:03:18.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:18.023" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:03:18.024" starttime="20170728 17:03:18.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:18.026" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:18.027" starttime="20170728 17:03:18.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:18.030" level="INFO">${amount} = 2</msg>
<status status="PASS" endtime="20170728 17:03:18.032" starttime="20170728 17:03:18.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:18.035" level="INFO">${total_amount} = 50425.0</msg>
<status status="PASS" endtime="20170728 17:03:18.035" starttime="20170728 17:03:18.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:18.038" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:18.039" starttime="20170728 17:03:18.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:18.042" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:18.042" starttime="20170728 17:03:18.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:18.044" level="INFO">${event_code_after} = 6</msg>
<status status="PASS" endtime="20170728 17:03:18.046" starttime="20170728 17:03:18.043"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:18.046" starttime="20170728 17:03:17.955"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:18.049" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:18.049" starttime="20170728 17:03:18.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:18.051" level="INFO">total_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:18.052" starttime="20170728 17:03:18.050"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:18.054" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:18.055" starttime="20170728 17:03:18.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:18.057" level="INFO">balance_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:18.058" starttime="20170728 17:03:18.056"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:18.060" starttime="20170728 17:03:18.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:18.062" level="INFO">frozen_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:18.063" starttime="20170728 17:03:18.061"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:18.065" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:18.066" starttime="20170728 17:03:18.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:18.067" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:18.068" starttime="20170728 17:03:18.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:18.069" level="INFO">表account_amount校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:18.070" starttime="20170728 17:03:18.069"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:18.071" starttime="20170728 17:03:17.908"></status>
</kw>
<kw name="艾佳币恢复数目" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:18.080" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:18.087" starttime="20170728 17:03:18.078"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:18.089" starttime="20170728 17:03:18.075"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:18.090" starttime="20170728 17:03:18.074"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount \ SET total_amount=${database[0][2]},balance_amount=${database[0][3]},frozen_amount=${database[0][4]}where account_id="${account_id}";</arg>
</arguments>
<msg timestamp="20170728 17:03:18.093" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount  SET total_amount=50423.00,balance_amount=49595.00,frozen_amount=828.00where account_id="6273"; </msg>
<status status="PASS" endtime="20170728 17:03:18.135" starttime="20170728 17:03:18.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170728 17:03:18.137" level="INFO">成功</msg>
<status status="PASS" endtime="20170728 17:03:18.138" starttime="20170728 17:03:18.136"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:18.139" starttime="20170728 17:03:18.072"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:18.140" critical="yes" starttime="20170728 17:03:16.700"></status>
</test>
<test id="s1-s1-s5-t7" name="输入已有的user_id和amount数目为0参数">
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>100000</arg>
<arg>0</arg>
<arg>1</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:03:18.149" level="INFO">${args11} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:18.149" starttime="20170728 17:03:18.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:03:18.152" level="INFO">${args22} = 0</msg>
<status status="PASS" endtime="20170728 17:03:18.153" starttime="20170728 17:03:18.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 17:03:18.155" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170728 17:03:18.156" starttime="20170728 17:03:18.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 17:03:18.158" level="INFO">${args44} = 1</msg>
<status status="PASS" endtime="20170728 17:03:18.158" starttime="20170728 17:03:18.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 17:03:18.160" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</msg>
<status status="PASS" endtime="20170728 17:03:18.160" starttime="20170728 17:03:18.159"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:18.161" starttime="20170728 17:03:18.145"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 17:03:18.165" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</msg>
<status status="PASS" endtime="20170728 17:03:18.166" starttime="20170728 17:03:18.164"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 17:03:18.168" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:18.168" starttime="20170728 17:03:18.167"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:18.172" starttime="20170728 17:03:18.170"></status>
</kw>
<msg timestamp="20170728 17:03:18.173" level="INFO">${channel_no} = 2</msg>
<status status="PASS" endtime="20170728 17:03:18.174" starttime="20170728 17:03:18.169"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>user_id</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:18.180" starttime="20170728 17:03:18.178"></status>
</kw>
<msg timestamp="20170728 17:03:18.181" level="INFO">${args11_after} = user_id</msg>
<status status="PASS" endtime="20170728 17:03:18.182" starttime="20170728 17:03:18.176"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:18.188" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:18.198" starttime="20170728 17:03:18.186"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:18.199" starttime="20170728 17:03:18.184"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:18.201" starttime="20170728 17:03:18.182"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 17:03:18.203" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and channel_no='2' </msg>
<msg timestamp="20170728 17:03:18.213" level="INFO">${database1} = ((88889680, '32102151361501229990', 100000, 6273, 2, '32102151361501229990', '20170728162839GNY051613', Decimal('10.00'), 1, 2, 2, 0, datetime.datetime(2017, 7, 28, 16, 28, 42), datetime.datetime(2017...</msg>
<status status="PASS" endtime="20170728 17:03:18.214" starttime="20170728 17:03:18.202"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 17:03:18.216" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6273' </msg>
<msg timestamp="20170728 17:03:18.222" level="INFO">${database} = ((12587, 6273, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 17, 4, 23), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:18.223" starttime="20170728 17:03:18.215"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 17:03:18.226" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:18.227" starttime="20170728 17:03:18.224"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 17:03:18.230" level="INFO">${account_id} = 6273</msg>
<status status="PASS" endtime="20170728 17:03:18.231" starttime="20170728 17:03:18.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:18.233" level="INFO">获得account_id值为：6273</msg>
<status status="PASS" endtime="20170728 17:03:18.233" starttime="20170728 17:03:18.232"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:18.236" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:18.237" starttime="20170728 17:03:18.235"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:18.239" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:18.239" starttime="20170728 17:03:18.238"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:18.242" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:18.242" starttime="20170728 17:03:18.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:18.246" level="INFO">${account_id} = 6273</msg>
<status status="PASS" endtime="20170728 17:03:18.247" starttime="20170728 17:03:18.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 17:03:18.249" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:18.250" starttime="20170728 17:03:18.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:18.252" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:18.252" starttime="20170728 17:03:18.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:18.254" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:18.255" starttime="20170728 17:03:18.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:18.257" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:18.257" starttime="20170728 17:03:18.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:18.260" level="INFO">${channel_no} = 2</msg>
<status status="PASS" endtime="20170728 17:03:18.261" starttime="20170728 17:03:18.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 17:03:18.264" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:18.265" starttime="20170728 17:03:18.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 17:03:18.267" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</msg>
<status status="PASS" endtime="20170728 17:03:18.269" starttime="20170728 17:03:18.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170728 17:03:18.271" level="INFO">${database} = ((12587, 6273, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 17, 4, 23), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:18.271" starttime="20170728 17:03:18.270"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:18.272" starttime="20170728 17:03:18.163"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Ajb Activity Recharge" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:18.395" starttime="20170728 17:03:18.279"></status>
</kw>
<msg timestamp="20170728 17:03:18.397" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:18.398" starttime="20170728 17:03:18.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 17:03:18.402" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:18.403" starttime="20170728 17:03:18.400"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:18.405" starttime="20170728 17:03:18.273"></status>
</kw>
<kw name="字段验证" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:18.411" level="INFO">200</msg>
<status status="PASS" endtime="20170728 17:03:18.413" starttime="20170728 17:03:18.409"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 17:03:18.416" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:18.417" starttime="20170728 17:03:18.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 17:03:18.420" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 17:03:18.422" starttime="20170728 17:03:18.419"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 17:03:18.424" level="INFO">To JSON using : content={"data":{"orderNum":"32102151361501230556"},"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 17:03:18.425" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 17:03:18.426" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': {u'orderNum': u'32102151361501230556'}, u'success': True}</msg>
<status status="PASS" endtime="20170728 17:03:18.426" starttime="20170728 17:03:18.423"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 17:03:18.429" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:18.431" starttime="20170728 17:03:18.427"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:18.435" starttime="20170728 17:03:18.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:18.437" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:18.438" starttime="20170728 17:03:18.436"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<assign>
<var>@{Link1}</var>
</assign>
<msg timestamp="20170728 17:03:18.440" level="INFO">@{Link1} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:18.440" starttime="20170728 17:03:18.439"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>"${value}" in @{Link1}</arg>
<arg>Get From Dictionary</arg>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${orderNum}</var>
</assign>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:18.444" starttime="20170728 17:03:18.442"></status>
</kw>
<msg timestamp="20170728 17:03:18.445" level="INFO">${orderNum} = 32102151361501230556</msg>
<status status="PASS" endtime="20170728 17:03:18.446" starttime="20170728 17:03:18.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<msg timestamp="20170728 17:03:18.449" level="INFO">${orderNum} = 32102151361501230556</msg>
<status status="PASS" endtime="20170728 17:03:18.450" starttime="20170728 17:03:18.448"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:18.451" starttime="20170728 17:03:18.407"></status>
</kw>
<kw name="表ajb_account_open_record的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_open_record</arg>
</arguments>
<msg timestamp="20170728 17:03:18.455" level="INFO">现在开始校验表ajb_account_open_record</msg>
<status status="PASS" endtime="20170728 17:03:18.456" starttime="20170728 17:03:18.453"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:18.460" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:18.469" starttime="20170728 17:03:18.459"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:18.470" starttime="20170728 17:03:18.457"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:18.471" starttime="20170728 17:03:18.457"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:18.473" level="INFO">Executing : Query  |  select * from ajb_account_open_record where account_id ='6273' </msg>
<msg timestamp="20170728 17:03:18.481" level="INFO">${user_id} = ((100000000010L, '32102151361501206852', 100000, 6273, 2, 2, 0, datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 10, 46, 53)),)</msg>
<status status="PASS" endtime="20170728 17:03:18.482" starttime="20170728 17:03:18.472"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:18.484" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:18.485" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:18.485" starttime="20170728 17:03:18.483"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:18.487" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:18.488" starttime="20170728 17:03:18.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:18.490" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:18.491" starttime="20170728 17:03:18.489"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:03:18.494" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:18.495" starttime="20170728 17:03:18.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:03:18.498" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:03:18.499" starttime="20170728 17:03:18.497"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:18.501" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:18.501" starttime="20170728 17:03:18.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no正确反映艾佳币账户渠道</arg>
</arguments>
<msg timestamp="20170728 17:03:18.503" level="INFO">channel_no正确反映艾佳币账户渠道</msg>
<status status="PASS" endtime="20170728 17:03:18.504" starttime="20170728 17:03:18.502"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 17:03:18.506" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:18.507" starttime="20170728 17:03:18.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>status的值为2,表示生效，是正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:18.510" level="INFO">status的值为2,表示生效，是正确的</msg>
<status status="PASS" endtime="20170728 17:03:18.511" starttime="20170728 17:03:18.508"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:18.514" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:18.515" starttime="20170728 17:03:18.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:18.517" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:18.518" starttime="20170728 17:03:18.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表里面的add_time和update_time的时间是一致的。校验正确。</arg>
</arguments>
<msg timestamp="20170728 17:03:18.520" level="INFO">表里面的add_time和update_time的时间是一致的。校验正确。</msg>
<status status="PASS" endtime="20170728 17:03:18.520" starttime="20170728 17:03:18.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_open_record的校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:18.522" level="INFO">表ajb_account_open_record的校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:18.522" starttime="20170728 17:03:18.521"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:18.523" starttime="20170728 17:03:18.452"></status>
</kw>
<kw name="表account_unilateral_bill的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_unilateral_bill</arg>
</arguments>
<msg timestamp="20170728 17:03:18.528" level="INFO">现在开始校验表account_unilateral_bill</msg>
<status status="PASS" endtime="20170728 17:03:18.529" starttime="20170728 17:03:18.526"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:18.533" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:18.540" starttime="20170728 17:03:18.532"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:18.541" starttime="20170728 17:03:18.531"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:18.542" starttime="20170728 17:03:18.530"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>account_unilateral_bill</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:18.551" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:18.558" starttime="20170728 17:03:18.550"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:18.559" starttime="20170728 17:03:18.548"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:18.560" starttime="20170728 17:03:18.547"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:03:18.563" level="INFO">${current_time} = 2017-07-28 17:03:18.563</msg>
<status status="PASS" endtime="20170728 17:03:18.564" starttime="20170728 17:03:18.561"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>0 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:18.566" level="INFO">${current_time_before_30} = 2017-07-28 17:03:18.563</msg>
<status status="PASS" endtime="20170728 17:03:18.567" starttime="20170728 17:03:18.565"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:18.569" level="INFO">${current_time_after_30} = 2017-07-28 17:04:58.563</msg>
<status status="PASS" endtime="20170728 17:03:18.570" starttime="20170728 17:03:18.568"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 17:03:18.574" level="INFO">Executing : Query  |  select * from account_unilateral_bill where user_id='100000' and update_time between' 2017-07-28 17:03:18.563' and '2017-07-28 17:04:58.563' </msg>
<msg timestamp="20170728 17:03:18.584" level="INFO">${updatetime} = ((7724, '32102151361501230560', 100000, 6273, '32102151361501230557', 1, 1, 3, Decimal('0.00'), None, datetime.datetime(2017, 7, 28, 17, 4, 23), datetime.datetime(2017, 7, 28, 17, 4, 23), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:18.585" starttime="20170728 17:03:18.572"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 17:03:18.587" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 17:03:18.589" starttime="20170728 17:03:18.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 17:03:18.592" level="INFO">account_unilateral_bill表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 17:03:18.593" starttime="20170728 17:03:18.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:18.596" level="INFO">${current_time_before_30} = 2017-07-28 17:03:18.563</msg>
<status status="PASS" endtime="20170728 17:03:18.597" starttime="20170728 17:03:18.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:18.599" level="INFO">${current_time_after_30} = 2017-07-28 17:04:58.563</msg>
<status status="PASS" endtime="20170728 17:03:18.600" starttime="20170728 17:03:18.598"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:18.600" starttime="20170728 17:03:18.543"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id} 'and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:18.602" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6273 'and update_time between' 2017-07-28 17:03:18.563' and '2017-07-28 17:04:58.563' </msg>
<msg timestamp="20170728 17:03:18.608" level="INFO">${user_id} = ((7724, '32102151361501230560', 100000, 6273, '32102151361501230557', 1, 1, 3, Decimal('0.00'), None, datetime.datetime(2017, 7, 28, 17, 4, 23), datetime.datetime(2017, 7, 28, 17, 4, 23), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:18.609" starttime="20170728 17:03:18.601"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:18.611" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:18.613" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:18.614" starttime="20170728 17:03:18.610"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:18.616" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:18.616" starttime="20170728 17:03:18.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:18.618" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:18.619" starttime="20170728 17:03:18.617"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:18.622" starttime="20170728 17:03:18.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:03:18.624" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:03:18.626" starttime="20170728 17:03:18.623"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:18.628" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:18.629" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:18.629" starttime="20170728 17:03:18.627"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:18.631" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:18.632" starttime="20170728 17:03:18.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:18.633" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:18.635" starttime="20170728 17:03:18.633"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:03:18.638" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:18.639" starttime="20170728 17:03:18.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 17:03:18.642" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 17:03:18.643" starttime="20170728 17:03:18.640"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>7</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:18.651" starttime="20170728 17:03:18.650"></status>
</kw>
<msg timestamp="20170728 17:03:18.652" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:03:18.654" starttime="20170728 17:03:18.647"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:03:18.658" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:03:18.658" starttime="20170728 17:03:18.656"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:18.663" starttime="20170728 17:03:18.661"></status>
</kw>
<msg timestamp="20170728 17:03:18.664" level="INFO">${event_code_after} = 1</msg>
<status status="PASS" endtime="20170728 17:03:18.665" starttime="20170728 17:03:18.659"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:03:18.667" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:18.667" starttime="20170728 17:03:18.666"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:18.672" starttime="20170728 17:03:18.671"></status>
</kw>
<msg timestamp="20170728 17:03:18.673" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:03:18.673" starttime="20170728 17:03:18.669"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:18.677" starttime="20170728 17:03:18.676"></status>
</kw>
<msg timestamp="20170728 17:03:18.679" level="INFO">${amount} = 0</msg>
<status status="PASS" endtime="20170728 17:03:18.680" starttime="20170728 17:03:18.674"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:03:18.684" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:03:18.684" starttime="20170728 17:03:18.682"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:18.688" starttime="20170728 17:03:18.687"></status>
</kw>
<msg timestamp="20170728 17:03:18.689" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:18.690" starttime="20170728 17:03:18.685"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:18.694" starttime="20170728 17:03:18.693"></status>
</kw>
<msg timestamp="20170728 17:03:18.695" level="INFO">${total_amount} = 50423.0</msg>
<status status="PASS" endtime="20170728 17:03:18.697" starttime="20170728 17:03:18.691"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:18.703" starttime="20170728 17:03:18.701"></status>
</kw>
<msg timestamp="20170728 17:03:18.704" level="INFO">${balance_amount} = 49595.0</msg>
<status status="PASS" endtime="20170728 17:03:18.705" starttime="20170728 17:03:18.698"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:18.709" starttime="20170728 17:03:18.708"></status>
</kw>
<msg timestamp="20170728 17:03:18.710" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:18.710" starttime="20170728 17:03:18.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:18.714" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:03:18.715" starttime="20170728 17:03:18.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:18.718" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:03:18.718" starttime="20170728 17:03:18.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:18.720" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:18.721" starttime="20170728 17:03:18.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:18.723" level="INFO">${amount} = 0</msg>
<status status="PASS" endtime="20170728 17:03:18.725" starttime="20170728 17:03:18.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:18.730" level="INFO">${total_amount} = 50423.0</msg>
<status status="PASS" endtime="20170728 17:03:18.731" starttime="20170728 17:03:18.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:18.733" level="INFO">${balance_amount} = 49595.0</msg>
<status status="PASS" endtime="20170728 17:03:18.734" starttime="20170728 17:03:18.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:18.737" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:18.737" starttime="20170728 17:03:18.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:18.739" level="INFO">${event_code_after} = 1</msg>
<status status="PASS" endtime="20170728 17:03:18.740" starttime="20170728 17:03:18.738"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:18.741" starttime="20170728 17:03:18.644"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:18.743" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:18.744" starttime="20170728 17:03:18.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:18.747" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 17:03:18.748" starttime="20170728 17:03:18.746"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:18.750" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:18.751" starttime="20170728 17:03:18.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:18.752" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170728 17:03:18.753" starttime="20170728 17:03:18.751"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:18.755" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:18.755" starttime="20170728 17:03:18.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:18.759" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 17:03:18.760" starttime="20170728 17:03:18.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 17:03:18.765" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 17:03:18.765" starttime="20170728 17:03:18.763"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:18.767" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:18.768" starttime="20170728 17:03:18.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:18.770" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:18.770" starttime="20170728 17:03:18.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:18.772" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170728 17:03:18.773" starttime="20170728 17:03:18.771"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_unilateral}</var>
</assign>
<msg timestamp="20170728 17:03:18.777" level="INFO">${user_id[0][0]_unilateral} = 7724</msg>
<status status="PASS" endtime="20170728 17:03:18.779" starttime="20170728 17:03:18.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_unilateral}</arg>
</arguments>
<msg timestamp="20170728 17:03:18.782" level="INFO">${user_id[0][0]_unilateral} = 7724</msg>
<status status="PASS" endtime="20170728 17:03:18.782" starttime="20170728 17:03:18.780"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]_unilateral}'</arg>
</arguments>
<msg timestamp="20170728 17:03:18.784" level="INFO">Executing : Execute SQL String  |  delete from account_unilateral_bill where id ='7724' </msg>
<status status="PASS" endtime="20170728 17:03:18.893" starttime="20170728 17:03:18.783"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:18.898" starttime="20170728 17:03:18.524"></status>
</kw>
<kw name="表ajb_account_transaction" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170728 17:03:18.909" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170728 17:03:18.911" starttime="20170728 17:03:18.906"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:18.926" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:18.950" starttime="20170728 17:03:18.922"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:18.952" starttime="20170728 17:03:18.918"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:18.953" starttime="20170728 17:03:18.915"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>ajb_account_transaction</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:18.963" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:18.979" starttime="20170728 17:03:18.961"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:18.981" starttime="20170728 17:03:18.958"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:18.983" starttime="20170728 17:03:18.957"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:03:18.987" level="INFO">${current_time} = 2017-07-28 17:03:18.986</msg>
<status status="PASS" endtime="20170728 17:03:18.988" starttime="20170728 17:03:18.985"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>0 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:18.992" level="INFO">${current_time_before_30} = 2017-07-28 17:03:18.986</msg>
<status status="PASS" endtime="20170728 17:03:18.994" starttime="20170728 17:03:18.990"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:18.997" level="INFO">${current_time_after_30} = 2017-07-28 17:04:58.986</msg>
<status status="PASS" endtime="20170728 17:03:18.999" starttime="20170728 17:03:18.996"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 17:03:19.002" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and update_time between' 2017-07-28 17:03:18.986' and '2017-07-28 17:04:58.986' </msg>
<msg timestamp="20170728 17:03:19.014" level="INFO">${updatetime} = ((88889804, '32102151361501230556', 100000, 6273, 2, '32102151361501230556', '20170728170420SPM051707', Decimal('0.00'), 1, 1, 2, 0, datetime.datetime(2017, 7, 28, 17, 4, 23), datetime.datetime(2017, ...</msg>
<status status="PASS" endtime="20170728 17:03:19.016" starttime="20170728 17:03:19.000"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 17:03:19.020" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 17:03:19.022" starttime="20170728 17:03:19.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 17:03:19.026" level="INFO">ajb_account_transaction表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 17:03:19.028" starttime="20170728 17:03:19.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:19.032" level="INFO">${current_time_before_30} = 2017-07-28 17:03:18.986</msg>
<status status="PASS" endtime="20170728 17:03:19.034" starttime="20170728 17:03:19.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:19.039" level="INFO">${current_time_after_30} = 2017-07-28 17:04:58.986</msg>
<status status="PASS" endtime="20170728 17:03:19.041" starttime="20170728 17:03:19.037"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:19.043" starttime="20170728 17:03:18.955"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:19.050" level="INFO">Executing : Query  |  select * from ajb_account_transaction where account_id ='6273' and update_time between' 2017-07-28 17:03:18.986' and '2017-07-28 17:04:58.986' </msg>
<msg timestamp="20170728 17:03:19.063" level="INFO">${user_id} = ((88889804, '32102151361501230556', 100000, 6273, 2, '32102151361501230556', '20170728170420SPM051707', Decimal('0.00'), 1, 1, 2, 0, datetime.datetime(2017, 7, 28, 17, 4, 23), datetime.datetime(2017, ...</msg>
<status status="PASS" endtime="20170728 17:03:19.064" starttime="20170728 17:03:19.047"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:19.069" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:19.071" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:19.073" starttime="20170728 17:03:19.067"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:19.077" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:19.079" starttime="20170728 17:03:19.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:19.083" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:19.085" starttime="20170728 17:03:19.081"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:19.089" starttime="20170728 17:03:19.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:03:19.094" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:03:19.096" starttime="20170728 17:03:19.092"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:19.100" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:19.102" starttime="20170728 17:03:19.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no的值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:19.105" level="INFO">channel_no的值正确</msg>
<status status="PASS" endtime="20170728 17:03:19.107" starttime="20170728 17:03:19.103"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${args11}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${orderNum}</arg>
</arguments>
<assign>
<var>${bill_order_num}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:19.117" starttime="20170728 17:03:19.114"></status>
</kw>
<msg timestamp="20170728 17:03:19.119" level="INFO">${bill_order_num} = 32102151361501230556</msg>
<status status="PASS" endtime="20170728 17:03:19.120" starttime="20170728 17:03:19.110"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>${bill_order_num}</arg>
</arguments>
<msg timestamp="20170728 17:03:19.125" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:19.127" starttime="20170728 17:03:19.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170728 17:03:19.132" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170728 17:03:19.134" starttime="20170728 17:03:19.130"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>7</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:19.145" starttime="20170728 17:03:19.143"></status>
</kw>
<msg timestamp="20170728 17:03:19.147" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:03:19.148" starttime="20170728 17:03:19.138"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:03:19.154" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:03:19.156" starttime="20170728 17:03:19.151"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:19.165" starttime="20170728 17:03:19.162"></status>
</kw>
<msg timestamp="20170728 17:03:19.167" level="INFO">${event_code_after} = 1</msg>
<status status="PASS" endtime="20170728 17:03:19.168" starttime="20170728 17:03:19.158"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:03:19.173" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:19.174" starttime="20170728 17:03:19.170"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:19.185" starttime="20170728 17:03:19.182"></status>
</kw>
<msg timestamp="20170728 17:03:19.186" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:03:19.188" starttime="20170728 17:03:19.177"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:19.197" starttime="20170728 17:03:19.194"></status>
</kw>
<msg timestamp="20170728 17:03:19.199" level="INFO">${amount} = 0</msg>
<status status="PASS" endtime="20170728 17:03:19.201" starttime="20170728 17:03:19.190"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:03:19.205" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:03:19.207" starttime="20170728 17:03:19.203"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:19.215" starttime="20170728 17:03:19.213"></status>
</kw>
<msg timestamp="20170728 17:03:19.217" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:19.218" starttime="20170728 17:03:19.209"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:19.227" starttime="20170728 17:03:19.225"></status>
</kw>
<msg timestamp="20170728 17:03:19.230" level="INFO">${total_amount} = 50423.0</msg>
<status status="PASS" endtime="20170728 17:03:19.232" starttime="20170728 17:03:19.221"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:19.242" starttime="20170728 17:03:19.239"></status>
</kw>
<msg timestamp="20170728 17:03:19.244" level="INFO">${balance_amount} = 49595.0</msg>
<status status="PASS" endtime="20170728 17:03:19.246" starttime="20170728 17:03:19.234"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:19.255" starttime="20170728 17:03:19.253"></status>
</kw>
<msg timestamp="20170728 17:03:19.257" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:19.258" starttime="20170728 17:03:19.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:19.264" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:03:19.266" starttime="20170728 17:03:19.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:19.271" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:03:19.273" starttime="20170728 17:03:19.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:19.279" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:19.280" starttime="20170728 17:03:19.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:19.285" level="INFO">${amount} = 0</msg>
<status status="PASS" endtime="20170728 17:03:19.286" starttime="20170728 17:03:19.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:19.292" level="INFO">${total_amount} = 50423.0</msg>
<status status="PASS" endtime="20170728 17:03:19.294" starttime="20170728 17:03:19.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:19.299" level="INFO">${balance_amount} = 49595.0</msg>
<status status="PASS" endtime="20170728 17:03:19.300" starttime="20170728 17:03:19.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:19.305" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:19.306" starttime="20170728 17:03:19.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:19.313" level="INFO">${event_code_after} = 1</msg>
<status status="PASS" endtime="20170728 17:03:19.314" starttime="20170728 17:03:19.308"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:19.316" starttime="20170728 17:03:19.136"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170728 17:03:19.322" level="INFO">${pay_no_after} = 20170728170420SPM051707</msg>
<status status="PASS" endtime="20170728 17:03:19.324" starttime="20170728 17:03:19.318"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170728 17:03:19.329" level="INFO">Length is 23</msg>
<msg timestamp="20170728 17:03:19.331" level="INFO">${pay_no_after_length} = 23</msg>
<status status="PASS" endtime="20170728 17:03:19.332" starttime="20170728 17:03:19.327"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:19.338" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:19.340" starttime="20170728 17:03:19.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170728 17:03:19.344" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170728 17:03:19.346" starttime="20170728 17:03:19.342"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:19.350" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:19.352" starttime="20170728 17:03:19.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:19.356" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 17:03:19.358" starttime="20170728 17:03:19.354"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:03:19.362" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:19.364" starttime="20170728 17:03:19.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 17:03:19.368" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 17:03:19.371" starttime="20170728 17:03:19.366"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][9]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:19.376" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:19.377" starttime="20170728 17:03:19.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:19.381" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 17:03:19.383" starttime="20170728 17:03:19.379"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 17:03:19.388" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:19.390" starttime="20170728 17:03:19.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170728 17:03:19.394" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170728 17:03:19.396" starttime="20170728 17:03:19.392"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:19.401" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:19.403" starttime="20170728 17:03:19.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:19.406" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:19.408" starttime="20170728 17:03:19.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 17:03:19.413" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 17:03:19.415" starttime="20170728 17:03:19.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:19.419" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170728 17:03:19.420" starttime="20170728 17:03:19.417"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170728 17:03:19.424" level="INFO">${user_id[0][0]_transaction} = 88889804</msg>
<status status="PASS" endtime="20170728 17:03:19.426" starttime="20170728 17:03:19.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170728 17:03:19.430" level="INFO">${user_id[0][0]_transaction} = 88889804</msg>
<status status="PASS" endtime="20170728 17:03:19.432" starttime="20170728 17:03:19.428"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id[0][0]}'</arg>
</arguments>
<assign>
<var>${user_id_unilateral_delete1}</var>
</assign>
<msg timestamp="20170728 17:03:19.437" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88889804' </msg>
<msg timestamp="20170728 17:03:19.527" level="INFO">${user_id_unilateral_delete1} = None</msg>
<status status="PASS" endtime="20170728 17:03:19.528" starttime="20170728 17:03:19.434"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:19.529" starttime="20170728 17:03:18.901"></status>
</kw>
<kw name="表account_amount的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_amount</arg>
</arguments>
<msg timestamp="20170728 17:03:19.533" level="INFO">现在开始校验表account_amount</msg>
<status status="PASS" endtime="20170728 17:03:19.533" starttime="20170728 17:03:19.532"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:19.539" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:19.547" starttime="20170728 17:03:19.537"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:19.548" starttime="20170728 17:03:19.536"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:19.549" starttime="20170728 17:03:19.534"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time1}</var>
</assign>
<msg timestamp="20170728 17:03:19.551" level="INFO">${current_time1} = 2017-07-28 17:03:19.551</msg>
<status status="PASS" endtime="20170728 17:03:19.551" starttime="20170728 17:03:19.550"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:19.554" level="INFO">${current_time1_before_30} = 2017-07-28 17:02:19.551</msg>
<status status="PASS" endtime="20170728 17:03:19.555" starttime="20170728 17:03:19.552"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:19.557" level="INFO">${current_time1_after_30} = 2017-07-28 17:04:19.551</msg>
<status status="PASS" endtime="20170728 17:03:19.557" starttime="20170728 17:03:19.555"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:19.559" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6273' </msg>
<msg timestamp="20170728 17:03:19.566" level="INFO">${user_id} = ((12587, 6273, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 17, 4, 23), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:19.567" starttime="20170728 17:03:19.558"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>7</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:19.575" starttime="20170728 17:03:19.574"></status>
</kw>
<msg timestamp="20170728 17:03:19.576" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:03:19.577" starttime="20170728 17:03:19.569"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:03:19.579" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:03:19.580" starttime="20170728 17:03:19.578"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:19.583" starttime="20170728 17:03:19.582"></status>
</kw>
<msg timestamp="20170728 17:03:19.584" level="INFO">${event_code_after} = 1</msg>
<status status="PASS" endtime="20170728 17:03:19.585" starttime="20170728 17:03:19.581"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:03:19.589" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:19.590" starttime="20170728 17:03:19.586"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:19.594" starttime="20170728 17:03:19.593"></status>
</kw>
<msg timestamp="20170728 17:03:19.595" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:03:19.596" starttime="20170728 17:03:19.591"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:19.603" starttime="20170728 17:03:19.599"></status>
</kw>
<msg timestamp="20170728 17:03:19.605" level="INFO">${amount} = 0</msg>
<status status="PASS" endtime="20170728 17:03:19.605" starttime="20170728 17:03:19.597"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:03:19.608" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:03:19.609" starttime="20170728 17:03:19.607"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:19.614" starttime="20170728 17:03:19.612"></status>
</kw>
<msg timestamp="20170728 17:03:19.615" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:19.616" starttime="20170728 17:03:19.610"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:19.623" starttime="20170728 17:03:19.621"></status>
</kw>
<msg timestamp="20170728 17:03:19.625" level="INFO">${total_amount} = 50423.0</msg>
<status status="PASS" endtime="20170728 17:03:19.626" starttime="20170728 17:03:19.617"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:19.632" starttime="20170728 17:03:19.630"></status>
</kw>
<msg timestamp="20170728 17:03:19.634" level="INFO">${balance_amount} = 49595.0</msg>
<status status="PASS" endtime="20170728 17:03:19.635" starttime="20170728 17:03:19.627"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:19.642" starttime="20170728 17:03:19.640"></status>
</kw>
<msg timestamp="20170728 17:03:19.643" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:19.643" starttime="20170728 17:03:19.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:19.646" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 17:03:19.647" starttime="20170728 17:03:19.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:19.649" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 17:03:19.649" starttime="20170728 17:03:19.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:19.653" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:19.653" starttime="20170728 17:03:19.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:19.655" level="INFO">${amount} = 0</msg>
<status status="PASS" endtime="20170728 17:03:19.656" starttime="20170728 17:03:19.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:19.658" level="INFO">${total_amount} = 50423.0</msg>
<status status="PASS" endtime="20170728 17:03:19.658" starttime="20170728 17:03:19.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:19.661" level="INFO">${balance_amount} = 49595.0</msg>
<status status="PASS" endtime="20170728 17:03:19.662" starttime="20170728 17:03:19.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:19.664" level="INFO">${frozen_amount} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:19.665" starttime="20170728 17:03:19.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:19.666" level="INFO">${event_code_after} = 1</msg>
<status status="PASS" endtime="20170728 17:03:19.667" starttime="20170728 17:03:19.665"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:19.668" starttime="20170728 17:03:19.568"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:19.670" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:19.672" starttime="20170728 17:03:19.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:19.674" level="INFO">total_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:19.675" starttime="20170728 17:03:19.673"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:19.679" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:19.680" starttime="20170728 17:03:19.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:19.682" level="INFO">balance_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:19.683" starttime="20170728 17:03:19.681"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:19.685" starttime="20170728 17:03:19.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:19.687" level="INFO">frozen_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:19.688" starttime="20170728 17:03:19.686"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:19.690" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:19.691" starttime="20170728 17:03:19.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:19.693" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:19.695" starttime="20170728 17:03:19.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:19.699" level="INFO">表account_amount校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:19.700" starttime="20170728 17:03:19.697"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:19.701" starttime="20170728 17:03:19.530"></status>
</kw>
<kw name="艾佳币恢复数目" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:19.706" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:19.713" starttime="20170728 17:03:19.705"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:19.715" starttime="20170728 17:03:19.704"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:19.717" starttime="20170728 17:03:19.703"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount \ SET total_amount=${database[0][2]},balance_amount=${database[0][3]},frozen_amount=${database[0][4]}where account_id="${account_id}";</arg>
</arguments>
<msg timestamp="20170728 17:03:19.720" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount  SET total_amount=50423.00,balance_amount=49595.00,frozen_amount=828.00where account_id="6273"; </msg>
<status status="PASS" endtime="20170728 17:03:19.725" starttime="20170728 17:03:19.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170728 17:03:19.728" level="INFO">成功</msg>
<status status="PASS" endtime="20170728 17:03:19.729" starttime="20170728 17:03:19.726"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:19.730" starttime="20170728 17:03:19.702"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:19.731" critical="yes" starttime="20170728 17:03:18.142"></status>
</test>
<test id="s1-s1-s5-t8" name="输入木有的user_id和正确的amount和活动代码">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:19.744" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:19.751" starttime="20170728 17:03:19.742"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:19.753" starttime="20170728 17:03:19.740"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:19.754" starttime="20170728 17:03:19.738"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>123456785</arg>
<arg>10</arg>
<arg>1</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:03:19.757" level="INFO">${args11} = 123456785</msg>
<status status="PASS" endtime="20170728 17:03:19.758" starttime="20170728 17:03:19.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:03:19.761" level="INFO">${args22} = 10</msg>
<status status="PASS" endtime="20170728 17:03:19.762" starttime="20170728 17:03:19.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 17:03:19.764" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170728 17:03:19.766" starttime="20170728 17:03:19.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 17:03:19.768" level="INFO">${args44} = 1</msg>
<status status="PASS" endtime="20170728 17:03:19.769" starttime="20170728 17:03:19.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 17:03:19.772" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</msg>
<status status="PASS" endtime="20170728 17:03:19.772" starttime="20170728 17:03:19.770"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:19.773" starttime="20170728 17:03:19.754"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id ='${args11}'</arg>
</arguments>
<assign>
<var>${no_user_id}</var>
</assign>
<msg timestamp="20170728 17:03:19.776" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id ='123456785' </msg>
<msg timestamp="20170728 17:03:19.783" level="INFO">${no_user_id} = ()</msg>
<status status="PASS" endtime="20170728 17:03:19.784" starttime="20170728 17:03:19.774"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${no_user_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:19.786" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170728 17:03:19.787" starttime="20170728 17:03:19.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>此user_id不存在</arg>
</arguments>
<msg timestamp="20170728 17:03:19.790" level="INFO">此user_id不存在</msg>
<status status="PASS" endtime="20170728 17:03:19.791" starttime="20170728 17:03:19.789"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 17:03:19.792" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</msg>
<status status="PASS" endtime="20170728 17:03:19.793" starttime="20170728 17:03:19.791"></status>
</kw>
<kw name="Ajb Activity Recharge" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data_no_user_id}</var>
</assign>
<msg timestamp="20170728 17:03:19.880" level="INFO">${data_no_user_id} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:19.884" starttime="20170728 17:03:19.794"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data_no_user_id.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 17:03:19.892" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:19.893" starttime="20170728 17:03:19.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 17:03:19.896" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 17:03:19.897" starttime="20170728 17:03:19.895"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data_no_user_id.text}</arg>
</arguments>
<assign>
<var>${toJson1}</var>
</assign>
<msg timestamp="20170728 17:03:19.900" level="INFO">To JSON using : content={"data":{"orderNum":"32102151361501230562"},"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 17:03:19.901" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 17:03:19.902" level="INFO">${toJson1} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': {u'orderNum': u'32102151361501230562'}, u'success': True}</msg>
<status status="PASS" endtime="20170728 17:03:19.904" starttime="20170728 17:03:19.898"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson1['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 17:03:19.909" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:19.911" starttime="20170728 17:03:19.906"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson1['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:19.915" starttime="20170728 17:03:19.914"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${toJson1['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${no_user_id_orderNum}</var>
</assign>
<msg timestamp="20170728 17:03:19.919" level="INFO">${no_user_id_orderNum} = 32102151361501230562</msg>
<status status="PASS" endtime="20170728 17:03:19.920" starttime="20170728 17:03:19.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:19.922" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:19.922" starttime="20170728 17:03:19.921"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id ='${args11}'and channel_no=2</arg>
</arguments>
<assign>
<var>${no_user_id_after}</var>
</assign>
<msg timestamp="20170728 17:03:19.924" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id ='123456785'and channel_no=2 </msg>
<msg timestamp="20170728 17:03:19.932" level="INFO">${no_user_id_after} = ((100000000073L, '32102151361501230561', 123456785, 6339, 2, 2, 0, datetime.datetime(2017, 7, 28, 17, 4, 25), datetime.datetime(2017, 7, 28, 17, 4, 25)),)</msg>
<status status="PASS" endtime="20170728 17:03:19.934" starttime="20170728 17:03:19.923"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${no_user_id_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:19.938" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 17:03:19.938" starttime="20170728 17:03:19.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>调用艾佳币活动充值接口自动生成boss的账号</arg>
</arguments>
<msg timestamp="20170728 17:03:19.940" level="INFO">调用艾佳币活动充值接口自动生成boss的账号</msg>
<status status="PASS" endtime="20170728 17:03:19.941" starttime="20170728 17:03:19.939"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${no_user_id_after[0][3]}</arg>
</arguments>
<assign>
<var>${no_user_id_account_id}</var>
</assign>
<msg timestamp="20170728 17:03:19.944" level="INFO">${no_user_id_account_id} = 6339</msg>
<status status="PASS" endtime="20170728 17:03:19.945" starttime="20170728 17:03:19.942"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_open_record where user_id ='${args11}'and channel_no=2</arg>
</arguments>
<msg timestamp="20170728 17:03:19.948" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_open_record where user_id ='123456785'and channel_no=2 </msg>
<status status="PASS" endtime="20170728 17:03:19.995" starttime="20170728 17:03:19.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>已删除该账号！</arg>
</arguments>
<msg timestamp="20170728 17:03:20.001" level="INFO">已删除该账号！</msg>
<status status="PASS" endtime="20170728 17:03:20.004" starttime="20170728 17:03:19.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_unilateral_bill</arg>
</arguments>
<msg timestamp="20170728 17:03:20.011" level="INFO">现在开始校验表account_unilateral_bill</msg>
<status status="PASS" endtime="20170728 17:03:20.012" starttime="20170728 17:03:20.009"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time_no}</var>
</assign>
<msg timestamp="20170728 17:03:20.014" level="INFO">${current_time_no} = 2017-07-28 17:03:20.014</msg>
<status status="PASS" endtime="20170728 17:03:20.015" starttime="20170728 17:03:20.013"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_no}</arg>
<arg>5 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_301}</var>
</assign>
<msg timestamp="20170728 17:03:20.017" level="INFO">${current_time_before_301} = 2017-07-28 17:03:15.014</msg>
<status status="PASS" endtime="20170728 17:03:20.018" starttime="20170728 17:03:20.016"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_no}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_302}</var>
</assign>
<msg timestamp="20170728 17:03:20.020" level="INFO">${current_time_after_302} = 2017-07-28 17:05:00.014</msg>
<status status="PASS" endtime="20170728 17:03:20.020" starttime="20170728 17:03:20.019"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${no_user_id_account_id}'and update_time between' ${current_time_before_301}' and '${current_time_after_302}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:20.023" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6339'and update_time between' 2017-07-28 17:03:15.014' and '2017-07-28 17:05:00.014' </msg>
<msg timestamp="20170728 17:03:20.032" level="INFO">${user_id} = ((7727, '32102151361501230566', 123456785, 6339, '32102151361501230563', 1, 1, 3, Decimal('10.00'), None, datetime.datetime(2017, 7, 28, 17, 4, 25), datetime.datetime(2017, 7, 28, 17, 4, 25), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:20.033" starttime="20170728 17:03:20.021"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:20.035" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:20.036" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:20.038" starttime="20170728 17:03:20.034"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:20.042" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:20.043" starttime="20170728 17:03:20.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:20.046" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:20.046" starttime="20170728 17:03:20.045"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:03:20.048" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:20.049" starttime="20170728 17:03:20.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:03:20.051" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:03:20.051" starttime="20170728 17:03:20.050"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:20.053" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:20.054" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:20.055" starttime="20170728 17:03:20.052"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:20.057" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:20.058" starttime="20170728 17:03:20.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:20.060" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:20.061" starttime="20170728 17:03:20.059"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:03:20.064" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:20.064" starttime="20170728 17:03:20.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 17:03:20.066" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 17:03:20.067" starttime="20170728 17:03:20.065"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 17:03:20.069" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:20.071" starttime="20170728 17:03:20.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:20.074" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 17:03:20.075" starttime="20170728 17:03:20.073"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20170728 17:03:20.078" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:20.078" starttime="20170728 17:03:20.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:20.080" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170728 17:03:20.081" starttime="20170728 17:03:20.079"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:03:20.083" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:20.084" starttime="20170728 17:03:20.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:20.085" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 17:03:20.086" starttime="20170728 17:03:20.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:20.090" level="INFO">add_time和update_time时间校验成功</msg>
<status status="PASS" endtime="20170728 17:03:20.091" starttime="20170728 17:03:20.087"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:20.093" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:20.095" starttime="20170728 17:03:20.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:20.097" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:20.097" starttime="20170728 17:03:20.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:20.099" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170728 17:03:20.100" starttime="20170728 17:03:20.098"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_unilateral}</var>
</assign>
<msg timestamp="20170728 17:03:20.103" level="INFO">${user_id[0][0]_unilateral} = 7727</msg>
<status status="PASS" endtime="20170728 17:03:20.104" starttime="20170728 17:03:20.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_unilateral}</arg>
</arguments>
<msg timestamp="20170728 17:03:20.107" level="INFO">${user_id[0][0]_unilateral} = 7727</msg>
<status status="PASS" endtime="20170728 17:03:20.107" starttime="20170728 17:03:20.105"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]_unilateral}'</arg>
</arguments>
<msg timestamp="20170728 17:03:20.109" level="INFO">Executing : Execute SQL String  |  delete from account_unilateral_bill where id ='7727' </msg>
<status status="PASS" endtime="20170728 17:03:20.170" starttime="20170728 17:03:20.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170728 17:03:20.172" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170728 17:03:20.173" starttime="20170728 17:03:20.171"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time_nouser}</var>
</assign>
<msg timestamp="20170728 17:03:20.175" level="INFO">${current_time_nouser} = 2017-07-28 17:03:20.175</msg>
<status status="PASS" endtime="20170728 17:03:20.175" starttime="20170728 17:03:20.174"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_nouser}</arg>
<arg>5 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_3011}</var>
</assign>
<msg timestamp="20170728 17:03:20.178" level="INFO">${current_time_before_3011} = 2017-07-28 17:03:15.175</msg>
<status status="PASS" endtime="20170728 17:03:20.179" starttime="20170728 17:03:20.176"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_nouser}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_3022}</var>
</assign>
<msg timestamp="20170728 17:03:20.184" level="INFO">${current_time_after_3022} = 2017-07-28 17:05:00.175</msg>
<status status="PASS" endtime="20170728 17:03:20.185" starttime="20170728 17:03:20.181"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where account_id ='${no_user_id_account_id}' and update_time between' ${current_time_before_3011}' and '${current_time_after_3022}'</arg>
</arguments>
<assign>
<var>${user_id_no}</var>
</assign>
<msg timestamp="20170728 17:03:20.187" level="INFO">Executing : Query  |  select * from ajb_account_transaction where account_id ='6339' and update_time between' 2017-07-28 17:03:15.175' and '2017-07-28 17:05:00.175' </msg>
<msg timestamp="20170728 17:03:20.197" level="INFO">${user_id_no} = ((88889805, '32102151361501230562', 123456785, 6339, 2, '32102151361501230562', '20170728170422QIL051708', Decimal('10.00'), 1, 1, 2, 0, datetime.datetime(2017, 7, 28, 17, 4, 25), datetime.datetime(20...</msg>
<status status="PASS" endtime="20170728 17:03:20.198" starttime="20170728 17:03:20.186"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id_no[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:20.201" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:20.202" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:20.202" starttime="20170728 17:03:20.199"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:20.204" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:20.204" starttime="20170728 17:03:20.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:20.206" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:20.207" starttime="20170728 17:03:20.205"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][2]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:03:20.209" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:20.209" starttime="20170728 17:03:20.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:03:20.212" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:03:20.213" starttime="20170728 17:03:20.211"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][4]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 17:03:20.216" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:20.217" starttime="20170728 17:03:20.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no的值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:20.219" level="INFO">channel_no的值正确</msg>
<status status="PASS" endtime="20170728 17:03:20.220" starttime="20170728 17:03:20.218"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][5]}</arg>
<arg>${no_user_id_orderNum}</arg>
</arguments>
<msg timestamp="20170728 17:03:20.222" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:20.223" starttime="20170728 17:03:20.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170728 17:03:20.225" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170728 17:03:20.225" starttime="20170728 17:03:20.224"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id_no[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170728 17:03:20.228" level="INFO">${pay_no_after} = 20170728170422QIL051708</msg>
<status status="PASS" endtime="20170728 17:03:20.229" starttime="20170728 17:03:20.226"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170728 17:03:20.231" level="INFO">Length is 23</msg>
<msg timestamp="20170728 17:03:20.232" level="INFO">${pay_no_after_length} = 23</msg>
<status status="PASS" endtime="20170728 17:03:20.233" starttime="20170728 17:03:20.230"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>23</arg>
</arguments>
<msg timestamp="20170728 17:03:20.237" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:20.238" starttime="20170728 17:03:20.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170728 17:03:20.240" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170728 17:03:20.240" starttime="20170728 17:03:20.239"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][7]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:03:20.245" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:20.246" starttime="20170728 17:03:20.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:20.248" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 17:03:20.249" starttime="20170728 17:03:20.247"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:03:20.251" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:20.251" starttime="20170728 17:03:20.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 17:03:20.253" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 17:03:20.253" starttime="20170728 17:03:20.252"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][9]}</arg>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 17:03:20.255" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:20.256" starttime="20170728 17:03:20.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:20.261" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 17:03:20.262" starttime="20170728 17:03:20.259"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 17:03:20.264" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:20.265" starttime="20170728 17:03:20.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170728 17:03:20.267" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170728 17:03:20.268" starttime="20170728 17:03:20.266"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:20.269" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:20.270" starttime="20170728 17:03:20.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:20.272" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:20.272" starttime="20170728 17:03:20.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:20.274" level="INFO">add_time和update_time时间校验成功</msg>
<status status="PASS" endtime="20170728 17:03:20.275" starttime="20170728 17:03:20.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:20.278" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170728 17:03:20.279" starttime="20170728 17:03:20.276"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id_no[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170728 17:03:20.282" level="INFO">${user_id[0][0]_transaction} = 88889805</msg>
<status status="PASS" endtime="20170728 17:03:20.283" starttime="20170728 17:03:20.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170728 17:03:20.285" level="INFO">${user_id[0][0]_transaction} = 88889805</msg>
<status status="PASS" endtime="20170728 17:03:20.286" starttime="20170728 17:03:20.284"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id_no[0][0]}'</arg>
</arguments>
<msg timestamp="20170728 17:03:20.289" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88889805' </msg>
<status status="PASS" endtime="20170728 17:03:20.388" starttime="20170728 17:03:20.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_amount</arg>
</arguments>
<msg timestamp="20170728 17:03:20.390" level="INFO">现在开始校验表account_amount</msg>
<status status="PASS" endtime="20170728 17:03:20.391" starttime="20170728 17:03:20.389"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${no_user_id_account_id}'</arg>
</arguments>
<assign>
<var>${user_id_t}</var>
</assign>
<msg timestamp="20170728 17:03:20.392" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6339' </msg>
<msg timestamp="20170728 17:03:20.397" level="INFO">${user_id_t} = ((12653, 6339, Decimal('10.00'), Decimal('10.00'), Decimal('0.00'), datetime.datetime(2017, 7, 28, 17, 4, 25), datetime.datetime(2017, 7, 28, 17, 4, 25), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:20.398" starttime="20170728 17:03:20.391"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][2]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:03:20.401" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:20.402" starttime="20170728 17:03:20.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:20.404" level="INFO">total_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:20.404" starttime="20170728 17:03:20.403"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][3]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:03:20.407" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:20.408" starttime="20170728 17:03:20.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:20.410" level="INFO">balance_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:20.411" starttime="20170728 17:03:20.408"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][4]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:20.414" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:20.415" starttime="20170728 17:03:20.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:20.417" level="INFO">frozen_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:20.418" starttime="20170728 17:03:20.416"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:20.421" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:20.423" starttime="20170728 17:03:20.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:20.426" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:20.427" starttime="20170728 17:03:20.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:20.429" level="INFO">表account_amount校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:20.430" starttime="20170728 17:03:20.428"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_amount where account_id ='${no_user_id_account_id}'</arg>
</arguments>
<msg timestamp="20170728 17:03:20.433" level="INFO">Executing : Execute SQL String  |  delete from account_amount where account_id ='6339' </msg>
<status status="PASS" endtime="20170728 17:03:20.470" starttime="20170728 17:03:20.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>输入未有的user_id和正确的amount参数，会直接生成app账户，然后表里的数据都入库成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:20.473" level="INFO">输入未有的user_id和正确的amount参数，会直接生成app账户，然后表里的数据都入库成功！</msg>
<status status="PASS" endtime="20170728 17:03:20.474" starttime="20170728 17:03:20.471"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:20.475" critical="yes" starttime="20170728 17:03:19.733"></status>
</test>
<test id="s1-s1-s5-t9" name="输入已有的userId和amount为字符时">
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>100000</arg>
<arg>str</arg>
<arg>1</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:03:20.485" level="INFO">${args11} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:20.485" starttime="20170728 17:03:20.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:03:20.488" level="INFO">${args22} = str</msg>
<status status="PASS" endtime="20170728 17:03:20.489" starttime="20170728 17:03:20.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 17:03:20.492" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170728 17:03:20.492" starttime="20170728 17:03:20.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 17:03:20.496" level="INFO">${args44} = 1</msg>
<status status="PASS" endtime="20170728 17:03:20.496" starttime="20170728 17:03:20.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 17:03:20.498" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</msg>
<status status="PASS" endtime="20170728 17:03:20.499" starttime="20170728 17:03:20.497"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:20.500" starttime="20170728 17:03:20.481"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 17:03:20.503" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</msg>
<status status="PASS" endtime="20170728 17:03:20.503" starttime="20170728 17:03:20.502"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 17:03:20.507" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:20.508" starttime="20170728 17:03:20.505"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:20.514" starttime="20170728 17:03:20.512"></status>
</kw>
<msg timestamp="20170728 17:03:20.515" level="INFO">${channel_no} = 2</msg>
<status status="PASS" endtime="20170728 17:03:20.516" starttime="20170728 17:03:20.509"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>user_id</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:20.520" starttime="20170728 17:03:20.519"></status>
</kw>
<msg timestamp="20170728 17:03:20.521" level="INFO">${args11_after} = user_id</msg>
<status status="PASS" endtime="20170728 17:03:20.521" starttime="20170728 17:03:20.517"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:20.528" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:20.544" starttime="20170728 17:03:20.526"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:20.545" starttime="20170728 17:03:20.524"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:20.546" starttime="20170728 17:03:20.523"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 17:03:20.548" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and channel_no='2' </msg>
<msg timestamp="20170728 17:03:20.558" level="INFO">${database1} = ((88889680, '32102151361501229990', 100000, 6273, 2, '32102151361501229990', '20170728162839GNY051613', Decimal('10.00'), 1, 2, 2, 0, datetime.datetime(2017, 7, 28, 16, 28, 42), datetime.datetime(2017...</msg>
<status status="PASS" endtime="20170728 17:03:20.560" starttime="20170728 17:03:20.547"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 17:03:20.563" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6273' </msg>
<msg timestamp="20170728 17:03:20.568" level="INFO">${database} = ((12587, 6273, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 17, 4, 23), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:20.569" starttime="20170728 17:03:20.561"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 17:03:20.572" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:20.573" starttime="20170728 17:03:20.570"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 17:03:20.575" level="INFO">${account_id} = 6273</msg>
<status status="PASS" endtime="20170728 17:03:20.576" starttime="20170728 17:03:20.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:20.579" level="INFO">获得account_id值为：6273</msg>
<status status="PASS" endtime="20170728 17:03:20.579" starttime="20170728 17:03:20.577"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:20.581" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:20.582" starttime="20170728 17:03:20.580"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:20.584" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:20.584" starttime="20170728 17:03:20.583"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:20.586" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:20.587" starttime="20170728 17:03:20.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:20.591" level="INFO">${account_id} = 6273</msg>
<status status="PASS" endtime="20170728 17:03:20.592" starttime="20170728 17:03:20.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 17:03:20.595" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:20.596" starttime="20170728 17:03:20.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:20.598" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:20.600" starttime="20170728 17:03:20.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:20.602" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:20.603" starttime="20170728 17:03:20.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:20.605" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:20.605" starttime="20170728 17:03:20.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:20.607" level="INFO">${channel_no} = 2</msg>
<status status="PASS" endtime="20170728 17:03:20.608" starttime="20170728 17:03:20.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 17:03:20.610" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:20.612" starttime="20170728 17:03:20.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 17:03:20.614" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</msg>
<status status="PASS" endtime="20170728 17:03:20.614" starttime="20170728 17:03:20.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170728 17:03:20.618" level="INFO">${database} = ((12587, 6273, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 17, 4, 23), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:20.619" starttime="20170728 17:03:20.616"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:20.620" starttime="20170728 17:03:20.501"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Ajb Activity Recharge" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:20.634" starttime="20170728 17:03:20.624"></status>
</kw>
<msg timestamp="20170728 17:03:20.636" level="INFO">${data} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:20.636" starttime="20170728 17:03:20.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 17:03:20.639" level="INFO">${data} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:20.639" starttime="20170728 17:03:20.637"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:20.640" starttime="20170728 17:03:20.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:20.642" level="INFO">400</msg>
<status status="PASS" endtime="20170728 17:03:20.643" starttime="20170728 17:03:20.641"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20170728 17:03:20.646" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:20.646" starttime="20170728 17:03:20.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>400由于语法格式有误，服务器无法理解此请求。</arg>
</arguments>
<msg timestamp="20170728 17:03:20.648" level="INFO">400由于语法格式有误，服务器无法理解此请求。</msg>
<status status="PASS" endtime="20170728 17:03:20.650" starttime="20170728 17:03:20.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 17:03:20.653" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 17:03:20.653" starttime="20170728 17:03:20.651"></status>
</kw>
<kw name="amount和表里的校验" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:20.658" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:20.665" starttime="20170728 17:03:20.657"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:20.666" starttime="20170728 17:03:20.656"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:20.667" starttime="20170728 17:03:20.655"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:20.670" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6273' </msg>
<msg timestamp="20170728 17:03:20.674" level="INFO">${user_id} = ((12587, 6273, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 17, 4, 23), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:20.676" starttime="20170728 17:03:20.668"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:20.680" starttime="20170728 17:03:20.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 17:03:20.682" level="INFO">total_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 17:03:20.683" starttime="20170728 17:03:20.681"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:20.685" starttime="20170728 17:03:20.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 17:03:20.687" level="INFO">balance_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 17:03:20.688" starttime="20170728 17:03:20.686"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:20.690" starttime="20170728 17:03:20.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 17:03:20.692" level="INFO">frozen_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 17:03:20.693" starttime="20170728 17:03:20.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amounts的数据没有变化正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:20.696" level="INFO">amounts的数据没有变化正确的</msg>
<status status="PASS" endtime="20170728 17:03:20.697" starttime="20170728 17:03:20.695"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:20.699" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:20.701" starttime="20170728 17:03:20.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount内容没有发生变化</arg>
</arguments>
<msg timestamp="20170728 17:03:20.703" level="INFO">表account_amount内容没有发生变化</msg>
<status status="PASS" endtime="20170728 17:03:20.705" starttime="20170728 17:03:20.702"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:03:20.708" level="INFO">${current_time} = 2017-07-28 17:03:20.707</msg>
<status status="PASS" endtime="20170728 17:03:20.709" starttime="20170728 17:03:20.706"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:20.713" level="INFO">${current_time_before_30} = 2017-07-28 17:02:20.707</msg>
<status status="PASS" endtime="20170728 17:03:20.714" starttime="20170728 17:03:20.711"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:20.716" level="INFO">${current_time_after_30} = 2017-07-28 17:04:25.707</msg>
<status status="PASS" endtime="20170728 17:03:20.717" starttime="20170728 17:03:20.715"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${bill_check}</var>
</assign>
<msg timestamp="20170728 17:03:20.719" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6273' and update_time between' 2017-07-28 17:02:20.707' and '2017-07-28 17:04:25.707' </msg>
<msg timestamp="20170728 17:03:20.726" level="INFO">${bill_check} = ()</msg>
<status status="PASS" endtime="20170728 17:03:20.727" starttime="20170728 17:03:20.718"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${bill_check}</arg>
</arguments>
<assign>
<var>${bill_check_length}</var>
</assign>
<msg timestamp="20170728 17:03:20.731" level="INFO">Length is 0</msg>
<msg timestamp="20170728 17:03:20.731" level="INFO">${bill_check_length} = 0</msg>
<status status="PASS" endtime="20170728 17:03:20.732" starttime="20170728 17:03:20.730"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${bill_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:20.734" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:20.735" starttime="20170728 17:03:20.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>account_unilateral_bill里的没有相关数据</arg>
</arguments>
<msg timestamp="20170728 17:03:20.737" level="INFO">account_unilateral_bill里的没有相关数据</msg>
<status status="PASS" endtime="20170728 17:03:20.738" starttime="20170728 17:03:20.736"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num ='${args11}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${transaction_check}</var>
</assign>
<msg timestamp="20170728 17:03:20.743" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num ='100000' and update_time between' 2017-07-28 17:02:20.707' and '2017-07-28 17:04:25.707' </msg>
<msg timestamp="20170728 17:03:20.756" level="INFO">${transaction_check} = ()</msg>
<status status="PASS" endtime="20170728 17:03:20.758" starttime="20170728 17:03:20.740"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${transaction_check}</arg>
</arguments>
<assign>
<var>${transaction_check_length}</var>
</assign>
<msg timestamp="20170728 17:03:20.763" level="INFO">Length is 0</msg>
<msg timestamp="20170728 17:03:20.764" level="INFO">${transaction_check_length} = 0</msg>
<status status="PASS" endtime="20170728 17:03:20.766" starttime="20170728 17:03:20.760"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${transaction_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:20.769" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:20.770" starttime="20170728 17:03:20.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>ajb_account_transaction里的没有相关数据</arg>
</arguments>
<msg timestamp="20170728 17:03:20.773" level="INFO">ajb_account_transaction里的没有相关数据</msg>
<status status="PASS" endtime="20170728 17:03:20.774" starttime="20170728 17:03:20.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库表里数据调用接口前后没有发生变化</arg>
</arguments>
<msg timestamp="20170728 17:03:20.777" level="INFO">数据库表里数据调用接口前后没有发生变化</msg>
<status status="PASS" endtime="20170728 17:03:20.778" starttime="20170728 17:03:20.776"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:20.779" starttime="20170728 17:03:20.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>输入已有的user_id和amount为字符的时候，语法错误，报400</arg>
</arguments>
<msg timestamp="20170728 17:03:20.782" level="INFO">输入已有的user_id和amount为字符的时候，语法错误，报400</msg>
<status status="PASS" endtime="20170728 17:03:20.783" starttime="20170728 17:03:20.781"></status>
</kw>
<kw name="艾佳币恢复数目" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:20.793" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:20.801" starttime="20170728 17:03:20.790"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:20.803" starttime="20170728 17:03:20.787"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:20.804" starttime="20170728 17:03:20.785"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount \ SET total_amount=${database[0][2]},balance_amount=${database[0][3]},frozen_amount=${database[0][4]}where account_id="${account_id}";</arg>
</arguments>
<msg timestamp="20170728 17:03:20.807" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount  SET total_amount=50423.00,balance_amount=49595.00,frozen_amount=828.00where account_id="6273"; </msg>
<status status="PASS" endtime="20170728 17:03:20.813" starttime="20170728 17:03:20.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170728 17:03:20.815" level="INFO">成功</msg>
<status status="PASS" endtime="20170728 17:03:20.816" starttime="20170728 17:03:20.814"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:20.818" starttime="20170728 17:03:20.784"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:20.819" critical="yes" starttime="20170728 17:03:20.478"></status>
</test>
<status status="PASS" endtime="20170728 17:03:20.823" starttime="20170728 17:03:09.767"></status>
</suite>
<status status="PASS" endtime="20170728 17:03:20.845" starttime="20170728 17:02:56.756"></status>
</suite>
<suite source="F:\logs and reports\账户中心\订单" id="s1-s2" name="订单">
<suite source="F:\logs and reports\账户中心\订单\订单取消支付（线上）.txt" id="s1-s2-s1" name="订单取消支付（线上）">
<test id="s1-s2-s1-t1" name="输入正确的订单冻结oderNum">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:20.927" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:20.936" starttime="20170728 17:03:20.925"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:20.937" starttime="20170728 17:03:20.923"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:20.938" starttime="20170728 17:03:20.922"></status>
</kw>
<kw name="清数据" library="myResource">
<arguments>
<arg>888888</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:20.946" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:20.954" starttime="20170728 17:03:20.943"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:20.955" starttime="20170728 17:03:20.941"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:20.957" starttime="20170728 17:03:20.940"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170728 17:03:20.960" level="INFO">Executing : Query  |  select * from ajb_account_transaction where id=888888 </msg>
<msg timestamp="20170728 17:03:20.965" level="INFO">${check} = ()</msg>
<status status="PASS" endtime="20170728 17:03:20.965" starttime="20170728 17:03:20.959"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170728 17:03:20.967" level="INFO">Length is 0</msg>
<msg timestamp="20170728 17:03:20.968" level="INFO">${check_length} = 0</msg>
<status status="PASS" endtime="20170728 17:03:20.968" starttime="20170728 17:03:20.966"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} != 0</arg>
<arg>execute sql string</arg>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>数据库之前没有数据</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库之前没有数据</arg>
</arguments>
<msg timestamp="20170728 17:03:20.971" level="INFO">数据库之前没有数据</msg>
<status status="PASS" endtime="20170728 17:03:20.972" starttime="20170728 17:03:20.971"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:20.973" starttime="20170728 17:03:20.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库里面的这条数据清理成功啦。</arg>
</arguments>
<msg timestamp="20170728 17:03:20.974" level="INFO">数据库里面的这条数据清理成功啦。</msg>
<status status="PASS" endtime="20170728 17:03:20.975" starttime="20170728 17:03:20.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_delete}</arg>
</arguments>
<msg timestamp="20170728 17:03:20.979" level="INFO">${id_delete} = 888888</msg>
<status status="PASS" endtime="20170728 17:03:20.980" starttime="20170728 17:03:20.977"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:20.981" starttime="20170728 17:03:20.939"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("${id_delete}","32102151361500975216","100000","6135","1","32102151361500012119","","2","1","11","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170728 17:03:20.984" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("888888","32102151361500975216","100000","6135","1","32102151361500012119","","2","1","11","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170728 17:03:21.057" starttime="20170728 17:03:20.983"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>32102151361500012119</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:03:21.062" level="INFO">${args11} = 32102151361500012119</msg>
<status status="PASS" endtime="20170728 17:03:21.063" starttime="20170728 17:03:21.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:03:21.065" level="INFO">${args22} = </msg>
<status status="PASS" endtime="20170728 17:03:21.065" starttime="20170728 17:03:21.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 17:03:21.068" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170728 17:03:21.069" starttime="20170728 17:03:21.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 17:03:21.071" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 17:03:21.071" starttime="20170728 17:03:21.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 17:03:21.074" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/cancelPay</msg>
<status status="PASS" endtime="20170728 17:03:21.075" starttime="20170728 17:03:21.072"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:21.076" starttime="20170728 17:03:21.059"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 17:03:21.080" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/cancelPay</msg>
<status status="PASS" endtime="20170728 17:03:21.081" starttime="20170728 17:03:21.079"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 17:03:21.083" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:21.084" starttime="20170728 17:03:21.082"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:21.088" starttime="20170728 17:03:21.087"></status>
</kw>
<msg timestamp="20170728 17:03:21.089" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:03:21.090" starttime="20170728 17:03:21.085"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>order_num</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:21.094" starttime="20170728 17:03:21.092"></status>
</kw>
<msg timestamp="20170728 17:03:21.095" level="INFO">${args11_after} = order_num</msg>
<status status="PASS" endtime="20170728 17:03:21.095" starttime="20170728 17:03:21.091"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:21.099" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:21.107" starttime="20170728 17:03:21.098"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:21.108" starttime="20170728 17:03:21.097"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:21.109" starttime="20170728 17:03:21.096"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 17:03:21.112" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num='32102151361500012119' and channel_no='1' </msg>
<msg timestamp="20170728 17:03:21.122" level="INFO">${database1} = ((9242, '32102151361500012119', 100000, 6135, 1, '32102151361500012119', '20170717133633HCE041747', Decimal('2000.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 17, 13, 36, 36), datetime.datetime(2017, ...</msg>
<status status="PASS" endtime="20170728 17:03:21.123" starttime="20170728 17:03:21.111"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 17:03:21.125" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 17:03:21.129" level="INFO">${database} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 14), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:21.130" starttime="20170728 17:03:21.124"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 17:03:21.133" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:21.133" starttime="20170728 17:03:21.131"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 17:03:21.136" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 17:03:21.137" starttime="20170728 17:03:21.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:21.140" level="INFO">获得account_id值为：6135</msg>
<status status="PASS" endtime="20170728 17:03:21.141" starttime="20170728 17:03:21.138"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:21.143" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:21.144" starttime="20170728 17:03:21.141"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:21.146" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:21.147" starttime="20170728 17:03:21.145"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:21.150" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:21.151" starttime="20170728 17:03:21.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:21.153" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 17:03:21.154" starttime="20170728 17:03:21.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 17:03:21.156" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:21.156" starttime="20170728 17:03:21.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:21.158" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:21.159" starttime="20170728 17:03:21.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:21.163" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:21.164" starttime="20170728 17:03:21.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:21.167" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:21.167" starttime="20170728 17:03:21.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:21.169" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:03:21.170" starttime="20170728 17:03:21.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 17:03:21.172" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:21.173" starttime="20170728 17:03:21.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 17:03:21.175" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/cancelPay</msg>
<status status="PASS" endtime="20170728 17:03:21.176" starttime="20170728 17:03:21.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170728 17:03:21.178" level="INFO">${database} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 14), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:21.179" starttime="20170728 17:03:21.177"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:21.180" starttime="20170728 17:03:21.077"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Ajb Withdraw Cancel" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:21.394" starttime="20170728 17:03:21.185"></status>
</kw>
<msg timestamp="20170728 17:03:21.397" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:21.398" starttime="20170728 17:03:21.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 17:03:21.405" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:21.407" starttime="20170728 17:03:21.403"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:21.410" starttime="20170728 17:03:21.182"></status>
</kw>
<kw name="字段验证" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:21.419" level="INFO">200</msg>
<status status="PASS" endtime="20170728 17:03:21.420" starttime="20170728 17:03:21.416"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 17:03:21.422" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:21.423" starttime="20170728 17:03:21.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 17:03:21.425" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 17:03:21.425" starttime="20170728 17:03:21.424"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 17:03:21.429" level="INFO">To JSON using : content={"data":null,"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 17:03:21.430" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 17:03:21.431" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': None, u'success': True}</msg>
<status status="PASS" endtime="20170728 17:03:21.431" starttime="20170728 17:03:21.426"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 17:03:21.434" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:21.434" starttime="20170728 17:03:21.432"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:21.437" starttime="20170728 17:03:21.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:21.439" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:21.440" starttime="20170728 17:03:21.438"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<assign>
<var>@{Link1}</var>
</assign>
<msg timestamp="20170728 17:03:21.442" level="INFO">@{Link1} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:21.442" starttime="20170728 17:03:21.441"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>"${value}" in @{Link1}</arg>
<arg>Get From Dictionary</arg>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${orderNum}</var>
</assign>
<msg timestamp="20170728 17:03:21.446" level="INFO">${orderNum} = None</msg>
<status status="PASS" endtime="20170728 17:03:21.447" starttime="20170728 17:03:21.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<msg timestamp="20170728 17:03:21.450" level="INFO">${orderNum} = None</msg>
<status status="PASS" endtime="20170728 17:03:21.451" starttime="20170728 17:03:21.448"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:21.452" starttime="20170728 17:03:21.413"></status>
</kw>
<kw name="确认取消的金额数" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:21.458" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:21.466" starttime="20170728 17:03:21.457"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:21.467" starttime="20170728 17:03:21.456"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:21.468" starttime="20170728 17:03:21.454"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>8</arg>
</arguments>
<assign>
<var>${event_code_judge}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>11</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:21.472" starttime="20170728 17:03:21.471"></status>
</kw>
<msg timestamp="20170728 17:03:21.473" level="INFO">${event_code_judge} = 11</msg>
<status status="PASS" endtime="20170728 17:03:21.473" starttime="20170728 17:03:21.469"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num ='${args11}' and event_code=${event_code_judge}</arg>
</arguments>
<assign>
<var>${search}</var>
</assign>
<msg timestamp="20170728 17:03:21.475" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num ='32102151361500012119' and event_code=11 </msg>
<msg timestamp="20170728 17:03:21.485" level="INFO">${search} = ((888888, '32102151361500975216', 100000, 6135, 1, '32102151361500012119', '', Decimal('2.00'), 1, 11, 2, 0, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)),)</msg>
<status status="PASS" endtime="20170728 17:03:21.486" starttime="20170728 17:03:21.474"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${search[0][7]}</arg>
</arguments>
<assign>
<var>${change_total_amount}</var>
</assign>
<msg timestamp="20170728 17:03:21.490" level="INFO">${change_total_amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:03:21.492" starttime="20170728 17:03:21.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${change_total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:21.495" level="INFO">${change_total_amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:03:21.496" starttime="20170728 17:03:21.493"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:21.497" starttime="20170728 17:03:21.453"></status>
</kw>
<kw name="表account_unilateral_bill的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_unilateral_bill</arg>
</arguments>
<msg timestamp="20170728 17:03:21.499" level="INFO">现在开始校验表account_unilateral_bill</msg>
<status status="PASS" endtime="20170728 17:03:21.500" starttime="20170728 17:03:21.498"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:21.504" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:21.513" starttime="20170728 17:03:21.503"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:21.514" starttime="20170728 17:03:21.502"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:21.515" starttime="20170728 17:03:21.501"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>account_unilateral_bill</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:21.521" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:21.527" starttime="20170728 17:03:21.520"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:21.529" starttime="20170728 17:03:21.519"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:21.530" starttime="20170728 17:03:21.518"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:03:21.532" level="INFO">${current_time} = 2017-07-28 17:03:21.532</msg>
<status status="PASS" endtime="20170728 17:03:21.532" starttime="20170728 17:03:21.531"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>0 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:21.534" level="INFO">${current_time_before_30} = 2017-07-28 17:03:21.532</msg>
<status status="PASS" endtime="20170728 17:03:21.535" starttime="20170728 17:03:21.533"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:21.539" level="INFO">${current_time_after_30} = 2017-07-28 17:05:01.532</msg>
<status status="PASS" endtime="20170728 17:03:21.540" starttime="20170728 17:03:21.537"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 17:03:21.542" level="INFO">Executing : Query  |  select * from account_unilateral_bill where user_id='100000' and update_time between' 2017-07-28 17:03:21.532' and '2017-07-28 17:05:01.532' </msg>
<msg timestamp="20170728 17:03:21.554" level="INFO">${updatetime} = ((7728, '32102151361501230569', 100000, 6135, '32102151361501230568', 1, 12, 2, Decimal('2.00'), None, datetime.datetime(2017, 7, 28, 17, 4, 26), datetime.datetime(2017, 7, 28, 17, 4, 26), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:21.555" starttime="20170728 17:03:21.541"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 17:03:21.557" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 17:03:21.558" starttime="20170728 17:03:21.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 17:03:21.561" level="INFO">account_unilateral_bill表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 17:03:21.561" starttime="20170728 17:03:21.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:21.563" level="INFO">${current_time_before_30} = 2017-07-28 17:03:21.532</msg>
<status status="PASS" endtime="20170728 17:03:21.564" starttime="20170728 17:03:21.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:21.568" level="INFO">${current_time_after_30} = 2017-07-28 17:05:01.532</msg>
<status status="PASS" endtime="20170728 17:03:21.569" starttime="20170728 17:03:21.566"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:21.570" starttime="20170728 17:03:21.516"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id} 'and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:21.573" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6135 'and update_time between' 2017-07-28 17:03:21.532' and '2017-07-28 17:05:01.532' </msg>
<msg timestamp="20170728 17:03:21.582" level="INFO">${user_id} = ((7728, '32102151361501230569', 100000, 6135, '32102151361501230568', 1, 12, 2, Decimal('2.00'), None, datetime.datetime(2017, 7, 28, 17, 4, 26), datetime.datetime(2017, 7, 28, 17, 4, 26), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:21.583" starttime="20170728 17:03:21.572"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:21.586" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:21.587" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:21.588" starttime="20170728 17:03:21.585"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:21.591" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:21.592" starttime="20170728 17:03:21.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:21.595" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:21.595" starttime="20170728 17:03:21.593"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:21.599" starttime="20170728 17:03:21.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:03:21.601" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:03:21.602" starttime="20170728 17:03:21.600"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:21.604" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:21.604" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:21.605" starttime="20170728 17:03:21.602"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:21.607" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:21.607" starttime="20170728 17:03:21.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:21.609" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:21.610" starttime="20170728 17:03:21.608"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:03:21.612" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:21.613" starttime="20170728 17:03:21.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 17:03:21.616" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 17:03:21.617" starttime="20170728 17:03:21.614"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>12</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:21.623" starttime="20170728 17:03:21.621"></status>
</kw>
<msg timestamp="20170728 17:03:21.623" level="INFO">${event_code} = 12</msg>
<status status="PASS" endtime="20170728 17:03:21.624" starttime="20170728 17:03:21.619"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:03:21.626" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:03:21.627" starttime="20170728 17:03:21.625"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:21.631" starttime="20170728 17:03:21.629"></status>
</kw>
<msg timestamp="20170728 17:03:21.633" level="INFO">${event_code_after} = 12</msg>
<status status="PASS" endtime="20170728 17:03:21.634" starttime="20170728 17:03:21.628"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:03:21.638" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:21.639" starttime="20170728 17:03:21.636"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:21.643" starttime="20170728 17:03:21.642"></status>
</kw>
<msg timestamp="20170728 17:03:21.645" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 17:03:21.646" starttime="20170728 17:03:21.640"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:21.649" starttime="20170728 17:03:21.648"></status>
</kw>
<msg timestamp="20170728 17:03:21.651" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:03:21.652" starttime="20170728 17:03:21.647"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:03:21.654" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:03:21.654" starttime="20170728 17:03:21.653"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>4</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:21.658" starttime="20170728 17:03:21.657"></status>
</kw>
<msg timestamp="20170728 17:03:21.658" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 17:03:21.659" starttime="20170728 17:03:21.655"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:21.665" starttime="20170728 17:03:21.664"></status>
</kw>
<msg timestamp="20170728 17:03:21.666" level="INFO">${total_amount} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:21.666" starttime="20170728 17:03:21.662"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${change_total_amount}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:21.670" starttime="20170728 17:03:21.669"></status>
</kw>
<msg timestamp="20170728 17:03:21.671" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:21.671" starttime="20170728 17:03:21.667"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:21.675" starttime="20170728 17:03:21.674"></status>
</kw>
<msg timestamp="20170728 17:03:21.676" level="INFO">${frozen_amount} = 826.0</msg>
<status status="PASS" endtime="20170728 17:03:21.677" starttime="20170728 17:03:21.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:21.678" level="INFO">${event_code} = 12</msg>
<status status="PASS" endtime="20170728 17:03:21.679" starttime="20170728 17:03:21.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:21.683" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 17:03:21.685" starttime="20170728 17:03:21.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:21.687" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 17:03:21.688" starttime="20170728 17:03:21.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:21.691" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:03:21.693" starttime="20170728 17:03:21.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:21.697" level="INFO">${total_amount} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:21.698" starttime="20170728 17:03:21.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:21.701" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:21.702" starttime="20170728 17:03:21.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:21.704" level="INFO">${frozen_amount} = 826.0</msg>
<status status="PASS" endtime="20170728 17:03:21.704" starttime="20170728 17:03:21.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:21.706" level="INFO">${event_code_after} = 12</msg>
<status status="PASS" endtime="20170728 17:03:21.707" starttime="20170728 17:03:21.705"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:21.708" starttime="20170728 17:03:21.618"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:21.712" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:21.713" starttime="20170728 17:03:21.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:21.715" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 17:03:21.715" starttime="20170728 17:03:21.714"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:21.717" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:21.718" starttime="20170728 17:03:21.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:21.720" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170728 17:03:21.721" starttime="20170728 17:03:21.719"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:21.723" starttime="20170728 17:03:21.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:21.725" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 17:03:21.726" starttime="20170728 17:03:21.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 17:03:21.728" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 17:03:21.730" starttime="20170728 17:03:21.727"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:21.733" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:21.734" starttime="20170728 17:03:21.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:21.736" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:21.737" starttime="20170728 17:03:21.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:21.740" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170728 17:03:21.740" starttime="20170728 17:03:21.739"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_unilateral}</var>
</assign>
<msg timestamp="20170728 17:03:21.742" level="INFO">${user_id[0][0]_unilateral} = 7728</msg>
<status status="PASS" endtime="20170728 17:03:21.744" starttime="20170728 17:03:21.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_unilateral}</arg>
</arguments>
<msg timestamp="20170728 17:03:21.746" level="INFO">${user_id[0][0]_unilateral} = 7728</msg>
<status status="PASS" endtime="20170728 17:03:21.747" starttime="20170728 17:03:21.745"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]_unilateral}'</arg>
</arguments>
<msg timestamp="20170728 17:03:21.749" level="INFO">Executing : Execute SQL String  |  delete from account_unilateral_bill where id ='7728' </msg>
<status status="PASS" endtime="20170728 17:03:21.787" starttime="20170728 17:03:21.748"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:21.789" starttime="20170728 17:03:21.497"></status>
</kw>
<kw name="表ajb_account_transaction" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170728 17:03:21.793" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170728 17:03:21.795" starttime="20170728 17:03:21.792"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:21.799" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:21.817" starttime="20170728 17:03:21.798"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:21.818" starttime="20170728 17:03:21.797"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:21.820" starttime="20170728 17:03:21.796"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>ajb_account_transaction</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:21.826" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:21.834" starttime="20170728 17:03:21.825"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:21.835" starttime="20170728 17:03:21.823"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:21.837" starttime="20170728 17:03:21.822"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:03:21.839" level="INFO">${current_time} = 2017-07-28 17:03:21.839</msg>
<status status="PASS" endtime="20170728 17:03:21.840" starttime="20170728 17:03:21.838"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>0 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:21.843" level="INFO">${current_time_before_30} = 2017-07-28 17:03:21.839</msg>
<status status="PASS" endtime="20170728 17:03:21.844" starttime="20170728 17:03:21.841"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:21.847" level="INFO">${current_time_after_30} = 2017-07-28 17:05:01.839</msg>
<status status="PASS" endtime="20170728 17:03:21.847" starttime="20170728 17:03:21.845"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 17:03:21.850" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and update_time between' 2017-07-28 17:03:21.839' and '2017-07-28 17:05:01.839' </msg>
<msg timestamp="20170728 17:03:21.859" level="INFO">${updatetime} = ((88889806, '32102151361501230567', 100000, 6135, 1, '32102151361500012119', None, Decimal('2.00'), 1, 12, 2, 0, datetime.datetime(2017, 7, 28, 17, 4, 26), datetime.datetime(2017, 7, 28, 17, 4, 26)),)</msg>
<status status="PASS" endtime="20170728 17:03:21.860" starttime="20170728 17:03:21.848"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 17:03:21.862" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 17:03:21.863" starttime="20170728 17:03:21.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 17:03:21.865" level="INFO">ajb_account_transaction表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 17:03:21.865" starttime="20170728 17:03:21.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:21.868" level="INFO">${current_time_before_30} = 2017-07-28 17:03:21.839</msg>
<status status="PASS" endtime="20170728 17:03:21.869" starttime="20170728 17:03:21.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:21.872" level="INFO">${current_time_after_30} = 2017-07-28 17:05:01.839</msg>
<status status="PASS" endtime="20170728 17:03:21.873" starttime="20170728 17:03:21.870"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:21.873" starttime="20170728 17:03:21.821"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:21.875" level="INFO">Executing : Query  |  select * from ajb_account_transaction where account_id ='6135' and update_time between' 2017-07-28 17:03:21.839' and '2017-07-28 17:05:01.839' </msg>
<msg timestamp="20170728 17:03:21.885" level="INFO">${user_id} = ((88889806, '32102151361501230567', 100000, 6135, 1, '32102151361500012119', None, Decimal('2.00'), 1, 12, 2, 0, datetime.datetime(2017, 7, 28, 17, 4, 26), datetime.datetime(2017, 7, 28, 17, 4, 26)),)</msg>
<status status="PASS" endtime="20170728 17:03:21.886" starttime="20170728 17:03:21.874"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:21.888" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:21.889" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:21.890" starttime="20170728 17:03:21.887"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:21.892" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:21.894" starttime="20170728 17:03:21.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:21.897" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:21.898" starttime="20170728 17:03:21.896"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:21.900" starttime="20170728 17:03:21.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:03:21.902" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:03:21.902" starttime="20170728 17:03:21.901"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:21.904" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:21.905" starttime="20170728 17:03:21.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no的值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:21.907" level="INFO">channel_no的值正确</msg>
<status status="PASS" endtime="20170728 17:03:21.907" starttime="20170728 17:03:21.906"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${args11}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${orderNum}</arg>
</arguments>
<assign>
<var>${bill_order_num}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:21.912" starttime="20170728 17:03:21.910"></status>
</kw>
<msg timestamp="20170728 17:03:21.912" level="INFO">${bill_order_num} = 32102151361500012119</msg>
<status status="PASS" endtime="20170728 17:03:21.913" starttime="20170728 17:03:21.908"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>${bill_order_num}</arg>
</arguments>
<msg timestamp="20170728 17:03:21.918" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:21.919" starttime="20170728 17:03:21.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170728 17:03:21.922" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170728 17:03:21.923" starttime="20170728 17:03:21.921"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>12</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:21.933" starttime="20170728 17:03:21.931"></status>
</kw>
<msg timestamp="20170728 17:03:21.933" level="INFO">${event_code} = 12</msg>
<status status="PASS" endtime="20170728 17:03:21.934" starttime="20170728 17:03:21.927"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:03:21.936" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:03:21.937" starttime="20170728 17:03:21.935"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:21.941" starttime="20170728 17:03:21.939"></status>
</kw>
<msg timestamp="20170728 17:03:21.943" level="INFO">${event_code_after} = 12</msg>
<status status="PASS" endtime="20170728 17:03:21.944" starttime="20170728 17:03:21.938"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:03:21.947" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:21.948" starttime="20170728 17:03:21.946"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:21.952" starttime="20170728 17:03:21.951"></status>
</kw>
<msg timestamp="20170728 17:03:21.953" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 17:03:21.953" starttime="20170728 17:03:21.949"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:21.956" starttime="20170728 17:03:21.955"></status>
</kw>
<msg timestamp="20170728 17:03:21.957" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:03:21.958" starttime="20170728 17:03:21.954"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:03:21.961" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:03:21.963" starttime="20170728 17:03:21.959"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>4</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:21.968" starttime="20170728 17:03:21.967"></status>
</kw>
<msg timestamp="20170728 17:03:21.968" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 17:03:21.969" starttime="20170728 17:03:21.965"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:21.974" starttime="20170728 17:03:21.972"></status>
</kw>
<msg timestamp="20170728 17:03:21.975" level="INFO">${total_amount} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:21.975" starttime="20170728 17:03:21.970"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${change_total_amount}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:21.981" starttime="20170728 17:03:21.980"></status>
</kw>
<msg timestamp="20170728 17:03:21.982" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:21.982" starttime="20170728 17:03:21.978"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:21.986" starttime="20170728 17:03:21.985"></status>
</kw>
<msg timestamp="20170728 17:03:21.987" level="INFO">${frozen_amount} = 826.0</msg>
<status status="PASS" endtime="20170728 17:03:21.988" starttime="20170728 17:03:21.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:21.991" level="INFO">${event_code} = 12</msg>
<status status="PASS" endtime="20170728 17:03:21.992" starttime="20170728 17:03:21.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:21.995" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 17:03:21.996" starttime="20170728 17:03:21.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:21.998" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 17:03:21.998" starttime="20170728 17:03:21.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:22.000" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:03:22.001" starttime="20170728 17:03:21.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:22.003" level="INFO">${total_amount} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:22.004" starttime="20170728 17:03:22.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:22.008" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:22.009" starttime="20170728 17:03:22.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:22.013" level="INFO">${frozen_amount} = 826.0</msg>
<status status="PASS" endtime="20170728 17:03:22.014" starttime="20170728 17:03:22.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:22.016" level="INFO">${event_code_after} = 12</msg>
<status status="PASS" endtime="20170728 17:03:22.017" starttime="20170728 17:03:22.015"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:22.018" starttime="20170728 17:03:21.924"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170728 17:03:22.020" level="INFO">${pay_no_after} = None</msg>
<status status="PASS" endtime="20170728 17:03:22.020" starttime="20170728 17:03:22.019"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170728 17:03:22.023" level="INFO">Length is 4</msg>
<msg timestamp="20170728 17:03:22.024" level="INFO">${pay_no_after_length} = 4</msg>
<status status="PASS" endtime="20170728 17:03:22.025" starttime="20170728 17:03:22.022"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:22.028" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:22.028" starttime="20170728 17:03:22.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170728 17:03:22.030" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170728 17:03:22.031" starttime="20170728 17:03:22.029"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:22.033" starttime="20170728 17:03:22.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:22.034" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 17:03:22.036" starttime="20170728 17:03:22.034"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:03:22.040" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:22.040" starttime="20170728 17:03:22.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 17:03:22.042" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 17:03:22.043" starttime="20170728 17:03:22.041"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][9]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:22.046" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:22.047" starttime="20170728 17:03:22.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:22.049" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 17:03:22.049" starttime="20170728 17:03:22.048"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 17:03:22.051" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:22.052" starttime="20170728 17:03:22.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170728 17:03:22.055" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170728 17:03:22.056" starttime="20170728 17:03:22.053"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:22.059" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:22.061" starttime="20170728 17:03:22.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:22.063" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:22.064" starttime="20170728 17:03:22.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 17:03:22.066" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 17:03:22.067" starttime="20170728 17:03:22.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:22.070" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170728 17:03:22.072" starttime="20170728 17:03:22.068"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170728 17:03:22.074" level="INFO">${user_id[0][0]_transaction} = 88889806</msg>
<status status="PASS" endtime="20170728 17:03:22.074" starttime="20170728 17:03:22.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170728 17:03:22.077" level="INFO">${user_id[0][0]_transaction} = 88889806</msg>
<status status="PASS" endtime="20170728 17:03:22.078" starttime="20170728 17:03:22.075"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id[0][0]}'</arg>
</arguments>
<assign>
<var>${user_id_unilateral_delete1}</var>
</assign>
<msg timestamp="20170728 17:03:22.080" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88889806' </msg>
<msg timestamp="20170728 17:03:22.120" level="INFO">${user_id_unilateral_delete1} = None</msg>
<status status="PASS" endtime="20170728 17:03:22.121" starttime="20170728 17:03:22.079"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:22.121" starttime="20170728 17:03:21.790"></status>
</kw>
<kw name="表account_amount的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_amount</arg>
</arguments>
<msg timestamp="20170728 17:03:22.125" level="INFO">现在开始校验表account_amount</msg>
<status status="PASS" endtime="20170728 17:03:22.125" starttime="20170728 17:03:22.124"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:22.132" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:22.140" starttime="20170728 17:03:22.130"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:22.141" starttime="20170728 17:03:22.128"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:22.142" starttime="20170728 17:03:22.127"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time1}</var>
</assign>
<msg timestamp="20170728 17:03:22.146" level="INFO">${current_time1} = 2017-07-28 17:03:22.146</msg>
<status status="PASS" endtime="20170728 17:03:22.147" starttime="20170728 17:03:22.144"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:22.150" level="INFO">${current_time1_before_30} = 2017-07-28 17:02:22.146</msg>
<status status="PASS" endtime="20170728 17:03:22.151" starttime="20170728 17:03:22.148"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:22.153" level="INFO">${current_time1_after_30} = 2017-07-28 17:04:22.146</msg>
<status status="PASS" endtime="20170728 17:03:22.153" starttime="20170728 17:03:22.152"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:22.155" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 17:03:22.164" level="INFO">${user_id} = ((12449, 6135, Decimal('50423.00'), Decimal('49597.00'), Decimal('826.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 26), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:22.165" starttime="20170728 17:03:22.154"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>12</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:22.170" starttime="20170728 17:03:22.169"></status>
</kw>
<msg timestamp="20170728 17:03:22.171" level="INFO">${event_code} = 12</msg>
<status status="PASS" endtime="20170728 17:03:22.171" starttime="20170728 17:03:22.167"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:03:22.173" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:03:22.174" starttime="20170728 17:03:22.172"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:22.178" starttime="20170728 17:03:22.176"></status>
</kw>
<msg timestamp="20170728 17:03:22.179" level="INFO">${event_code_after} = 12</msg>
<status status="PASS" endtime="20170728 17:03:22.181" starttime="20170728 17:03:22.175"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:03:22.183" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:22.183" starttime="20170728 17:03:22.182"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:22.187" starttime="20170728 17:03:22.186"></status>
</kw>
<msg timestamp="20170728 17:03:22.188" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 17:03:22.189" starttime="20170728 17:03:22.184"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:22.195" starttime="20170728 17:03:22.193"></status>
</kw>
<msg timestamp="20170728 17:03:22.196" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:03:22.197" starttime="20170728 17:03:22.190"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:03:22.199" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:03:22.200" starttime="20170728 17:03:22.198"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>4</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:22.204" starttime="20170728 17:03:22.203"></status>
</kw>
<msg timestamp="20170728 17:03:22.205" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 17:03:22.206" starttime="20170728 17:03:22.202"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:22.211" starttime="20170728 17:03:22.208"></status>
</kw>
<msg timestamp="20170728 17:03:22.212" level="INFO">${total_amount} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:22.212" starttime="20170728 17:03:22.207"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${change_total_amount}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:22.217" starttime="20170728 17:03:22.215"></status>
</kw>
<msg timestamp="20170728 17:03:22.218" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:22.218" starttime="20170728 17:03:22.213"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:22.223" starttime="20170728 17:03:22.222"></status>
</kw>
<msg timestamp="20170728 17:03:22.225" level="INFO">${frozen_amount} = 826.0</msg>
<status status="PASS" endtime="20170728 17:03:22.226" starttime="20170728 17:03:22.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:22.229" level="INFO">${event_code} = 12</msg>
<status status="PASS" endtime="20170728 17:03:22.230" starttime="20170728 17:03:22.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:22.232" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 17:03:22.233" starttime="20170728 17:03:22.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:22.235" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 17:03:22.236" starttime="20170728 17:03:22.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:22.238" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:03:22.239" starttime="20170728 17:03:22.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:22.240" level="INFO">${total_amount} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:22.242" starttime="20170728 17:03:22.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:22.247" level="INFO">${balance_amount} = 49597.0</msg>
<status status="PASS" endtime="20170728 17:03:22.247" starttime="20170728 17:03:22.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:22.249" level="INFO">${frozen_amount} = 826.0</msg>
<status status="PASS" endtime="20170728 17:03:22.250" starttime="20170728 17:03:22.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:22.252" level="INFO">${event_code_after} = 12</msg>
<status status="PASS" endtime="20170728 17:03:22.252" starttime="20170728 17:03:22.251"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:22.254" starttime="20170728 17:03:22.165"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:22.258" starttime="20170728 17:03:22.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:22.261" level="INFO">total_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:22.262" starttime="20170728 17:03:22.260"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:22.264" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:22.265" starttime="20170728 17:03:22.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:22.267" level="INFO">balance_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:22.267" starttime="20170728 17:03:22.266"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:22.270" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:22.270" starttime="20170728 17:03:22.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:22.273" level="INFO">frozen_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:22.274" starttime="20170728 17:03:22.272"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:22.276" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:22.277" starttime="20170728 17:03:22.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:22.279" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:22.280" starttime="20170728 17:03:22.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:22.282" level="INFO">表account_amount校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:22.282" starttime="20170728 17:03:22.281"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:22.283" starttime="20170728 17:03:22.122"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<msg timestamp="20170728 17:03:22.286" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=888888 </msg>
<status status="PASS" endtime="20170728 17:03:22.384" starttime="20170728 17:03:22.285"></status>
</kw>
<kw name="艾佳币恢复数目" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:22.390" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:22.401" starttime="20170728 17:03:22.388"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:22.403" starttime="20170728 17:03:22.387"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:22.404" starttime="20170728 17:03:22.386"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount \ SET total_amount=${database[0][2]},balance_amount=${database[0][3]},frozen_amount=${database[0][4]}where account_id="${account_id}";</arg>
</arguments>
<msg timestamp="20170728 17:03:22.406" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount  SET total_amount=50423.00,balance_amount=49595.00,frozen_amount=828.00where account_id="6135"; </msg>
<status status="PASS" endtime="20170728 17:03:22.458" starttime="20170728 17:03:22.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170728 17:03:22.462" level="INFO">成功</msg>
<status status="PASS" endtime="20170728 17:03:22.462" starttime="20170728 17:03:22.460"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:22.463" starttime="20170728 17:03:22.385"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:22.464" critical="yes" starttime="20170728 17:03:20.917"></status>
</test>
<status status="PASS" endtime="20170728 17:03:22.466" starttime="20170728 17:03:20.870"></status>
</suite>
<suite source="F:\logs and reports\账户中心\订单\订单支付冻结（线上）.txt" id="s1-s2-s2" name="订单支付冻结（线上）">
<test id="s1-s2-s2-t1" name="输入正确的userId和orderNum，ajbAmount的参数">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:22.500" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:22.509" starttime="20170728 17:03:22.498"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:22.511" starttime="20170728 17:03:22.496"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:22.512" starttime="20170728 17:03:22.495"></status>
</kw>
<kw name="清数据" library="myResource">
<arguments>
<arg>8880888</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:22.517" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:22.526" starttime="20170728 17:03:22.516"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:22.528" starttime="20170728 17:03:22.515"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:22.529" starttime="20170728 17:03:22.514"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170728 17:03:22.531" level="INFO">Executing : Query  |  select * from ajb_account_transaction where id=8880888 </msg>
<msg timestamp="20170728 17:03:22.540" level="INFO">${check} = ()</msg>
<status status="PASS" endtime="20170728 17:03:22.541" starttime="20170728 17:03:22.530"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170728 17:03:22.543" level="INFO">Length is 0</msg>
<msg timestamp="20170728 17:03:22.544" level="INFO">${check_length} = 0</msg>
<status status="PASS" endtime="20170728 17:03:22.545" starttime="20170728 17:03:22.542"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} != 0</arg>
<arg>execute sql string</arg>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>数据库之前没有数据</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库之前没有数据</arg>
</arguments>
<msg timestamp="20170728 17:03:22.548" level="INFO">数据库之前没有数据</msg>
<status status="PASS" endtime="20170728 17:03:22.549" starttime="20170728 17:03:22.547"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:22.549" starttime="20170728 17:03:22.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库里面的这条数据清理成功啦。</arg>
</arguments>
<msg timestamp="20170728 17:03:22.551" level="INFO">数据库里面的这条数据清理成功啦。</msg>
<status status="PASS" endtime="20170728 17:03:22.552" starttime="20170728 17:03:22.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_delete}</arg>
</arguments>
<msg timestamp="20170728 17:03:22.555" level="INFO">${id_delete} = 8880888</msg>
<status status="PASS" endtime="20170728 17:03:22.556" starttime="20170728 17:03:22.553"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:22.557" starttime="20170728 17:03:22.513"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("${id_delete}","32102151361500284867","100000","6135","1","32102151361500284867","","2000","1","6","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170728 17:03:22.559" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("8880888","32102151361500284867","100000","6135","1","32102151361500284867","","2000","1","6","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170728 17:03:22.670" starttime="20170728 17:03:22.558"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>100000</arg>
<arg>32102151361500284867</arg>
<arg>10</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:03:22.676" level="INFO">${args11} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:22.677" starttime="20170728 17:03:22.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:03:22.681" level="INFO">${args22} = 32102151361500284867</msg>
<status status="PASS" endtime="20170728 17:03:22.682" starttime="20170728 17:03:22.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 17:03:22.685" level="INFO">${args33} = 10</msg>
<status status="PASS" endtime="20170728 17:03:22.686" starttime="20170728 17:03:22.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 17:03:22.691" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 17:03:22.693" starttime="20170728 17:03:22.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 17:03:22.698" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/freezePay</msg>
<status status="PASS" endtime="20170728 17:03:22.699" starttime="20170728 17:03:22.696"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:22.701" starttime="20170728 17:03:22.672"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 17:03:22.709" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/freezePay</msg>
<status status="PASS" endtime="20170728 17:03:22.710" starttime="20170728 17:03:22.706"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 17:03:22.713" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:22.713" starttime="20170728 17:03:22.712"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:22.717" starttime="20170728 17:03:22.716"></status>
</kw>
<msg timestamp="20170728 17:03:22.718" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:03:22.718" starttime="20170728 17:03:22.714"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>user_id</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:22.722" starttime="20170728 17:03:22.721"></status>
</kw>
<msg timestamp="20170728 17:03:22.722" level="INFO">${args11_after} = user_id</msg>
<status status="PASS" endtime="20170728 17:03:22.723" starttime="20170728 17:03:22.719"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:22.729" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:22.737" starttime="20170728 17:03:22.728"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:22.739" starttime="20170728 17:03:22.726"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:22.740" starttime="20170728 17:03:22.724"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 17:03:22.742" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and channel_no='1' </msg>
<msg timestamp="20170728 17:03:22.761" level="INFO">${database1} = ((9100, '32102151361499943857', 100000, 6135, 1, '32102151361499943857', '20170714000118SSP038852', Decimal('2.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, ...</msg>
<status status="PASS" endtime="20170728 17:03:22.762" starttime="20170728 17:03:22.741"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 17:03:22.764" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 17:03:22.769" level="INFO">${database} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 27), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:22.770" starttime="20170728 17:03:22.763"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 17:03:22.772" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:22.773" starttime="20170728 17:03:22.771"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 17:03:22.775" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 17:03:22.777" starttime="20170728 17:03:22.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:22.779" level="INFO">获得account_id值为：6135</msg>
<status status="PASS" endtime="20170728 17:03:22.779" starttime="20170728 17:03:22.778"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:22.782" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:22.782" starttime="20170728 17:03:22.780"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:22.786" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:22.787" starttime="20170728 17:03:22.784"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:22.789" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:22.790" starttime="20170728 17:03:22.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:22.792" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 17:03:22.793" starttime="20170728 17:03:22.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 17:03:22.795" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:22.796" starttime="20170728 17:03:22.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:22.798" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:22.798" starttime="20170728 17:03:22.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:22.800" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:22.801" starttime="20170728 17:03:22.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:22.805" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:22.806" starttime="20170728 17:03:22.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:22.808" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:03:22.810" starttime="20170728 17:03:22.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 17:03:22.812" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:22.813" starttime="20170728 17:03:22.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 17:03:22.816" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/freezePay</msg>
<status status="PASS" endtime="20170728 17:03:22.818" starttime="20170728 17:03:22.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170728 17:03:22.820" level="INFO">${database} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 27), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:22.821" starttime="20170728 17:03:22.819"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:22.822" starttime="20170728 17:03:22.703"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Freeze Pay" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:23.004" starttime="20170728 17:03:22.826"></status>
</kw>
<msg timestamp="20170728 17:03:23.007" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:23.009" starttime="20170728 17:03:22.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 17:03:23.013" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:23.014" starttime="20170728 17:03:23.011"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:23.016" starttime="20170728 17:03:22.822"></status>
</kw>
<kw name="字段验证" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:23.021" level="INFO">200</msg>
<status status="PASS" endtime="20170728 17:03:23.023" starttime="20170728 17:03:23.018"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 17:03:23.027" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:23.028" starttime="20170728 17:03:23.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 17:03:23.030" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 17:03:23.031" starttime="20170728 17:03:23.029"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 17:03:23.037" level="INFO">To JSON using : content={"data":null,"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 17:03:23.039" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 17:03:23.040" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': None, u'success': True}</msg>
<status status="PASS" endtime="20170728 17:03:23.041" starttime="20170728 17:03:23.033"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 17:03:23.044" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:23.045" starttime="20170728 17:03:23.043"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:23.047" starttime="20170728 17:03:23.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:23.049" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:23.050" starttime="20170728 17:03:23.048"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<assign>
<var>@{Link1}</var>
</assign>
<msg timestamp="20170728 17:03:23.051" level="INFO">@{Link1} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:23.052" starttime="20170728 17:03:23.050"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>"${value}" in @{Link1}</arg>
<arg>Get From Dictionary</arg>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${orderNum}</var>
</assign>
<msg timestamp="20170728 17:03:23.055" level="INFO">${orderNum} = None</msg>
<status status="PASS" endtime="20170728 17:03:23.055" starttime="20170728 17:03:23.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<msg timestamp="20170728 17:03:23.057" level="INFO">${orderNum} = None</msg>
<status status="PASS" endtime="20170728 17:03:23.058" starttime="20170728 17:03:23.056"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:23.059" starttime="20170728 17:03:23.017"></status>
</kw>
<kw name="表account_unilateral_bill的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_unilateral_bill</arg>
</arguments>
<msg timestamp="20170728 17:03:23.062" level="INFO">现在开始校验表account_unilateral_bill</msg>
<status status="PASS" endtime="20170728 17:03:23.063" starttime="20170728 17:03:23.062"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:23.071" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:23.082" starttime="20170728 17:03:23.069"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:23.083" starttime="20170728 17:03:23.068"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:23.084" starttime="20170728 17:03:23.065"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>account_unilateral_bill</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:23.089" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:23.099" starttime="20170728 17:03:23.088"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:23.101" starttime="20170728 17:03:23.087"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:23.102" starttime="20170728 17:03:23.086"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:03:23.105" level="INFO">${current_time} = 2017-07-28 17:03:23.104</msg>
<status status="PASS" endtime="20170728 17:03:23.105" starttime="20170728 17:03:23.104"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>0 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:23.107" level="INFO">${current_time_before_30} = 2017-07-28 17:03:23.104</msg>
<status status="PASS" endtime="20170728 17:03:23.108" starttime="20170728 17:03:23.106"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:23.111" level="INFO">${current_time_after_30} = 2017-07-28 17:05:03.104</msg>
<status status="PASS" endtime="20170728 17:03:23.112" starttime="20170728 17:03:23.110"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 17:03:23.114" level="INFO">Executing : Query  |  select * from account_unilateral_bill where user_id='100000' and update_time between' 2017-07-28 17:03:23.104' and '2017-07-28 17:05:03.104' </msg>
<msg timestamp="20170728 17:03:23.124" level="INFO">${updatetime} = ((7729, '32102151361501230572', 100000, 6135, '32102151361501230571', 1, 11, 1, Decimal('10.00'), None, datetime.datetime(2017, 7, 28, 17, 4, 28), datetime.datetime(2017, 7, 28, 17, 4, 28), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:23.125" starttime="20170728 17:03:23.113"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 17:03:23.128" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 17:03:23.130" starttime="20170728 17:03:23.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 17:03:23.133" level="INFO">account_unilateral_bill表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 17:03:23.134" starttime="20170728 17:03:23.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:23.137" level="INFO">${current_time_before_30} = 2017-07-28 17:03:23.104</msg>
<status status="PASS" endtime="20170728 17:03:23.138" starttime="20170728 17:03:23.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:23.141" level="INFO">${current_time_after_30} = 2017-07-28 17:05:03.104</msg>
<status status="PASS" endtime="20170728 17:03:23.143" starttime="20170728 17:03:23.139"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:23.145" starttime="20170728 17:03:23.085"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id} 'and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:23.147" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6135 'and update_time between' 2017-07-28 17:03:23.104' and '2017-07-28 17:05:03.104' </msg>
<msg timestamp="20170728 17:03:23.153" level="INFO">${user_id} = ((7729, '32102151361501230572', 100000, 6135, '32102151361501230571', 1, 11, 1, Decimal('10.00'), None, datetime.datetime(2017, 7, 28, 17, 4, 28), datetime.datetime(2017, 7, 28, 17, 4, 28), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:23.154" starttime="20170728 17:03:23.146"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:23.156" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:23.156" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:23.157" starttime="20170728 17:03:23.155"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:23.159" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:23.161" starttime="20170728 17:03:23.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:23.163" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:23.164" starttime="20170728 17:03:23.163"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:23.166" starttime="20170728 17:03:23.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:03:23.168" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:03:23.169" starttime="20170728 17:03:23.167"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:23.170" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:23.171" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:23.172" starttime="20170728 17:03:23.169"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:23.173" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:23.174" starttime="20170728 17:03:23.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:23.177" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:23.179" starttime="20170728 17:03:23.175"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:03:23.182" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:23.183" starttime="20170728 17:03:23.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 17:03:23.185" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 17:03:23.185" starttime="20170728 17:03:23.184"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>11</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:23.192" starttime="20170728 17:03:23.191"></status>
</kw>
<msg timestamp="20170728 17:03:23.194" level="INFO">${event_code} = 11</msg>
<status status="PASS" endtime="20170728 17:03:23.195" starttime="20170728 17:03:23.187"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:03:23.199" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:03:23.200" starttime="20170728 17:03:23.197"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:23.203" starttime="20170728 17:03:23.202"></status>
</kw>
<msg timestamp="20170728 17:03:23.204" level="INFO">${event_code_after} = 11</msg>
<status status="PASS" endtime="20170728 17:03:23.205" starttime="20170728 17:03:23.201"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:03:23.206" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:23.207" starttime="20170728 17:03:23.205"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:23.213" starttime="20170728 17:03:23.212"></status>
</kw>
<msg timestamp="20170728 17:03:23.214" level="INFO">${command_type} = 1</msg>
<status status="PASS" endtime="20170728 17:03:23.215" starttime="20170728 17:03:23.208"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:23.218" starttime="20170728 17:03:23.217"></status>
</kw>
<msg timestamp="20170728 17:03:23.220" level="INFO">${amount} = 10</msg>
<status status="PASS" endtime="20170728 17:03:23.221" starttime="20170728 17:03:23.216"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:03:23.224" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:03:23.225" starttime="20170728 17:03:23.223"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>4</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:23.229" starttime="20170728 17:03:23.229"></status>
</kw>
<msg timestamp="20170728 17:03:23.230" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 17:03:23.231" starttime="20170728 17:03:23.227"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:23.234" starttime="20170728 17:03:23.233"></status>
</kw>
<msg timestamp="20170728 17:03:23.236" level="INFO">${total_amount} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:23.237" starttime="20170728 17:03:23.232"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${balance_amount_before}-${args33}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:23.244" starttime="20170728 17:03:23.241"></status>
</kw>
<msg timestamp="20170728 17:03:23.245" level="INFO">${balance_amount} = 49585.0</msg>
<status status="PASS" endtime="20170728 17:03:23.245" starttime="20170728 17:03:23.239"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${frozen_amount_before}+${args33}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:23.249" starttime="20170728 17:03:23.248"></status>
</kw>
<msg timestamp="20170728 17:03:23.250" level="INFO">${frozen_amount} = 838.0</msg>
<status status="PASS" endtime="20170728 17:03:23.252" starttime="20170728 17:03:23.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:23.255" level="INFO">${event_code} = 11</msg>
<status status="PASS" endtime="20170728 17:03:23.256" starttime="20170728 17:03:23.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:23.258" level="INFO">${command_type} = 1</msg>
<status status="PASS" endtime="20170728 17:03:23.259" starttime="20170728 17:03:23.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:23.261" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 17:03:23.262" starttime="20170728 17:03:23.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:23.264" level="INFO">${amount} = 10</msg>
<status status="PASS" endtime="20170728 17:03:23.264" starttime="20170728 17:03:23.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:23.266" level="INFO">${total_amount} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:23.267" starttime="20170728 17:03:23.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:23.270" level="INFO">${balance_amount} = 49585.0</msg>
<status status="PASS" endtime="20170728 17:03:23.271" starttime="20170728 17:03:23.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:23.274" level="INFO">${frozen_amount} = 838.0</msg>
<status status="PASS" endtime="20170728 17:03:23.274" starttime="20170728 17:03:23.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:23.277" level="INFO">${event_code_after} = 11</msg>
<status status="PASS" endtime="20170728 17:03:23.278" starttime="20170728 17:03:23.276"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:23.279" starttime="20170728 17:03:23.186"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:23.281" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:23.282" starttime="20170728 17:03:23.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:23.283" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 17:03:23.284" starttime="20170728 17:03:23.283"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:23.286" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:23.286" starttime="20170728 17:03:23.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:23.290" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170728 17:03:23.291" starttime="20170728 17:03:23.287"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:23.294" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:23.295" starttime="20170728 17:03:23.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:23.297" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 17:03:23.297" starttime="20170728 17:03:23.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 17:03:23.299" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 17:03:23.300" starttime="20170728 17:03:23.298"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:23.301" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:23.302" starttime="20170728 17:03:23.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:23.305" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:23.305" starttime="20170728 17:03:23.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:23.307" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170728 17:03:23.308" starttime="20170728 17:03:23.306"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_unilateral}</var>
</assign>
<msg timestamp="20170728 17:03:23.310" level="INFO">${user_id[0][0]_unilateral} = 7729</msg>
<status status="PASS" endtime="20170728 17:03:23.310" starttime="20170728 17:03:23.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_unilateral}</arg>
</arguments>
<msg timestamp="20170728 17:03:23.312" level="INFO">${user_id[0][0]_unilateral} = 7729</msg>
<status status="PASS" endtime="20170728 17:03:23.313" starttime="20170728 17:03:23.311"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]_unilateral}'</arg>
</arguments>
<msg timestamp="20170728 17:03:23.315" level="INFO">Executing : Execute SQL String  |  delete from account_unilateral_bill where id ='7729' </msg>
<status status="PASS" endtime="20170728 17:03:23.381" starttime="20170728 17:03:23.314"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:23.384" starttime="20170728 17:03:23.060"></status>
</kw>
<kw name="表ajb_account_transaction" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170728 17:03:23.393" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170728 17:03:23.395" starttime="20170728 17:03:23.390"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:23.403" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:23.409" starttime="20170728 17:03:23.402"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:23.411" starttime="20170728 17:03:23.400"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:23.412" starttime="20170728 17:03:23.398"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>ajb_account_transaction</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:23.418" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:23.428" starttime="20170728 17:03:23.417"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:23.430" starttime="20170728 17:03:23.416"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:23.431" starttime="20170728 17:03:23.415"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:03:23.433" level="INFO">${current_time} = 2017-07-28 17:03:23.433</msg>
<status status="PASS" endtime="20170728 17:03:23.433" starttime="20170728 17:03:23.432"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>0 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:23.436" level="INFO">${current_time_before_30} = 2017-07-28 17:03:23.433</msg>
<status status="PASS" endtime="20170728 17:03:23.437" starttime="20170728 17:03:23.434"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:23.440" level="INFO">${current_time_after_30} = 2017-07-28 17:05:03.433</msg>
<status status="PASS" endtime="20170728 17:03:23.441" starttime="20170728 17:03:23.438"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 17:03:23.445" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and update_time between' 2017-07-28 17:03:23.433' and '2017-07-28 17:05:03.433' </msg>
<msg timestamp="20170728 17:03:23.458" level="INFO">${updatetime} = ((88889807, '32102151361501230570', 100000, 6135, 1, '32102151361500284867', None, Decimal('10.00'), 1, 11, 2, 0, datetime.datetime(2017, 7, 28, 17, 4, 28), datetime.datetime(2017, 7, 28, 17, 4, 28)),...</msg>
<status status="PASS" endtime="20170728 17:03:23.460" starttime="20170728 17:03:23.443"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 17:03:23.463" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 17:03:23.464" starttime="20170728 17:03:23.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 17:03:23.465" level="INFO">ajb_account_transaction表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 17:03:23.466" starttime="20170728 17:03:23.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:23.468" level="INFO">${current_time_before_30} = 2017-07-28 17:03:23.433</msg>
<status status="PASS" endtime="20170728 17:03:23.469" starttime="20170728 17:03:23.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:23.470" level="INFO">${current_time_after_30} = 2017-07-28 17:05:03.433</msg>
<status status="PASS" endtime="20170728 17:03:23.471" starttime="20170728 17:03:23.469"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:23.472" starttime="20170728 17:03:23.414"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:23.474" level="INFO">Executing : Query  |  select * from ajb_account_transaction where account_id ='6135' and update_time between' 2017-07-28 17:03:23.433' and '2017-07-28 17:05:03.433' </msg>
<msg timestamp="20170728 17:03:23.485" level="INFO">${user_id} = ((88889807, '32102151361501230570', 100000, 6135, 1, '32102151361500284867', None, Decimal('10.00'), 1, 11, 2, 0, datetime.datetime(2017, 7, 28, 17, 4, 28), datetime.datetime(2017, 7, 28, 17, 4, 28)),...</msg>
<status status="PASS" endtime="20170728 17:03:23.485" starttime="20170728 17:03:23.473"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:23.488" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:23.490" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:23.491" starttime="20170728 17:03:23.486"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:23.494" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:23.495" starttime="20170728 17:03:23.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:23.496" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:23.497" starttime="20170728 17:03:23.496"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:23.499" starttime="20170728 17:03:23.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:03:23.502" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:03:23.503" starttime="20170728 17:03:23.500"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:23.506" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:23.507" starttime="20170728 17:03:23.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no的值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:23.510" level="INFO">channel_no的值正确</msg>
<status status="PASS" endtime="20170728 17:03:23.511" starttime="20170728 17:03:23.508"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${args11}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${orderNum}</arg>
</arguments>
<assign>
<var>${bill_order_num}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:23.514" starttime="20170728 17:03:23.513"></status>
</kw>
<msg timestamp="20170728 17:03:23.515" level="INFO">${bill_order_num} = 32102151361500284867</msg>
<status status="PASS" endtime="20170728 17:03:23.516" starttime="20170728 17:03:23.512"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>${bill_order_num}</arg>
</arguments>
<msg timestamp="20170728 17:03:23.519" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:23.520" starttime="20170728 17:03:23.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170728 17:03:23.521" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170728 17:03:23.522" starttime="20170728 17:03:23.521"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>11</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:23.528" starttime="20170728 17:03:23.527"></status>
</kw>
<msg timestamp="20170728 17:03:23.529" level="INFO">${event_code} = 11</msg>
<status status="PASS" endtime="20170728 17:03:23.530" starttime="20170728 17:03:23.524"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:03:23.532" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:03:23.533" starttime="20170728 17:03:23.531"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:23.538" starttime="20170728 17:03:23.536"></status>
</kw>
<msg timestamp="20170728 17:03:23.539" level="INFO">${event_code_after} = 11</msg>
<status status="PASS" endtime="20170728 17:03:23.539" starttime="20170728 17:03:23.533"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:03:23.542" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:23.542" starttime="20170728 17:03:23.540"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:23.546" starttime="20170728 17:03:23.545"></status>
</kw>
<msg timestamp="20170728 17:03:23.547" level="INFO">${command_type} = 1</msg>
<status status="PASS" endtime="20170728 17:03:23.548" starttime="20170728 17:03:23.543"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:23.551" starttime="20170728 17:03:23.550"></status>
</kw>
<msg timestamp="20170728 17:03:23.552" level="INFO">${amount} = 10</msg>
<status status="PASS" endtime="20170728 17:03:23.552" starttime="20170728 17:03:23.548"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:03:23.555" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:03:23.556" starttime="20170728 17:03:23.553"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>4</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:23.561" starttime="20170728 17:03:23.560"></status>
</kw>
<msg timestamp="20170728 17:03:23.562" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 17:03:23.562" starttime="20170728 17:03:23.558"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:23.568" starttime="20170728 17:03:23.567"></status>
</kw>
<msg timestamp="20170728 17:03:23.570" level="INFO">${total_amount} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:23.571" starttime="20170728 17:03:23.564"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${balance_amount_before}-${args33}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:23.577" starttime="20170728 17:03:23.575"></status>
</kw>
<msg timestamp="20170728 17:03:23.578" level="INFO">${balance_amount} = 49585.0</msg>
<status status="PASS" endtime="20170728 17:03:23.578" starttime="20170728 17:03:23.572"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${frozen_amount_before}+${args33}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:23.584" starttime="20170728 17:03:23.583"></status>
</kw>
<msg timestamp="20170728 17:03:23.585" level="INFO">${frozen_amount} = 838.0</msg>
<status status="PASS" endtime="20170728 17:03:23.585" starttime="20170728 17:03:23.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:23.587" level="INFO">${event_code} = 11</msg>
<status status="PASS" endtime="20170728 17:03:23.588" starttime="20170728 17:03:23.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:23.591" level="INFO">${command_type} = 1</msg>
<status status="PASS" endtime="20170728 17:03:23.591" starttime="20170728 17:03:23.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:23.594" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 17:03:23.595" starttime="20170728 17:03:23.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:23.597" level="INFO">${amount} = 10</msg>
<status status="PASS" endtime="20170728 17:03:23.597" starttime="20170728 17:03:23.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:23.600" level="INFO">${total_amount} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:23.601" starttime="20170728 17:03:23.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:23.604" level="INFO">${balance_amount} = 49585.0</msg>
<status status="PASS" endtime="20170728 17:03:23.604" starttime="20170728 17:03:23.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:23.607" level="INFO">${frozen_amount} = 838.0</msg>
<status status="PASS" endtime="20170728 17:03:23.607" starttime="20170728 17:03:23.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:23.610" level="INFO">${event_code_after} = 11</msg>
<status status="PASS" endtime="20170728 17:03:23.610" starttime="20170728 17:03:23.608"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:23.611" starttime="20170728 17:03:23.523"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170728 17:03:23.613" level="INFO">${pay_no_after} = None</msg>
<status status="PASS" endtime="20170728 17:03:23.614" starttime="20170728 17:03:23.612"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170728 17:03:23.616" level="INFO">Length is 4</msg>
<msg timestamp="20170728 17:03:23.617" level="INFO">${pay_no_after_length} = 4</msg>
<status status="PASS" endtime="20170728 17:03:23.618" starttime="20170728 17:03:23.615"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:23.620" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:23.621" starttime="20170728 17:03:23.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170728 17:03:23.623" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170728 17:03:23.623" starttime="20170728 17:03:23.622"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:23.626" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:23.628" starttime="20170728 17:03:23.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:23.631" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 17:03:23.632" starttime="20170728 17:03:23.630"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:03:23.634" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:23.634" starttime="20170728 17:03:23.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 17:03:23.636" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 17:03:23.637" starttime="20170728 17:03:23.635"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][9]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:23.639" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:23.640" starttime="20170728 17:03:23.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:23.642" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 17:03:23.642" starttime="20170728 17:03:23.641"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 17:03:23.646" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:23.647" starttime="20170728 17:03:23.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170728 17:03:23.650" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170728 17:03:23.650" starttime="20170728 17:03:23.648"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:23.652" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:23.653" starttime="20170728 17:03:23.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:23.655" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:23.655" starttime="20170728 17:03:23.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 17:03:23.657" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 17:03:23.658" starttime="20170728 17:03:23.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:23.660" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170728 17:03:23.661" starttime="20170728 17:03:23.660"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170728 17:03:23.664" level="INFO">${user_id[0][0]_transaction} = 88889807</msg>
<status status="PASS" endtime="20170728 17:03:23.665" starttime="20170728 17:03:23.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170728 17:03:23.667" level="INFO">${user_id[0][0]_transaction} = 88889807</msg>
<status status="PASS" endtime="20170728 17:03:23.667" starttime="20170728 17:03:23.666"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id[0][0]}'</arg>
</arguments>
<assign>
<var>${user_id_unilateral_delete1}</var>
</assign>
<msg timestamp="20170728 17:03:23.669" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88889807' </msg>
<msg timestamp="20170728 17:03:23.724" level="INFO">${user_id_unilateral_delete1} = None</msg>
<status status="PASS" endtime="20170728 17:03:23.724" starttime="20170728 17:03:23.668"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:23.727" starttime="20170728 17:03:23.386"></status>
</kw>
<kw name="表account_amount的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_amount</arg>
</arguments>
<msg timestamp="20170728 17:03:23.730" level="INFO">现在开始校验表account_amount</msg>
<status status="PASS" endtime="20170728 17:03:23.731" starttime="20170728 17:03:23.729"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:23.735" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:23.743" starttime="20170728 17:03:23.734"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:23.744" starttime="20170728 17:03:23.732"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:23.745" starttime="20170728 17:03:23.732"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time1}</var>
</assign>
<msg timestamp="20170728 17:03:23.747" level="INFO">${current_time1} = 2017-07-28 17:03:23.747</msg>
<status status="PASS" endtime="20170728 17:03:23.748" starttime="20170728 17:03:23.746"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:23.751" level="INFO">${current_time1_before_30} = 2017-07-28 17:02:23.747</msg>
<status status="PASS" endtime="20170728 17:03:23.751" starttime="20170728 17:03:23.749"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:23.755" level="INFO">${current_time1_after_30} = 2017-07-28 17:04:23.747</msg>
<status status="PASS" endtime="20170728 17:03:23.755" starttime="20170728 17:03:23.753"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:23.759" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 17:03:23.764" level="INFO">${user_id} = ((12449, 6135, Decimal('50423.00'), Decimal('49585.00'), Decimal('838.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 28), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:23.765" starttime="20170728 17:03:23.757"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>11</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:23.771" starttime="20170728 17:03:23.770"></status>
</kw>
<msg timestamp="20170728 17:03:23.771" level="INFO">${event_code} = 11</msg>
<status status="PASS" endtime="20170728 17:03:23.772" starttime="20170728 17:03:23.767"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:03:23.774" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:03:23.775" starttime="20170728 17:03:23.773"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:23.779" starttime="20170728 17:03:23.778"></status>
</kw>
<msg timestamp="20170728 17:03:23.781" level="INFO">${event_code_after} = 11</msg>
<status status="PASS" endtime="20170728 17:03:23.782" starttime="20170728 17:03:23.776"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:03:23.784" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:23.784" starttime="20170728 17:03:23.783"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:23.790" starttime="20170728 17:03:23.789"></status>
</kw>
<msg timestamp="20170728 17:03:23.792" level="INFO">${command_type} = 1</msg>
<status status="PASS" endtime="20170728 17:03:23.794" starttime="20170728 17:03:23.786"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:23.799" starttime="20170728 17:03:23.797"></status>
</kw>
<msg timestamp="20170728 17:03:23.799" level="INFO">${amount} = 10</msg>
<status status="PASS" endtime="20170728 17:03:23.800" starttime="20170728 17:03:23.795"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:03:23.802" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:03:23.803" starttime="20170728 17:03:23.801"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>4</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:23.807" starttime="20170728 17:03:23.806"></status>
</kw>
<msg timestamp="20170728 17:03:23.807" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 17:03:23.808" starttime="20170728 17:03:23.804"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:23.813" starttime="20170728 17:03:23.811"></status>
</kw>
<msg timestamp="20170728 17:03:23.815" level="INFO">${total_amount} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:23.816" starttime="20170728 17:03:23.809"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${balance_amount_before}-${args33}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:23.820" starttime="20170728 17:03:23.819"></status>
</kw>
<msg timestamp="20170728 17:03:23.821" level="INFO">${balance_amount} = 49585.0</msg>
<status status="PASS" endtime="20170728 17:03:23.822" starttime="20170728 17:03:23.817"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${frozen_amount_before}+${args33}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:23.826" starttime="20170728 17:03:23.825"></status>
</kw>
<msg timestamp="20170728 17:03:23.828" level="INFO">${frozen_amount} = 838.0</msg>
<status status="PASS" endtime="20170728 17:03:23.828" starttime="20170728 17:03:23.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:23.831" level="INFO">${event_code} = 11</msg>
<status status="PASS" endtime="20170728 17:03:23.832" starttime="20170728 17:03:23.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:23.836" level="INFO">${command_type} = 1</msg>
<status status="PASS" endtime="20170728 17:03:23.837" starttime="20170728 17:03:23.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:23.839" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 17:03:23.840" starttime="20170728 17:03:23.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:23.842" level="INFO">${amount} = 10</msg>
<status status="PASS" endtime="20170728 17:03:23.843" starttime="20170728 17:03:23.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:23.845" level="INFO">${total_amount} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:23.846" starttime="20170728 17:03:23.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:23.847" level="INFO">${balance_amount} = 49585.0</msg>
<status status="PASS" endtime="20170728 17:03:23.848" starttime="20170728 17:03:23.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:23.850" level="INFO">${frozen_amount} = 838.0</msg>
<status status="PASS" endtime="20170728 17:03:23.850" starttime="20170728 17:03:23.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:23.854" level="INFO">${event_code_after} = 11</msg>
<status status="PASS" endtime="20170728 17:03:23.855" starttime="20170728 17:03:23.851"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:23.855" starttime="20170728 17:03:23.766"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:23.858" starttime="20170728 17:03:23.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:23.862" level="INFO">total_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:23.863" starttime="20170728 17:03:23.860"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:23.865" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:23.865" starttime="20170728 17:03:23.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:23.867" level="INFO">balance_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:23.868" starttime="20170728 17:03:23.866"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:23.870" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:23.870" starttime="20170728 17:03:23.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:23.872" level="INFO">frozen_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:23.873" starttime="20170728 17:03:23.871"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:23.878" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:23.879" starttime="20170728 17:03:23.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:23.883" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:23.884" starttime="20170728 17:03:23.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:23.885" level="INFO">表account_amount校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:23.886" starttime="20170728 17:03:23.885"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:23.887" starttime="20170728 17:03:23.728"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<msg timestamp="20170728 17:03:23.889" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=8880888 </msg>
<status status="PASS" endtime="20170728 17:03:23.940" starttime="20170728 17:03:23.888"></status>
</kw>
<kw name="艾佳币恢复数目" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:23.947" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:23.953" starttime="20170728 17:03:23.946"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:23.955" starttime="20170728 17:03:23.944"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:23.956" starttime="20170728 17:03:23.943"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount \ SET total_amount=${database[0][2]},balance_amount=${database[0][3]},frozen_amount=${database[0][4]}where account_id="${account_id}";</arg>
</arguments>
<msg timestamp="20170728 17:03:23.959" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount  SET total_amount=50423.00,balance_amount=49595.00,frozen_amount=828.00where account_id="6135"; </msg>
<status status="PASS" endtime="20170728 17:03:23.998" starttime="20170728 17:03:23.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170728 17:03:24.001" level="INFO">成功</msg>
<status status="PASS" endtime="20170728 17:03:24.003" starttime="20170728 17:03:23.999"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:24.004" starttime="20170728 17:03:23.941"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:24.006" critical="yes" starttime="20170728 17:03:22.491"></status>
</test>
<test id="s1-s2-s2-t2" name="当输入ajbAmount为0其他输入正确参数的时候">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:24.019" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:24.034" starttime="20170728 17:03:24.017"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:24.036" starttime="20170728 17:03:24.016"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:24.037" starttime="20170728 17:03:24.014"></status>
</kw>
<kw name="清数据" library="myResource">
<arguments>
<arg>8880888</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:24.045" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:24.053" starttime="20170728 17:03:24.043"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:24.054" starttime="20170728 17:03:24.041"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:24.055" starttime="20170728 17:03:24.039"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170728 17:03:24.057" level="INFO">Executing : Query  |  select * from ajb_account_transaction where id=8880888 </msg>
<msg timestamp="20170728 17:03:24.062" level="INFO">${check} = ()</msg>
<status status="PASS" endtime="20170728 17:03:24.063" starttime="20170728 17:03:24.055"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170728 17:03:24.067" level="INFO">Length is 0</msg>
<msg timestamp="20170728 17:03:24.068" level="INFO">${check_length} = 0</msg>
<status status="PASS" endtime="20170728 17:03:24.069" starttime="20170728 17:03:24.065"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} != 0</arg>
<arg>execute sql string</arg>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>数据库之前没有数据</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库之前没有数据</arg>
</arguments>
<msg timestamp="20170728 17:03:24.073" level="INFO">数据库之前没有数据</msg>
<status status="PASS" endtime="20170728 17:03:24.074" starttime="20170728 17:03:24.072"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:24.076" starttime="20170728 17:03:24.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库里面的这条数据清理成功啦。</arg>
</arguments>
<msg timestamp="20170728 17:03:24.079" level="INFO">数据库里面的这条数据清理成功啦。</msg>
<status status="PASS" endtime="20170728 17:03:24.080" starttime="20170728 17:03:24.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_delete}</arg>
</arguments>
<msg timestamp="20170728 17:03:24.083" level="INFO">${id_delete} = 8880888</msg>
<status status="PASS" endtime="20170728 17:03:24.084" starttime="20170728 17:03:24.082"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:24.085" starttime="20170728 17:03:24.038"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("${id_delete}","32102151361500284867","100000","6135","1","32102151361500284867","","2000","1","6","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170728 17:03:24.087" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("8880888","32102151361500284867","100000","6135","1","32102151361500284867","","2000","1","6","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170728 17:03:24.158" starttime="20170728 17:03:24.086"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>100000</arg>
<arg>32102151361500284867</arg>
<arg>0</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:03:24.162" level="INFO">${args11} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:24.163" starttime="20170728 17:03:24.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:03:24.167" level="INFO">${args22} = 32102151361500284867</msg>
<status status="PASS" endtime="20170728 17:03:24.168" starttime="20170728 17:03:24.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 17:03:24.173" level="INFO">${args33} = 0</msg>
<status status="PASS" endtime="20170728 17:03:24.174" starttime="20170728 17:03:24.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 17:03:24.177" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 17:03:24.178" starttime="20170728 17:03:24.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 17:03:24.181" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/freezePay</msg>
<status status="PASS" endtime="20170728 17:03:24.181" starttime="20170728 17:03:24.179"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:24.182" starttime="20170728 17:03:24.160"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 17:03:24.186" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/freezePay</msg>
<status status="PASS" endtime="20170728 17:03:24.187" starttime="20170728 17:03:24.184"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 17:03:24.191" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:24.192" starttime="20170728 17:03:24.188"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:24.198" starttime="20170728 17:03:24.196"></status>
</kw>
<msg timestamp="20170728 17:03:24.199" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:03:24.200" starttime="20170728 17:03:24.194"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>user_id</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:24.204" starttime="20170728 17:03:24.203"></status>
</kw>
<msg timestamp="20170728 17:03:24.205" level="INFO">${args11_after} = user_id</msg>
<status status="PASS" endtime="20170728 17:03:24.206" starttime="20170728 17:03:24.201"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:24.214" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:24.223" starttime="20170728 17:03:24.212"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:24.225" starttime="20170728 17:03:24.211"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:24.227" starttime="20170728 17:03:24.208"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 17:03:24.230" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and channel_no='1' </msg>
<msg timestamp="20170728 17:03:24.249" level="INFO">${database1} = ((9100, '32102151361499943857', 100000, 6135, 1, '32102151361499943857', '20170714000118SSP038852', Decimal('2.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, ...</msg>
<status status="PASS" endtime="20170728 17:03:24.250" starttime="20170728 17:03:24.228"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 17:03:24.253" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 17:03:24.261" level="INFO">${database} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 29), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:24.262" starttime="20170728 17:03:24.251"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 17:03:24.265" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:24.266" starttime="20170728 17:03:24.264"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 17:03:24.269" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 17:03:24.270" starttime="20170728 17:03:24.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:24.273" level="INFO">获得account_id值为：6135</msg>
<status status="PASS" endtime="20170728 17:03:24.274" starttime="20170728 17:03:24.272"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:24.278" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:24.279" starttime="20170728 17:03:24.276"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:24.281" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:24.281" starttime="20170728 17:03:24.280"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:24.283" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:24.284" starttime="20170728 17:03:24.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:24.287" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 17:03:24.288" starttime="20170728 17:03:24.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 17:03:24.291" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:24.292" starttime="20170728 17:03:24.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:24.294" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:24.295" starttime="20170728 17:03:24.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:24.296" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:24.297" starttime="20170728 17:03:24.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:24.301" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:24.302" starttime="20170728 17:03:24.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:24.304" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:03:24.305" starttime="20170728 17:03:24.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 17:03:24.307" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:24.309" starttime="20170728 17:03:24.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 17:03:24.311" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/freezePay</msg>
<status status="PASS" endtime="20170728 17:03:24.311" starttime="20170728 17:03:24.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170728 17:03:24.314" level="INFO">${database} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 29), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:24.315" starttime="20170728 17:03:24.312"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:24.317" starttime="20170728 17:03:24.183"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Freeze Pay" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:24.376" starttime="20170728 17:03:24.323"></status>
</kw>
<msg timestamp="20170728 17:03:24.378" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:24.379" starttime="20170728 17:03:24.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 17:03:24.383" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:24.384" starttime="20170728 17:03:24.381"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:24.385" starttime="20170728 17:03:24.318"></status>
</kw>
<kw name="字段验证" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:24.389" level="INFO">200</msg>
<status status="PASS" endtime="20170728 17:03:24.390" starttime="20170728 17:03:24.388"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 17:03:24.394" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:24.395" starttime="20170728 17:03:24.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 17:03:24.398" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 17:03:24.398" starttime="20170728 17:03:24.396"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 17:03:24.401" level="INFO">To JSON using : content={"data":null,"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 17:03:24.402" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 17:03:24.403" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': None, u'success': True}</msg>
<status status="PASS" endtime="20170728 17:03:24.403" starttime="20170728 17:03:24.400"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 17:03:24.406" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:24.407" starttime="20170728 17:03:24.405"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:24.413" starttime="20170728 17:03:24.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:24.416" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:24.417" starttime="20170728 17:03:24.414"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<assign>
<var>@{Link1}</var>
</assign>
<msg timestamp="20170728 17:03:24.420" level="INFO">@{Link1} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:24.421" starttime="20170728 17:03:24.418"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>"${value}" in @{Link1}</arg>
<arg>Get From Dictionary</arg>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${orderNum}</var>
</assign>
<msg timestamp="20170728 17:03:24.428" level="INFO">${orderNum} = None</msg>
<status status="PASS" endtime="20170728 17:03:24.430" starttime="20170728 17:03:24.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<msg timestamp="20170728 17:03:24.433" level="INFO">${orderNum} = None</msg>
<status status="PASS" endtime="20170728 17:03:24.434" starttime="20170728 17:03:24.431"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:24.435" starttime="20170728 17:03:24.386"></status>
</kw>
<kw name="amount和表里的校验" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:24.444" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:24.457" starttime="20170728 17:03:24.443"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:24.460" starttime="20170728 17:03:24.440"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:24.463" starttime="20170728 17:03:24.439"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:24.466" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 17:03:24.476" level="INFO">${user_id} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 29), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:24.477" starttime="20170728 17:03:24.464"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:24.481" starttime="20170728 17:03:24.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 17:03:24.512" level="INFO">total_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 17:03:24.514" starttime="20170728 17:03:24.482"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:24.517" starttime="20170728 17:03:24.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 17:03:24.522" level="INFO">balance_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 17:03:24.524" starttime="20170728 17:03:24.520"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:24.531" starttime="20170728 17:03:24.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 17:03:24.536" level="INFO">frozen_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 17:03:24.538" starttime="20170728 17:03:24.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amounts的数据没有变化正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:24.543" level="INFO">amounts的数据没有变化正确的</msg>
<status status="PASS" endtime="20170728 17:03:24.544" starttime="20170728 17:03:24.540"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:24.550" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:24.551" starttime="20170728 17:03:24.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount内容没有发生变化</arg>
</arguments>
<msg timestamp="20170728 17:03:24.555" level="INFO">表account_amount内容没有发生变化</msg>
<status status="PASS" endtime="20170728 17:03:24.557" starttime="20170728 17:03:24.553"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:03:24.562" level="INFO">${current_time} = 2017-07-28 17:03:24.561</msg>
<status status="PASS" endtime="20170728 17:03:24.564" starttime="20170728 17:03:24.559"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:24.569" level="INFO">${current_time_before_30} = 2017-07-28 17:02:24.561</msg>
<status status="PASS" endtime="20170728 17:03:24.570" starttime="20170728 17:03:24.566"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:24.575" level="INFO">${current_time_after_30} = 2017-07-28 17:04:29.561</msg>
<status status="PASS" endtime="20170728 17:03:24.577" starttime="20170728 17:03:24.572"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${bill_check}</var>
</assign>
<msg timestamp="20170728 17:03:24.582" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6135' and update_time between' 2017-07-28 17:02:24.561' and '2017-07-28 17:04:29.561' </msg>
<msg timestamp="20170728 17:03:24.594" level="INFO">${bill_check} = ()</msg>
<status status="PASS" endtime="20170728 17:03:24.595" starttime="20170728 17:03:24.578"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${bill_check}</arg>
</arguments>
<assign>
<var>${bill_check_length}</var>
</assign>
<msg timestamp="20170728 17:03:24.599" level="INFO">Length is 0</msg>
<msg timestamp="20170728 17:03:24.600" level="INFO">${bill_check_length} = 0</msg>
<status status="PASS" endtime="20170728 17:03:24.602" starttime="20170728 17:03:24.597"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${bill_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:24.606" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:24.607" starttime="20170728 17:03:24.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>account_unilateral_bill里的没有相关数据</arg>
</arguments>
<msg timestamp="20170728 17:03:24.612" level="INFO">account_unilateral_bill里的没有相关数据</msg>
<status status="PASS" endtime="20170728 17:03:24.613" starttime="20170728 17:03:24.609"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num ='${args11}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${transaction_check}</var>
</assign>
<msg timestamp="20170728 17:03:24.618" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num ='100000' and update_time between' 2017-07-28 17:02:24.561' and '2017-07-28 17:04:29.561' </msg>
<msg timestamp="20170728 17:03:24.629" level="INFO">${transaction_check} = ()</msg>
<status status="PASS" endtime="20170728 17:03:24.630" starttime="20170728 17:03:24.615"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${transaction_check}</arg>
</arguments>
<assign>
<var>${transaction_check_length}</var>
</assign>
<msg timestamp="20170728 17:03:24.635" level="INFO">Length is 0</msg>
<msg timestamp="20170728 17:03:24.637" level="INFO">${transaction_check_length} = 0</msg>
<status status="PASS" endtime="20170728 17:03:24.638" starttime="20170728 17:03:24.633"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${transaction_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:24.643" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:24.644" starttime="20170728 17:03:24.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>ajb_account_transaction里的没有相关数据</arg>
</arguments>
<msg timestamp="20170728 17:03:24.649" level="INFO">ajb_account_transaction里的没有相关数据</msg>
<status status="PASS" endtime="20170728 17:03:24.650" starttime="20170728 17:03:24.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库表里数据调用接口前后没有发生变化</arg>
</arguments>
<msg timestamp="20170728 17:03:24.654" level="INFO">数据库表里数据调用接口前后没有发生变化</msg>
<status status="PASS" endtime="20170728 17:03:24.655" starttime="20170728 17:03:24.652"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:24.657" starttime="20170728 17:03:24.436"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<msg timestamp="20170728 17:03:24.662" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=8880888 </msg>
<status status="PASS" endtime="20170728 17:03:24.709" starttime="20170728 17:03:24.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当输入艾佳币的数量为0的时候，接口返回成功，但是数据不入库里</arg>
</arguments>
<msg timestamp="20170728 17:03:24.713" level="INFO">当输入艾佳币的数量为0的时候，接口返回成功，但是数据不入库里</msg>
<status status="PASS" endtime="20170728 17:03:24.714" starttime="20170728 17:03:24.711"></status>
</kw>
<kw name="艾佳币恢复数目" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:24.725" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:24.736" starttime="20170728 17:03:24.722"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:24.738" starttime="20170728 17:03:24.720"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:24.740" starttime="20170728 17:03:24.718"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount \ SET total_amount=${database[0][2]},balance_amount=${database[0][3]},frozen_amount=${database[0][4]}where account_id="${account_id}";</arg>
</arguments>
<msg timestamp="20170728 17:03:24.745" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount  SET total_amount=50423.00,balance_amount=49595.00,frozen_amount=828.00where account_id="6135"; </msg>
<status status="PASS" endtime="20170728 17:03:24.755" starttime="20170728 17:03:24.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170728 17:03:24.760" level="INFO">成功</msg>
<status status="PASS" endtime="20170728 17:03:24.761" starttime="20170728 17:03:24.757"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:24.763" starttime="20170728 17:03:24.716"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:24.765" critical="yes" starttime="20170728 17:03:24.009"></status>
</test>
<test id="s1-s2-s2-t3" name="当ajbAmount为字符">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:24.779" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:24.789" starttime="20170728 17:03:24.777"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:24.791" starttime="20170728 17:03:24.774"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:24.793" starttime="20170728 17:03:24.772"></status>
</kw>
<kw name="清数据" library="myResource">
<arguments>
<arg>8880888</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:24.804" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:24.837" starttime="20170728 17:03:24.802"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:24.839" starttime="20170728 17:03:24.799"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:24.841" starttime="20170728 17:03:24.797"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170728 17:03:24.846" level="INFO">Executing : Query  |  select * from ajb_account_transaction where id=8880888 </msg>
<msg timestamp="20170728 17:03:24.854" level="INFO">${check} = ()</msg>
<status status="PASS" endtime="20170728 17:03:24.855" starttime="20170728 17:03:24.843"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170728 17:03:24.859" level="INFO">Length is 0</msg>
<msg timestamp="20170728 17:03:24.862" level="INFO">${check_length} = 0</msg>
<status status="PASS" endtime="20170728 17:03:24.863" starttime="20170728 17:03:24.857"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} != 0</arg>
<arg>execute sql string</arg>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>数据库之前没有数据</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库之前没有数据</arg>
</arguments>
<msg timestamp="20170728 17:03:24.870" level="INFO">数据库之前没有数据</msg>
<status status="PASS" endtime="20170728 17:03:24.871" starttime="20170728 17:03:24.868"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:24.874" starttime="20170728 17:03:24.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库里面的这条数据清理成功啦。</arg>
</arguments>
<msg timestamp="20170728 17:03:24.879" level="INFO">数据库里面的这条数据清理成功啦。</msg>
<status status="PASS" endtime="20170728 17:03:24.880" starttime="20170728 17:03:24.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_delete}</arg>
</arguments>
<msg timestamp="20170728 17:03:24.884" level="INFO">${id_delete} = 8880888</msg>
<status status="PASS" endtime="20170728 17:03:24.885" starttime="20170728 17:03:24.882"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:24.887" starttime="20170728 17:03:24.794"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("${id_delete}","32102151361500284867","100000","6135","1","32102151361500284867","","2000","1","6","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170728 17:03:24.892" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("8880888","32102151361500284867","100000","6135","1","32102151361500284867","","2000","1","6","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170728 17:03:24.933" starttime="20170728 17:03:24.889"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>100000</arg>
<arg>32102151361500284867</arg>
<arg>str</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:03:24.939" level="INFO">${args11} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:24.941" starttime="20170728 17:03:24.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:03:24.946" level="INFO">${args22} = 32102151361500284867</msg>
<status status="PASS" endtime="20170728 17:03:24.947" starttime="20170728 17:03:24.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 17:03:24.951" level="INFO">${args33} = str</msg>
<status status="PASS" endtime="20170728 17:03:24.952" starttime="20170728 17:03:24.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 17:03:24.956" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 17:03:24.957" starttime="20170728 17:03:24.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 17:03:24.962" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/freezePay</msg>
<status status="PASS" endtime="20170728 17:03:24.964" starttime="20170728 17:03:24.960"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:24.965" starttime="20170728 17:03:24.934"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 17:03:24.972" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/freezePay</msg>
<status status="PASS" endtime="20170728 17:03:24.973" starttime="20170728 17:03:24.969"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 17:03:24.979" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:24.981" starttime="20170728 17:03:24.977"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:24.987" starttime="20170728 17:03:24.985"></status>
</kw>
<msg timestamp="20170728 17:03:24.988" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:03:24.990" starttime="20170728 17:03:24.983"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>user_id</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:24.996" starttime="20170728 17:03:24.995"></status>
</kw>
<msg timestamp="20170728 17:03:24.998" level="INFO">${args11_after} = user_id</msg>
<status status="PASS" endtime="20170728 17:03:25.000" starttime="20170728 17:03:24.992"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:25.009" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:25.017" starttime="20170728 17:03:25.006"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:25.019" starttime="20170728 17:03:25.004"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:25.020" starttime="20170728 17:03:25.002"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 17:03:25.022" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and channel_no='1' </msg>
<msg timestamp="20170728 17:03:25.041" level="INFO">${database1} = ((9100, '32102151361499943857', 100000, 6135, 1, '32102151361499943857', '20170714000118SSP038852', Decimal('2.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, ...</msg>
<status status="PASS" endtime="20170728 17:03:25.042" starttime="20170728 17:03:25.021"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 17:03:25.044" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 17:03:25.048" level="INFO">${database} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 29), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:25.050" starttime="20170728 17:03:25.043"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 17:03:25.054" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:25.054" starttime="20170728 17:03:25.052"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 17:03:25.057" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 17:03:25.057" starttime="20170728 17:03:25.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:25.061" level="INFO">获得account_id值为：6135</msg>
<status status="PASS" endtime="20170728 17:03:25.064" starttime="20170728 17:03:25.059"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:25.068" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:25.069" starttime="20170728 17:03:25.066"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:25.072" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:25.073" starttime="20170728 17:03:25.071"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:25.076" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:25.077" starttime="20170728 17:03:25.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:25.080" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 17:03:25.081" starttime="20170728 17:03:25.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 17:03:25.083" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:25.084" starttime="20170728 17:03:25.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:25.086" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:25.086" starttime="20170728 17:03:25.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:25.089" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:25.090" starttime="20170728 17:03:25.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:25.094" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:25.095" starttime="20170728 17:03:25.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:25.098" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:03:25.098" starttime="20170728 17:03:25.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 17:03:25.100" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:25.101" starttime="20170728 17:03:25.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 17:03:25.103" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/freezePay</msg>
<status status="PASS" endtime="20170728 17:03:25.103" starttime="20170728 17:03:25.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170728 17:03:25.105" level="INFO">${database} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 29), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:25.106" starttime="20170728 17:03:25.104"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:25.107" starttime="20170728 17:03:24.967"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Freeze Pay" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:25.125" starttime="20170728 17:03:25.112"></status>
</kw>
<msg timestamp="20170728 17:03:25.126" level="INFO">${data} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:25.127" starttime="20170728 17:03:25.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 17:03:25.130" level="INFO">${data} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:25.131" starttime="20170728 17:03:25.129"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:25.132" starttime="20170728 17:03:25.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:25.134" level="INFO">400</msg>
<status status="PASS" endtime="20170728 17:03:25.135" starttime="20170728 17:03:25.133"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20170728 17:03:25.138" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:25.138" starttime="20170728 17:03:25.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>400由于语法格式有误，服务器无法理解此请求。</arg>
</arguments>
<msg timestamp="20170728 17:03:25.140" level="INFO">400由于语法格式有误，服务器无法理解此请求。</msg>
<status status="PASS" endtime="20170728 17:03:25.141" starttime="20170728 17:03:25.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 17:03:25.145" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 17:03:25.146" starttime="20170728 17:03:25.143"></status>
</kw>
<kw name="amount和表里的校验" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:25.150" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:25.159" starttime="20170728 17:03:25.149"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:25.160" starttime="20170728 17:03:25.148"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:25.162" starttime="20170728 17:03:25.147"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:25.164" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 17:03:25.170" level="INFO">${user_id} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 29), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:25.171" starttime="20170728 17:03:25.163"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:25.173" starttime="20170728 17:03:25.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 17:03:25.177" level="INFO">total_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 17:03:25.178" starttime="20170728 17:03:25.176"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:25.181" starttime="20170728 17:03:25.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 17:03:25.183" level="INFO">balance_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 17:03:25.183" starttime="20170728 17:03:25.182"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:25.187" starttime="20170728 17:03:25.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 17:03:25.191" level="INFO">frozen_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 17:03:25.192" starttime="20170728 17:03:25.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amounts的数据没有变化正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:25.195" level="INFO">amounts的数据没有变化正确的</msg>
<status status="PASS" endtime="20170728 17:03:25.196" starttime="20170728 17:03:25.193"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:25.199" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:25.199" starttime="20170728 17:03:25.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount内容没有发生变化</arg>
</arguments>
<msg timestamp="20170728 17:03:25.201" level="INFO">表account_amount内容没有发生变化</msg>
<status status="PASS" endtime="20170728 17:03:25.202" starttime="20170728 17:03:25.200"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:03:25.205" level="INFO">${current_time} = 2017-07-28 17:03:25.204</msg>
<status status="PASS" endtime="20170728 17:03:25.206" starttime="20170728 17:03:25.202"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:25.210" level="INFO">${current_time_before_30} = 2017-07-28 17:02:25.204</msg>
<status status="PASS" endtime="20170728 17:03:25.211" starttime="20170728 17:03:25.208"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:25.213" level="INFO">${current_time_after_30} = 2017-07-28 17:04:30.204</msg>
<status status="PASS" endtime="20170728 17:03:25.214" starttime="20170728 17:03:25.212"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${bill_check}</var>
</assign>
<msg timestamp="20170728 17:03:25.216" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6135' and update_time between' 2017-07-28 17:02:25.204' and '2017-07-28 17:04:30.204' </msg>
<msg timestamp="20170728 17:03:25.224" level="INFO">${bill_check} = ()</msg>
<status status="PASS" endtime="20170728 17:03:25.226" starttime="20170728 17:03:25.215"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${bill_check}</arg>
</arguments>
<assign>
<var>${bill_check_length}</var>
</assign>
<msg timestamp="20170728 17:03:25.228" level="INFO">Length is 0</msg>
<msg timestamp="20170728 17:03:25.229" level="INFO">${bill_check_length} = 0</msg>
<status status="PASS" endtime="20170728 17:03:25.230" starttime="20170728 17:03:25.227"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${bill_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:25.231" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:25.232" starttime="20170728 17:03:25.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>account_unilateral_bill里的没有相关数据</arg>
</arguments>
<msg timestamp="20170728 17:03:25.234" level="INFO">account_unilateral_bill里的没有相关数据</msg>
<status status="PASS" endtime="20170728 17:03:25.234" starttime="20170728 17:03:25.233"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num ='${args11}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${transaction_check}</var>
</assign>
<msg timestamp="20170728 17:03:25.238" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num ='100000' and update_time between' 2017-07-28 17:02:25.204' and '2017-07-28 17:04:30.204' </msg>
<msg timestamp="20170728 17:03:25.248" level="INFO">${transaction_check} = ()</msg>
<status status="PASS" endtime="20170728 17:03:25.249" starttime="20170728 17:03:25.236"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${transaction_check}</arg>
</arguments>
<assign>
<var>${transaction_check_length}</var>
</assign>
<msg timestamp="20170728 17:03:25.252" level="INFO">Length is 0</msg>
<msg timestamp="20170728 17:03:25.254" level="INFO">${transaction_check_length} = 0</msg>
<status status="PASS" endtime="20170728 17:03:25.255" starttime="20170728 17:03:25.250"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${transaction_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:25.257" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:25.259" starttime="20170728 17:03:25.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>ajb_account_transaction里的没有相关数据</arg>
</arguments>
<msg timestamp="20170728 17:03:25.260" level="INFO">ajb_account_transaction里的没有相关数据</msg>
<status status="PASS" endtime="20170728 17:03:25.261" starttime="20170728 17:03:25.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库表里数据调用接口前后没有发生变化</arg>
</arguments>
<msg timestamp="20170728 17:03:25.263" level="INFO">数据库表里数据调用接口前后没有发生变化</msg>
<status status="PASS" endtime="20170728 17:03:25.263" starttime="20170728 17:03:25.262"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:25.264" starttime="20170728 17:03:25.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>输入已有的user_id和amount为字符的时候，语法错误，报400</arg>
</arguments>
<msg timestamp="20170728 17:03:25.266" level="INFO">输入已有的user_id和amount为字符的时候，语法错误，报400</msg>
<status status="PASS" endtime="20170728 17:03:25.267" starttime="20170728 17:03:25.265"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<msg timestamp="20170728 17:03:25.269" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=8880888 </msg>
<status status="PASS" endtime="20170728 17:03:25.310" starttime="20170728 17:03:25.268"></status>
</kw>
<kw name="艾佳币恢复数目" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:25.319" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:25.327" starttime="20170728 17:03:25.318"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:25.328" starttime="20170728 17:03:25.316"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:25.330" starttime="20170728 17:03:25.314"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount \ SET total_amount=${database[0][2]},balance_amount=${database[0][3]},frozen_amount=${database[0][4]}where account_id="${account_id}";</arg>
</arguments>
<msg timestamp="20170728 17:03:25.333" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount  SET total_amount=50423.00,balance_amount=49595.00,frozen_amount=828.00where account_id="6135"; </msg>
<status status="PASS" endtime="20170728 17:03:25.377" starttime="20170728 17:03:25.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170728 17:03:25.379" level="INFO">成功</msg>
<status status="PASS" endtime="20170728 17:03:25.380" starttime="20170728 17:03:25.378"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:25.381" starttime="20170728 17:03:25.312"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:25.382" critical="yes" starttime="20170728 17:03:24.768"></status>
</test>
<status status="PASS" endtime="20170728 17:03:25.384" starttime="20170728 17:03:22.472"></status>
</suite>
<suite source="F:\logs and reports\账户中心\订单\订单支付退款（线上）.txt" id="s1-s2-s3" name="订单支付退款（线上）">
<test id="s1-s2-s3-t1" name="输入参数全部正确">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:25.419" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:25.428" starttime="20170728 17:03:25.417"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:25.430" starttime="20170728 17:03:25.415"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:25.431" starttime="20170728 17:03:25.414"></status>
</kw>
<kw name="清数据" library="myResource">
<arguments>
<arg>888888</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:25.437" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:25.449" starttime="20170728 17:03:25.435"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:25.450" starttime="20170728 17:03:25.433"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:25.451" starttime="20170728 17:03:25.433"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170728 17:03:25.454" level="INFO">Executing : Query  |  select * from ajb_account_transaction where id=888888 </msg>
<msg timestamp="20170728 17:03:25.460" level="INFO">${check} = ()</msg>
<status status="PASS" endtime="20170728 17:03:25.460" starttime="20170728 17:03:25.453"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170728 17:03:25.462" level="INFO">Length is 0</msg>
<msg timestamp="20170728 17:03:25.463" level="INFO">${check_length} = 0</msg>
<status status="PASS" endtime="20170728 17:03:25.463" starttime="20170728 17:03:25.461"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} != 0</arg>
<arg>execute sql string</arg>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>数据库之前没有数据</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库之前没有数据</arg>
</arguments>
<msg timestamp="20170728 17:03:25.467" level="INFO">数据库之前没有数据</msg>
<status status="PASS" endtime="20170728 17:03:25.467" starttime="20170728 17:03:25.466"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:25.468" starttime="20170728 17:03:25.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库里面的这条数据清理成功啦。</arg>
</arguments>
<msg timestamp="20170728 17:03:25.470" level="INFO">数据库里面的这条数据清理成功啦。</msg>
<status status="PASS" endtime="20170728 17:03:25.470" starttime="20170728 17:03:25.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_delete}</arg>
</arguments>
<msg timestamp="20170728 17:03:25.474" level="INFO">${id_delete} = 888888</msg>
<status status="PASS" endtime="20170728 17:03:25.476" starttime="20170728 17:03:25.472"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:25.478" starttime="20170728 17:03:25.431"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("${id_delete}","32102151361500885834","100000","6135","1","32102151361500885834","","2","1","13","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170728 17:03:25.480" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("888888","32102151361500885834","100000","6135","1","32102151361500885834","","2","1","13","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170728 17:03:25.536" starttime="20170728 17:03:25.479"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>32102151361500885834</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:03:25.540" level="INFO">${args11} = 32102151361500885834</msg>
<status status="PASS" endtime="20170728 17:03:25.540" starttime="20170728 17:03:25.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:03:25.543" level="INFO">${args22} = </msg>
<status status="PASS" endtime="20170728 17:03:25.544" starttime="20170728 17:03:25.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 17:03:25.547" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170728 17:03:25.548" starttime="20170728 17:03:25.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 17:03:25.550" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 17:03:25.550" starttime="20170728 17:03:25.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 17:03:25.552" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</msg>
<status status="PASS" endtime="20170728 17:03:25.553" starttime="20170728 17:03:25.551"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:25.554" starttime="20170728 17:03:25.537"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num='${args11}' and event_code=13</arg>
</arguments>
<assign>
<var>${user_id_refund}</var>
</assign>
<msg timestamp="20170728 17:03:25.555" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num='32102151361500885834' and event_code=13 </msg>
<msg timestamp="20170728 17:03:25.568" level="INFO">${user_id_refund} = ((888888, '32102151361500885834', 100000, 6135, 1, '32102151361500885834', '', Decimal('2.00'), 1, 13, 2, 0, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)),)</msg>
<status status="PASS" endtime="20170728 17:03:25.569" starttime="20170728 17:03:25.554"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${user_id_refund[0][2]}' and channel_no=1</arg>
</arguments>
<assign>
<var>${account_id_bos}</var>
</assign>
<msg timestamp="20170728 17:03:25.571" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=1 </msg>
<msg timestamp="20170728 17:03:25.589" level="INFO">${account_id_bos} = ((6090, '32102151361499943856', 100000, 6135, 1, 2, 0, datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 13, 23, 57, 26)),)</msg>
<status status="PASS" endtime="20170728 17:03:25.590" starttime="20170728 17:03:25.570"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_id_bos[0][3]}</arg>
</arguments>
<assign>
<var>${account_id_boss}</var>
</assign>
<msg timestamp="20170728 17:03:25.593" level="INFO">${account_id_boss} = 6135</msg>
<status status="PASS" endtime="20170728 17:03:25.594" starttime="20170728 17:03:25.592"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${user_id_refund[0][2]}' and channel_no=2</arg>
</arguments>
<assign>
<var>${account_id_ap}</var>
</assign>
<msg timestamp="20170728 17:03:25.597" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=2 </msg>
<msg timestamp="20170728 17:03:25.606" level="INFO">${account_id_ap} = ((100000000010L, '32102151361501206852', 100000, 6273, 2, 2, 0, datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 10, 46, 53)),)</msg>
<status status="PASS" endtime="20170728 17:03:25.607" starttime="20170728 17:03:25.595"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_id_ap[0][3]}</arg>
</arguments>
<assign>
<var>${account_id_app}</var>
</assign>
<msg timestamp="20170728 17:03:25.612" level="INFO">${account_id_app} = 6273</msg>
<status status="PASS" endtime="20170728 17:03:25.613" starttime="20170728 17:03:25.610"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_boss}'</arg>
</arguments>
<assign>
<var>${amount_boss}</var>
</assign>
<msg timestamp="20170728 17:03:25.615" level="INFO">Executing : Query  |  select * from account_amount where account_id='6135' </msg>
<msg timestamp="20170728 17:03:25.621" level="INFO">${amount_boss} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 29), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:25.622" starttime="20170728 17:03:25.614"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_app}'</arg>
</arguments>
<assign>
<var>${amount_app}</var>
</assign>
<msg timestamp="20170728 17:03:25.626" level="INFO">Executing : Query  |  select * from account_amount where account_id='6273' </msg>
<msg timestamp="20170728 17:03:25.639" level="INFO">${amount_app} = ((12587, 6273, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 17, 4, 23), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:25.641" starttime="20170728 17:03:25.623"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 17:03:25.645" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</msg>
<status status="PASS" endtime="20170728 17:03:25.645" starttime="20170728 17:03:25.643"></status>
</kw>
<kw name="Ajb Withdraw Cancel" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170728 17:03:25.943" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:25.944" starttime="20170728 17:03:25.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:25.946" level="INFO">200</msg>
<status status="PASS" endtime="20170728 17:03:25.947" starttime="20170728 17:03:25.945"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 17:03:25.949" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:25.950" starttime="20170728 17:03:25.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 17:03:25.952" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 17:03:25.952" starttime="20170728 17:03:25.950"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 17:03:25.954" level="INFO">To JSON using : content={"data":null,"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 17:03:25.955" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 17:03:25.956" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': None, u'success': True}</msg>
<status status="PASS" endtime="20170728 17:03:25.956" starttime="20170728 17:03:25.953"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 17:03:25.958" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:25.959" starttime="20170728 17:03:25.957"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:25.961" starttime="20170728 17:03:25.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:25.963" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:25.964" starttime="20170728 17:03:25.962"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:03:25.966" level="INFO">${current_time} = 2017-07-28 17:03:25.966</msg>
<status status="PASS" endtime="20170728 17:03:25.967" starttime="20170728 17:03:25.965"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>5 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:25.970" level="INFO">${current_time_before_30} = 2017-07-28 17:03:20.966</msg>
<status status="PASS" endtime="20170728 17:03:25.970" starttime="20170728 17:03:25.968"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:25.972" level="INFO">${current_time_after_30} = 2017-07-28 17:05:05.966</msg>
<status status="PASS" endtime="20170728 17:03:25.973" starttime="20170728 17:03:25.971"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where event_code=14 and user_id='${user_id_refund[0][2]}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:25.975" level="INFO">Executing : Query  |  select * from account_unilateral_bill where event_code=14 and user_id='100000' and update_time between' 2017-07-28 17:03:20.966' and '2017-07-28 17:05:05.966' </msg>
<msg timestamp="20170728 17:03:25.986" level="INFO">${user_id} = ((7731, '32102151361501230576', 100000, 6135, '32102151361501230574', 1, 14, 3, Decimal('2.00'), None, datetime.datetime(2017, 7, 28, 17, 4, 31), datetime.datetime(2017, 7, 28, 17, 4, 31), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:25.987" starttime="20170728 17:03:25.974"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:25.990" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:25.991" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:25.991" starttime="20170728 17:03:25.988"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:25.994" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:25.994" starttime="20170728 17:03:25.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:25.997" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:25.998" starttime="20170728 17:03:25.996"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_refund[0][2]}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:26.000" starttime="20170728 17:03:25.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:03:26.002" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:03:26.003" starttime="20170728 17:03:26.001"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:26.005" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:26.005" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:26.006" starttime="20170728 17:03:26.004"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:26.008" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:26.009" starttime="20170728 17:03:26.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:26.010" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:26.011" starttime="20170728 17:03:26.010"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:03:26.013" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:26.014" starttime="20170728 17:03:26.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 17:03:26.017" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 17:03:26.017" starttime="20170728 17:03:26.015"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>14</arg>
</arguments>
<msg timestamp="20170728 17:03:26.019" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:26.020" starttime="20170728 17:03:26.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:26.022" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 17:03:26.024" starttime="20170728 17:03:26.021"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20170728 17:03:26.026" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:26.028" starttime="20170728 17:03:26.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:26.031" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170728 17:03:26.032" starttime="20170728 17:03:26.029"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:26.034" starttime="20170728 17:03:26.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:26.037" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 17:03:26.037" starttime="20170728 17:03:26.035"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:26.039" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:26.040" starttime="20170728 17:03:26.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:26.042" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:26.043" starttime="20170728 17:03:26.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:26.046" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170728 17:03:26.047" starttime="20170728 17:03:26.045"></status>
</kw>
<kw name="Conn Mysql" library="wjwTestLibrary">
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]}'</arg>
</arguments>
<assign>
<var>${user_id_unilateral_delete}</var>
</assign>
<msg timestamp="20170728 17:03:26.108" level="INFO">${user_id_unilateral_delete} = ()</msg>
<status status="PASS" endtime="20170728 17:03:26.109" starttime="20170728 17:03:26.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170728 17:03:26.111" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170728 17:03:26.112" starttime="20170728 17:03:26.110"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time1}</var>
</assign>
<msg timestamp="20170728 17:03:26.115" level="INFO">${current_time1} = 2017-07-28 17:03:26.115</msg>
<status status="PASS" endtime="20170728 17:03:26.116" starttime="20170728 17:03:26.114"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>5 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_301}</var>
</assign>
<msg timestamp="20170728 17:03:26.118" level="INFO">${current_time_before_301} = 2017-07-28 17:03:21.115</msg>
<status status="PASS" endtime="20170728 17:03:26.118" starttime="20170728 17:03:26.117"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_301}</var>
</assign>
<msg timestamp="20170728 17:03:26.121" level="INFO">${current_time_after_301} = 2017-07-28 17:05:06.115</msg>
<status status="PASS" endtime="20170728 17:03:26.123" starttime="20170728 17:03:26.119"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where event_code=14 and user_id='${user_id_refund[0][2]}' and update_time between' ${current_time_before_301}' and '${current_time_after_301}'</arg>
</arguments>
<assign>
<var>${user_id1}</var>
</assign>
<msg timestamp="20170728 17:03:26.126" level="INFO">Executing : Query  |  select * from ajb_account_transaction where event_code=14 and user_id='100000' and update_time between' 2017-07-28 17:03:21.115' and '2017-07-28 17:05:06.115' </msg>
<msg timestamp="20170728 17:03:26.137" level="INFO">${user_id1} = ((88889808, '32102151361501230573', 100000, 6135, 1, '32102151361500885834', '20170728170428DMB051709', Decimal('2.00'), 1, 14, 2, 0, datetime.datetime(2017, 7, 28, 17, 4, 31), datetime.datetime(2017,...</msg>
<status status="PASS" endtime="20170728 17:03:26.138" starttime="20170728 17:03:26.124"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id1[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:26.142" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:26.142" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:26.143" starttime="20170728 17:03:26.140"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:26.145" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:26.145" starttime="20170728 17:03:26.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:26.147" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:26.148" starttime="20170728 17:03:26.146"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][2]}</arg>
<arg>${user_id_refund[0][2]}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:26.150" starttime="20170728 17:03:26.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:03:26.151" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:03:26.152" starttime="20170728 17:03:26.151"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][5]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:03:26.154" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:26.155" starttime="20170728 17:03:26.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170728 17:03:26.157" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170728 17:03:26.159" starttime="20170728 17:03:26.155"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id1[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170728 17:03:26.161" level="INFO">${pay_no_after} = 20170728170428DMB051709</msg>
<status status="PASS" endtime="20170728 17:03:26.162" starttime="20170728 17:03:26.160"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170728 17:03:26.164" level="INFO">Length is 23</msg>
<msg timestamp="20170728 17:03:26.164" level="INFO">${pay_no_after_length} = 23</msg>
<status status="PASS" endtime="20170728 17:03:26.165" starttime="20170728 17:03:26.163"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>23</arg>
</arguments>
<msg timestamp="20170728 17:03:26.167" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:26.168" starttime="20170728 17:03:26.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170728 17:03:26.169" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170728 17:03:26.170" starttime="20170728 17:03:26.168"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][7]}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:26.174" starttime="20170728 17:03:26.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:26.176" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 17:03:26.177" starttime="20170728 17:03:26.175"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:03:26.179" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:26.180" starttime="20170728 17:03:26.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 17:03:26.181" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 17:03:26.182" starttime="20170728 17:03:26.181"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][9]}</arg>
<arg>14</arg>
</arguments>
<msg timestamp="20170728 17:03:26.186" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:26.187" starttime="20170728 17:03:26.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:26.191" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 17:03:26.192" starttime="20170728 17:03:26.189"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 17:03:26.194" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:26.195" starttime="20170728 17:03:26.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170728 17:03:26.197" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170728 17:03:26.197" starttime="20170728 17:03:26.196"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:26.199" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:26.200" starttime="20170728 17:03:26.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:26.203" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:26.204" starttime="20170728 17:03:26.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:26.205" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170728 17:03:26.206" starttime="20170728 17:03:26.205"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170728 17:03:26.210" level="INFO">${user_id[0][0]_transaction} = 7731</msg>
<status status="PASS" endtime="20170728 17:03:26.211" starttime="20170728 17:03:26.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170728 17:03:26.213" level="INFO">${user_id[0][0]_transaction} = 7731</msg>
<status status="PASS" endtime="20170728 17:03:26.213" starttime="20170728 17:03:26.212"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id1[0][0]}'</arg>
</arguments>
<msg timestamp="20170728 17:03:26.215" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88889808' </msg>
<status status="PASS" endtime="20170728 17:03:26.274" starttime="20170728 17:03:26.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>检验表account_amount</arg>
</arguments>
<msg timestamp="20170728 17:03:26.276" level="INFO">检验表account_amount</msg>
<status status="PASS" endtime="20170728 17:03:26.277" starttime="20170728 17:03:26.275"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_app}'</arg>
</arguments>
<assign>
<var>${amount_app_after}</var>
</assign>
<msg timestamp="20170728 17:03:26.279" level="INFO">Executing : Query  |  select * from account_amount where account_id='6273' </msg>
<msg timestamp="20170728 17:03:26.285" level="INFO">${amount_app_after} = ((12587, 6273, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 17, 4, 23), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:26.285" starttime="20170728 17:03:26.278"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_boss}'</arg>
</arguments>
<assign>
<var>${amount_boss_after}</var>
</assign>
<msg timestamp="20170728 17:03:26.288" level="INFO">Executing : Query  |  select * from account_amount where account_id='6135' </msg>
<msg timestamp="20170728 17:03:26.294" level="INFO">${amount_boss_after} = ((12449, 6135, Decimal('50425.00'), Decimal('49597.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 31), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:26.294" starttime="20170728 17:03:26.287"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${amount_boss_after[0][2]}+${amount_app_after[0][2]}-${amount_boss[0][2]}-${amount_app[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_check}</var>
</assign>
<msg timestamp="20170728 17:03:26.298" level="INFO">${total_amount_check} = 2.0</msg>
<status status="PASS" endtime="20170728 17:03:26.299" starttime="20170728 17:03:26.296"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${total_amount_check}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<msg timestamp="20170728 17:03:26.302" level="INFO">Argument types are:
&lt;type 'float'&gt;
&lt;class 'decimal.Decimal'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:26.302" starttime="20170728 17:03:26.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount正确</arg>
</arguments>
<msg timestamp="20170728 17:03:26.304" level="INFO">total_amount正确</msg>
<status status="PASS" endtime="20170728 17:03:26.305" starttime="20170728 17:03:26.303"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${amount_boss_after[0][3]}+${amount_app_after[0][3]}-${amount_boss[0][3]}-${amount_app[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_check}</var>
</assign>
<msg timestamp="20170728 17:03:26.308" level="INFO">${balance_amount_check} = 2.0</msg>
<status status="PASS" endtime="20170728 17:03:26.309" starttime="20170728 17:03:26.306"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${balance_amount_check}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<msg timestamp="20170728 17:03:26.312" level="INFO">Argument types are:
&lt;type 'float'&gt;
&lt;class 'decimal.Decimal'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:26.313" starttime="20170728 17:03:26.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount正确</arg>
</arguments>
<msg timestamp="20170728 17:03:26.316" level="INFO">balance_amount正确</msg>
<status status="PASS" endtime="20170728 17:03:26.316" starttime="20170728 17:03:26.314"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${amount_boss[0][4]}+${amount_app[0][4]}-${amount_boss_after[0][4]}-${amount_app_after[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_check}</var>
</assign>
<msg timestamp="20170728 17:03:26.319" level="INFO">${frozen_amount_check} = 0.0</msg>
<status status="PASS" endtime="20170728 17:03:26.319" starttime="20170728 17:03:26.317"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${frozen_amount_check}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:26.321" level="INFO">Argument types are:
&lt;type 'float'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:26.322" starttime="20170728 17:03:26.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount正确</arg>
</arguments>
<msg timestamp="20170728 17:03:26.325" level="INFO">frozen_amount正确</msg>
<status status="PASS" endtime="20170728 17:03:26.325" starttime="20170728 17:03:26.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>检验表account_amount成功</arg>
</arguments>
<msg timestamp="20170728 17:03:26.328" level="INFO">检验表account_amount成功</msg>
<status status="PASS" endtime="20170728 17:03:26.329" starttime="20170728 17:03:26.326"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<msg timestamp="20170728 17:03:26.331" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=888888 </msg>
<status status="PASS" endtime="20170728 17:03:26.411" starttime="20170728 17:03:26.330"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount SET total_amount =${amount_boss[0][2]},balance_amount=${amount_boss[0][3]},frozen_amount=${amount_boss[0][4]} where account_id="${account_id_boss}";</arg>
</arguments>
<msg timestamp="20170728 17:03:26.414" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount SET total_amount =50423.00,balance_amount=49595.00,frozen_amount=828.00 where account_id="6135"; </msg>
<status status="PASS" endtime="20170728 17:03:26.466" starttime="20170728 17:03:26.412"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount SET total_amount=${amount_boss[0][2]},balance_amount=${amount_boss[0][3]},frozen_amount=${amount_boss[0][4]} where account_id="${account_id_app}";</arg>
</arguments>
<msg timestamp="20170728 17:03:26.470" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount SET total_amount=50423.00,balance_amount=49595.00,frozen_amount=828.00 where account_id="6273"; </msg>
<status status="PASS" endtime="20170728 17:03:26.478" starttime="20170728 17:03:26.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170728 17:03:26.480" level="INFO">成功</msg>
<status status="PASS" endtime="20170728 17:03:26.481" starttime="20170728 17:03:26.479"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:26.482" critical="yes" starttime="20170728 17:03:25.411"></status>
</test>
<test id="s1-s2-s3-t2" name="输入库里面标记删除的订单号">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:26.492" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:26.500" starttime="20170728 17:03:26.490"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:26.502" starttime="20170728 17:03:26.488"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:26.503" starttime="20170728 17:03:26.487"></status>
</kw>
<kw name="清数据" library="myResource">
<arguments>
<arg>88800888</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:26.513" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:26.529" starttime="20170728 17:03:26.511"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:26.531" starttime="20170728 17:03:26.508"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:26.532" starttime="20170728 17:03:26.506"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170728 17:03:26.534" level="INFO">Executing : Query  |  select * from ajb_account_transaction where id=88800888 </msg>
<msg timestamp="20170728 17:03:26.539" level="INFO">${check} = ()</msg>
<status status="PASS" endtime="20170728 17:03:26.540" starttime="20170728 17:03:26.533"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170728 17:03:26.542" level="INFO">Length is 0</msg>
<msg timestamp="20170728 17:03:26.542" level="INFO">${check_length} = 0</msg>
<status status="PASS" endtime="20170728 17:03:26.543" starttime="20170728 17:03:26.541"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} != 0</arg>
<arg>execute sql string</arg>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>数据库之前没有数据</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库之前没有数据</arg>
</arguments>
<msg timestamp="20170728 17:03:26.547" level="INFO">数据库之前没有数据</msg>
<status status="PASS" endtime="20170728 17:03:26.548" starttime="20170728 17:03:26.545"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:26.549" starttime="20170728 17:03:26.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库里面的这条数据清理成功啦。</arg>
</arguments>
<msg timestamp="20170728 17:03:26.551" level="INFO">数据库里面的这条数据清理成功啦。</msg>
<status status="PASS" endtime="20170728 17:03:26.552" starttime="20170728 17:03:26.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_delete}</arg>
</arguments>
<msg timestamp="20170728 17:03:26.554" level="INFO">${id_delete} = 88800888</msg>
<status status="PASS" endtime="20170728 17:03:26.555" starttime="20170728 17:03:26.553"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:26.556" starttime="20170728 17:03:26.504"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("${id_delete}","32102151361501122443","100000","6135","1","32102151361501122443","","2","1","11","2","1","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170728 17:03:26.559" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("88800888","32102151361501122443","100000","6135","1","32102151361501122443","","2","1","11","2","1","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170728 17:03:26.634" starttime="20170728 17:03:26.558"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>32102151361501122443</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:03:26.640" level="INFO">${args11} = 32102151361501122443</msg>
<status status="PASS" endtime="20170728 17:03:26.641" starttime="20170728 17:03:26.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:03:26.643" level="INFO">${args22} = </msg>
<status status="PASS" endtime="20170728 17:03:26.644" starttime="20170728 17:03:26.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 17:03:26.646" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170728 17:03:26.646" starttime="20170728 17:03:26.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 17:03:26.648" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 17:03:26.649" starttime="20170728 17:03:26.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 17:03:26.651" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</msg>
<status status="PASS" endtime="20170728 17:03:26.651" starttime="20170728 17:03:26.650"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:26.652" starttime="20170728 17:03:26.635"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 17:03:26.656" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</msg>
<status status="PASS" endtime="20170728 17:03:26.657" starttime="20170728 17:03:26.654"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 17:03:26.659" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:26.660" starttime="20170728 17:03:26.658"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:26.663" starttime="20170728 17:03:26.662"></status>
</kw>
<msg timestamp="20170728 17:03:26.664" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:03:26.664" starttime="20170728 17:03:26.661"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>order_num</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:26.667" starttime="20170728 17:03:26.666"></status>
</kw>
<msg timestamp="20170728 17:03:26.668" level="INFO">${args11_after} = order_num</msg>
<status status="PASS" endtime="20170728 17:03:26.669" starttime="20170728 17:03:26.665"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:26.674" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:26.681" starttime="20170728 17:03:26.672"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:26.683" starttime="20170728 17:03:26.671"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:26.685" starttime="20170728 17:03:26.669"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 17:03:26.688" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num='32102151361501122443' and channel_no='1' </msg>
<msg timestamp="20170728 17:03:26.700" level="INFO">${database1} = ((88800888, '32102151361501122443', 100000, 6135, 1, '32102151361501122443', '', Decimal('2.00'), 1, 11, 2, 1, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)),)</msg>
<status status="PASS" endtime="20170728 17:03:26.701" starttime="20170728 17:03:26.686"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 17:03:26.704" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 17:03:26.709" level="INFO">${database} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 31), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:26.710" starttime="20170728 17:03:26.702"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 17:03:26.712" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:26.712" starttime="20170728 17:03:26.711"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 17:03:26.714" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 17:03:26.715" starttime="20170728 17:03:26.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:26.717" level="INFO">获得account_id值为：6135</msg>
<status status="PASS" endtime="20170728 17:03:26.718" starttime="20170728 17:03:26.716"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:26.721" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:26.722" starttime="20170728 17:03:26.719"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:26.725" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:26.725" starttime="20170728 17:03:26.723"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:26.727" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:26.728" starttime="20170728 17:03:26.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:26.730" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 17:03:26.731" starttime="20170728 17:03:26.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 17:03:26.734" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:26.736" starttime="20170728 17:03:26.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:26.738" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:26.739" starttime="20170728 17:03:26.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:26.742" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:26.743" starttime="20170728 17:03:26.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:26.746" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:26.748" starttime="20170728 17:03:26.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:26.751" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:03:26.751" starttime="20170728 17:03:26.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 17:03:26.753" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:26.754" starttime="20170728 17:03:26.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 17:03:26.757" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</msg>
<status status="PASS" endtime="20170728 17:03:26.757" starttime="20170728 17:03:26.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170728 17:03:26.760" level="INFO">${database} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 31), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:26.760" starttime="20170728 17:03:26.758"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:26.761" starttime="20170728 17:03:26.653"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Ajb Withdraw Cancel" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:26.782" starttime="20170728 17:03:26.767"></status>
</kw>
<msg timestamp="20170728 17:03:26.784" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:26.785" starttime="20170728 17:03:26.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 17:03:26.787" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:26.788" starttime="20170728 17:03:26.786"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:26.790" starttime="20170728 17:03:26.762"></status>
</kw>
<kw name="错误时字段验证" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:26.795" level="INFO">200</msg>
<status status="PASS" endtime="20170728 17:03:26.796" starttime="20170728 17:03:26.793"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 17:03:26.798" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:26.799" starttime="20170728 17:03:26.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 17:03:26.801" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 17:03:26.801" starttime="20170728 17:03:26.800"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 17:03:26.804" level="INFO">To JSON using : content={"data":null,"msg":"订单退款结算失败","code":0,"success":false} </msg>
<msg timestamp="20170728 17:03:26.804" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 17:03:26.805" level="INFO">${toJson} = {u'msg': u'\u8ba2\u5355\u9000\u6b3e\u7ed3\u7b97\u5931\u8d25', u'code': 0, u'data': None, u'success': False}</msg>
<status status="PASS" endtime="20170728 17:03:26.806" starttime="20170728 17:03:26.802"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>False</arg>
</arguments>
<msg timestamp="20170728 17:03:26.810" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:26.811" starttime="20170728 17:03:26.808"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['data']}</arg>
<arg>None</arg>
</arguments>
<msg timestamp="20170728 17:03:26.814" level="INFO">Argument types are:
&lt;type 'NoneType'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:26.815" starttime="20170728 17:03:26.812"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${toJson['code']}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:26.817" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:26.818" starttime="20170728 17:03:26.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:26.819" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:26.820" starttime="20170728 17:03:26.819"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:26.821" starttime="20170728 17:03:26.791"></status>
</kw>
<kw name="amount和表里的校验" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:26.828" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:26.837" starttime="20170728 17:03:26.826"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:26.839" starttime="20170728 17:03:26.825"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:26.841" starttime="20170728 17:03:26.823"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:26.844" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 17:03:26.849" level="INFO">${user_id} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 31), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:26.850" starttime="20170728 17:03:26.843"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:26.852" starttime="20170728 17:03:26.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 17:03:26.854" level="INFO">total_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 17:03:26.854" starttime="20170728 17:03:26.853"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:26.858" starttime="20170728 17:03:26.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 17:03:26.860" level="INFO">balance_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 17:03:26.861" starttime="20170728 17:03:26.859"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:26.863" starttime="20170728 17:03:26.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 17:03:26.865" level="INFO">frozen_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 17:03:26.866" starttime="20170728 17:03:26.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amounts的数据没有变化正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:26.868" level="INFO">amounts的数据没有变化正确的</msg>
<status status="PASS" endtime="20170728 17:03:26.868" starttime="20170728 17:03:26.867"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:26.871" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:26.872" starttime="20170728 17:03:26.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount内容没有发生变化</arg>
</arguments>
<msg timestamp="20170728 17:03:26.875" level="INFO">表account_amount内容没有发生变化</msg>
<status status="PASS" endtime="20170728 17:03:26.876" starttime="20170728 17:03:26.873"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:03:26.878" level="INFO">${current_time} = 2017-07-28 17:03:26.878</msg>
<status status="PASS" endtime="20170728 17:03:26.879" starttime="20170728 17:03:26.877"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:26.882" level="INFO">${current_time_before_30} = 2017-07-28 17:02:26.878</msg>
<status status="PASS" endtime="20170728 17:03:26.883" starttime="20170728 17:03:26.881"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:26.885" level="INFO">${current_time_after_30} = 2017-07-28 17:04:31.878</msg>
<status status="PASS" endtime="20170728 17:03:26.886" starttime="20170728 17:03:26.884"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${bill_check}</var>
</assign>
<msg timestamp="20170728 17:03:26.889" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6135' and update_time between' 2017-07-28 17:02:26.878' and '2017-07-28 17:04:31.878' </msg>
<msg timestamp="20170728 17:03:26.896" level="INFO">${bill_check} = ()</msg>
<status status="PASS" endtime="20170728 17:03:26.897" starttime="20170728 17:03:26.887"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${bill_check}</arg>
</arguments>
<assign>
<var>${bill_check_length}</var>
</assign>
<msg timestamp="20170728 17:03:26.898" level="INFO">Length is 0</msg>
<msg timestamp="20170728 17:03:26.899" level="INFO">${bill_check_length} = 0</msg>
<status status="PASS" endtime="20170728 17:03:26.900" starttime="20170728 17:03:26.897"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${bill_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:26.901" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:26.902" starttime="20170728 17:03:26.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>account_unilateral_bill里的没有相关数据</arg>
</arguments>
<msg timestamp="20170728 17:03:26.904" level="INFO">account_unilateral_bill里的没有相关数据</msg>
<status status="PASS" endtime="20170728 17:03:26.904" starttime="20170728 17:03:26.903"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num ='${args11}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${transaction_check}</var>
</assign>
<msg timestamp="20170728 17:03:26.908" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num ='32102151361501122443' and update_time between' 2017-07-28 17:02:26.878' and '2017-07-28 17:04:31.878' </msg>
<msg timestamp="20170728 17:03:26.918" level="INFO">${transaction_check} = ()</msg>
<status status="PASS" endtime="20170728 17:03:26.920" starttime="20170728 17:03:26.905"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${transaction_check}</arg>
</arguments>
<assign>
<var>${transaction_check_length}</var>
</assign>
<msg timestamp="20170728 17:03:26.924" level="INFO">Length is 0</msg>
<msg timestamp="20170728 17:03:26.925" level="INFO">${transaction_check_length} = 0</msg>
<status status="PASS" endtime="20170728 17:03:26.926" starttime="20170728 17:03:26.922"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${transaction_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:26.927" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:26.928" starttime="20170728 17:03:26.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>ajb_account_transaction里的没有相关数据</arg>
</arguments>
<msg timestamp="20170728 17:03:26.930" level="INFO">ajb_account_transaction里的没有相关数据</msg>
<status status="PASS" endtime="20170728 17:03:26.931" starttime="20170728 17:03:26.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库表里数据调用接口前后没有发生变化</arg>
</arguments>
<msg timestamp="20170728 17:03:26.932" level="INFO">数据库表里数据调用接口前后没有发生变化</msg>
<status status="PASS" endtime="20170728 17:03:26.933" starttime="20170728 17:03:26.931"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:26.935" starttime="20170728 17:03:26.822"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<msg timestamp="20170728 17:03:26.938" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=88800888 </msg>
<status status="PASS" endtime="20170728 17:03:26.992" starttime="20170728 17:03:26.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当订单号为库里面标记删除的时候，接口返回失败</arg>
</arguments>
<msg timestamp="20170728 17:03:26.994" level="INFO">当订单号为库里面标记删除的时候，接口返回失败</msg>
<status status="PASS" endtime="20170728 17:03:26.995" starttime="20170728 17:03:26.993"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:26.997" critical="yes" starttime="20170728 17:03:26.483"></status>
</test>
<status status="PASS" endtime="20170728 17:03:26.999" starttime="20170728 17:03:25.394"></status>
</suite>
<suite source="F:\logs and reports\账户中心\订单\订单确认支付（线上）.txt" id="s1-s2-s4" name="订单确认支付（线上）">
<test id="s1-s2-s4-t1" name="输入的参数全部正确">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:27.033" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:27.044" starttime="20170728 17:03:27.031"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:27.045" starttime="20170728 17:03:27.029"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:27.046" starttime="20170728 17:03:27.028"></status>
</kw>
<kw name="清数据" library="myResource">
<arguments>
<arg>888888</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:27.051" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:27.061" starttime="20170728 17:03:27.050"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:27.063" starttime="20170728 17:03:27.049"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:27.064" starttime="20170728 17:03:27.048"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170728 17:03:27.067" level="INFO">Executing : Query  |  select * from ajb_account_transaction where id=888888 </msg>
<msg timestamp="20170728 17:03:27.074" level="INFO">${check} = ()</msg>
<status status="PASS" endtime="20170728 17:03:27.076" starttime="20170728 17:03:27.065"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170728 17:03:27.078" level="INFO">Length is 0</msg>
<msg timestamp="20170728 17:03:27.078" level="INFO">${check_length} = 0</msg>
<status status="PASS" endtime="20170728 17:03:27.079" starttime="20170728 17:03:27.077"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} != 0</arg>
<arg>execute sql string</arg>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>数据库之前没有数据</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库之前没有数据</arg>
</arguments>
<msg timestamp="20170728 17:03:27.082" level="INFO">数据库之前没有数据</msg>
<status status="PASS" endtime="20170728 17:03:27.083" starttime="20170728 17:03:27.081"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:27.083" starttime="20170728 17:03:27.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库里面的这条数据清理成功啦。</arg>
</arguments>
<msg timestamp="20170728 17:03:27.085" level="INFO">数据库里面的这条数据清理成功啦。</msg>
<status status="PASS" endtime="20170728 17:03:27.086" starttime="20170728 17:03:27.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_delete}</arg>
</arguments>
<msg timestamp="20170728 17:03:27.088" level="INFO">${id_delete} = 888888</msg>
<status status="PASS" endtime="20170728 17:03:27.089" starttime="20170728 17:03:27.087"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:27.091" starttime="20170728 17:03:27.047"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("${id_delete}","32102151361500975216","100000","6135","1","32102151361500012119","","2","1","11","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170728 17:03:27.093" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("888888","32102151361500975216","100000","6135","1","32102151361500012119","","2","1","11","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170728 17:03:27.157" starttime="20170728 17:03:27.092"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>32102151361500012119</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 17:03:27.160" level="INFO">${args11} = 32102151361500012119</msg>
<status status="PASS" endtime="20170728 17:03:27.161" starttime="20170728 17:03:27.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 17:03:27.163" level="INFO">${args22} = </msg>
<status status="PASS" endtime="20170728 17:03:27.163" starttime="20170728 17:03:27.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 17:03:27.165" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170728 17:03:27.166" starttime="20170728 17:03:27.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 17:03:27.168" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 17:03:27.169" starttime="20170728 17:03:27.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 17:03:27.172" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/confirmPay</msg>
<status status="PASS" endtime="20170728 17:03:27.172" starttime="20170728 17:03:27.171"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:27.173" starttime="20170728 17:03:27.158"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 17:03:27.176" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/confirmPay</msg>
<status status="PASS" endtime="20170728 17:03:27.176" starttime="20170728 17:03:27.175"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 17:03:27.178" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:27.179" starttime="20170728 17:03:27.177"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:27.182" starttime="20170728 17:03:27.181"></status>
</kw>
<msg timestamp="20170728 17:03:27.183" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:03:27.184" starttime="20170728 17:03:27.180"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>order_num</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:27.187" starttime="20170728 17:03:27.186"></status>
</kw>
<msg timestamp="20170728 17:03:27.188" level="INFO">${args11_after} = order_num</msg>
<status status="PASS" endtime="20170728 17:03:27.190" starttime="20170728 17:03:27.185"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:27.195" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:27.202" starttime="20170728 17:03:27.194"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:27.203" starttime="20170728 17:03:27.193"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:27.204" starttime="20170728 17:03:27.192"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 17:03:27.208" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num='32102151361500012119' and channel_no='1' </msg>
<msg timestamp="20170728 17:03:27.217" level="INFO">${database1} = ((9242, '32102151361500012119', 100000, 6135, 1, '32102151361500012119', '20170717133633HCE041747', Decimal('2000.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 17, 13, 36, 36), datetime.datetime(2017, ...</msg>
<status status="PASS" endtime="20170728 17:03:27.218" starttime="20170728 17:03:27.206"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 17:03:27.221" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 17:03:27.226" level="INFO">${database} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 31), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:27.227" starttime="20170728 17:03:27.220"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 17:03:27.229" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:27.230" starttime="20170728 17:03:27.228"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 17:03:27.232" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 17:03:27.232" starttime="20170728 17:03:27.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:27.234" level="INFO">获得account_id值为：6135</msg>
<status status="PASS" endtime="20170728 17:03:27.235" starttime="20170728 17:03:27.233"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:27.239" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:27.239" starttime="20170728 17:03:27.237"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:27.241" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:27.242" starttime="20170728 17:03:27.240"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 17:03:27.244" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:27.245" starttime="20170728 17:03:27.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 17:03:27.248" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 17:03:27.249" starttime="20170728 17:03:27.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 17:03:27.252" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 17:03:27.253" starttime="20170728 17:03:27.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:27.256" level="INFO">${total_amount_before} = 50423.00</msg>
<status status="PASS" endtime="20170728 17:03:27.257" starttime="20170728 17:03:27.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:27.259" level="INFO">${balance_amount_before} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:27.260" starttime="20170728 17:03:27.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 17:03:27.262" level="INFO">${frozen_amount_before} = 828.00</msg>
<status status="PASS" endtime="20170728 17:03:27.262" starttime="20170728 17:03:27.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:27.264" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 17:03:27.265" starttime="20170728 17:03:27.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 17:03:27.267" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:27.268" starttime="20170728 17:03:27.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 17:03:27.270" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/confirmPay</msg>
<status status="PASS" endtime="20170728 17:03:27.271" starttime="20170728 17:03:27.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170728 17:03:27.273" level="INFO">${database} = ((12449, 6135, Decimal('50423.00'), Decimal('49595.00'), Decimal('828.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 31), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:27.274" starttime="20170728 17:03:27.271"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:27.275" starttime="20170728 17:03:27.174"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Ajb Withdraw Cancel" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:27.425" starttime="20170728 17:03:27.280"></status>
</kw>
<msg timestamp="20170728 17:03:27.426" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:27.427" starttime="20170728 17:03:27.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 17:03:27.429" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 17:03:27.430" starttime="20170728 17:03:27.428"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:27.430" starttime="20170728 17:03:27.276"></status>
</kw>
<kw name="字段验证" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:27.435" level="INFO">200</msg>
<status status="PASS" endtime="20170728 17:03:27.437" starttime="20170728 17:03:27.434"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 17:03:27.440" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:27.441" starttime="20170728 17:03:27.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 17:03:27.443" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 17:03:27.444" starttime="20170728 17:03:27.442"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 17:03:27.446" level="INFO">To JSON using : content={"data":null,"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 17:03:27.446" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 17:03:27.447" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': None, u'success': True}</msg>
<status status="PASS" endtime="20170728 17:03:27.448" starttime="20170728 17:03:27.445"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 17:03:27.451" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:27.452" starttime="20170728 17:03:27.450"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:27.455" starttime="20170728 17:03:27.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:27.457" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:27.458" starttime="20170728 17:03:27.456"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<assign>
<var>@{Link1}</var>
</assign>
<msg timestamp="20170728 17:03:27.460" level="INFO">@{Link1} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:27.461" starttime="20170728 17:03:27.459"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>"${value}" in @{Link1}</arg>
<arg>Get From Dictionary</arg>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${orderNum}</var>
</assign>
<msg timestamp="20170728 17:03:27.463" level="INFO">${orderNum} = None</msg>
<status status="PASS" endtime="20170728 17:03:27.463" starttime="20170728 17:03:27.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<msg timestamp="20170728 17:03:27.467" level="INFO">${orderNum} = None</msg>
<status status="PASS" endtime="20170728 17:03:27.468" starttime="20170728 17:03:27.465"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:27.469" starttime="20170728 17:03:27.432"></status>
</kw>
<kw name="确认取消的金额数" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:27.475" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:27.483" starttime="20170728 17:03:27.474"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:27.484" starttime="20170728 17:03:27.472"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:27.486" starttime="20170728 17:03:27.471"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>8</arg>
</arguments>
<assign>
<var>${event_code_judge}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>11</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:27.492" starttime="20170728 17:03:27.491"></status>
</kw>
<msg timestamp="20170728 17:03:27.493" level="INFO">${event_code_judge} = 11</msg>
<status status="PASS" endtime="20170728 17:03:27.493" starttime="20170728 17:03:27.488"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num ='${args11}' and event_code=${event_code_judge}</arg>
</arguments>
<assign>
<var>${search}</var>
</assign>
<msg timestamp="20170728 17:03:27.496" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num ='32102151361500012119' and event_code=11 </msg>
<msg timestamp="20170728 17:03:27.510" level="INFO">${search} = ((888888, '32102151361500975216', 100000, 6135, 1, '32102151361500012119', '', Decimal('2.00'), 1, 11, 2, 0, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)),)</msg>
<status status="PASS" endtime="20170728 17:03:27.510" starttime="20170728 17:03:27.494"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${search[0][7]}</arg>
</arguments>
<assign>
<var>${change_total_amount}</var>
</assign>
<msg timestamp="20170728 17:03:27.513" level="INFO">${change_total_amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:03:27.514" starttime="20170728 17:03:27.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${change_total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:27.516" level="INFO">${change_total_amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:03:27.517" starttime="20170728 17:03:27.515"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:27.518" starttime="20170728 17:03:27.470"></status>
</kw>
<kw name="退款确认的account_unilateral_bill的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_unilateral_bill</arg>
</arguments>
<msg timestamp="20170728 17:03:27.520" level="INFO">现在开始校验表account_unilateral_bill</msg>
<status status="PASS" endtime="20170728 17:03:27.521" starttime="20170728 17:03:27.519"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:27.525" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:27.535" starttime="20170728 17:03:27.524"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:27.536" starttime="20170728 17:03:27.523"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:27.538" starttime="20170728 17:03:27.522"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>account_unilateral_bill</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:27.546" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:27.553" starttime="20170728 17:03:27.545"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:27.555" starttime="20170728 17:03:27.544"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:27.556" starttime="20170728 17:03:27.542"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:03:27.560" level="INFO">${current_time} = 2017-07-28 17:03:27.559</msg>
<status status="PASS" endtime="20170728 17:03:27.560" starttime="20170728 17:03:27.558"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>0 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:27.563" level="INFO">${current_time_before_30} = 2017-07-28 17:03:27.559</msg>
<status status="PASS" endtime="20170728 17:03:27.564" starttime="20170728 17:03:27.562"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:27.567" level="INFO">${current_time_after_30} = 2017-07-28 17:05:07.559</msg>
<status status="PASS" endtime="20170728 17:03:27.567" starttime="20170728 17:03:27.565"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 17:03:27.569" level="INFO">Executing : Query  |  select * from account_unilateral_bill where user_id='100000' and update_time between' 2017-07-28 17:03:27.559' and '2017-07-28 17:05:07.559' </msg>
<msg timestamp="20170728 17:03:27.578" level="INFO">${updatetime} = ((7732, '32102151361501230579', 100000, 6135, '32102151361501230578', 1, 13, 2, Decimal('2.00'), None, datetime.datetime(2017, 7, 28, 17, 4, 32), datetime.datetime(2017, 7, 28, 17, 4, 32), 0), (7733, ...</msg>
<status status="PASS" endtime="20170728 17:03:27.579" starttime="20170728 17:03:27.568"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 17:03:27.581" level="INFO">Length is 2</msg>
<status status="PASS" endtime="20170728 17:03:27.582" starttime="20170728 17:03:27.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 17:03:27.583" level="INFO">account_unilateral_bill表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 17:03:27.584" starttime="20170728 17:03:27.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:27.586" level="INFO">${current_time_before_30} = 2017-07-28 17:03:27.559</msg>
<status status="PASS" endtime="20170728 17:03:27.587" starttime="20170728 17:03:27.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:27.590" level="INFO">${current_time_after_30} = 2017-07-28 17:05:07.559</msg>
<status status="PASS" endtime="20170728 17:03:27.591" starttime="20170728 17:03:27.588"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:27.592" starttime="20170728 17:03:27.541"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id} 'and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:27.594" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6135 'and update_time between' 2017-07-28 17:03:27.559' and '2017-07-28 17:05:07.559' </msg>
<msg timestamp="20170728 17:03:27.601" level="INFO">${user_id} = ((7732, '32102151361501230579', 100000, 6135, '32102151361501230578', 1, 13, 2, Decimal('2.00'), None, datetime.datetime(2017, 7, 28, 17, 4, 32), datetime.datetime(2017, 7, 28, 17, 4, 32), 0), (7733, ...</msg>
<status status="PASS" endtime="20170728 17:03:27.602" starttime="20170728 17:03:27.593"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:27.607" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:27.608" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:27.608" starttime="20170728 17:03:27.604"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[1][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length2}</var>
</assign>
<msg timestamp="20170728 17:03:27.610" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:27.611" level="INFO">${bill_no_length2} = 20</msg>
<status status="PASS" endtime="20170728 17:03:27.612" starttime="20170728 17:03:27.609"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:27.613" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:27.614" starttime="20170728 17:03:27.612"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>${bill_no_length2}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:27.616" starttime="20170728 17:03:27.615"></status>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<doc>Fails if the given objects are equal.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
<arg>${user_id[1][1]}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:27.618" starttime="20170728 17:03:27.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，且不是相同bill_no,此时校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:27.620" level="INFO">bill_no的数据长度正确，且不是相同bill_no,此时校验成功</msg>
<status status="PASS" endtime="20170728 17:03:27.621" starttime="20170728 17:03:27.619"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:27.624" starttime="20170728 17:03:27.622"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id[1][2]}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:27.627" starttime="20170728 17:03:27.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:03:27.630" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:03:27.631" starttime="20170728 17:03:27.629"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:27.633" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:27.634" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:27.634" starttime="20170728 17:03:27.632"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:27.637" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:27.638" starttime="20170728 17:03:27.636"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${user_id[1][4]}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:27.642" starttime="20170728 17:03:27.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，且此时是同一个command_no,校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:27.643" level="INFO">commandl_no的数据长度正确，且此时是同一个command_no,校验成功</msg>
<status status="PASS" endtime="20170728 17:03:27.644" starttime="20170728 17:03:27.643"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:03:27.646" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:27.646" starttime="20170728 17:03:27.645"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>${user_id[1][5]}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:27.649" starttime="20170728 17:03:27.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 17:03:27.652" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 17:03:27.654" starttime="20170728 17:03:27.650"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>13</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:27.663" starttime="20170728 17:03:27.662"></status>
</kw>
<msg timestamp="20170728 17:03:27.664" level="INFO">${event_code} = 13</msg>
<status status="PASS" endtime="20170728 17:03:27.664" starttime="20170728 17:03:27.658"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:03:27.666" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:03:27.667" starttime="20170728 17:03:27.665"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:27.670" starttime="20170728 17:03:27.669"></status>
</kw>
<msg timestamp="20170728 17:03:27.671" level="INFO">${event_code_after} = 13</msg>
<status status="PASS" endtime="20170728 17:03:27.673" starttime="20170728 17:03:27.668"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:03:27.676" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:27.677" starttime="20170728 17:03:27.675"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:27.681" starttime="20170728 17:03:27.680"></status>
</kw>
<msg timestamp="20170728 17:03:27.682" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 17:03:27.682" starttime="20170728 17:03:27.678"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:27.689" starttime="20170728 17:03:27.687"></status>
</kw>
<msg timestamp="20170728 17:03:27.691" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:03:27.692" starttime="20170728 17:03:27.684"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:03:27.695" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:03:27.696" starttime="20170728 17:03:27.694"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:27.699" starttime="20170728 17:03:27.698"></status>
</kw>
<msg timestamp="20170728 17:03:27.700" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:27.700" starttime="20170728 17:03:27.697"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${total_amount_before}-${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:27.705" starttime="20170728 17:03:27.703"></status>
</kw>
<msg timestamp="20170728 17:03:27.707" level="INFO">${total_amount} = 50421.0</msg>
<status status="PASS" endtime="20170728 17:03:27.708" starttime="20170728 17:03:27.701"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:27.712" starttime="20170728 17:03:27.711"></status>
</kw>
<msg timestamp="20170728 17:03:27.713" level="INFO">${balance_amount} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:27.713" starttime="20170728 17:03:27.709"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:27.720" starttime="20170728 17:03:27.718"></status>
</kw>
<msg timestamp="20170728 17:03:27.722" level="INFO">${frozen_amount} = 826.0</msg>
<status status="PASS" endtime="20170728 17:03:27.723" starttime="20170728 17:03:27.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:27.726" level="INFO">${event_code} = 13</msg>
<status status="PASS" endtime="20170728 17:03:27.726" starttime="20170728 17:03:27.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:27.728" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 17:03:27.729" starttime="20170728 17:03:27.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:27.731" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:27.731" starttime="20170728 17:03:27.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:27.733" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:03:27.734" starttime="20170728 17:03:27.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:27.737" level="INFO">${total_amount} = 50421.0</msg>
<status status="PASS" endtime="20170728 17:03:27.738" starttime="20170728 17:03:27.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:27.741" level="INFO">${balance_amount} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:27.742" starttime="20170728 17:03:27.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:27.745" level="INFO">${frozen_amount} = 826.0</msg>
<status status="PASS" endtime="20170728 17:03:27.746" starttime="20170728 17:03:27.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:27.748" level="INFO">${event_code_after} = 13</msg>
<status status="PASS" endtime="20170728 17:03:27.749" starttime="20170728 17:03:27.747"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:27.750" starttime="20170728 17:03:27.656"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:27.753" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:27.754" starttime="20170728 17:03:27.751"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>${user_id[1][6]}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:27.756" starttime="20170728 17:03:27.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:27.759" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 17:03:27.759" starttime="20170728 17:03:27.758"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:27.761" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:27.762" starttime="20170728 17:03:27.760"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[1][7]}</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20170728 17:03:27.766" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:27.767" starttime="20170728 17:03:27.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type俩者值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:27.769" level="INFO">command_type俩者值正确</msg>
<status status="PASS" endtime="20170728 17:03:27.770" starttime="20170728 17:03:27.768"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:27.773" starttime="20170728 17:03:27.771"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>0-${amount}</arg>
</arguments>
<assign>
<var>${amount_after}</var>
</assign>
<msg timestamp="20170728 17:03:27.775" level="INFO">${amount_after} = -2.0</msg>
<status status="PASS" endtime="20170728 17:03:27.776" starttime="20170728 17:03:27.774"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${user_id[1][8]}</arg>
<arg>${amount_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:27.779" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:27.779" starttime="20170728 17:03:27.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:27.781" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 17:03:27.782" starttime="20170728 17:03:27.780"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${user_id[0][10]}</arg>
<arg>${user_id[0][11]}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:27.784" starttime="20170728 17:03:27.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 17:03:27.787" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 17:03:27.787" starttime="20170728 17:03:27.786"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${user_id[0][10]}</arg>
<arg>${user_id[0][10]}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:27.791" starttime="20170728 17:03:27.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>则调用艾佳币回收确认的接口时，则直接同时发生解冻和转账俩步</arg>
</arguments>
<msg timestamp="20170728 17:03:27.794" level="INFO">则调用艾佳币回收确认的接口时，则直接同时发生解冻和转账俩步</msg>
<status status="PASS" endtime="20170728 17:03:27.795" starttime="20170728 17:03:27.793"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:27.797" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:27.798" starttime="20170728 17:03:27.796"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>${user_id[1][12]}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:27.800" starttime="20170728 17:03:27.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:27.802" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:27.802" starttime="20170728 17:03:27.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:27.804" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170728 17:03:27.804" starttime="20170728 17:03:27.803"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${user_id[1][0]}</arg>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>@{delete_unilateral_bill}</var>
</assign>
<msg timestamp="20170728 17:03:27.808" level="INFO">@{delete_unilateral_bill} = [ 7733 | 7732 ]</msg>
<status status="PASS" endtime="20170728 17:03:27.809" starttime="20170728 17:03:27.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{delete_unilateral_bill}</arg>
</arguments>
<msg timestamp="20170728 17:03:27.812" level="INFO">@{delete_unilateral_bill} = [ 7733 | 7732 ]</msg>
<status status="PASS" endtime="20170728 17:03:27.813" starttime="20170728 17:03:27.811"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[1][0]}'</arg>
</arguments>
<msg timestamp="20170728 17:03:27.817" level="INFO">Executing : Execute SQL String  |  delete from account_unilateral_bill where id ='7733' </msg>
<status status="PASS" endtime="20170728 17:03:27.874" starttime="20170728 17:03:27.815"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]}'</arg>
</arguments>
<msg timestamp="20170728 17:03:27.876" level="INFO">Executing : Execute SQL String  |  delete from account_unilateral_bill where id ='7732' </msg>
<status status="PASS" endtime="20170728 17:03:27.922" starttime="20170728 17:03:27.875"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:27.923" starttime="20170728 17:03:27.518"></status>
</kw>
<kw name="表ajb_account_transaction" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170728 17:03:27.927" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170728 17:03:27.927" starttime="20170728 17:03:27.926"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:27.933" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:27.942" starttime="20170728 17:03:27.931"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:27.943" starttime="20170728 17:03:27.929"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:27.944" starttime="20170728 17:03:27.928"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>ajb_account_transaction</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:27.950" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:27.962" starttime="20170728 17:03:27.948"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:27.963" starttime="20170728 17:03:27.947"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:27.965" starttime="20170728 17:03:27.946"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 17:03:27.968" level="INFO">${current_time} = 2017-07-28 17:03:27.967</msg>
<status status="PASS" endtime="20170728 17:03:27.968" starttime="20170728 17:03:27.967"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>0 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:27.970" level="INFO">${current_time_before_30} = 2017-07-28 17:03:27.967</msg>
<status status="PASS" endtime="20170728 17:03:27.971" starttime="20170728 17:03:27.969"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:27.974" level="INFO">${current_time_after_30} = 2017-07-28 17:05:07.967</msg>
<status status="PASS" endtime="20170728 17:03:27.975" starttime="20170728 17:03:27.972"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 17:03:27.977" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and update_time between' 2017-07-28 17:03:27.967' and '2017-07-28 17:05:07.967' </msg>
<msg timestamp="20170728 17:03:27.989" level="INFO">${updatetime} = ((88889809, '32102151361501230577', 100000, 6135, 1, '32102151361500012119', '20170728170429FUS051710', Decimal('2.00'), 1, 13, 2, 0, datetime.datetime(2017, 7, 28, 17, 4, 32), datetime.datetime(2017,...</msg>
<status status="PASS" endtime="20170728 17:03:27.990" starttime="20170728 17:03:27.975"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 17:03:27.992" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 17:03:27.993" starttime="20170728 17:03:27.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 17:03:27.995" level="INFO">ajb_account_transaction表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 17:03:27.996" starttime="20170728 17:03:27.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:27.998" level="INFO">${current_time_before_30} = 2017-07-28 17:03:27.967</msg>
<status status="PASS" endtime="20170728 17:03:27.999" starttime="20170728 17:03:27.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 17:03:28.002" level="INFO">${current_time_after_30} = 2017-07-28 17:05:07.967</msg>
<status status="PASS" endtime="20170728 17:03:28.003" starttime="20170728 17:03:28.001"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:28.004" starttime="20170728 17:03:27.945"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:28.007" level="INFO">Executing : Query  |  select * from ajb_account_transaction where account_id ='6135' and update_time between' 2017-07-28 17:03:27.967' and '2017-07-28 17:05:07.967' </msg>
<msg timestamp="20170728 17:03:28.020" level="INFO">${user_id} = ((88889809, '32102151361501230577', 100000, 6135, 1, '32102151361500012119', '20170728170429FUS051710', Decimal('2.00'), 1, 13, 2, 0, datetime.datetime(2017, 7, 28, 17, 4, 32), datetime.datetime(2017,...</msg>
<status status="PASS" endtime="20170728 17:03:28.021" starttime="20170728 17:03:28.005"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 17:03:28.023" level="INFO">Length is 20</msg>
<msg timestamp="20170728 17:03:28.024" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 17:03:28.025" starttime="20170728 17:03:28.022"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 17:03:28.027" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:28.027" starttime="20170728 17:03:28.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:28.030" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 17:03:28.031" starttime="20170728 17:03:28.029"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:28.034" starttime="20170728 17:03:28.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 17:03:28.036" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 17:03:28.037" starttime="20170728 17:03:28.035"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:28.040" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:28.041" starttime="20170728 17:03:28.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no的值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:28.045" level="INFO">channel_no的值正确</msg>
<status status="PASS" endtime="20170728 17:03:28.046" starttime="20170728 17:03:28.043"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${args11}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${orderNum}</arg>
</arguments>
<assign>
<var>${bill_order_num}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:28.051" starttime="20170728 17:03:28.050"></status>
</kw>
<msg timestamp="20170728 17:03:28.051" level="INFO">${bill_order_num} = 32102151361500012119</msg>
<status status="PASS" endtime="20170728 17:03:28.052" starttime="20170728 17:03:28.047"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>${bill_order_num}</arg>
</arguments>
<msg timestamp="20170728 17:03:28.054" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:28.057" starttime="20170728 17:03:28.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170728 17:03:28.060" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170728 17:03:28.061" starttime="20170728 17:03:28.059"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>13</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:28.067" starttime="20170728 17:03:28.066"></status>
</kw>
<msg timestamp="20170728 17:03:28.067" level="INFO">${event_code} = 13</msg>
<status status="PASS" endtime="20170728 17:03:28.068" starttime="20170728 17:03:28.063"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:03:28.070" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:03:28.070" starttime="20170728 17:03:28.069"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:28.076" starttime="20170728 17:03:28.074"></status>
</kw>
<msg timestamp="20170728 17:03:28.076" level="INFO">${event_code_after} = 13</msg>
<status status="PASS" endtime="20170728 17:03:28.077" starttime="20170728 17:03:28.072"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:03:28.080" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:28.081" starttime="20170728 17:03:28.078"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:28.089" starttime="20170728 17:03:28.086"></status>
</kw>
<msg timestamp="20170728 17:03:28.091" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 17:03:28.092" starttime="20170728 17:03:28.083"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:28.096" starttime="20170728 17:03:28.095"></status>
</kw>
<msg timestamp="20170728 17:03:28.098" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:03:28.098" starttime="20170728 17:03:28.093"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:03:28.101" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:03:28.102" starttime="20170728 17:03:28.100"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:28.109" starttime="20170728 17:03:28.107"></status>
</kw>
<msg timestamp="20170728 17:03:28.110" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:28.111" starttime="20170728 17:03:28.104"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${total_amount_before}-${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:28.117" starttime="20170728 17:03:28.115"></status>
</kw>
<msg timestamp="20170728 17:03:28.120" level="INFO">${total_amount} = 50421.0</msg>
<status status="PASS" endtime="20170728 17:03:28.121" starttime="20170728 17:03:28.113"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:28.130" starttime="20170728 17:03:28.128"></status>
</kw>
<msg timestamp="20170728 17:03:28.132" level="INFO">${balance_amount} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:28.133" starttime="20170728 17:03:28.124"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:28.141" starttime="20170728 17:03:28.138"></status>
</kw>
<msg timestamp="20170728 17:03:28.142" level="INFO">${frozen_amount} = 826.0</msg>
<status status="PASS" endtime="20170728 17:03:28.143" starttime="20170728 17:03:28.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:28.145" level="INFO">${event_code} = 13</msg>
<status status="PASS" endtime="20170728 17:03:28.145" starttime="20170728 17:03:28.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:28.147" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 17:03:28.148" starttime="20170728 17:03:28.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:28.151" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:28.152" starttime="20170728 17:03:28.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:28.154" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:03:28.155" starttime="20170728 17:03:28.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:28.158" level="INFO">${total_amount} = 50421.0</msg>
<status status="PASS" endtime="20170728 17:03:28.158" starttime="20170728 17:03:28.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:28.160" level="INFO">${balance_amount} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:28.161" starttime="20170728 17:03:28.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:28.163" level="INFO">${frozen_amount} = 826.0</msg>
<status status="PASS" endtime="20170728 17:03:28.163" starttime="20170728 17:03:28.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:28.165" level="INFO">${event_code_after} = 13</msg>
<status status="PASS" endtime="20170728 17:03:28.166" starttime="20170728 17:03:28.164"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:28.167" starttime="20170728 17:03:28.062"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170728 17:03:28.171" level="INFO">${pay_no_after} = 20170728170429FUS051710</msg>
<status status="PASS" endtime="20170728 17:03:28.172" starttime="20170728 17:03:28.169"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170728 17:03:28.175" level="INFO">Length is 23</msg>
<msg timestamp="20170728 17:03:28.176" level="INFO">${pay_no_after_length} = 23</msg>
<status status="PASS" endtime="20170728 17:03:28.176" starttime="20170728 17:03:28.174"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:28.178" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:28.179" starttime="20170728 17:03:28.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170728 17:03:28.182" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170728 17:03:28.183" starttime="20170728 17:03:28.181"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:28.186" starttime="20170728 17:03:28.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 17:03:28.189" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 17:03:28.190" starttime="20170728 17:03:28.187"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 17:03:28.192" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:28.193" starttime="20170728 17:03:28.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 17:03:28.195" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 17:03:28.196" starttime="20170728 17:03:28.194"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][9]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:28.197" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:28.198" starttime="20170728 17:03:28.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 17:03:28.200" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 17:03:28.201" starttime="20170728 17:03:28.199"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 17:03:28.204" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:28.205" starttime="20170728 17:03:28.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170728 17:03:28.207" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170728 17:03:28.208" starttime="20170728 17:03:28.206"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:28.210" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:28.210" starttime="20170728 17:03:28.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:28.212" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:28.213" starttime="20170728 17:03:28.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 17:03:28.214" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 17:03:28.215" starttime="20170728 17:03:28.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170728 17:03:28.217" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170728 17:03:28.217" starttime="20170728 17:03:28.216"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170728 17:03:28.220" level="INFO">${user_id[0][0]_transaction} = 88889809</msg>
<status status="PASS" endtime="20170728 17:03:28.221" starttime="20170728 17:03:28.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170728 17:03:28.223" level="INFO">${user_id[0][0]_transaction} = 88889809</msg>
<status status="PASS" endtime="20170728 17:03:28.224" starttime="20170728 17:03:28.222"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id[0][0]}'</arg>
</arguments>
<assign>
<var>${user_id_unilateral_delete1}</var>
</assign>
<msg timestamp="20170728 17:03:28.226" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88889809' </msg>
<msg timestamp="20170728 17:03:28.291" level="INFO">${user_id_unilateral_delete1} = None</msg>
<status status="PASS" endtime="20170728 17:03:28.293" starttime="20170728 17:03:28.225"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:28.297" starttime="20170728 17:03:27.924"></status>
</kw>
<kw name="表account_amount的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_amount</arg>
</arguments>
<msg timestamp="20170728 17:03:28.307" level="INFO">现在开始校验表account_amount</msg>
<status status="PASS" endtime="20170728 17:03:28.309" starttime="20170728 17:03:28.303"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:28.320" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:28.376" starttime="20170728 17:03:28.319"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:28.377" starttime="20170728 17:03:28.315"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:28.378" starttime="20170728 17:03:28.312"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time1}</var>
</assign>
<msg timestamp="20170728 17:03:28.380" level="INFO">${current_time1} = 2017-07-28 17:03:28.379</msg>
<status status="PASS" endtime="20170728 17:03:28.380" starttime="20170728 17:03:28.379"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_before_30}</var>
</assign>
<msg timestamp="20170728 17:03:28.382" level="INFO">${current_time1_before_30} = 2017-07-28 17:02:28.379</msg>
<status status="PASS" endtime="20170728 17:03:28.383" starttime="20170728 17:03:28.381"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_after_30}</var>
</assign>
<msg timestamp="20170728 17:03:28.385" level="INFO">${current_time1_after_30} = 2017-07-28 17:04:28.379</msg>
<status status="PASS" endtime="20170728 17:03:28.385" starttime="20170728 17:03:28.384"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 17:03:28.387" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 17:03:28.394" level="INFO">${user_id} = ((12449, 6135, Decimal('50421.00'), Decimal('49595.00'), Decimal('826.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 17, 4, 32), 0),)</msg>
<status status="PASS" endtime="20170728 17:03:28.394" starttime="20170728 17:03:28.386"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>13</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:28.400" starttime="20170728 17:03:28.399"></status>
</kw>
<msg timestamp="20170728 17:03:28.401" level="INFO">${event_code} = 13</msg>
<status status="PASS" endtime="20170728 17:03:28.401" starttime="20170728 17:03:28.396"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 17:03:28.405" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 17:03:28.407" starttime="20170728 17:03:28.403"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:28.411" starttime="20170728 17:03:28.410"></status>
</kw>
<msg timestamp="20170728 17:03:28.412" level="INFO">${event_code_after} = 13</msg>
<status status="PASS" endtime="20170728 17:03:28.413" starttime="20170728 17:03:28.408"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 17:03:28.415" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 17:03:28.416" starttime="20170728 17:03:28.414"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:28.420" starttime="20170728 17:03:28.419"></status>
</kw>
<msg timestamp="20170728 17:03:28.422" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 17:03:28.422" starttime="20170728 17:03:28.417"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:28.428" starttime="20170728 17:03:28.426"></status>
</kw>
<msg timestamp="20170728 17:03:28.429" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:03:28.430" starttime="20170728 17:03:28.423"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 17:03:28.433" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 17:03:28.433" starttime="20170728 17:03:28.431"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:28.437" starttime="20170728 17:03:28.436"></status>
</kw>
<msg timestamp="20170728 17:03:28.439" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:28.440" starttime="20170728 17:03:28.434"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${total_amount_before}-${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:28.446" starttime="20170728 17:03:28.444"></status>
</kw>
<msg timestamp="20170728 17:03:28.448" level="INFO">${total_amount} = 50421.0</msg>
<status status="PASS" endtime="20170728 17:03:28.449" starttime="20170728 17:03:28.441"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:28.455" starttime="20170728 17:03:28.453"></status>
</kw>
<msg timestamp="20170728 17:03:28.457" level="INFO">${balance_amount} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:28.457" starttime="20170728 17:03:28.450"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:28.463" starttime="20170728 17:03:28.461"></status>
</kw>
<msg timestamp="20170728 17:03:28.465" level="INFO">${frozen_amount} = 826.0</msg>
<status status="PASS" endtime="20170728 17:03:28.465" starttime="20170728 17:03:28.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 17:03:28.467" level="INFO">${event_code} = 13</msg>
<status status="PASS" endtime="20170728 17:03:28.468" starttime="20170728 17:03:28.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 17:03:28.470" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 17:03:28.470" starttime="20170728 17:03:28.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 17:03:28.474" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 17:03:28.474" starttime="20170728 17:03:28.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:28.476" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 17:03:28.477" starttime="20170728 17:03:28.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:28.480" level="INFO">${total_amount} = 50421.0</msg>
<status status="PASS" endtime="20170728 17:03:28.483" starttime="20170728 17:03:28.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:28.488" level="INFO">${balance_amount} = 49595.00</msg>
<status status="PASS" endtime="20170728 17:03:28.490" starttime="20170728 17:03:28.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:28.494" level="INFO">${frozen_amount} = 826.0</msg>
<status status="PASS" endtime="20170728 17:03:28.495" starttime="20170728 17:03:28.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 17:03:28.498" level="INFO">${event_code_after} = 13</msg>
<status status="PASS" endtime="20170728 17:03:28.499" starttime="20170728 17:03:28.496"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:28.500" starttime="20170728 17:03:28.395"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:28.502" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:28.503" starttime="20170728 17:03:28.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:28.504" level="INFO">total_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:28.505" starttime="20170728 17:03:28.504"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 17:03:28.507" starttime="20170728 17:03:28.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:28.509" level="INFO">balance_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:28.510" starttime="20170728 17:03:28.508"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 17:03:28.513" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:28.514" starttime="20170728 17:03:28.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 17:03:28.516" level="INFO">frozen_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 17:03:28.517" starttime="20170728 17:03:28.515"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 17:03:28.519" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 17:03:28.520" starttime="20170728 17:03:28.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 17:03:28.523" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 17:03:28.523" starttime="20170728 17:03:28.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount校验成功！</arg>
</arguments>
<msg timestamp="20170728 17:03:28.525" level="INFO">表account_amount校验成功！</msg>
<status status="PASS" endtime="20170728 17:03:28.526" starttime="20170728 17:03:28.524"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:28.526" starttime="20170728 17:03:28.300"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<msg timestamp="20170728 17:03:28.528" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=888888 </msg>
<status status="PASS" endtime="20170728 17:03:28.610" starttime="20170728 17:03:28.527"></status>
</kw>
<kw name="艾佳币恢复数目" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 17:03:28.615" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 17:03:28.624" starttime="20170728 17:03:28.614"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:28.626" starttime="20170728 17:03:28.613"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:28.627" starttime="20170728 17:03:28.612"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount \ SET total_amount=${database[0][2]},balance_amount=${database[0][3]},frozen_amount=${database[0][4]}where account_id="${account_id}";</arg>
</arguments>
<msg timestamp="20170728 17:03:28.629" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount  SET total_amount=50423.00,balance_amount=49595.00,frozen_amount=828.00where account_id="6135"; </msg>
<status status="PASS" endtime="20170728 17:03:28.673" starttime="20170728 17:03:28.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170728 17:03:28.675" level="INFO">成功</msg>
<status status="PASS" endtime="20170728 17:03:28.676" starttime="20170728 17:03:28.674"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:28.676" starttime="20170728 17:03:28.611"></status>
</kw>
<status status="PASS" endtime="20170728 17:03:28.677" critical="yes" starttime="20170728 17:03:27.023"></status>
</test>
<status status="PASS" endtime="20170728 17:03:28.679" starttime="20170728 17:03:27.005"></status>
</suite>
<status status="PASS" endtime="20170728 17:03:28.687" starttime="20170728 17:03:20.866"></status>
</suite>
<status status="PASS" endtime="20170728 17:03:28.699" starttime="20170728 17:02:56.552"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="30">Critical Tests</stat>
<stat fail="0" pass="30">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="账户中心" pass="30">账户中心</stat>
<stat fail="0" id="s1-s1" name="艾佳币" pass="23">账户中心.艾佳币</stat>
<stat fail="0" id="s1-s1-s1" name="艾佳币充值" pass="4">账户中心.艾佳币.艾佳币充值</stat>
<stat fail="0" id="s1-s1-s2" name="艾佳币回收冻结" pass="4">账户中心.艾佳币.艾佳币回收冻结</stat>
<stat fail="0" id="s1-s1-s3" name="艾佳币回收取消" pass="3">账户中心.艾佳币.艾佳币回收取消</stat>
<stat fail="0" id="s1-s1-s4" name="艾佳币回收确认" pass="3">账户中心.艾佳币.艾佳币回收确认</stat>
<stat fail="0" id="s1-s1-s5" name="艾佳币活动充值" pass="9">账户中心.艾佳币.艾佳币活动充值</stat>
<stat fail="0" id="s1-s2" name="订单" pass="7">账户中心.订单</stat>
<stat fail="0" id="s1-s2-s1" name="订单取消支付（线上）" pass="1">账户中心.订单.订单取消支付（线上）</stat>
<stat fail="0" id="s1-s2-s2" name="订单支付冻结（线上）" pass="3">账户中心.订单.订单支付冻结（线上）</stat>
<stat fail="0" id="s1-s2-s3" name="订单支付退款（线上）" pass="2">账户中心.订单.订单支付退款（线上）</stat>
<stat fail="0" id="s1-s2-s4" name="订单确认支付（线上）" pass="1">账户中心.订单.订单确认支付（线上）</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20170728 17:02:57.156" level="ERROR">Error in file 'F:\logs and reports\账户中心\艾佳币\艾佳币充值.txt': Resource file '艾佳币需要的操作.txt' does not exist.</msg>
</errors>
</robot>
