<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170728 16:02:38.862" generator="Robot 3.0.2 (Python 2.7.8 on win32)">
<suite source="F:\logs and reports\账户中心" id="s1" name="账户中心">
<suite source="F:\logs and reports\账户中心\艾佳币" id="s1-s1" name="艾佳币">
<suite source="F:\logs and reports\账户中心\艾佳币\艾佳币活动充值.txt" id="s1-s1-s1" name="艾佳币活动充值">
<test id="s1-s1-s1-t1" name="输入已有的user_id和amount数目为0参数">
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>100000</arg>
<arg>0</arg>
<arg>1</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 16:02:39.393" level="INFO">${args11} = 100000</msg>
<status status="PASS" endtime="20170728 16:02:39.394" starttime="20170728 16:02:39.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 16:02:39.397" level="INFO">${args22} = 0</msg>
<status status="PASS" endtime="20170728 16:02:39.398" starttime="20170728 16:02:39.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 16:02:39.401" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170728 16:02:39.402" starttime="20170728 16:02:39.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 16:02:39.403" level="INFO">${args44} = 1</msg>
<status status="PASS" endtime="20170728 16:02:39.404" starttime="20170728 16:02:39.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 16:02:39.406" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</msg>
<status status="PASS" endtime="20170728 16:02:39.406" starttime="20170728 16:02:39.405"></status>
</kw>
<status status="PASS" endtime="20170728 16:02:39.407" starttime="20170728 16:02:39.390"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 16:02:39.410" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</msg>
<status status="PASS" endtime="20170728 16:02:39.411" starttime="20170728 16:02:39.409"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 16:02:39.414" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 16:02:39.415" starttime="20170728 16:02:39.412"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<status status="PASS" endtime="20170728 16:02:39.418" starttime="20170728 16:02:39.417"></status>
</kw>
<msg timestamp="20170728 16:02:39.419" level="INFO">${channel_no} = 2</msg>
<status status="PASS" endtime="20170728 16:02:39.420" starttime="20170728 16:02:39.416"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>user_id</arg>
</arguments>
<status status="PASS" endtime="20170728 16:02:39.424" starttime="20170728 16:02:39.422"></status>
</kw>
<msg timestamp="20170728 16:02:39.425" level="INFO">${args11_after} = user_id</msg>
<status status="PASS" endtime="20170728 16:02:39.425" starttime="20170728 16:02:39.420"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 16:02:39.457" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 16:02:39.512" starttime="20170728 16:02:39.428"></status>
</kw>
<status status="PASS" endtime="20170728 16:02:39.512" starttime="20170728 16:02:39.427"></status>
</kw>
<status status="PASS" endtime="20170728 16:02:39.513" starttime="20170728 16:02:39.426"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 16:02:39.515" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and channel_no='2' </msg>
<msg timestamp="20170728 16:02:39.528" level="INFO">${database1} = ((88889508, '32102151361501207801', 100000, 6273, 2, '32102151361501207801', '20170728155539MJV051391', Decimal('10.00'), 1, 2, 2, 0, datetime.datetime(2017, 7, 28, 15, 55, 42), datetime.datetime(2017...</msg>
<status status="PASS" endtime="20170728 16:02:39.528" starttime="20170728 16:02:39.514"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 16:02:39.530" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6273' </msg>
<msg timestamp="20170728 16:02:39.540" level="INFO">${database} = ((12587, 6273, Decimal('50457.00'), Decimal('49635.00'), Decimal('822.00'), datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 16, 3, 12), 0),)</msg>
<status status="PASS" endtime="20170728 16:02:39.541" starttime="20170728 16:02:39.529"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 16:02:39.543" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 16:02:39.544" starttime="20170728 16:02:39.542"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 16:02:39.546" level="INFO">${account_id} = 6273</msg>
<status status="PASS" endtime="20170728 16:02:39.547" starttime="20170728 16:02:39.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 16:02:39.548" level="INFO">获得account_id值为：6273</msg>
<status status="PASS" endtime="20170728 16:02:39.549" starttime="20170728 16:02:39.547"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 16:02:39.550" level="INFO">${total_amount_before} = 50457.00</msg>
<status status="PASS" endtime="20170728 16:02:39.551" starttime="20170728 16:02:39.549"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 16:02:39.553" level="INFO">${balance_amount_before} = 49635.00</msg>
<status status="PASS" endtime="20170728 16:02:39.554" starttime="20170728 16:02:39.552"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 16:02:39.556" level="INFO">${frozen_amount_before} = 822.00</msg>
<status status="PASS" endtime="20170728 16:02:39.557" starttime="20170728 16:02:39.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 16:02:39.560" level="INFO">${account_id} = 6273</msg>
<status status="PASS" endtime="20170728 16:02:39.560" starttime="20170728 16:02:39.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 16:02:39.562" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 16:02:39.562" starttime="20170728 16:02:39.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 16:02:39.564" level="INFO">${total_amount_before} = 50457.00</msg>
<status status="PASS" endtime="20170728 16:02:39.565" starttime="20170728 16:02:39.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 16:02:39.566" level="INFO">${balance_amount_before} = 49635.00</msg>
<status status="PASS" endtime="20170728 16:02:39.567" starttime="20170728 16:02:39.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 16:02:39.572" level="INFO">${frozen_amount_before} = 822.00</msg>
<status status="PASS" endtime="20170728 16:02:39.573" starttime="20170728 16:02:39.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 16:02:39.575" level="INFO">${channel_no} = 2</msg>
<status status="PASS" endtime="20170728 16:02:39.576" starttime="20170728 16:02:39.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 16:02:39.578" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 16:02:39.578" starttime="20170728 16:02:39.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 16:02:39.580" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</msg>
<status status="PASS" endtime="20170728 16:02:39.581" starttime="20170728 16:02:39.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170728 16:02:39.583" level="INFO">${database} = ((12587, 6273, Decimal('50457.00'), Decimal('49635.00'), Decimal('822.00'), datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 16, 3, 12), 0),)</msg>
<status status="PASS" endtime="20170728 16:02:39.583" starttime="20170728 16:02:39.582"></status>
</kw>
<status status="PASS" endtime="20170728 16:02:39.584" starttime="20170728 16:02:39.408"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Ajb Activity Recharge" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 16:02:39.652" starttime="20170728 16:02:39.589"></status>
</kw>
<msg timestamp="20170728 16:02:39.653" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 16:02:39.653" starttime="20170728 16:02:39.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 16:02:39.656" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 16:02:39.657" starttime="20170728 16:02:39.655"></status>
</kw>
<status status="PASS" endtime="20170728 16:02:39.658" starttime="20170728 16:02:39.585"></status>
</kw>
<kw name="字段验证" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 16:02:39.661" level="INFO">200</msg>
<status status="PASS" endtime="20170728 16:02:39.662" starttime="20170728 16:02:39.660"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 16:02:39.665" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:39.665" starttime="20170728 16:02:39.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 16:02:39.668" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 16:02:39.668" starttime="20170728 16:02:39.667"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 16:02:39.671" level="INFO">To JSON using : content={"data":{"orderNum":"32102151361501208155"},"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 16:02:39.672" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 16:02:39.673" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': {u'orderNum': u'32102151361501208155'}, u'success': True}</msg>
<status status="PASS" endtime="20170728 16:02:39.674" starttime="20170728 16:02:39.670"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 16:02:39.676" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:39.676" starttime="20170728 16:02:39.675"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 16:02:39.678" starttime="20170728 16:02:39.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 16:02:39.680" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 16:02:39.681" starttime="20170728 16:02:39.679"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<assign>
<var>@{Link1}</var>
</assign>
<msg timestamp="20170728 16:02:39.683" level="INFO">@{Link1} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 16:02:39.684" starttime="20170728 16:02:39.682"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>"${value}" in @{Link1}</arg>
<arg>Get From Dictionary</arg>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${orderNum}</var>
</assign>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<status status="PASS" endtime="20170728 16:02:39.688" starttime="20170728 16:02:39.687"></status>
</kw>
<msg timestamp="20170728 16:02:39.689" level="INFO">${orderNum} = 32102151361501208155</msg>
<status status="PASS" endtime="20170728 16:02:39.690" starttime="20170728 16:02:39.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<msg timestamp="20170728 16:02:39.691" level="INFO">${orderNum} = 32102151361501208155</msg>
<status status="PASS" endtime="20170728 16:02:39.692" starttime="20170728 16:02:39.690"></status>
</kw>
<status status="PASS" endtime="20170728 16:02:39.693" starttime="20170728 16:02:39.659"></status>
</kw>
<kw name="表ajb_account_open_record的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_open_record</arg>
</arguments>
<msg timestamp="20170728 16:02:39.695" level="INFO">现在开始校验表ajb_account_open_record</msg>
<status status="PASS" endtime="20170728 16:02:39.696" starttime="20170728 16:02:39.694"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 16:02:39.700" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 16:02:39.726" starttime="20170728 16:02:39.699"></status>
</kw>
<status status="PASS" endtime="20170728 16:02:39.727" starttime="20170728 16:02:39.698"></status>
</kw>
<status status="PASS" endtime="20170728 16:02:39.728" starttime="20170728 16:02:39.697"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 16:02:39.730" level="INFO">Executing : Query  |  select * from ajb_account_open_record where account_id ='6273' </msg>
<msg timestamp="20170728 16:02:39.738" level="INFO">${user_id} = ((100000000010L, '32102151361501206852', 100000, 6273, 2, 2, 0, datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 10, 46, 53)),)</msg>
<status status="PASS" endtime="20170728 16:02:39.739" starttime="20170728 16:02:39.729"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 16:02:39.741" level="INFO">Length is 20</msg>
<msg timestamp="20170728 16:02:39.742" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 16:02:39.743" starttime="20170728 16:02:39.740"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 16:02:39.745" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:39.745" starttime="20170728 16:02:39.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 16:02:39.747" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 16:02:39.747" starttime="20170728 16:02:39.746"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 16:02:39.749" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:39.750" starttime="20170728 16:02:39.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 16:02:39.751" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 16:02:39.752" starttime="20170728 16:02:39.751"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 16:02:39.753" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:39.754" starttime="20170728 16:02:39.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no正确反映艾佳币账户渠道</arg>
</arguments>
<msg timestamp="20170728 16:02:39.757" level="INFO">channel_no正确反映艾佳币账户渠道</msg>
<status status="PASS" endtime="20170728 16:02:39.758" starttime="20170728 16:02:39.756"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 16:02:39.763" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:39.764" starttime="20170728 16:02:39.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>status的值为2,表示生效，是正确的</arg>
</arguments>
<msg timestamp="20170728 16:02:39.768" level="INFO">status的值为2,表示生效，是正确的</msg>
<status status="PASS" endtime="20170728 16:02:39.769" starttime="20170728 16:02:39.766"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 16:02:39.772" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:39.773" starttime="20170728 16:02:39.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 16:02:39.775" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 16:02:39.776" starttime="20170728 16:02:39.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表里面的add_time和update_time的时间是一致的。校验正确。</arg>
</arguments>
<msg timestamp="20170728 16:02:39.777" level="INFO">表里面的add_time和update_time的时间是一致的。校验正确。</msg>
<status status="PASS" endtime="20170728 16:02:39.778" starttime="20170728 16:02:39.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_open_record的校验成功！</arg>
</arguments>
<msg timestamp="20170728 16:02:39.779" level="INFO">表ajb_account_open_record的校验成功！</msg>
<status status="PASS" endtime="20170728 16:02:39.780" starttime="20170728 16:02:39.779"></status>
</kw>
<status status="PASS" endtime="20170728 16:02:39.781" starttime="20170728 16:02:39.693"></status>
</kw>
<kw name="表account_unilateral_bill的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_unilateral_bill</arg>
</arguments>
<msg timestamp="20170728 16:02:39.783" level="INFO">现在开始校验表account_unilateral_bill</msg>
<status status="PASS" endtime="20170728 16:02:39.784" starttime="20170728 16:02:39.782"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 16:02:39.790" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 16:02:39.825" starttime="20170728 16:02:39.788"></status>
</kw>
<status status="PASS" endtime="20170728 16:02:39.826" starttime="20170728 16:02:39.786"></status>
</kw>
<status status="PASS" endtime="20170728 16:02:39.827" starttime="20170728 16:02:39.784"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>account_unilateral_bill</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 16:02:39.832" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 16:02:39.839" starttime="20170728 16:02:39.831"></status>
</kw>
<status status="PASS" endtime="20170728 16:02:39.840" starttime="20170728 16:02:39.830"></status>
</kw>
<status status="PASS" endtime="20170728 16:02:39.841" starttime="20170728 16:02:39.829"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 16:02:39.844" level="INFO">${current_time} = 2017-07-28 16:02:39.843</msg>
<status status="PASS" endtime="20170728 16:02:39.844" starttime="20170728 16:02:39.842"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>5 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 16:02:39.852" level="INFO">${current_time_before_30} = 2017-07-28 16:02:34.843</msg>
<status status="PASS" endtime="20170728 16:02:39.853" starttime="20170728 16:02:39.845"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 16:02:39.856" level="INFO">${current_time_after_30} = 2017-07-28 16:04:19.843</msg>
<status status="PASS" endtime="20170728 16:02:39.857" starttime="20170728 16:02:39.854"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 16:02:39.861" level="INFO">Executing : Query  |  select * from account_unilateral_bill where user_id='100000' and update_time between' 2017-07-28 16:02:34.843' and '2017-07-28 16:04:19.843' </msg>
<msg timestamp="20170728 16:02:39.876" level="INFO">${updatetime} = ((7161, '32102151361501208159', 100000, 6273, '32102151361501208156', 1, 1, 3, Decimal('0.00'), None, datetime.datetime(2017, 7, 28, 16, 3, 45), datetime.datetime(2017, 7, 28, 16, 3, 45), 0),)</msg>
<status status="PASS" endtime="20170728 16:02:39.876" starttime="20170728 16:02:39.859"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 16:02:39.878" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 16:02:39.880" starttime="20170728 16:02:39.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 16:02:39.882" level="INFO">account_unilateral_bill表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 16:02:39.882" starttime="20170728 16:02:39.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 16:02:39.884" level="INFO">${current_time_before_30} = 2017-07-28 16:02:34.843</msg>
<status status="PASS" endtime="20170728 16:02:39.885" starttime="20170728 16:02:39.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 16:02:39.889" level="INFO">${current_time_after_30} = 2017-07-28 16:04:19.843</msg>
<status status="PASS" endtime="20170728 16:02:39.890" starttime="20170728 16:02:39.887"></status>
</kw>
<status status="PASS" endtime="20170728 16:02:39.892" starttime="20170728 16:02:39.828"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id} 'and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 16:02:39.896" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6273 'and update_time between' 2017-07-28 16:02:34.843' and '2017-07-28 16:04:19.843' </msg>
<msg timestamp="20170728 16:02:39.905" level="INFO">${user_id} = ((7161, '32102151361501208159', 100000, 6273, '32102151361501208156', 1, 1, 3, Decimal('0.00'), None, datetime.datetime(2017, 7, 28, 16, 3, 45), datetime.datetime(2017, 7, 28, 16, 3, 45), 0),)</msg>
<status status="PASS" endtime="20170728 16:02:39.906" starttime="20170728 16:02:39.894"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170728 16:02:39.907" level="INFO">Length is 20</msg>
<msg timestamp="20170728 16:02:39.908" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170728 16:02:39.909" starttime="20170728 16:02:39.906"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 16:02:39.912" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:39.912" starttime="20170728 16:02:39.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 16:02:39.915" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 16:02:39.915" starttime="20170728 16:02:39.914"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 16:02:39.918" starttime="20170728 16:02:39.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 16:02:39.921" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 16:02:39.923" starttime="20170728 16:02:39.919"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170728 16:02:39.926" level="INFO">Length is 20</msg>
<msg timestamp="20170728 16:02:39.927" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170728 16:02:39.927" starttime="20170728 16:02:39.924"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 16:02:39.930" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:39.930" starttime="20170728 16:02:39.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 16:02:39.932" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 16:02:39.933" starttime="20170728 16:02:39.931"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 16:02:39.934" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:39.935" starttime="20170728 16:02:39.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 16:02:39.937" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 16:02:39.937" starttime="20170728 16:02:39.936"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>7</arg>
</arguments>
<status status="PASS" endtime="20170728 16:02:39.943" starttime="20170728 16:02:39.942"></status>
</kw>
<msg timestamp="20170728 16:02:39.944" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 16:02:39.944" starttime="20170728 16:02:39.940"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 16:02:39.946" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 16:02:39.946" starttime="20170728 16:02:39.945"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<status status="PASS" endtime="20170728 16:02:39.951" starttime="20170728 16:02:39.949"></status>
</kw>
<msg timestamp="20170728 16:02:39.952" level="INFO">${event_code_after} = 1</msg>
<status status="PASS" endtime="20170728 16:02:39.952" starttime="20170728 16:02:39.947"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 16:02:39.955" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 16:02:39.956" starttime="20170728 16:02:39.953"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20170728 16:02:39.961" starttime="20170728 16:02:39.960"></status>
</kw>
<msg timestamp="20170728 16:02:39.962" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 16:02:39.962" starttime="20170728 16:02:39.958"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 16:02:39.966" starttime="20170728 16:02:39.965"></status>
</kw>
<msg timestamp="20170728 16:02:39.966" level="INFO">${amount} = 0</msg>
<status status="PASS" endtime="20170728 16:02:39.967" starttime="20170728 16:02:39.963"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 16:02:39.969" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 16:02:39.969" starttime="20170728 16:02:39.968"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 16:02:39.974" starttime="20170728 16:02:39.972"></status>
</kw>
<msg timestamp="20170728 16:02:39.976" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 16:02:39.977" starttime="20170728 16:02:39.970"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 16:02:39.982" starttime="20170728 16:02:39.981"></status>
</kw>
<msg timestamp="20170728 16:02:39.982" level="INFO">${total_amount} = 50457.0</msg>
<status status="PASS" endtime="20170728 16:02:39.983" starttime="20170728 16:02:39.979"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 16:02:39.987" starttime="20170728 16:02:39.986"></status>
</kw>
<msg timestamp="20170728 16:02:39.988" level="INFO">${balance_amount} = 49635.0</msg>
<status status="PASS" endtime="20170728 16:02:39.988" starttime="20170728 16:02:39.984"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 16:02:39.994" starttime="20170728 16:02:39.993"></status>
</kw>
<msg timestamp="20170728 16:02:39.995" level="INFO">${frozen_amount} = 822.00</msg>
<status status="PASS" endtime="20170728 16:02:39.996" starttime="20170728 16:02:39.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 16:02:39.997" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 16:02:39.998" starttime="20170728 16:02:39.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 16:02:40.000" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 16:02:40.001" starttime="20170728 16:02:39.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 16:02:40.002" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 16:02:40.003" starttime="20170728 16:02:40.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 16:02:40.007" level="INFO">${amount} = 0</msg>
<status status="PASS" endtime="20170728 16:02:40.008" starttime="20170728 16:02:40.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 16:02:40.011" level="INFO">${total_amount} = 50457.0</msg>
<status status="PASS" endtime="20170728 16:02:40.011" starttime="20170728 16:02:40.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 16:02:40.013" level="INFO">${balance_amount} = 49635.0</msg>
<status status="PASS" endtime="20170728 16:02:40.014" starttime="20170728 16:02:40.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 16:02:40.015" level="INFO">${frozen_amount} = 822.00</msg>
<status status="PASS" endtime="20170728 16:02:40.016" starttime="20170728 16:02:40.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 16:02:40.018" level="INFO">${event_code_after} = 1</msg>
<status status="PASS" endtime="20170728 16:02:40.018" starttime="20170728 16:02:40.017"></status>
</kw>
<status status="PASS" endtime="20170728 16:02:40.019" starttime="20170728 16:02:39.939"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 16:02:40.021" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:40.022" starttime="20170728 16:02:40.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 16:02:40.025" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 16:02:40.026" starttime="20170728 16:02:40.024"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 16:02:40.028" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:40.028" starttime="20170728 16:02:40.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170728 16:02:40.030" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170728 16:02:40.030" starttime="20170728 16:02:40.029"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 16:02:40.032" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:40.033" starttime="20170728 16:02:40.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 16:02:40.035" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 16:02:40.036" starttime="20170728 16:02:40.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 16:02:40.039" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 16:02:40.040" starttime="20170728 16:02:40.037"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 16:02:40.043" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:40.044" starttime="20170728 16:02:40.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 16:02:40.046" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 16:02:40.046" starttime="20170728 16:02:40.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170728 16:02:40.048" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170728 16:02:40.049" starttime="20170728 16:02:40.047"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_unilateral}</var>
</assign>
<msg timestamp="20170728 16:02:40.051" level="INFO">${user_id[0][0]_unilateral} = 7161</msg>
<status status="PASS" endtime="20170728 16:02:40.051" starttime="20170728 16:02:40.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_unilateral}</arg>
</arguments>
<msg timestamp="20170728 16:02:40.053" level="INFO">${user_id[0][0]_unilateral} = 7161</msg>
<status status="PASS" endtime="20170728 16:02:40.055" starttime="20170728 16:02:40.052"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]_unilateral}'</arg>
</arguments>
<msg timestamp="20170728 16:02:40.058" level="INFO">Executing : Execute SQL String  |  delete from account_unilateral_bill where id ='7161' </msg>
<status status="PASS" endtime="20170728 16:02:40.108" starttime="20170728 16:02:40.057"></status>
</kw>
<status status="PASS" endtime="20170728 16:02:40.110" starttime="20170728 16:02:39.781"></status>
</kw>
<kw name="表ajb_account_transaction" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170728 16:02:40.112" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170728 16:02:40.113" starttime="20170728 16:02:40.111"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 16:02:40.117" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 16:02:40.136" starttime="20170728 16:02:40.116"></status>
</kw>
<status status="PASS" endtime="20170728 16:02:40.137" starttime="20170728 16:02:40.115"></status>
</kw>
<status status="PASS" endtime="20170728 16:02:40.138" starttime="20170728 16:02:40.114"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>ajb_account_transaction</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 16:02:40.144" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 16:02:40.163" starttime="20170728 16:02:40.143"></status>
</kw>
<status status="PASS" endtime="20170728 16:02:40.164" starttime="20170728 16:02:40.142"></status>
</kw>
<status status="PASS" endtime="20170728 16:02:40.165" starttime="20170728 16:02:40.140"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 16:02:40.167" level="INFO">${current_time} = 2017-07-28 16:02:40.167</msg>
<status status="PASS" endtime="20170728 16:02:40.168" starttime="20170728 16:02:40.166"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>5 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 16:02:40.170" level="INFO">${current_time_before_30} = 2017-07-28 16:02:35.167</msg>
<status status="PASS" endtime="20170728 16:02:40.172" starttime="20170728 16:02:40.168"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 16:02:40.177" level="INFO">${current_time_after_30} = 2017-07-28 16:04:20.167</msg>
<status status="PASS" endtime="20170728 16:02:40.178" starttime="20170728 16:02:40.174"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 16:02:40.182" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and update_time between' 2017-07-28 16:02:35.167' and '2017-07-28 16:04:20.167' </msg>
<msg timestamp="20170728 16:02:40.196" level="INFO">${updatetime} = ((88889579, '32102151361501208155', 100000, 6273, 2, '32102151361501208155', '20170728160342YPC051456', Decimal('0.00'), 1, 1, 2, 0, datetime.datetime(2017, 7, 28, 16, 3, 45), datetime.datetime(2017, ...</msg>
<status status="PASS" endtime="20170728 16:02:40.198" starttime="20170728 16:02:40.180"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 16:02:40.200" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 16:02:40.200" starttime="20170728 16:02:40.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 16:02:40.202" level="INFO">ajb_account_transaction表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 16:02:40.202" starttime="20170728 16:02:40.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 16:02:40.205" level="INFO">${current_time_before_30} = 2017-07-28 16:02:35.167</msg>
<status status="PASS" endtime="20170728 16:02:40.206" starttime="20170728 16:02:40.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 16:02:40.208" level="INFO">${current_time_after_30} = 2017-07-28 16:04:20.167</msg>
<status status="PASS" endtime="20170728 16:02:40.209" starttime="20170728 16:02:40.207"></status>
</kw>
<status status="PASS" endtime="20170728 16:02:40.210" starttime="20170728 16:02:40.139"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 16:02:40.212" level="INFO">Executing : Query  |  select * from ajb_account_transaction where account_id ='6273' and update_time between' 2017-07-28 16:02:35.167' and '2017-07-28 16:04:20.167' </msg>
<msg timestamp="20170728 16:02:40.221" level="INFO">${user_id} = ((88889579, '32102151361501208155', 100000, 6273, 2, '32102151361501208155', '20170728160342YPC051456', Decimal('0.00'), 1, 1, 2, 0, datetime.datetime(2017, 7, 28, 16, 3, 45), datetime.datetime(2017, ...</msg>
<status status="PASS" endtime="20170728 16:02:40.222" starttime="20170728 16:02:40.211"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 16:02:40.226" level="INFO">Length is 20</msg>
<msg timestamp="20170728 16:02:40.227" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 16:02:40.228" starttime="20170728 16:02:40.224"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 16:02:40.230" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:40.230" starttime="20170728 16:02:40.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 16:02:40.232" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 16:02:40.232" starttime="20170728 16:02:40.231"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 16:02:40.234" starttime="20170728 16:02:40.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 16:02:40.236" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 16:02:40.237" starttime="20170728 16:02:40.235"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 16:02:40.239" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:40.240" starttime="20170728 16:02:40.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no的值正确</arg>
</arguments>
<msg timestamp="20170728 16:02:40.243" level="INFO">channel_no的值正确</msg>
<status status="PASS" endtime="20170728 16:02:40.243" starttime="20170728 16:02:40.242"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${args11}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${orderNum}</arg>
</arguments>
<assign>
<var>${bill_order_num}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<status status="PASS" endtime="20170728 16:02:40.247" starttime="20170728 16:02:40.246"></status>
</kw>
<msg timestamp="20170728 16:02:40.247" level="INFO">${bill_order_num} = 32102151361501208155</msg>
<status status="PASS" endtime="20170728 16:02:40.248" starttime="20170728 16:02:40.244"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>${bill_order_num}</arg>
</arguments>
<msg timestamp="20170728 16:02:40.250" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:40.250" starttime="20170728 16:02:40.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170728 16:02:40.252" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170728 16:02:40.253" starttime="20170728 16:02:40.251"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>7</arg>
</arguments>
<status status="PASS" endtime="20170728 16:02:40.261" starttime="20170728 16:02:40.259"></status>
</kw>
<msg timestamp="20170728 16:02:40.261" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 16:02:40.262" starttime="20170728 16:02:40.256"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 16:02:40.264" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 16:02:40.264" starttime="20170728 16:02:40.263"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<status status="PASS" endtime="20170728 16:02:40.267" starttime="20170728 16:02:40.266"></status>
</kw>
<msg timestamp="20170728 16:02:40.268" level="INFO">${event_code_after} = 1</msg>
<status status="PASS" endtime="20170728 16:02:40.268" starttime="20170728 16:02:40.265"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 16:02:40.270" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 16:02:40.271" starttime="20170728 16:02:40.269"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20170728 16:02:40.293" starttime="20170728 16:02:40.274"></status>
</kw>
<msg timestamp="20170728 16:02:40.294" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 16:02:40.294" starttime="20170728 16:02:40.272"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 16:02:40.297" starttime="20170728 16:02:40.296"></status>
</kw>
<msg timestamp="20170728 16:02:40.298" level="INFO">${amount} = 0</msg>
<status status="PASS" endtime="20170728 16:02:40.299" starttime="20170728 16:02:40.295"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 16:02:40.303" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 16:02:40.305" starttime="20170728 16:02:40.301"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 16:02:40.311" starttime="20170728 16:02:40.309"></status>
</kw>
<msg timestamp="20170728 16:02:40.312" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 16:02:40.312" starttime="20170728 16:02:40.307"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 16:02:40.320" starttime="20170728 16:02:40.317"></status>
</kw>
<msg timestamp="20170728 16:02:40.323" level="INFO">${total_amount} = 50457.0</msg>
<status status="PASS" endtime="20170728 16:02:40.324" starttime="20170728 16:02:40.314"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 16:02:40.331" starttime="20170728 16:02:40.330"></status>
</kw>
<msg timestamp="20170728 16:02:40.332" level="INFO">${balance_amount} = 49635.0</msg>
<status status="PASS" endtime="20170728 16:02:40.333" starttime="20170728 16:02:40.326"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 16:02:40.337" starttime="20170728 16:02:40.335"></status>
</kw>
<msg timestamp="20170728 16:02:40.338" level="INFO">${frozen_amount} = 822.00</msg>
<status status="PASS" endtime="20170728 16:02:40.338" starttime="20170728 16:02:40.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 16:02:40.340" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 16:02:40.341" starttime="20170728 16:02:40.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 16:02:40.344" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 16:02:40.344" starttime="20170728 16:02:40.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 16:02:40.347" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 16:02:40.348" starttime="20170728 16:02:40.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 16:02:40.350" level="INFO">${amount} = 0</msg>
<status status="PASS" endtime="20170728 16:02:40.351" starttime="20170728 16:02:40.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 16:02:40.353" level="INFO">${total_amount} = 50457.0</msg>
<status status="PASS" endtime="20170728 16:02:40.354" starttime="20170728 16:02:40.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 16:02:40.356" level="INFO">${balance_amount} = 49635.0</msg>
<status status="PASS" endtime="20170728 16:02:40.357" starttime="20170728 16:02:40.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 16:02:40.359" level="INFO">${frozen_amount} = 822.00</msg>
<status status="PASS" endtime="20170728 16:02:40.360" starttime="20170728 16:02:40.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 16:02:40.362" level="INFO">${event_code_after} = 1</msg>
<status status="PASS" endtime="20170728 16:02:40.362" starttime="20170728 16:02:40.361"></status>
</kw>
<status status="PASS" endtime="20170728 16:02:40.363" starttime="20170728 16:02:40.253"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170728 16:02:40.366" level="INFO">${pay_no_after} = 20170728160342YPC051456</msg>
<status status="PASS" endtime="20170728 16:02:40.367" starttime="20170728 16:02:40.364"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170728 16:02:40.369" level="INFO">Length is 23</msg>
<msg timestamp="20170728 16:02:40.370" level="INFO">${pay_no_after_length} = 23</msg>
<status status="PASS" endtime="20170728 16:02:40.371" starttime="20170728 16:02:40.368"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 16:02:40.373" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:40.374" starttime="20170728 16:02:40.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170728 16:02:40.375" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170728 16:02:40.376" starttime="20170728 16:02:40.375"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 16:02:40.378" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:40.379" starttime="20170728 16:02:40.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 16:02:40.381" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 16:02:40.381" starttime="20170728 16:02:40.380"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 16:02:40.383" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:40.383" starttime="20170728 16:02:40.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 16:02:40.385" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 16:02:40.386" starttime="20170728 16:02:40.384"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][9]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 16:02:40.388" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:40.389" starttime="20170728 16:02:40.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 16:02:40.390" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 16:02:40.391" starttime="20170728 16:02:40.389"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 16:02:40.393" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:40.394" starttime="20170728 16:02:40.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170728 16:02:40.396" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170728 16:02:40.397" starttime="20170728 16:02:40.396"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 16:02:40.399" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:40.399" starttime="20170728 16:02:40.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 16:02:40.401" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 16:02:40.402" starttime="20170728 16:02:40.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 16:02:40.405" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 16:02:40.405" starttime="20170728 16:02:40.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170728 16:02:40.407" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170728 16:02:40.407" starttime="20170728 16:02:40.406"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170728 16:02:40.410" level="INFO">${user_id[0][0]_transaction} = 88889579</msg>
<status status="PASS" endtime="20170728 16:02:40.411" starttime="20170728 16:02:40.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170728 16:02:40.415" level="INFO">${user_id[0][0]_transaction} = 88889579</msg>
<status status="PASS" endtime="20170728 16:02:40.416" starttime="20170728 16:02:40.413"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id[0][0]}'</arg>
</arguments>
<assign>
<var>${user_id_unilateral_delete1}</var>
</assign>
<msg timestamp="20170728 16:02:40.419" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88889579' </msg>
<msg timestamp="20170728 16:02:40.478" level="INFO">${user_id_unilateral_delete1} = None</msg>
<status status="PASS" endtime="20170728 16:02:40.480" starttime="20170728 16:02:40.417"></status>
</kw>
<status status="PASS" endtime="20170728 16:02:40.484" starttime="20170728 16:02:40.110"></status>
</kw>
<kw name="表account_amount的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_amount</arg>
</arguments>
<msg timestamp="20170728 16:02:40.497" level="INFO">现在开始校验表account_amount</msg>
<status status="PASS" endtime="20170728 16:02:40.500" starttime="20170728 16:02:40.493"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 16:02:40.514" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 16:02:40.537" starttime="20170728 16:02:40.510"></status>
</kw>
<status status="PASS" endtime="20170728 16:02:40.539" starttime="20170728 16:02:40.507"></status>
</kw>
<status status="PASS" endtime="20170728 16:02:40.541" starttime="20170728 16:02:40.503"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time1}</var>
</assign>
<msg timestamp="20170728 16:02:40.547" level="INFO">${current_time1} = 2017-07-28 16:02:40.547</msg>
<status status="PASS" endtime="20170728 16:02:40.549" starttime="20170728 16:02:40.545"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_before_30}</var>
</assign>
<msg timestamp="20170728 16:02:40.554" level="INFO">${current_time1_before_30} = 2017-07-28 16:01:40.547</msg>
<status status="PASS" endtime="20170728 16:02:40.556" starttime="20170728 16:02:40.550"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_after_30}</var>
</assign>
<msg timestamp="20170728 16:02:40.564" level="INFO">${current_time1_after_30} = 2017-07-28 16:03:40.547</msg>
<status status="PASS" endtime="20170728 16:02:40.566" starttime="20170728 16:02:40.560"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 16:02:40.572" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6273' </msg>
<msg timestamp="20170728 16:02:40.578" level="INFO">${user_id} = ((12587, 6273, Decimal('50457.00'), Decimal('49635.00'), Decimal('822.00'), datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 16, 3, 12), 0),)</msg>
<status status="PASS" endtime="20170728 16:02:40.580" starttime="20170728 16:02:40.569"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>7</arg>
</arguments>
<status status="PASS" endtime="20170728 16:02:40.591" starttime="20170728 16:02:40.590"></status>
</kw>
<msg timestamp="20170728 16:02:40.592" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 16:02:40.593" starttime="20170728 16:02:40.585"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 16:02:40.597" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 16:02:40.598" starttime="20170728 16:02:40.594"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<status status="PASS" endtime="20170728 16:02:40.604" starttime="20170728 16:02:40.602"></status>
</kw>
<msg timestamp="20170728 16:02:40.605" level="INFO">${event_code_after} = 1</msg>
<status status="PASS" endtime="20170728 16:02:40.606" starttime="20170728 16:02:40.600"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 16:02:40.609" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 16:02:40.610" starttime="20170728 16:02:40.608"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20170728 16:02:40.615" starttime="20170728 16:02:40.614"></status>
</kw>
<msg timestamp="20170728 16:02:40.616" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 16:02:40.618" starttime="20170728 16:02:40.612"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 16:02:40.626" starttime="20170728 16:02:40.624"></status>
</kw>
<msg timestamp="20170728 16:02:40.628" level="INFO">${amount} = 0</msg>
<status status="PASS" endtime="20170728 16:02:40.629" starttime="20170728 16:02:40.620"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 16:02:40.633" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 16:02:40.634" starttime="20170728 16:02:40.632"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 16:02:40.640" starttime="20170728 16:02:40.638"></status>
</kw>
<msg timestamp="20170728 16:02:40.641" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 16:02:40.642" starttime="20170728 16:02:40.636"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 16:02:40.649" starttime="20170728 16:02:40.647"></status>
</kw>
<msg timestamp="20170728 16:02:40.651" level="INFO">${total_amount} = 50457.0</msg>
<status status="PASS" endtime="20170728 16:02:40.653" starttime="20170728 16:02:40.643"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 16:02:40.663" starttime="20170728 16:02:40.661"></status>
</kw>
<msg timestamp="20170728 16:02:40.665" level="INFO">${balance_amount} = 49635.0</msg>
<status status="PASS" endtime="20170728 16:02:40.666" starttime="20170728 16:02:40.654"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 16:02:40.670" starttime="20170728 16:02:40.669"></status>
</kw>
<msg timestamp="20170728 16:02:40.671" level="INFO">${frozen_amount} = 822.00</msg>
<status status="PASS" endtime="20170728 16:02:40.672" starttime="20170728 16:02:40.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 16:02:40.674" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 16:02:40.675" starttime="20170728 16:02:40.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 16:02:40.677" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 16:02:40.678" starttime="20170728 16:02:40.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 16:02:40.680" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 16:02:40.680" starttime="20170728 16:02:40.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 16:02:40.682" level="INFO">${amount} = 0</msg>
<status status="PASS" endtime="20170728 16:02:40.682" starttime="20170728 16:02:40.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 16:02:40.685" level="INFO">${total_amount} = 50457.0</msg>
<status status="PASS" endtime="20170728 16:02:40.686" starttime="20170728 16:02:40.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 16:02:40.688" level="INFO">${balance_amount} = 49635.0</msg>
<status status="PASS" endtime="20170728 16:02:40.688" starttime="20170728 16:02:40.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 16:02:40.690" level="INFO">${frozen_amount} = 822.00</msg>
<status status="PASS" endtime="20170728 16:02:40.691" starttime="20170728 16:02:40.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 16:02:40.695" level="INFO">${event_code_after} = 1</msg>
<status status="PASS" endtime="20170728 16:02:40.696" starttime="20170728 16:02:40.692"></status>
</kw>
<status status="PASS" endtime="20170728 16:02:40.697" starttime="20170728 16:02:40.581"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 16:02:40.699" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:40.700" starttime="20170728 16:02:40.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 16:02:40.702" level="INFO">total_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 16:02:40.702" starttime="20170728 16:02:40.701"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 16:02:40.705" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:40.705" starttime="20170728 16:02:40.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 16:02:40.707" level="INFO">balance_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 16:02:40.707" starttime="20170728 16:02:40.706"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 16:02:40.709" starttime="20170728 16:02:40.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 16:02:40.712" level="INFO">frozen_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 16:02:40.713" starttime="20170728 16:02:40.711"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 16:02:40.714" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:40.715" starttime="20170728 16:02:40.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 16:02:40.717" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 16:02:40.717" starttime="20170728 16:02:40.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount校验成功！</arg>
</arguments>
<msg timestamp="20170728 16:02:40.719" level="INFO">表account_amount校验成功！</msg>
<status status="PASS" endtime="20170728 16:02:40.720" starttime="20170728 16:02:40.718"></status>
</kw>
<status status="PASS" endtime="20170728 16:02:40.721" starttime="20170728 16:02:40.487"></status>
</kw>
<kw name="艾佳币恢复数目" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 16:02:40.727" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 16:02:40.736" starttime="20170728 16:02:40.726"></status>
</kw>
<status status="PASS" endtime="20170728 16:02:40.737" starttime="20170728 16:02:40.725"></status>
</kw>
<status status="PASS" endtime="20170728 16:02:40.738" starttime="20170728 16:02:40.724"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount \ SET total_amount=${database[0][2]},balance_amount=${database[0][3]},frozen_amount=${database[0][4]}where account_id="${account_id}";</arg>
</arguments>
<msg timestamp="20170728 16:02:40.741" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount  SET total_amount=50457.00,balance_amount=49635.00,frozen_amount=822.00where account_id="6273"; </msg>
<status status="PASS" endtime="20170728 16:02:40.748" starttime="20170728 16:02:40.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170728 16:02:40.750" level="INFO">成功</msg>
<status status="PASS" endtime="20170728 16:02:40.751" starttime="20170728 16:02:40.749"></status>
</kw>
<status status="PASS" endtime="20170728 16:02:40.751" starttime="20170728 16:02:40.722"></status>
</kw>
<status status="PASS" endtime="20170728 16:02:40.752" critical="yes" starttime="20170728 16:02:39.386"></status>
</test>
<test id="s1-s1-s1-t2" name="输入木有的user_id和正确的amount和活动代码">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 16:02:40.765" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 16:02:40.777" starttime="20170728 16:02:40.763"></status>
</kw>
<status status="PASS" endtime="20170728 16:02:40.778" starttime="20170728 16:02:40.762"></status>
</kw>
<status status="PASS" endtime="20170728 16:02:40.779" starttime="20170728 16:02:40.760"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>123456785</arg>
<arg>10</arg>
<arg>1</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 16:02:40.782" level="INFO">${args11} = 123456785</msg>
<status status="PASS" endtime="20170728 16:02:40.783" starttime="20170728 16:02:40.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 16:02:40.786" level="INFO">${args22} = 10</msg>
<status status="PASS" endtime="20170728 16:02:40.786" starttime="20170728 16:02:40.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 16:02:40.789" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170728 16:02:40.790" starttime="20170728 16:02:40.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 16:02:40.793" level="INFO">${args44} = 1</msg>
<status status="PASS" endtime="20170728 16:02:40.794" starttime="20170728 16:02:40.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 16:02:40.797" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</msg>
<status status="PASS" endtime="20170728 16:02:40.798" starttime="20170728 16:02:40.795"></status>
</kw>
<status status="PASS" endtime="20170728 16:02:40.799" starttime="20170728 16:02:40.780"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id ='${args11}'</arg>
</arguments>
<assign>
<var>${no_user_id}</var>
</assign>
<msg timestamp="20170728 16:02:40.801" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id ='123456785' </msg>
<msg timestamp="20170728 16:02:40.809" level="INFO">${no_user_id} = ()</msg>
<status status="PASS" endtime="20170728 16:02:40.810" starttime="20170728 16:02:40.800"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${no_user_id}</arg>
</arguments>
<msg timestamp="20170728 16:02:40.811" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170728 16:02:40.812" starttime="20170728 16:02:40.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>此user_id不存在</arg>
</arguments>
<msg timestamp="20170728 16:02:40.814" level="INFO">此user_id不存在</msg>
<status status="PASS" endtime="20170728 16:02:40.814" starttime="20170728 16:02:40.813"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 16:02:40.816" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge</msg>
<status status="PASS" endtime="20170728 16:02:40.817" starttime="20170728 16:02:40.815"></status>
</kw>
<kw name="Ajb Activity Recharge" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data_no_user_id}</var>
</assign>
<msg timestamp="20170728 16:02:40.902" level="INFO">${data_no_user_id} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 16:02:40.904" starttime="20170728 16:02:40.817"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data_no_user_id.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 16:02:40.911" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:40.913" starttime="20170728 16:02:40.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 16:02:40.920" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 16:02:40.922" starttime="20170728 16:02:40.917"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data_no_user_id.text}</arg>
</arguments>
<assign>
<var>${toJson1}</var>
</assign>
<msg timestamp="20170728 16:02:40.927" level="INFO">To JSON using : content={"data":{"orderNum":"32102151361501208161"},"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 16:02:40.928" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 16:02:40.931" level="INFO">${toJson1} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': {u'orderNum': u'32102151361501208161'}, u'success': True}</msg>
<status status="PASS" endtime="20170728 16:02:40.933" starttime="20170728 16:02:40.924"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson1['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 16:02:40.940" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:40.941" starttime="20170728 16:02:40.937"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson1['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 16:02:40.947" starttime="20170728 16:02:40.943"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${toJson1['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${no_user_id_orderNum}</var>
</assign>
<msg timestamp="20170728 16:02:40.952" level="INFO">${no_user_id_orderNum} = 32102151361501208161</msg>
<status status="PASS" endtime="20170728 16:02:40.953" starttime="20170728 16:02:40.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 16:02:40.957" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 16:02:40.958" starttime="20170728 16:02:40.955"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id ='${args11}'and channel_no=2</arg>
</arguments>
<assign>
<var>${no_user_id_after}</var>
</assign>
<msg timestamp="20170728 16:02:40.964" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id ='123456785'and channel_no=2 </msg>
<msg timestamp="20170728 16:02:40.976" level="INFO">${no_user_id_after} = ((100000000040L, '32102151361501208160', 123456785, 6306, 2, 2, 0, datetime.datetime(2017, 7, 28, 16, 3, 46), datetime.datetime(2017, 7, 28, 16, 3, 46)),)</msg>
<status status="PASS" endtime="20170728 16:02:40.977" starttime="20170728 16:02:40.961"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${no_user_id_after}</arg>
</arguments>
<msg timestamp="20170728 16:02:40.980" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 16:02:40.981" starttime="20170728 16:02:40.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>调用艾佳币活动充值接口自动生成boss的账号</arg>
</arguments>
<msg timestamp="20170728 16:02:40.983" level="INFO">调用艾佳币活动充值接口自动生成boss的账号</msg>
<status status="PASS" endtime="20170728 16:02:40.984" starttime="20170728 16:02:40.982"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${no_user_id_after[0][3]}</arg>
</arguments>
<assign>
<var>${no_user_id_account_id}</var>
</assign>
<msg timestamp="20170728 16:02:40.988" level="INFO">${no_user_id_account_id} = 6306</msg>
<status status="PASS" endtime="20170728 16:02:40.989" starttime="20170728 16:02:40.985"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_open_record where user_id ='${args11}'and channel_no=2</arg>
</arguments>
<msg timestamp="20170728 16:02:40.992" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_open_record where user_id ='123456785'and channel_no=2 </msg>
<status status="PASS" endtime="20170728 16:02:41.056" starttime="20170728 16:02:40.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>已删除该账号！</arg>
</arguments>
<msg timestamp="20170728 16:02:41.060" level="INFO">已删除该账号！</msg>
<status status="PASS" endtime="20170728 16:02:41.061" starttime="20170728 16:02:41.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_unilateral_bill</arg>
</arguments>
<msg timestamp="20170728 16:02:41.063" level="INFO">现在开始校验表account_unilateral_bill</msg>
<status status="PASS" endtime="20170728 16:02:41.064" starttime="20170728 16:02:41.062"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time_no}</var>
</assign>
<msg timestamp="20170728 16:02:41.067" level="INFO">${current_time_no} = 2017-07-28 16:02:41.067</msg>
<status status="PASS" endtime="20170728 16:02:41.068" starttime="20170728 16:02:41.066"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_no}</arg>
<arg>15 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_301}</var>
</assign>
<msg timestamp="20170728 16:02:41.073" level="INFO">${current_time_before_301} = 2017-07-28 16:02:26.067</msg>
<status status="PASS" endtime="20170728 16:02:41.074" starttime="20170728 16:02:41.070"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_no}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_302}</var>
</assign>
<msg timestamp="20170728 16:02:41.077" level="INFO">${current_time_after_302} = 2017-07-28 16:03:46.067</msg>
<status status="PASS" endtime="20170728 16:02:41.078" starttime="20170728 16:02:41.075"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${no_user_id_account_id}'and update_time between' ${current_time_before_301}' and '${current_time_after_302}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 16:02:41.081" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6306'and update_time between' 2017-07-28 16:02:26.067' and '2017-07-28 16:03:46.067' </msg>
<msg timestamp="20170728 16:02:41.089" level="INFO">${user_id} = ((7164, '32102151361501208165', 123456785, 6306, '32102151361501208162', 1, 1, 3, Decimal('10.00'), None, datetime.datetime(2017, 7, 28, 16, 3, 46), datetime.datetime(2017, 7, 28, 16, 3, 46), 0),)</msg>
<status status="PASS" endtime="20170728 16:02:41.090" starttime="20170728 16:02:41.079"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170728 16:02:41.094" level="INFO">Length is 20</msg>
<msg timestamp="20170728 16:02:41.095" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170728 16:02:41.096" starttime="20170728 16:02:41.092"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 16:02:41.099" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:41.101" starttime="20170728 16:02:41.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 16:02:41.103" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 16:02:41.105" starttime="20170728 16:02:41.102"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 16:02:41.108" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:41.109" starttime="20170728 16:02:41.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 16:02:41.112" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 16:02:41.113" starttime="20170728 16:02:41.110"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170728 16:02:41.115" level="INFO">Length is 20</msg>
<msg timestamp="20170728 16:02:41.116" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170728 16:02:41.117" starttime="20170728 16:02:41.114"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 16:02:41.121" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:41.122" starttime="20170728 16:02:41.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 16:02:41.124" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 16:02:41.125" starttime="20170728 16:02:41.123"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 16:02:41.131" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:41.132" starttime="20170728 16:02:41.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 16:02:41.135" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 16:02:41.136" starttime="20170728 16:02:41.134"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 16:02:41.139" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:41.140" starttime="20170728 16:02:41.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 16:02:41.143" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 16:02:41.144" starttime="20170728 16:02:41.141"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20170728 16:02:41.147" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:41.148" starttime="20170728 16:02:41.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170728 16:02:41.151" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170728 16:02:41.152" starttime="20170728 16:02:41.149"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 16:02:41.155" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:41.155" starttime="20170728 16:02:41.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 16:02:41.157" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 16:02:41.157" starttime="20170728 16:02:41.156"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${user_id[0][10]}</arg>
<arg>${user_id[0][11]}</arg>
</arguments>
<status status="PASS" endtime="20170728 16:02:41.160" starttime="20170728 16:02:41.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 16:02:41.162" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 16:02:41.163" starttime="20170728 16:02:41.161"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 16:02:41.167" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:41.168" starttime="20170728 16:02:41.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 16:02:41.171" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 16:02:41.172" starttime="20170728 16:02:41.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170728 16:02:41.175" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170728 16:02:41.176" starttime="20170728 16:02:41.173"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_unilateral}</var>
</assign>
<msg timestamp="20170728 16:02:41.179" level="INFO">${user_id[0][0]_unilateral} = 7164</msg>
<status status="PASS" endtime="20170728 16:02:41.180" starttime="20170728 16:02:41.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_unilateral}</arg>
</arguments>
<msg timestamp="20170728 16:02:41.182" level="INFO">${user_id[0][0]_unilateral} = 7164</msg>
<status status="PASS" endtime="20170728 16:02:41.183" starttime="20170728 16:02:41.181"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]_unilateral}'</arg>
</arguments>
<msg timestamp="20170728 16:02:41.185" level="INFO">Executing : Execute SQL String  |  delete from account_unilateral_bill where id ='7164' </msg>
<status status="PASS" endtime="20170728 16:02:41.253" starttime="20170728 16:02:41.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170728 16:02:41.255" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170728 16:02:41.257" starttime="20170728 16:02:41.254"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time_nouser}</var>
</assign>
<msg timestamp="20170728 16:02:41.259" level="INFO">${current_time_nouser} = 2017-07-28 16:02:41.259</msg>
<status status="PASS" endtime="20170728 16:02:41.260" starttime="20170728 16:02:41.258"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_nouser}</arg>
<arg>15 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_3011}</var>
</assign>
<msg timestamp="20170728 16:02:41.262" level="INFO">${current_time_before_3011} = 2017-07-28 16:02:26.259</msg>
<status status="PASS" endtime="20170728 16:02:41.263" starttime="20170728 16:02:41.261"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_nouser}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_3022}</var>
</assign>
<msg timestamp="20170728 16:02:41.265" level="INFO">${current_time_after_3022} = 2017-07-28 16:03:46.259</msg>
<status status="PASS" endtime="20170728 16:02:41.266" starttime="20170728 16:02:41.264"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where account_id ='${no_user_id_account_id}' and update_time between' ${current_time_before_3011}' and '${current_time_after_3022}'</arg>
</arguments>
<assign>
<var>${user_id_no}</var>
</assign>
<msg timestamp="20170728 16:02:41.267" level="INFO">Executing : Query  |  select * from ajb_account_transaction where account_id ='6306' and update_time between' 2017-07-28 16:02:26.259' and '2017-07-28 16:03:46.259' </msg>
<msg timestamp="20170728 16:02:41.280" level="INFO">${user_id_no} = ((88889580, '32102151361501208161', 123456785, 6306, 2, '32102151361501208161', '20170728160343GKR051457', Decimal('10.00'), 1, 1, 2, 0, datetime.datetime(2017, 7, 28, 16, 3, 46), datetime.datetime(20...</msg>
<status status="PASS" endtime="20170728 16:02:41.280" starttime="20170728 16:02:41.266"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id_no[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 16:02:41.283" level="INFO">Length is 20</msg>
<msg timestamp="20170728 16:02:41.284" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 16:02:41.285" starttime="20170728 16:02:41.281"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 16:02:41.288" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:41.289" starttime="20170728 16:02:41.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 16:02:41.291" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 16:02:41.292" starttime="20170728 16:02:41.290"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][2]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 16:02:41.294" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:41.295" starttime="20170728 16:02:41.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 16:02:41.297" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 16:02:41.297" starttime="20170728 16:02:41.296"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][4]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 16:02:41.300" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:41.301" starttime="20170728 16:02:41.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no的值正确</arg>
</arguments>
<msg timestamp="20170728 16:02:41.303" level="INFO">channel_no的值正确</msg>
<status status="PASS" endtime="20170728 16:02:41.304" starttime="20170728 16:02:41.302"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][5]}</arg>
<arg>${no_user_id_orderNum}</arg>
</arguments>
<msg timestamp="20170728 16:02:41.307" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:41.308" starttime="20170728 16:02:41.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170728 16:02:41.311" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170728 16:02:41.313" starttime="20170728 16:02:41.310"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id_no[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170728 16:02:41.317" level="INFO">${pay_no_after} = 20170728160343GKR051457</msg>
<status status="PASS" endtime="20170728 16:02:41.318" starttime="20170728 16:02:41.315"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170728 16:02:41.323" level="INFO">Length is 23</msg>
<msg timestamp="20170728 16:02:41.325" level="INFO">${pay_no_after_length} = 23</msg>
<status status="PASS" endtime="20170728 16:02:41.327" starttime="20170728 16:02:41.321"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>23</arg>
</arguments>
<msg timestamp="20170728 16:02:41.331" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:41.333" starttime="20170728 16:02:41.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170728 16:02:41.338" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170728 16:02:41.340" starttime="20170728 16:02:41.335"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][7]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 16:02:41.347" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:41.349" starttime="20170728 16:02:41.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 16:02:41.354" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 16:02:41.356" starttime="20170728 16:02:41.351"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 16:02:41.362" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:41.363" starttime="20170728 16:02:41.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 16:02:41.367" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 16:02:41.368" starttime="20170728 16:02:41.366"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][9]}</arg>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 16:02:41.373" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:41.375" starttime="20170728 16:02:41.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 16:02:41.380" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 16:02:41.381" starttime="20170728 16:02:41.377"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 16:02:41.386" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:41.388" starttime="20170728 16:02:41.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170728 16:02:41.394" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170728 16:02:41.396" starttime="20170728 16:02:41.391"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 16:02:41.402" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:41.403" starttime="20170728 16:02:41.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 16:02:41.407" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 16:02:41.409" starttime="20170728 16:02:41.405"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${user_id_no[0][12]}</arg>
<arg>${user_id_no[0][13]}</arg>
</arguments>
<status status="PASS" endtime="20170728 16:02:41.414" starttime="20170728 16:02:41.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 16:02:41.418" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 16:02:41.419" starttime="20170728 16:02:41.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170728 16:02:41.424" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170728 16:02:41.425" starttime="20170728 16:02:41.422"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id_no[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170728 16:02:41.430" level="INFO">${user_id[0][0]_transaction} = 88889580</msg>
<status status="PASS" endtime="20170728 16:02:41.431" starttime="20170728 16:02:41.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170728 16:02:41.435" level="INFO">${user_id[0][0]_transaction} = 88889580</msg>
<status status="PASS" endtime="20170728 16:02:41.436" starttime="20170728 16:02:41.433"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id_no[0][0]}'</arg>
</arguments>
<msg timestamp="20170728 16:02:41.441" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88889580' </msg>
<status status="PASS" endtime="20170728 16:02:41.488" starttime="20170728 16:02:41.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_amount</arg>
</arguments>
<msg timestamp="20170728 16:02:41.492" level="INFO">现在开始校验表account_amount</msg>
<status status="PASS" endtime="20170728 16:02:41.493" starttime="20170728 16:02:41.490"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${no_user_id_account_id}'</arg>
</arguments>
<assign>
<var>${user_id_t}</var>
</assign>
<msg timestamp="20170728 16:02:41.497" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6306' </msg>
<msg timestamp="20170728 16:02:41.505" level="INFO">${user_id_t} = ((12620, 6306, Decimal('10.00'), Decimal('10.00'), Decimal('0.00'), datetime.datetime(2017, 7, 28, 16, 3, 46), datetime.datetime(2017, 7, 28, 16, 3, 46), 0),)</msg>
<status status="PASS" endtime="20170728 16:02:41.506" starttime="20170728 16:02:41.495"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][2]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 16:02:41.511" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:41.512" starttime="20170728 16:02:41.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 16:02:41.516" level="INFO">total_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 16:02:41.517" starttime="20170728 16:02:41.514"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][3]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 16:02:41.521" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:41.523" starttime="20170728 16:02:41.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 16:02:41.527" level="INFO">balance_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 16:02:41.528" starttime="20170728 16:02:41.525"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][4]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 16:02:41.532" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:41.533" starttime="20170728 16:02:41.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 16:02:41.537" level="INFO">frozen_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 16:02:41.539" starttime="20170728 16:02:41.535"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 16:02:41.544" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 16:02:41.545" starttime="20170728 16:02:41.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 16:02:41.549" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 16:02:41.550" starttime="20170728 16:02:41.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount校验成功！</arg>
</arguments>
<msg timestamp="20170728 16:02:41.555" level="INFO">表account_amount校验成功！</msg>
<status status="PASS" endtime="20170728 16:02:41.556" starttime="20170728 16:02:41.552"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_amount where account_id ='${no_user_id_account_id}'</arg>
</arguments>
<msg timestamp="20170728 16:02:41.560" level="INFO">Executing : Execute SQL String  |  delete from account_amount where account_id ='6306' </msg>
<status status="PASS" endtime="20170728 16:02:41.621" starttime="20170728 16:02:41.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>输入未有的user_id和正确的amount参数，会直接生成app账户，然后表里的数据都入库成功！</arg>
</arguments>
<msg timestamp="20170728 16:02:41.625" level="INFO">输入未有的user_id和正确的amount参数，会直接生成app账户，然后表里的数据都入库成功！</msg>
<status status="PASS" endtime="20170728 16:02:41.626" starttime="20170728 16:02:41.623"></status>
</kw>
<status status="PASS" endtime="20170728 16:02:41.627" critical="yes" starttime="20170728 16:02:40.754"></status>
</test>
<status status="PASS" endtime="20170728 16:02:41.631" starttime="20170728 16:02:39.093"></status>
</suite>
<status status="PASS" endtime="20170728 16:02:41.643" starttime="20170728 16:02:39.088"></status>
</suite>
<status status="PASS" endtime="20170728 16:02:41.651" starttime="20170728 16:02:38.893"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="账户中心" pass="2">账户中心</stat>
<stat fail="0" id="s1-s1" name="艾佳币" pass="2">账户中心.艾佳币</stat>
<stat fail="0" id="s1-s1-s1" name="艾佳币活动充值" pass="2">账户中心.艾佳币.艾佳币活动充值</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
