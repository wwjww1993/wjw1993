<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170727 19:27:57.831" generator="Robot 3.0.2 (Python 2.7.8 on win32)">
<suite source="F:\logs and reports\账户中心" id="s1" name="账户中心">
<suite source="F:\logs and reports\账户中心\订单" id="s1-s1" name="订单">
<suite source="F:\logs and reports\账户中心\订单\订单支付退款（线上）.txt" id="s1-s1-s1" name="订单支付退款（线上）">
<test id="s1-s1-s1-t1" name="输入参数全部正确">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170727 19:27:58.381" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170727 19:27:58.449" starttime="20170727 19:27:58.357"></status>
</kw>
<status status="PASS" endtime="20170727 19:27:58.449" starttime="20170727 19:27:58.356"></status>
</kw>
<status status="PASS" endtime="20170727 19:27:58.450" starttime="20170727 19:27:58.356"></status>
</kw>
<kw name="清数据" library="myResource">
<arguments>
<arg>888888</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170727 19:27:58.454" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170727 19:27:58.473" starttime="20170727 19:27:58.453"></status>
</kw>
<status status="PASS" endtime="20170727 19:27:58.474" starttime="20170727 19:27:58.452"></status>
</kw>
<status status="PASS" endtime="20170727 19:27:58.476" starttime="20170727 19:27:58.451"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170727 19:27:58.478" level="INFO">Executing : Query  |  select * from ajb_account_transaction where id=888888 </msg>
<msg timestamp="20170727 19:27:58.484" level="INFO">${check} = ()</msg>
<status status="PASS" endtime="20170727 19:27:58.484" starttime="20170727 19:27:58.477"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170727 19:27:58.486" level="INFO">Length is 0</msg>
<msg timestamp="20170727 19:27:58.487" level="INFO">${check_length} = 0</msg>
<status status="PASS" endtime="20170727 19:27:58.487" starttime="20170727 19:27:58.486"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} != 0</arg>
<arg>execute sql string</arg>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>数据库之前没有数据</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库之前没有数据</arg>
</arguments>
<msg timestamp="20170727 19:27:58.489" level="INFO">数据库之前没有数据</msg>
<status status="PASS" endtime="20170727 19:27:58.489" starttime="20170727 19:27:58.489"></status>
</kw>
<status status="PASS" endtime="20170727 19:27:58.490" starttime="20170727 19:27:58.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库里面的这条数据清理成功啦。</arg>
</arguments>
<msg timestamp="20170727 19:27:58.491" level="INFO">数据库里面的这条数据清理成功啦。</msg>
<status status="PASS" endtime="20170727 19:27:58.492" starttime="20170727 19:27:58.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_delete}</arg>
</arguments>
<msg timestamp="20170727 19:27:58.493" level="INFO">${id_delete} = 888888</msg>
<status status="PASS" endtime="20170727 19:27:58.495" starttime="20170727 19:27:58.492"></status>
</kw>
<status status="PASS" endtime="20170727 19:27:58.495" starttime="20170727 19:27:58.450"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("${id_delete}","32102151361500885834","1000000","6131","1","32102151361500885834","","2","1","13","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170727 19:27:58.497" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("888888","32102151361500885834","1000000","6131","1","32102151361500885834","","2","1","13","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170727 19:27:58.540" starttime="20170727 19:27:58.496"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>32102151361500885834</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170727 19:27:58.543" level="INFO">${args11} = 32102151361500885834</msg>
<status status="PASS" endtime="20170727 19:27:58.544" starttime="20170727 19:27:58.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170727 19:27:58.545" level="INFO">${args22} = </msg>
<status status="PASS" endtime="20170727 19:27:58.545" starttime="20170727 19:27:58.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170727 19:27:58.546" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170727 19:27:58.547" starttime="20170727 19:27:58.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170727 19:27:58.548" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170727 19:27:58.548" starttime="20170727 19:27:58.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170727 19:27:58.550" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</msg>
<status status="PASS" endtime="20170727 19:27:58.550" starttime="20170727 19:27:58.549"></status>
</kw>
<status status="PASS" endtime="20170727 19:27:58.551" starttime="20170727 19:27:58.541"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num='${args11}' and event_code=13</arg>
</arguments>
<assign>
<var>${user_id_refund}</var>
</assign>
<msg timestamp="20170727 19:27:58.553" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num='32102151361500885834' and event_code=13 </msg>
<msg timestamp="20170727 19:27:58.567" level="INFO">${user_id_refund} = ((888888, '32102151361500885834', 1000000, 6131, 1, '32102151361500885834', '', Decimal('2.00'), 1, 13, 2, 0, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)),)</msg>
<status status="PASS" endtime="20170727 19:27:58.567" starttime="20170727 19:27:58.552"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${user_id_refund[0][2]}' and channel_no=1</arg>
</arguments>
<assign>
<var>${account_id_bos}</var>
</assign>
<msg timestamp="20170727 19:27:58.569" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='1000000' and channel_no=1 </msg>
<msg timestamp="20170727 19:27:58.580" level="INFO">${account_id_bos} = ((6086, '32102151361499849639', 1000000, 6131, 1, 2, 0, datetime.datetime(2017, 7, 12, 20, 3, 46), datetime.datetime(2017, 7, 12, 20, 3, 46)),)</msg>
<status status="PASS" endtime="20170727 19:27:58.581" starttime="20170727 19:27:58.568"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_id_bos[0][3]}</arg>
</arguments>
<assign>
<var>${account_id_boss}</var>
</assign>
<msg timestamp="20170727 19:27:58.582" level="INFO">${account_id_boss} = 6131</msg>
<status status="PASS" endtime="20170727 19:27:58.582" starttime="20170727 19:27:58.581"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${user_id_refund[0][2]}' and channel_no=2</arg>
</arguments>
<assign>
<var>${account_id_ap}</var>
</assign>
<msg timestamp="20170727 19:27:58.584" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='1000000' and channel_no=2 </msg>
<msg timestamp="20170727 19:27:58.592" level="INFO">${account_id_ap} = ((10212, '32102151361500285171', 1000000, 6161, 2, 2, 0, datetime.datetime(2017, 7, 19, 17, 6, 7), datetime.datetime(2017, 7, 19, 17, 6, 7)),)</msg>
<status status="PASS" endtime="20170727 19:27:58.593" starttime="20170727 19:27:58.583"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_id_ap[0][3]}</arg>
</arguments>
<assign>
<var>${account_id_app}</var>
</assign>
<msg timestamp="20170727 19:27:58.595" level="INFO">${account_id_app} = 6161</msg>
<status status="PASS" endtime="20170727 19:27:58.595" starttime="20170727 19:27:58.594"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_boss}'</arg>
</arguments>
<assign>
<var>${amount_boss}</var>
</assign>
<msg timestamp="20170727 19:27:58.596" level="INFO">Executing : Query  |  select * from account_amount where account_id='6131' </msg>
<msg timestamp="20170727 19:27:58.603" level="INFO">${amount_boss} = ((12445, 6131, Decimal('45159.00'), Decimal('172450.00'), Decimal('72707.00'), datetime.datetime(2017, 7, 12, 20, 3, 46), datetime.datetime(2017, 7, 27, 19, 25, 1), 0),)</msg>
<status status="PASS" endtime="20170727 19:27:58.603" starttime="20170727 19:27:58.595"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_app}'</arg>
</arguments>
<assign>
<var>${amount_app}</var>
</assign>
<msg timestamp="20170727 19:27:58.604" level="INFO">Executing : Query  |  select * from account_amount where account_id='6161' </msg>
<msg timestamp="20170727 19:27:58.611" level="INFO">${amount_app} = ((12475, 6161, Decimal('10178.00'), Decimal('10178.00'), Decimal('0.00'), datetime.datetime(2017, 7, 19, 17, 6, 7), datetime.datetime(2017, 7, 27, 17, 38, 19), 0),)</msg>
<status status="PASS" endtime="20170727 19:27:58.611" starttime="20170727 19:27:58.604"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170727 19:27:58.613" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</msg>
<status status="PASS" endtime="20170727 19:27:58.613" starttime="20170727 19:27:58.612"></status>
</kw>
<kw name="Ajb Withdraw Cancel" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170727 19:27:58.961" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170727 19:27:58.962" starttime="20170727 19:27:58.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170727 19:27:58.964" level="INFO">200</msg>
<status status="PASS" endtime="20170727 19:27:58.965" starttime="20170727 19:27:58.963"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170727 19:27:58.967" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 19:27:58.968" starttime="20170727 19:27:58.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170727 19:27:58.970" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170727 19:27:58.970" starttime="20170727 19:27:58.969"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170727 19:27:58.973" level="INFO">To JSON using : content={"data":null,"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170727 19:27:58.973" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170727 19:27:58.974" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': None, u'success': True}</msg>
<status status="PASS" endtime="20170727 19:27:58.975" starttime="20170727 19:27:58.971"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170727 19:27:58.977" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 19:27:58.978" starttime="20170727 19:27:58.976"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170727 19:27:58.981" starttime="20170727 19:27:58.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170727 19:27:58.984" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170727 19:27:58.984" starttime="20170727 19:27:58.983"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170727 19:27:58.987" level="INFO">${current_time} = 2017-07-27 19:27:58.986</msg>
<status status="PASS" endtime="20170727 19:27:58.987" starttime="20170727 19:27:58.985"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>15 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170727 19:27:58.998" level="INFO">${current_time_before_30} = 2017-07-27 19:27:43.986</msg>
<status status="PASS" endtime="20170727 19:27:58.999" starttime="20170727 19:27:58.988"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170727 19:27:59.002" level="INFO">${current_time_after_30} = 2017-07-27 19:29:03.986</msg>
<status status="PASS" endtime="20170727 19:27:59.002" starttime="20170727 19:27:59.000"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id_app} 'and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170727 19:27:59.007" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6161 'and update_time between' 2017-07-27 19:27:43.986' and '2017-07-27 19:29:03.986' </msg>
<msg timestamp="20170727 19:27:59.016" level="INFO">${user_id} = ((6240, '32102151361501148362', 1000000, 6161, '32102151361501148360', 1, 14, 3, Decimal('2.00'), None, datetime.datetime(2017, 7, 27, 19, 29, 2), datetime.datetime(2017, 7, 27, 19, 29, 2), 0),)</msg>
<status status="PASS" endtime="20170727 19:27:59.017" starttime="20170727 19:27:59.003"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170727 19:27:59.019" level="INFO">Length is 20</msg>
<msg timestamp="20170727 19:27:59.020" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170727 19:27:59.021" starttime="20170727 19:27:59.018"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170727 19:27:59.023" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 19:27:59.024" starttime="20170727 19:27:59.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170727 19:27:59.026" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170727 19:27:59.026" starttime="20170727 19:27:59.025"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_refund[0][2]}</arg>
</arguments>
<status status="PASS" endtime="20170727 19:27:59.029" starttime="20170727 19:27:59.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170727 19:27:59.031" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170727 19:27:59.031" starttime="20170727 19:27:59.030"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170727 19:27:59.032" level="INFO">Length is 20</msg>
<msg timestamp="20170727 19:27:59.033" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170727 19:27:59.033" starttime="20170727 19:27:59.032"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170727 19:27:59.034" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 19:27:59.035" starttime="20170727 19:27:59.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170727 19:27:59.036" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170727 19:27:59.036" starttime="20170727 19:27:59.035"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170727 19:27:59.037" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 19:27:59.037" starttime="20170727 19:27:59.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170727 19:27:59.038" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170727 19:27:59.039" starttime="20170727 19:27:59.038"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>14</arg>
</arguments>
<msg timestamp="20170727 19:27:59.041" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 19:27:59.041" starttime="20170727 19:27:59.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170727 19:27:59.043" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170727 19:27:59.043" starttime="20170727 19:27:59.042"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20170727 19:27:59.045" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 19:27:59.045" starttime="20170727 19:27:59.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170727 19:27:59.046" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170727 19:27:59.046" starttime="20170727 19:27:59.046"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<status status="PASS" endtime="20170727 19:27:59.048" starttime="20170727 19:27:59.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170727 19:27:59.050" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170727 19:27:59.050" starttime="20170727 19:27:59.049"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170727 19:27:59.051" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 19:27:59.052" starttime="20170727 19:27:59.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170727 19:27:59.053" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170727 19:27:59.053" starttime="20170727 19:27:59.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170727 19:27:59.054" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170727 19:27:59.054" starttime="20170727 19:27:59.054"></status>
</kw>
<kw name="Conn Mysql" library="wjwTestLibrary">
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]}'</arg>
</arguments>
<assign>
<var>${user_id_unilateral_delete}</var>
</assign>
<msg timestamp="20170727 19:27:59.265" level="INFO">${user_id_unilateral_delete} = ()</msg>
<status status="PASS" endtime="20170727 19:27:59.266" starttime="20170727 19:27:59.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170727 19:27:59.268" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170727 19:27:59.269" starttime="20170727 19:27:59.267"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time1}</var>
</assign>
<msg timestamp="20170727 19:27:59.271" level="INFO">${current_time1} = 2017-07-27 19:27:59.271</msg>
<status status="PASS" endtime="20170727 19:27:59.271" starttime="20170727 19:27:59.270"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>15 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_301}</var>
</assign>
<msg timestamp="20170727 19:27:59.274" level="INFO">${current_time_before_301} = 2017-07-27 19:27:44.271</msg>
<status status="PASS" endtime="20170727 19:27:59.274" starttime="20170727 19:27:59.272"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_301}</var>
</assign>
<msg timestamp="20170727 19:27:59.278" level="INFO">${current_time_after_301} = 2017-07-27 19:29:04.271</msg>
<status status="PASS" endtime="20170727 19:27:59.278" starttime="20170727 19:27:59.276"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where account_id ='${account_id_app}' and update_time between' ${current_time_before_301}' and '${current_time_after_301}'</arg>
</arguments>
<assign>
<var>${user_id1}</var>
</assign>
<msg timestamp="20170727 19:27:59.282" level="INFO">Executing : Query  |  select * from ajb_account_transaction where account_id ='6161' and update_time between' 2017-07-27 19:27:44.271' and '2017-07-27 19:29:04.271' </msg>
<msg timestamp="20170727 19:27:59.321" level="INFO">${user_id1} = ((88889238, '32102151361501148359', 1000000, 6161, 2, '32102151361500885834', '20170727192859KXT051128', Decimal('2.00'), 1, 14, 2, 0, datetime.datetime(2017, 7, 27, 19, 29, 2), datetime.datetime(2017...</msg>
<status status="PASS" endtime="20170727 19:27:59.321" starttime="20170727 19:27:59.280"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id1[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170727 19:27:59.325" level="INFO">Length is 20</msg>
<msg timestamp="20170727 19:27:59.326" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170727 19:27:59.326" starttime="20170727 19:27:59.323"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170727 19:27:59.329" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 19:27:59.330" starttime="20170727 19:27:59.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170727 19:27:59.332" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170727 19:27:59.333" starttime="20170727 19:27:59.331"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][2]}</arg>
<arg>${user_id_refund[0][2]}</arg>
</arguments>
<status status="PASS" endtime="20170727 19:27:59.336" starttime="20170727 19:27:59.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170727 19:27:59.338" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170727 19:27:59.338" starttime="20170727 19:27:59.337"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][4]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170727 19:27:59.340" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 19:27:59.340" starttime="20170727 19:27:59.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no的值正确</arg>
</arguments>
<msg timestamp="20170727 19:27:59.341" level="INFO">channel_no的值正确</msg>
<status status="PASS" endtime="20170727 19:27:59.342" starttime="20170727 19:27:59.341"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][5]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170727 19:27:59.345" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 19:27:59.345" starttime="20170727 19:27:59.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170727 19:27:59.346" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170727 19:27:59.347" starttime="20170727 19:27:59.346"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id1[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170727 19:27:59.348" level="INFO">${pay_no_after} = 20170727192859KXT051128</msg>
<status status="PASS" endtime="20170727 19:27:59.348" starttime="20170727 19:27:59.347"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170727 19:27:59.350" level="INFO">Length is 23</msg>
<msg timestamp="20170727 19:27:59.350" level="INFO">${pay_no_after_length} = 23</msg>
<status status="PASS" endtime="20170727 19:27:59.350" starttime="20170727 19:27:59.349"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>23</arg>
</arguments>
<msg timestamp="20170727 19:27:59.352" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 19:27:59.352" starttime="20170727 19:27:59.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170727 19:27:59.353" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170727 19:27:59.353" starttime="20170727 19:27:59.353"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][7]}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<status status="PASS" endtime="20170727 19:27:59.355" starttime="20170727 19:27:59.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170727 19:27:59.356" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170727 19:27:59.356" starttime="20170727 19:27:59.355"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170727 19:27:59.358" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 19:27:59.359" starttime="20170727 19:27:59.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170727 19:27:59.360" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170727 19:27:59.360" starttime="20170727 19:27:59.359"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][9]}</arg>
<arg>14</arg>
</arguments>
<msg timestamp="20170727 19:27:59.363" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 19:27:59.363" starttime="20170727 19:27:59.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170727 19:27:59.365" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170727 19:27:59.365" starttime="20170727 19:27:59.364"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170727 19:27:59.366" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 19:27:59.367" starttime="20170727 19:27:59.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170727 19:27:59.368" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170727 19:27:59.368" starttime="20170727 19:27:59.367"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170727 19:27:59.369" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 19:27:59.370" starttime="20170727 19:27:59.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170727 19:27:59.371" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170727 19:27:59.371" starttime="20170727 19:27:59.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170727 19:27:59.373" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170727 19:27:59.374" starttime="20170727 19:27:59.372"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170727 19:27:59.377" level="INFO">${user_id[0][0]_transaction} = 6240</msg>
<status status="PASS" endtime="20170727 19:27:59.377" starttime="20170727 19:27:59.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170727 19:27:59.378" level="INFO">${user_id[0][0]_transaction} = 6240</msg>
<status status="PASS" endtime="20170727 19:27:59.379" starttime="20170727 19:27:59.378"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id1[0][0]}'</arg>
</arguments>
<msg timestamp="20170727 19:27:59.380" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88889238' </msg>
<status status="PASS" endtime="20170727 19:27:59.653" starttime="20170727 19:27:59.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>检验表account_amount</arg>
</arguments>
<msg timestamp="20170727 19:27:59.654" level="INFO">检验表account_amount</msg>
<status status="PASS" endtime="20170727 19:27:59.655" starttime="20170727 19:27:59.654"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_app}'</arg>
</arguments>
<assign>
<var>${amount_app_after}</var>
</assign>
<msg timestamp="20170727 19:27:59.656" level="INFO">Executing : Query  |  select * from account_amount where account_id='6161' </msg>
<msg timestamp="20170727 19:27:59.673" level="INFO">${amount_app_after} = ((12475, 6161, Decimal('10180.00'), Decimal('10180.00'), Decimal('0.00'), datetime.datetime(2017, 7, 19, 17, 6, 7), datetime.datetime(2017, 7, 27, 19, 29, 2), 0),)</msg>
<status status="PASS" endtime="20170727 19:27:59.673" starttime="20170727 19:27:59.655"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${amount_app_after[0][2]}-${amount_app[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_app}</var>
</assign>
<msg timestamp="20170727 19:27:59.675" level="INFO">${total_amount_app} = 2.0</msg>
<status status="PASS" endtime="20170727 19:27:59.675" starttime="20170727 19:27:59.674"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${total_amount_app}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<msg timestamp="20170727 19:27:59.678" level="INFO">Argument types are:
&lt;type 'float'&gt;
&lt;class 'decimal.Decimal'&gt;</msg>
<status status="PASS" endtime="20170727 19:27:59.678" starttime="20170727 19:27:59.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount正确</arg>
</arguments>
<msg timestamp="20170727 19:27:59.679" level="INFO">total_amount正确</msg>
<status status="PASS" endtime="20170727 19:27:59.680" starttime="20170727 19:27:59.679"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${amount_app_after[0][3]}-${amount_app[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_app}</var>
</assign>
<msg timestamp="20170727 19:27:59.681" level="INFO">${balance_amount_app} = 2.0</msg>
<status status="PASS" endtime="20170727 19:27:59.681" starttime="20170727 19:27:59.680"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${balance_amount_app}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<msg timestamp="20170727 19:27:59.683" level="INFO">Argument types are:
&lt;type 'float'&gt;
&lt;class 'decimal.Decimal'&gt;</msg>
<status status="PASS" endtime="20170727 19:27:59.683" starttime="20170727 19:27:59.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount正确</arg>
</arguments>
<msg timestamp="20170727 19:27:59.684" level="INFO">balance_amount正确</msg>
<status status="PASS" endtime="20170727 19:27:59.685" starttime="20170727 19:27:59.684"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${amount_app_after[0][4]}-${amount_app[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_app}</var>
</assign>
<msg timestamp="20170727 19:27:59.687" level="INFO">${frozen_amount_app} = 0.0</msg>
<status status="PASS" endtime="20170727 19:27:59.687" starttime="20170727 19:27:59.685"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${frozen_amount_app}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170727 19:27:59.688" level="INFO">Argument types are:
&lt;type 'float'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 19:27:59.688" starttime="20170727 19:27:59.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount正确</arg>
</arguments>
<msg timestamp="20170727 19:27:59.690" level="INFO">frozen_amount正确</msg>
<status status="PASS" endtime="20170727 19:27:59.690" starttime="20170727 19:27:59.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>检验表account_amount成功</arg>
</arguments>
<msg timestamp="20170727 19:27:59.692" level="INFO">检验表account_amount成功</msg>
<status status="PASS" endtime="20170727 19:27:59.692" starttime="20170727 19:27:59.691"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<msg timestamp="20170727 19:27:59.693" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=888888 </msg>
<status status="PASS" endtime="20170727 19:27:59.767" starttime="20170727 19:27:59.692"></status>
</kw>
<status status="PASS" endtime="20170727 19:27:59.768" critical="yes" starttime="20170727 19:27:58.353"></status>
</test>
<test id="s1-s1-s1-t2" name="输入库里面标记删除的订单号">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170727 19:27:59.775" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170727 19:27:59.802" starttime="20170727 19:27:59.774"></status>
</kw>
<status status="PASS" endtime="20170727 19:27:59.803" starttime="20170727 19:27:59.773"></status>
</kw>
<status status="PASS" endtime="20170727 19:27:59.803" starttime="20170727 19:27:59.772"></status>
</kw>
<kw name="清数据" library="myResource">
<arguments>
<arg>88800888</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170727 19:27:59.807" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170727 19:27:59.827" starttime="20170727 19:27:59.806"></status>
</kw>
<status status="PASS" endtime="20170727 19:27:59.828" starttime="20170727 19:27:59.805"></status>
</kw>
<status status="PASS" endtime="20170727 19:27:59.829" starttime="20170727 19:27:59.804"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170727 19:27:59.831" level="INFO">Executing : Query  |  select * from ajb_account_transaction where id=88800888 </msg>
<msg timestamp="20170727 19:27:59.838" level="INFO">${check} = ()</msg>
<status status="PASS" endtime="20170727 19:27:59.838" starttime="20170727 19:27:59.830"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170727 19:27:59.840" level="INFO">Length is 0</msg>
<msg timestamp="20170727 19:27:59.840" level="INFO">${check_length} = 0</msg>
<status status="PASS" endtime="20170727 19:27:59.841" starttime="20170727 19:27:59.839"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} != 0</arg>
<arg>execute sql string</arg>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>数据库之前没有数据</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库之前没有数据</arg>
</arguments>
<msg timestamp="20170727 19:27:59.844" level="INFO">数据库之前没有数据</msg>
<status status="PASS" endtime="20170727 19:27:59.844" starttime="20170727 19:27:59.843"></status>
</kw>
<status status="PASS" endtime="20170727 19:27:59.845" starttime="20170727 19:27:59.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库里面的这条数据清理成功啦。</arg>
</arguments>
<msg timestamp="20170727 19:27:59.846" level="INFO">数据库里面的这条数据清理成功啦。</msg>
<status status="PASS" endtime="20170727 19:27:59.846" starttime="20170727 19:27:59.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_delete}</arg>
</arguments>
<msg timestamp="20170727 19:27:59.847" level="INFO">${id_delete} = 88800888</msg>
<status status="PASS" endtime="20170727 19:27:59.848" starttime="20170727 19:27:59.847"></status>
</kw>
<status status="PASS" endtime="20170727 19:27:59.848" starttime="20170727 19:27:59.804"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("${id_delete}","32102151361501122443","1000001","6240","1","32102151361501122443","","2","1","11","2","1","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170727 19:27:59.849" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("88800888","32102151361501122443","1000001","6240","1","32102151361501122443","","2","1","11","2","1","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170727 19:27:59.929" starttime="20170727 19:27:59.849"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>32102151361501122443</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170727 19:27:59.932" level="INFO">${args11} = 32102151361501122443</msg>
<status status="PASS" endtime="20170727 19:27:59.932" starttime="20170727 19:27:59.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170727 19:27:59.934" level="INFO">${args22} = </msg>
<status status="PASS" endtime="20170727 19:27:59.934" starttime="20170727 19:27:59.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170727 19:27:59.936" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170727 19:27:59.936" starttime="20170727 19:27:59.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170727 19:27:59.937" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170727 19:27:59.938" starttime="20170727 19:27:59.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170727 19:27:59.940" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</msg>
<status status="PASS" endtime="20170727 19:27:59.940" starttime="20170727 19:27:59.939"></status>
</kw>
<status status="PASS" endtime="20170727 19:27:59.941" starttime="20170727 19:27:59.930"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170727 19:27:59.943" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</msg>
<status status="PASS" endtime="20170727 19:27:59.943" starttime="20170727 19:27:59.942"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170727 19:27:59.944" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170727 19:27:59.944" starttime="20170727 19:27:59.943"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170727 19:27:59.947" starttime="20170727 19:27:59.946"></status>
</kw>
<msg timestamp="20170727 19:27:59.947" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170727 19:27:59.947" starttime="20170727 19:27:59.945"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>order_num</arg>
</arguments>
<status status="PASS" endtime="20170727 19:27:59.951" starttime="20170727 19:27:59.950"></status>
</kw>
<msg timestamp="20170727 19:27:59.951" level="INFO">${args11_after} = order_num</msg>
<status status="PASS" endtime="20170727 19:27:59.952" starttime="20170727 19:27:59.949"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170727 19:27:59.955" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170727 19:27:59.975" starttime="20170727 19:27:59.954"></status>
</kw>
<status status="PASS" endtime="20170727 19:27:59.976" starttime="20170727 19:27:59.953"></status>
</kw>
<status status="PASS" endtime="20170727 19:27:59.977" starttime="20170727 19:27:59.952"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170727 19:27:59.979" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num='32102151361501122443' and channel_no='1' </msg>
<msg timestamp="20170727 19:28:00.000" level="INFO">${database1} = ((88800888, '32102151361501122443', 1000001, 6240, 1, '32102151361501122443', '', Decimal('2.00'), 1, 11, 2, 1, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)),...</msg>
<status status="PASS" endtime="20170727 19:28:00.000" starttime="20170727 19:27:59.978"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170727 19:28:00.003" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6240' </msg>
<msg timestamp="20170727 19:28:00.011" level="INFO">${database} = ((12554, 6240, Decimal('5.00'), Decimal('5.00'), Decimal('0.00'), datetime.datetime(2017, 7, 27, 10, 33, 46), datetime.datetime(2017, 7, 27, 11, 7, 40), 0),)</msg>
<status status="PASS" endtime="20170727 19:28:00.012" starttime="20170727 19:28:00.002"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170727 19:28:00.014" level="INFO">${user_id_real} = 1000001</msg>
<status status="PASS" endtime="20170727 19:28:00.014" starttime="20170727 19:28:00.013"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170727 19:28:00.016" level="INFO">${account_id} = 6240</msg>
<status status="PASS" endtime="20170727 19:28:00.016" starttime="20170727 19:28:00.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170727 19:28:00.018" level="INFO">获得account_id值为：6240</msg>
<status status="PASS" endtime="20170727 19:28:00.018" starttime="20170727 19:28:00.017"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170727 19:28:00.020" level="INFO">${total_amount_before} = 5.00</msg>
<status status="PASS" endtime="20170727 19:28:00.020" starttime="20170727 19:28:00.019"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170727 19:28:00.021" level="INFO">${balance_amount_before} = 5.00</msg>
<status status="PASS" endtime="20170727 19:28:00.021" starttime="20170727 19:28:00.020"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170727 19:28:00.023" level="INFO">${frozen_amount_before} = 0.00</msg>
<status status="PASS" endtime="20170727 19:28:00.023" starttime="20170727 19:28:00.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170727 19:28:00.026" level="INFO">${account_id} = 6240</msg>
<status status="PASS" endtime="20170727 19:28:00.027" starttime="20170727 19:28:00.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170727 19:28:00.029" level="INFO">${user_id_real} = 1000001</msg>
<status status="PASS" endtime="20170727 19:28:00.029" starttime="20170727 19:28:00.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170727 19:28:00.030" level="INFO">${total_amount_before} = 5.00</msg>
<status status="PASS" endtime="20170727 19:28:00.030" starttime="20170727 19:28:00.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170727 19:28:00.032" level="INFO">${balance_amount_before} = 5.00</msg>
<status status="PASS" endtime="20170727 19:28:00.032" starttime="20170727 19:28:00.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170727 19:28:00.033" level="INFO">${frozen_amount_before} = 0.00</msg>
<status status="PASS" endtime="20170727 19:28:00.034" starttime="20170727 19:28:00.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170727 19:28:00.035" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170727 19:28:00.035" starttime="20170727 19:28:00.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170727 19:28:00.037" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170727 19:28:00.037" starttime="20170727 19:28:00.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170727 19:28:00.039" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</msg>
<status status="PASS" endtime="20170727 19:28:00.039" starttime="20170727 19:28:00.038"></status>
</kw>
<status status="PASS" endtime="20170727 19:28:00.040" starttime="20170727 19:27:59.941"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Ajb Withdraw Cancel" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:00.066" starttime="20170727 19:28:00.045"></status>
</kw>
<msg timestamp="20170727 19:28:00.066" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170727 19:28:00.067" starttime="20170727 19:28:00.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170727 19:28:00.068" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170727 19:28:00.068" starttime="20170727 19:28:00.067"></status>
</kw>
<status status="PASS" endtime="20170727 19:28:00.069" starttime="20170727 19:28:00.041"></status>
</kw>
<kw name="错误时字段验证" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170727 19:28:00.071" level="INFO">200</msg>
<status status="PASS" endtime="20170727 19:28:00.071" starttime="20170727 19:28:00.070"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170727 19:28:00.073" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 19:28:00.074" starttime="20170727 19:28:00.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170727 19:28:00.075" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170727 19:28:00.076" starttime="20170727 19:28:00.075"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170727 19:28:00.078" level="INFO">To JSON using : content={"data":null,"msg":"订单退款结算失败","code":0,"success":false} </msg>
<msg timestamp="20170727 19:28:00.078" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170727 19:28:00.079" level="INFO">${toJson} = {u'msg': u'\u8ba2\u5355\u9000\u6b3e\u7ed3\u7b97\u5931\u8d25', u'code': 0, u'data': None, u'success': False}</msg>
<status status="PASS" endtime="20170727 19:28:00.079" starttime="20170727 19:28:00.076"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>False</arg>
</arguments>
<msg timestamp="20170727 19:28:00.081" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 19:28:00.081" starttime="20170727 19:28:00.080"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['data']}</arg>
<arg>None</arg>
</arguments>
<msg timestamp="20170727 19:28:00.082" level="INFO">Argument types are:
&lt;type 'NoneType'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 19:28:00.083" starttime="20170727 19:28:00.082"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${toJson['code']}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170727 19:28:00.084" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 19:28:00.084" starttime="20170727 19:28:00.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170727 19:28:00.085" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170727 19:28:00.086" starttime="20170727 19:28:00.085"></status>
</kw>
<status status="PASS" endtime="20170727 19:28:00.087" starttime="20170727 19:28:00.069"></status>
</kw>
<kw name="amount和表里的校验" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170727 19:28:00.092" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170727 19:28:00.103" starttime="20170727 19:28:00.091"></status>
</kw>
<status status="PASS" endtime="20170727 19:28:00.103" starttime="20170727 19:28:00.090"></status>
</kw>
<status status="PASS" endtime="20170727 19:28:00.104" starttime="20170727 19:28:00.088"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170727 19:28:00.106" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6240' </msg>
<msg timestamp="20170727 19:28:00.113" level="INFO">${user_id} = ((12554, 6240, Decimal('5.00'), Decimal('5.00'), Decimal('0.00'), datetime.datetime(2017, 7, 27, 10, 33, 46), datetime.datetime(2017, 7, 27, 11, 7, 40), 0),)</msg>
<status status="PASS" endtime="20170727 19:28:00.114" starttime="20170727 19:28:00.105"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:00.115" starttime="20170727 19:28:00.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170727 19:28:00.117" level="INFO">total_amount数目没有变化</msg>
<status status="PASS" endtime="20170727 19:28:00.117" starttime="20170727 19:28:00.116"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:00.138" starttime="20170727 19:28:00.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170727 19:28:00.140" level="INFO">balance_amount数目没有变化</msg>
<status status="PASS" endtime="20170727 19:28:00.140" starttime="20170727 19:28:00.139"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:00.142" starttime="20170727 19:28:00.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170727 19:28:00.144" level="INFO">frozen_amount数目没有变化</msg>
<status status="PASS" endtime="20170727 19:28:00.144" starttime="20170727 19:28:00.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amounts的数据没有变化正确的</arg>
</arguments>
<msg timestamp="20170727 19:28:00.146" level="INFO">amounts的数据没有变化正确的</msg>
<status status="PASS" endtime="20170727 19:28:00.146" starttime="20170727 19:28:00.145"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170727 19:28:00.147" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 19:28:00.148" starttime="20170727 19:28:00.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount内容没有发生变化</arg>
</arguments>
<msg timestamp="20170727 19:28:00.149" level="INFO">表account_amount内容没有发生变化</msg>
<status status="PASS" endtime="20170727 19:28:00.149" starttime="20170727 19:28:00.148"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170727 19:28:00.150" level="INFO">${current_time} = 2017-07-27 19:28:00.150</msg>
<status status="PASS" endtime="20170727 19:28:00.151" starttime="20170727 19:28:00.150"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170727 19:28:00.152" level="INFO">${current_time_before_30} = 2017-07-27 19:27:00.150</msg>
<status status="PASS" endtime="20170727 19:28:00.152" starttime="20170727 19:28:00.151"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170727 19:28:00.155" level="INFO">${current_time_after_30} = 2017-07-27 19:29:05.150</msg>
<status status="PASS" endtime="20170727 19:28:00.155" starttime="20170727 19:28:00.154"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${bill_check}</var>
</assign>
<msg timestamp="20170727 19:28:00.158" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6240' and update_time between' 2017-07-27 19:27:00.150' and '2017-07-27 19:29:05.150' </msg>
<msg timestamp="20170727 19:28:00.164" level="INFO">${bill_check} = ()</msg>
<status status="PASS" endtime="20170727 19:28:00.165" starttime="20170727 19:28:00.156"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${bill_check}</arg>
</arguments>
<assign>
<var>${bill_check_length}</var>
</assign>
<msg timestamp="20170727 19:28:00.166" level="INFO">Length is 0</msg>
<msg timestamp="20170727 19:28:00.166" level="INFO">${bill_check_length} = 0</msg>
<status status="PASS" endtime="20170727 19:28:00.167" starttime="20170727 19:28:00.165"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${bill_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170727 19:28:00.168" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 19:28:00.169" starttime="20170727 19:28:00.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>account_unilateral_bill里的没有相关数据</arg>
</arguments>
<msg timestamp="20170727 19:28:00.171" level="INFO">account_unilateral_bill里的没有相关数据</msg>
<status status="PASS" endtime="20170727 19:28:00.171" starttime="20170727 19:28:00.170"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num ='${args11}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${transaction_check}</var>
</assign>
<msg timestamp="20170727 19:28:00.172" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num ='32102151361501122443' and update_time between' 2017-07-27 19:27:00.150' and '2017-07-27 19:29:05.150' </msg>
<msg timestamp="20170727 19:28:00.187" level="INFO">${transaction_check} = ()</msg>
<status status="PASS" endtime="20170727 19:28:00.187" starttime="20170727 19:28:00.171"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${transaction_check}</arg>
</arguments>
<assign>
<var>${transaction_check_length}</var>
</assign>
<msg timestamp="20170727 19:28:00.189" level="INFO">Length is 0</msg>
<msg timestamp="20170727 19:28:00.190" level="INFO">${transaction_check_length} = 0</msg>
<status status="PASS" endtime="20170727 19:28:00.190" starttime="20170727 19:28:00.188"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${transaction_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170727 19:28:00.192" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 19:28:00.192" starttime="20170727 19:28:00.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>ajb_account_transaction里的没有相关数据</arg>
</arguments>
<msg timestamp="20170727 19:28:00.194" level="INFO">ajb_account_transaction里的没有相关数据</msg>
<status status="PASS" endtime="20170727 19:28:00.194" starttime="20170727 19:28:00.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库表里数据调用接口前后没有发生变化</arg>
</arguments>
<msg timestamp="20170727 19:28:00.195" level="INFO">数据库表里数据调用接口前后没有发生变化</msg>
<status status="PASS" endtime="20170727 19:28:00.195" starttime="20170727 19:28:00.194"></status>
</kw>
<status status="PASS" endtime="20170727 19:28:00.196" starttime="20170727 19:28:00.087"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<msg timestamp="20170727 19:28:00.197" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=88800888 </msg>
<status status="PASS" endtime="20170727 19:28:00.442" starttime="20170727 19:28:00.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当订单号为库里面标记删除的时候，接口返回失败</arg>
</arguments>
<msg timestamp="20170727 19:28:00.447" level="INFO">当订单号为库里面标记删除的时候，接口返回失败</msg>
<status status="PASS" endtime="20170727 19:28:00.448" starttime="20170727 19:28:00.444"></status>
</kw>
<status status="PASS" endtime="20170727 19:28:00.451" critical="yes" starttime="20170727 19:27:59.769"></status>
</test>
<status status="PASS" endtime="20170727 19:28:00.453" starttime="20170727 19:27:58.068"></status>
</suite>
<suite source="F:\logs and reports\账户中心\订单\订单确认支付（线上）.txt" id="s1-s1-s2" name="订单确认支付（线上）">
<test id="s1-s1-s2-t1" name="输入的参数全部正确">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170727 19:28:00.497" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170727 19:28:00.549" starttime="20170727 19:28:00.496"></status>
</kw>
<status status="PASS" endtime="20170727 19:28:00.550" starttime="20170727 19:28:00.493"></status>
</kw>
<status status="PASS" endtime="20170727 19:28:00.550" starttime="20170727 19:28:00.492"></status>
</kw>
<kw name="清数据" library="myResource">
<arguments>
<arg>888888</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170727 19:28:00.553" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170727 19:28:00.592" starttime="20170727 19:28:00.553"></status>
</kw>
<status status="PASS" endtime="20170727 19:28:00.593" starttime="20170727 19:28:00.552"></status>
</kw>
<status status="PASS" endtime="20170727 19:28:00.593" starttime="20170727 19:28:00.551"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170727 19:28:00.595" level="INFO">Executing : Query  |  select * from ajb_account_transaction where id=888888 </msg>
<msg timestamp="20170727 19:28:00.619" level="INFO">${check} = ()</msg>
<status status="PASS" endtime="20170727 19:28:00.619" starttime="20170727 19:28:00.594"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170727 19:28:00.620" level="INFO">Length is 0</msg>
<msg timestamp="20170727 19:28:00.621" level="INFO">${check_length} = 0</msg>
<status status="PASS" endtime="20170727 19:28:00.621" starttime="20170727 19:28:00.620"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} != 0</arg>
<arg>execute sql string</arg>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>数据库之前没有数据</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库之前没有数据</arg>
</arguments>
<msg timestamp="20170727 19:28:00.624" level="INFO">数据库之前没有数据</msg>
<status status="PASS" endtime="20170727 19:28:00.624" starttime="20170727 19:28:00.623"></status>
</kw>
<status status="PASS" endtime="20170727 19:28:00.625" starttime="20170727 19:28:00.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库里面的这条数据清理成功啦。</arg>
</arguments>
<msg timestamp="20170727 19:28:00.627" level="INFO">数据库里面的这条数据清理成功啦。</msg>
<status status="PASS" endtime="20170727 19:28:00.627" starttime="20170727 19:28:00.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_delete}</arg>
</arguments>
<msg timestamp="20170727 19:28:00.629" level="INFO">${id_delete} = 888888</msg>
<status status="PASS" endtime="20170727 19:28:00.629" starttime="20170727 19:28:00.628"></status>
</kw>
<status status="PASS" endtime="20170727 19:28:00.630" starttime="20170727 19:28:00.551"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("${id_delete}","32102151361500975216","1000000","6131","1","32102151361500284867","","2","1","11","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170727 19:28:00.631" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("888888","32102151361500975216","1000000","6131","1","32102151361500284867","","2","1","11","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170727 19:28:00.715" starttime="20170727 19:28:00.631"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>32102151361500284867</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170727 19:28:00.719" level="INFO">${args11} = 32102151361500284867</msg>
<status status="PASS" endtime="20170727 19:28:00.719" starttime="20170727 19:28:00.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170727 19:28:00.720" level="INFO">${args22} = </msg>
<status status="PASS" endtime="20170727 19:28:00.721" starttime="20170727 19:28:00.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170727 19:28:00.722" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170727 19:28:00.722" starttime="20170727 19:28:00.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170727 19:28:00.724" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170727 19:28:00.724" starttime="20170727 19:28:00.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170727 19:28:00.726" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/confirmPay</msg>
<status status="PASS" endtime="20170727 19:28:00.726" starttime="20170727 19:28:00.725"></status>
</kw>
<status status="PASS" endtime="20170727 19:28:00.726" starttime="20170727 19:28:00.716"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170727 19:28:00.728" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/confirmPay</msg>
<status status="PASS" endtime="20170727 19:28:00.729" starttime="20170727 19:28:00.728"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170727 19:28:00.731" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170727 19:28:00.731" starttime="20170727 19:28:00.730"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:00.733" starttime="20170727 19:28:00.733"></status>
</kw>
<msg timestamp="20170727 19:28:00.734" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170727 19:28:00.734" starttime="20170727 19:28:00.732"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>order_num</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:00.736" starttime="20170727 19:28:00.736"></status>
</kw>
<msg timestamp="20170727 19:28:00.737" level="INFO">${args11_after} = order_num</msg>
<status status="PASS" endtime="20170727 19:28:00.737" starttime="20170727 19:28:00.735"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170727 19:28:00.740" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170727 19:28:00.756" starttime="20170727 19:28:00.739"></status>
</kw>
<status status="PASS" endtime="20170727 19:28:00.757" starttime="20170727 19:28:00.738"></status>
</kw>
<status status="PASS" endtime="20170727 19:28:00.758" starttime="20170727 19:28:00.737"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170727 19:28:00.760" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num='32102151361500284867' and channel_no='1' </msg>
<msg timestamp="20170727 19:28:00.773" level="INFO">${database1} = ((888888, '32102151361500975216', 1000000, 6131, 1, '32102151361500284867', '', Decimal('2.00'), 1, 11, 2, 0, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)),)</msg>
<status status="PASS" endtime="20170727 19:28:00.774" starttime="20170727 19:28:00.758"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170727 19:28:00.776" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6131' </msg>
<msg timestamp="20170727 19:28:00.781" level="INFO">${database} = ((12445, 6131, Decimal('45159.00'), Decimal('172450.00'), Decimal('72707.00'), datetime.datetime(2017, 7, 12, 20, 3, 46), datetime.datetime(2017, 7, 27, 19, 25, 1), 0),)</msg>
<status status="PASS" endtime="20170727 19:28:00.782" starttime="20170727 19:28:00.775"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170727 19:28:00.783" level="INFO">${user_id_real} = 1000000</msg>
<status status="PASS" endtime="20170727 19:28:00.784" starttime="20170727 19:28:00.783"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170727 19:28:00.785" level="INFO">${account_id} = 6131</msg>
<status status="PASS" endtime="20170727 19:28:00.785" starttime="20170727 19:28:00.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170727 19:28:00.786" level="INFO">获得account_id值为：6131</msg>
<status status="PASS" endtime="20170727 19:28:00.787" starttime="20170727 19:28:00.786"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170727 19:28:00.788" level="INFO">${total_amount_before} = 45159.00</msg>
<status status="PASS" endtime="20170727 19:28:00.788" starttime="20170727 19:28:00.787"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170727 19:28:00.790" level="INFO">${balance_amount_before} = 172450.00</msg>
<status status="PASS" endtime="20170727 19:28:00.790" starttime="20170727 19:28:00.789"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170727 19:28:00.792" level="INFO">${frozen_amount_before} = 72707.00</msg>
<status status="PASS" endtime="20170727 19:28:00.793" starttime="20170727 19:28:00.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170727 19:28:00.794" level="INFO">${account_id} = 6131</msg>
<status status="PASS" endtime="20170727 19:28:00.794" starttime="20170727 19:28:00.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170727 19:28:00.796" level="INFO">${user_id_real} = 1000000</msg>
<status status="PASS" endtime="20170727 19:28:00.796" starttime="20170727 19:28:00.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170727 19:28:00.798" level="INFO">${total_amount_before} = 45159.00</msg>
<status status="PASS" endtime="20170727 19:28:00.798" starttime="20170727 19:28:00.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170727 19:28:00.799" level="INFO">${balance_amount_before} = 172450.00</msg>
<status status="PASS" endtime="20170727 19:28:00.799" starttime="20170727 19:28:00.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170727 19:28:00.801" level="INFO">${frozen_amount_before} = 72707.00</msg>
<status status="PASS" endtime="20170727 19:28:00.801" starttime="20170727 19:28:00.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170727 19:28:00.802" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170727 19:28:00.802" starttime="20170727 19:28:00.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170727 19:28:00.804" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170727 19:28:00.804" starttime="20170727 19:28:00.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170727 19:28:00.805" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/confirmPay</msg>
<status status="PASS" endtime="20170727 19:28:00.806" starttime="20170727 19:28:00.805"></status>
</kw>
<status status="PASS" endtime="20170727 19:28:00.806" starttime="20170727 19:28:00.727"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Ajb Withdraw Cancel" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:00.987" starttime="20170727 19:28:00.809"></status>
</kw>
<msg timestamp="20170727 19:28:00.989" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170727 19:28:00.989" starttime="20170727 19:28:00.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170727 19:28:00.993" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170727 19:28:00.994" starttime="20170727 19:28:00.991"></status>
</kw>
<status status="PASS" endtime="20170727 19:28:00.995" starttime="20170727 19:28:00.807"></status>
</kw>
<kw name="字段验证" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170727 19:28:00.999" level="INFO">200</msg>
<status status="PASS" endtime="20170727 19:28:01.000" starttime="20170727 19:28:00.997"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170727 19:28:01.003" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 19:28:01.003" starttime="20170727 19:28:01.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170727 19:28:01.005" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170727 19:28:01.006" starttime="20170727 19:28:01.004"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170727 19:28:01.008" level="INFO">To JSON using : content={"data":null,"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170727 19:28:01.009" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170727 19:28:01.010" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': None, u'success': True}</msg>
<status status="PASS" endtime="20170727 19:28:01.010" starttime="20170727 19:28:01.007"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170727 19:28:01.013" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 19:28:01.014" starttime="20170727 19:28:01.011"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:01.016" starttime="20170727 19:28:01.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170727 19:28:01.019" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170727 19:28:01.020" starttime="20170727 19:28:01.018"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<assign>
<var>@{Link1}</var>
</assign>
<msg timestamp="20170727 19:28:01.022" level="INFO">@{Link1} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170727 19:28:01.022" starttime="20170727 19:28:01.021"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>"${value}" in @{Link1}</arg>
<arg>Get From Dictionary</arg>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${orderNum}</var>
</assign>
<msg timestamp="20170727 19:28:01.023" level="INFO">${orderNum} = None</msg>
<status status="PASS" endtime="20170727 19:28:01.024" starttime="20170727 19:28:01.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<msg timestamp="20170727 19:28:01.026" level="INFO">${orderNum} = None</msg>
<status status="PASS" endtime="20170727 19:28:01.027" starttime="20170727 19:28:01.025"></status>
</kw>
<status status="PASS" endtime="20170727 19:28:01.027" starttime="20170727 19:28:00.995"></status>
</kw>
<kw name="确认取消的金额数" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170727 19:28:01.031" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170727 19:28:01.043" starttime="20170727 19:28:01.030"></status>
</kw>
<status status="PASS" endtime="20170727 19:28:01.043" starttime="20170727 19:28:01.029"></status>
</kw>
<status status="PASS" endtime="20170727 19:28:01.044" starttime="20170727 19:28:01.029"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>8</arg>
</arguments>
<assign>
<var>${event_code_judge}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>11</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:01.048" starttime="20170727 19:28:01.047"></status>
</kw>
<msg timestamp="20170727 19:28:01.048" level="INFO">${event_code_judge} = 11</msg>
<status status="PASS" endtime="20170727 19:28:01.049" starttime="20170727 19:28:01.045"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num ='${args11}' and event_code=${event_code_judge}</arg>
</arguments>
<assign>
<var>${search}</var>
</assign>
<msg timestamp="20170727 19:28:01.050" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num ='32102151361500284867' and event_code=11 </msg>
<msg timestamp="20170727 19:28:01.064" level="INFO">${search} = ((888888, '32102151361500975216', 1000000, 6131, 1, '32102151361500284867', '', Decimal('2.00'), 1, 11, 2, 0, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)),)</msg>
<status status="PASS" endtime="20170727 19:28:01.065" starttime="20170727 19:28:01.049"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${search[0][7]}</arg>
</arguments>
<assign>
<var>${change_total_amount}</var>
</assign>
<msg timestamp="20170727 19:28:01.066" level="INFO">${change_total_amount} = 2.00</msg>
<status status="PASS" endtime="20170727 19:28:01.066" starttime="20170727 19:28:01.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${change_total_amount}</arg>
</arguments>
<msg timestamp="20170727 19:28:01.068" level="INFO">${change_total_amount} = 2.00</msg>
<status status="PASS" endtime="20170727 19:28:01.068" starttime="20170727 19:28:01.067"></status>
</kw>
<status status="PASS" endtime="20170727 19:28:01.068" starttime="20170727 19:28:01.028"></status>
</kw>
<kw name="退款确认的account_unilateral_bill的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_unilateral_bill</arg>
</arguments>
<msg timestamp="20170727 19:28:01.070" level="INFO">现在开始校验表account_unilateral_bill</msg>
<status status="PASS" endtime="20170727 19:28:01.070" starttime="20170727 19:28:01.070"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170727 19:28:01.075" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170727 19:28:01.091" starttime="20170727 19:28:01.074"></status>
</kw>
<status status="PASS" endtime="20170727 19:28:01.092" starttime="20170727 19:28:01.073"></status>
</kw>
<status status="PASS" endtime="20170727 19:28:01.092" starttime="20170727 19:28:01.071"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>account_unilateral_bill</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170727 19:28:01.096" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170727 19:28:01.107" starttime="20170727 19:28:01.095"></status>
</kw>
<status status="PASS" endtime="20170727 19:28:01.107" starttime="20170727 19:28:01.094"></status>
</kw>
<status status="PASS" endtime="20170727 19:28:01.108" starttime="20170727 19:28:01.094"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170727 19:28:01.110" level="INFO">${current_time} = 2017-07-27 19:28:01.110</msg>
<status status="PASS" endtime="20170727 19:28:01.110" starttime="20170727 19:28:01.109"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>10 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170727 19:28:01.112" level="INFO">${current_time_before_30} = 2017-07-27 19:27:51.110</msg>
<status status="PASS" endtime="20170727 19:28:01.112" starttime="20170727 19:28:01.111"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170727 19:28:01.114" level="INFO">${current_time_after_30} = 2017-07-27 19:29:06.110</msg>
<status status="PASS" endtime="20170727 19:28:01.114" starttime="20170727 19:28:01.113"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170727 19:28:01.115" level="INFO">Executing : Query  |  select * from account_unilateral_bill where user_id='1000000' and update_time between' 2017-07-27 19:27:51.110' and '2017-07-27 19:29:06.110' </msg>
<msg timestamp="20170727 19:28:01.127" level="INFO">${updatetime} = ((6241, '32102151361501148365', 1000000, 6131, '32102151361501148364', 1, 13, 2, Decimal('2.00'), None, datetime.datetime(2017, 7, 27, 19, 29, 4), datetime.datetime(2017, 7, 27, 19, 29, 4), 0), (6242,...</msg>
<status status="PASS" endtime="20170727 19:28:01.128" starttime="20170727 19:28:01.115"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170727 19:28:01.129" level="INFO">Length is 2</msg>
<status status="PASS" endtime="20170727 19:28:01.129" starttime="20170727 19:28:01.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170727 19:28:01.130" level="INFO">account_unilateral_bill表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170727 19:28:01.131" starttime="20170727 19:28:01.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170727 19:28:01.132" level="INFO">${current_time_before_30} = 2017-07-27 19:27:51.110</msg>
<status status="PASS" endtime="20170727 19:28:01.132" starttime="20170727 19:28:01.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170727 19:28:01.133" level="INFO">${current_time_after_30} = 2017-07-27 19:29:06.110</msg>
<status status="PASS" endtime="20170727 19:28:01.134" starttime="20170727 19:28:01.133"></status>
</kw>
<status status="PASS" endtime="20170727 19:28:01.135" starttime="20170727 19:28:01.093"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id} 'and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170727 19:28:01.136" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6131 'and update_time between' 2017-07-27 19:27:51.110' and '2017-07-27 19:29:06.110' </msg>
<msg timestamp="20170727 19:28:01.144" level="INFO">${user_id} = ((6241, '32102151361501148365', 1000000, 6131, '32102151361501148364', 1, 13, 2, Decimal('2.00'), None, datetime.datetime(2017, 7, 27, 19, 29, 4), datetime.datetime(2017, 7, 27, 19, 29, 4), 0), (6242,...</msg>
<status status="PASS" endtime="20170727 19:28:01.144" starttime="20170727 19:28:01.135"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170727 19:28:01.146" level="INFO">Length is 20</msg>
<msg timestamp="20170727 19:28:01.146" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170727 19:28:01.146" starttime="20170727 19:28:01.145"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[1][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length2}</var>
</assign>
<msg timestamp="20170727 19:28:01.148" level="INFO">Length is 20</msg>
<msg timestamp="20170727 19:28:01.148" level="INFO">${bill_no_length2} = 20</msg>
<status status="PASS" endtime="20170727 19:28:01.148" starttime="20170727 19:28:01.147"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170727 19:28:01.149" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 19:28:01.150" starttime="20170727 19:28:01.149"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>${bill_no_length2}</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:01.151" starttime="20170727 19:28:01.150"></status>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<doc>Fails if the given objects are equal.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
<arg>${user_id[1][1]}</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:01.153" starttime="20170727 19:28:01.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，且不是相同bill_no,此时校验成功</arg>
</arguments>
<msg timestamp="20170727 19:28:01.155" level="INFO">bill_no的数据长度正确，且不是相同bill_no,此时校验成功</msg>
<status status="PASS" endtime="20170727 19:28:01.156" starttime="20170727 19:28:01.154"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:01.157" starttime="20170727 19:28:01.157"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id[1][2]}</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:01.159" starttime="20170727 19:28:01.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170727 19:28:01.160" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170727 19:28:01.160" starttime="20170727 19:28:01.160"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170727 19:28:01.162" level="INFO">Length is 20</msg>
<msg timestamp="20170727 19:28:01.162" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170727 19:28:01.162" starttime="20170727 19:28:01.161"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170727 19:28:01.164" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 19:28:01.164" starttime="20170727 19:28:01.163"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${user_id[1][4]}</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:01.165" starttime="20170727 19:28:01.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，且此时是同一个command_no,校验成功</arg>
</arguments>
<msg timestamp="20170727 19:28:01.167" level="INFO">commandl_no的数据长度正确，且此时是同一个command_no,校验成功</msg>
<status status="PASS" endtime="20170727 19:28:01.167" starttime="20170727 19:28:01.166"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170727 19:28:01.168" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 19:28:01.169" starttime="20170727 19:28:01.167"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>${user_id[1][5]}</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:01.171" starttime="20170727 19:28:01.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170727 19:28:01.173" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170727 19:28:01.174" starttime="20170727 19:28:01.172"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>13</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:01.178" starttime="20170727 19:28:01.178"></status>
</kw>
<msg timestamp="20170727 19:28:01.179" level="INFO">${event_code} = 13</msg>
<status status="PASS" endtime="20170727 19:28:01.179" starttime="20170727 19:28:01.175"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170727 19:28:01.181" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170727 19:28:01.182" starttime="20170727 19:28:01.180"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:01.184" starttime="20170727 19:28:01.183"></status>
</kw>
<msg timestamp="20170727 19:28:01.184" level="INFO">${event_code_after} = 13</msg>
<status status="PASS" endtime="20170727 19:28:01.185" starttime="20170727 19:28:01.182"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170727 19:28:01.186" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170727 19:28:01.186" starttime="20170727 19:28:01.185"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:01.189" starttime="20170727 19:28:01.188"></status>
</kw>
<msg timestamp="20170727 19:28:01.189" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170727 19:28:01.189" starttime="20170727 19:28:01.187"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:01.193" starttime="20170727 19:28:01.192"></status>
</kw>
<msg timestamp="20170727 19:28:01.193" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170727 19:28:01.194" starttime="20170727 19:28:01.191"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170727 19:28:01.195" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170727 19:28:01.195" starttime="20170727 19:28:01.194"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:01.199" starttime="20170727 19:28:01.198"></status>
</kw>
<msg timestamp="20170727 19:28:01.199" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170727 19:28:01.199" starttime="20170727 19:28:01.197"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${total_amount_before}-${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:01.203" starttime="20170727 19:28:01.202"></status>
</kw>
<msg timestamp="20170727 19:28:01.203" level="INFO">${total_amount} = 45157.0</msg>
<status status="PASS" endtime="20170727 19:28:01.203" starttime="20170727 19:28:01.200"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:01.208" starttime="20170727 19:28:01.207"></status>
</kw>
<msg timestamp="20170727 19:28:01.208" level="INFO">${balance_amount} = 172450.00</msg>
<status status="PASS" endtime="20170727 19:28:01.208" starttime="20170727 19:28:01.204"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:01.211" starttime="20170727 19:28:01.211"></status>
</kw>
<msg timestamp="20170727 19:28:01.212" level="INFO">${frozen_amount} = 72705.0</msg>
<status status="PASS" endtime="20170727 19:28:01.212" starttime="20170727 19:28:01.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170727 19:28:01.213" level="INFO">${event_code} = 13</msg>
<status status="PASS" endtime="20170727 19:28:01.214" starttime="20170727 19:28:01.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170727 19:28:01.216" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170727 19:28:01.216" starttime="20170727 19:28:01.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170727 19:28:01.218" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170727 19:28:01.218" starttime="20170727 19:28:01.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170727 19:28:01.219" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170727 19:28:01.220" starttime="20170727 19:28:01.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170727 19:28:01.221" level="INFO">${total_amount} = 45157.0</msg>
<status status="PASS" endtime="20170727 19:28:01.221" starttime="20170727 19:28:01.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170727 19:28:01.223" level="INFO">${balance_amount} = 172450.00</msg>
<status status="PASS" endtime="20170727 19:28:01.223" starttime="20170727 19:28:01.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170727 19:28:01.226" level="INFO">${frozen_amount} = 72705.0</msg>
<status status="PASS" endtime="20170727 19:28:01.226" starttime="20170727 19:28:01.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170727 19:28:01.227" level="INFO">${event_code_after} = 13</msg>
<status status="PASS" endtime="20170727 19:28:01.228" starttime="20170727 19:28:01.227"></status>
</kw>
<status status="PASS" endtime="20170727 19:28:01.228" starttime="20170727 19:28:01.174"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170727 19:28:01.229" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 19:28:01.230" starttime="20170727 19:28:01.229"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>${user_id[1][6]}</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:01.231" starttime="20170727 19:28:01.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170727 19:28:01.232" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170727 19:28:01.233" starttime="20170727 19:28:01.232"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170727 19:28:01.235" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 19:28:01.235" starttime="20170727 19:28:01.233"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[1][7]}</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20170727 19:28:01.236" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 19:28:01.237" starttime="20170727 19:28:01.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type俩者值正确</arg>
</arguments>
<msg timestamp="20170727 19:28:01.238" level="INFO">command_type俩者值正确</msg>
<status status="PASS" endtime="20170727 19:28:01.238" starttime="20170727 19:28:01.238"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${amount}</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:01.240" starttime="20170727 19:28:01.239"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>0-${amount}</arg>
</arguments>
<assign>
<var>${amount_after}</var>
</assign>
<msg timestamp="20170727 19:28:01.242" level="INFO">${amount_after} = -2.0</msg>
<status status="PASS" endtime="20170727 19:28:01.242" starttime="20170727 19:28:01.241"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${user_id[1][8]}</arg>
<arg>${amount_after}</arg>
</arguments>
<msg timestamp="20170727 19:28:01.243" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170727 19:28:01.244" starttime="20170727 19:28:01.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170727 19:28:01.246" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170727 19:28:01.246" starttime="20170727 19:28:01.245"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${user_id[0][10]}</arg>
<arg>${user_id[0][11]}</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:01.248" starttime="20170727 19:28:01.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170727 19:28:01.249" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170727 19:28:01.249" starttime="20170727 19:28:01.249"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${user_id[0][10]}</arg>
<arg>${user_id[0][10]}</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:01.251" starttime="20170727 19:28:01.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>则调用艾佳币回收确认的接口时，则直接同时发生解冻和转账俩步</arg>
</arguments>
<msg timestamp="20170727 19:28:01.252" level="INFO">则调用艾佳币回收确认的接口时，则直接同时发生解冻和转账俩步</msg>
<status status="PASS" endtime="20170727 19:28:01.252" starttime="20170727 19:28:01.252"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170727 19:28:01.254" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 19:28:01.254" starttime="20170727 19:28:01.253"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>${user_id[1][12]}</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:01.255" starttime="20170727 19:28:01.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170727 19:28:01.257" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170727 19:28:01.257" starttime="20170727 19:28:01.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170727 19:28:01.258" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170727 19:28:01.258" starttime="20170727 19:28:01.257"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${user_id[1][0]}</arg>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>@{delete_unilateral_bill}</var>
</assign>
<msg timestamp="20170727 19:28:01.261" level="INFO">@{delete_unilateral_bill} = [ 6242 | 6241 ]</msg>
<status status="PASS" endtime="20170727 19:28:01.261" starttime="20170727 19:28:01.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{delete_unilateral_bill}</arg>
</arguments>
<msg timestamp="20170727 19:28:01.263" level="INFO">@{delete_unilateral_bill} = [ 6242 | 6241 ]</msg>
<status status="PASS" endtime="20170727 19:28:01.263" starttime="20170727 19:28:01.262"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[1][0]}'</arg>
</arguments>
<msg timestamp="20170727 19:28:01.265" level="INFO">Executing : Execute SQL String  |  delete from account_unilateral_bill where id ='6242' </msg>
<status status="PASS" endtime="20170727 19:28:01.329" starttime="20170727 19:28:01.264"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]}'</arg>
</arguments>
<msg timestamp="20170727 19:28:01.335" level="INFO">Executing : Execute SQL String  |  delete from account_unilateral_bill where id ='6241' </msg>
<status status="PASS" endtime="20170727 19:28:01.407" starttime="20170727 19:28:01.332"></status>
</kw>
<status status="PASS" endtime="20170727 19:28:01.408" starttime="20170727 19:28:01.069"></status>
</kw>
<kw name="表ajb_account_transaction" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170727 19:28:01.412" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170727 19:28:01.412" starttime="20170727 19:28:01.411"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170727 19:28:01.416" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170727 19:28:01.442" starttime="20170727 19:28:01.415"></status>
</kw>
<status status="PASS" endtime="20170727 19:28:01.443" starttime="20170727 19:28:01.414"></status>
</kw>
<status status="PASS" endtime="20170727 19:28:01.444" starttime="20170727 19:28:01.413"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>ajb_account_transaction</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170727 19:28:01.453" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170727 19:28:01.473" starttime="20170727 19:28:01.451"></status>
</kw>
<status status="PASS" endtime="20170727 19:28:01.475" starttime="20170727 19:28:01.449"></status>
</kw>
<status status="PASS" endtime="20170727 19:28:01.476" starttime="20170727 19:28:01.448"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170727 19:28:01.479" level="INFO">${current_time} = 2017-07-27 19:28:01.479</msg>
<status status="PASS" endtime="20170727 19:28:01.480" starttime="20170727 19:28:01.477"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>10 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170727 19:28:01.483" level="INFO">${current_time_before_30} = 2017-07-27 19:27:51.479</msg>
<status status="PASS" endtime="20170727 19:28:01.484" starttime="20170727 19:28:01.481"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170727 19:28:01.487" level="INFO">${current_time_after_30} = 2017-07-27 19:29:06.479</msg>
<status status="PASS" endtime="20170727 19:28:01.487" starttime="20170727 19:28:01.485"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170727 19:28:01.492" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='1000000' and update_time between' 2017-07-27 19:27:51.479' and '2017-07-27 19:29:06.479' </msg>
<msg timestamp="20170727 19:28:01.505" level="INFO">${updatetime} = ((88889239, '32102151361501148363', 1000000, 6131, 1, '32102151361500284867', '20170727192901CYJ051129', Decimal('2.00'), 1, 13, 2, 0, datetime.datetime(2017, 7, 27, 19, 29, 4), datetime.datetime(2017...</msg>
<status status="PASS" endtime="20170727 19:28:01.505" starttime="20170727 19:28:01.489"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170727 19:28:01.508" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170727 19:28:01.509" starttime="20170727 19:28:01.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170727 19:28:01.513" level="INFO">ajb_account_transaction表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170727 19:28:01.513" starttime="20170727 19:28:01.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170727 19:28:01.517" level="INFO">${current_time_before_30} = 2017-07-27 19:27:51.479</msg>
<status status="PASS" endtime="20170727 19:28:01.518" starttime="20170727 19:28:01.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170727 19:28:01.520" level="INFO">${current_time_after_30} = 2017-07-27 19:29:06.479</msg>
<status status="PASS" endtime="20170727 19:28:01.521" starttime="20170727 19:28:01.519"></status>
</kw>
<status status="PASS" endtime="20170727 19:28:01.523" starttime="20170727 19:28:01.446"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170727 19:28:01.525" level="INFO">Executing : Query  |  select * from ajb_account_transaction where account_id ='6131' and update_time between' 2017-07-27 19:27:51.479' and '2017-07-27 19:29:06.479' </msg>
<msg timestamp="20170727 19:28:01.540" level="INFO">${user_id} = ((88889239, '32102151361501148363', 1000000, 6131, 1, '32102151361500284867', '20170727192901CYJ051129', Decimal('2.00'), 1, 13, 2, 0, datetime.datetime(2017, 7, 27, 19, 29, 4), datetime.datetime(2017...</msg>
<status status="PASS" endtime="20170727 19:28:01.541" starttime="20170727 19:28:01.524"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170727 19:28:01.543" level="INFO">Length is 20</msg>
<msg timestamp="20170727 19:28:01.545" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170727 19:28:01.546" starttime="20170727 19:28:01.542"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170727 19:28:01.548" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 19:28:01.549" starttime="20170727 19:28:01.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170727 19:28:01.552" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170727 19:28:01.552" starttime="20170727 19:28:01.551"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:01.555" starttime="20170727 19:28:01.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170727 19:28:01.558" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170727 19:28:01.559" starttime="20170727 19:28:01.557"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170727 19:28:01.561" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 19:28:01.562" starttime="20170727 19:28:01.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no的值正确</arg>
</arguments>
<msg timestamp="20170727 19:28:01.564" level="INFO">channel_no的值正确</msg>
<status status="PASS" endtime="20170727 19:28:01.564" starttime="20170727 19:28:01.563"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${args11}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${orderNum}</arg>
</arguments>
<assign>
<var>${bill_order_num}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:01.570" starttime="20170727 19:28:01.568"></status>
</kw>
<msg timestamp="20170727 19:28:01.571" level="INFO">${bill_order_num} = 32102151361500284867</msg>
<status status="PASS" endtime="20170727 19:28:01.572" starttime="20170727 19:28:01.566"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>${bill_order_num}</arg>
</arguments>
<msg timestamp="20170727 19:28:01.576" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 19:28:01.577" starttime="20170727 19:28:01.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170727 19:28:01.580" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170727 19:28:01.580" starttime="20170727 19:28:01.578"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>13</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:01.588" starttime="20170727 19:28:01.586"></status>
</kw>
<msg timestamp="20170727 19:28:01.589" level="INFO">${event_code} = 13</msg>
<status status="PASS" endtime="20170727 19:28:01.589" starttime="20170727 19:28:01.583"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170727 19:28:01.594" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170727 19:28:01.595" starttime="20170727 19:28:01.591"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:01.600" starttime="20170727 19:28:01.599"></status>
</kw>
<msg timestamp="20170727 19:28:01.602" level="INFO">${event_code_after} = 13</msg>
<status status="PASS" endtime="20170727 19:28:01.603" starttime="20170727 19:28:01.597"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170727 19:28:01.605" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170727 19:28:01.606" starttime="20170727 19:28:01.604"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:01.612" starttime="20170727 19:28:01.610"></status>
</kw>
<msg timestamp="20170727 19:28:01.613" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170727 19:28:01.614" starttime="20170727 19:28:01.608"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:01.620" starttime="20170727 19:28:01.618"></status>
</kw>
<msg timestamp="20170727 19:28:01.622" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170727 19:28:01.623" starttime="20170727 19:28:01.615"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170727 19:28:01.626" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170727 19:28:01.627" starttime="20170727 19:28:01.624"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:01.633" starttime="20170727 19:28:01.631"></status>
</kw>
<msg timestamp="20170727 19:28:01.634" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170727 19:28:01.635" starttime="20170727 19:28:01.629"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${total_amount_before}-${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:01.642" starttime="20170727 19:28:01.640"></status>
</kw>
<msg timestamp="20170727 19:28:01.644" level="INFO">${total_amount} = 45157.0</msg>
<status status="PASS" endtime="20170727 19:28:01.644" starttime="20170727 19:28:01.637"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:01.652" starttime="20170727 19:28:01.650"></status>
</kw>
<msg timestamp="20170727 19:28:01.653" level="INFO">${balance_amount} = 172450.00</msg>
<status status="PASS" endtime="20170727 19:28:01.654" starttime="20170727 19:28:01.647"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:01.661" starttime="20170727 19:28:01.659"></status>
</kw>
<msg timestamp="20170727 19:28:01.662" level="INFO">${frozen_amount} = 72705.0</msg>
<status status="PASS" endtime="20170727 19:28:01.662" starttime="20170727 19:28:01.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170727 19:28:01.666" level="INFO">${event_code} = 13</msg>
<status status="PASS" endtime="20170727 19:28:01.667" starttime="20170727 19:28:01.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170727 19:28:01.669" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170727 19:28:01.670" starttime="20170727 19:28:01.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170727 19:28:01.673" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170727 19:28:01.674" starttime="20170727 19:28:01.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170727 19:28:01.677" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170727 19:28:01.678" starttime="20170727 19:28:01.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170727 19:28:01.681" level="INFO">${total_amount} = 45157.0</msg>
<status status="PASS" endtime="20170727 19:28:01.682" starttime="20170727 19:28:01.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170727 19:28:01.685" level="INFO">${balance_amount} = 172450.00</msg>
<status status="PASS" endtime="20170727 19:28:01.686" starttime="20170727 19:28:01.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170727 19:28:01.689" level="INFO">${frozen_amount} = 72705.0</msg>
<status status="PASS" endtime="20170727 19:28:01.691" starttime="20170727 19:28:01.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170727 19:28:01.694" level="INFO">${event_code_after} = 13</msg>
<status status="PASS" endtime="20170727 19:28:01.694" starttime="20170727 19:28:01.692"></status>
</kw>
<status status="PASS" endtime="20170727 19:28:01.695" starttime="20170727 19:28:01.581"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170727 19:28:01.699" level="INFO">${pay_no_after} = 20170727192901CYJ051129</msg>
<status status="PASS" endtime="20170727 19:28:01.701" starttime="20170727 19:28:01.696"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170727 19:28:01.704" level="INFO">Length is 23</msg>
<msg timestamp="20170727 19:28:01.705" level="INFO">${pay_no_after_length} = 23</msg>
<status status="PASS" endtime="20170727 19:28:01.706" starttime="20170727 19:28:01.702"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170727 19:28:01.708" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 19:28:01.709" starttime="20170727 19:28:01.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170727 19:28:01.711" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170727 19:28:01.712" starttime="20170727 19:28:01.710"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${amount}</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:01.715" starttime="20170727 19:28:01.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170727 19:28:01.717" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170727 19:28:01.718" starttime="20170727 19:28:01.716"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170727 19:28:01.722" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 19:28:01.723" starttime="20170727 19:28:01.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170727 19:28:01.725" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170727 19:28:01.727" starttime="20170727 19:28:01.724"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][9]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170727 19:28:01.731" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 19:28:01.732" starttime="20170727 19:28:01.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170727 19:28:01.735" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170727 19:28:01.736" starttime="20170727 19:28:01.733"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170727 19:28:01.738" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 19:28:01.739" starttime="20170727 19:28:01.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170727 19:28:01.741" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170727 19:28:01.742" starttime="20170727 19:28:01.740"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170727 19:28:01.746" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 19:28:01.747" starttime="20170727 19:28:01.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170727 19:28:01.749" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170727 19:28:01.749" starttime="20170727 19:28:01.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170727 19:28:01.752" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170727 19:28:01.752" starttime="20170727 19:28:01.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170727 19:28:01.755" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170727 19:28:01.756" starttime="20170727 19:28:01.754"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170727 19:28:01.761" level="INFO">${user_id[0][0]_transaction} = 88889239</msg>
<status status="PASS" endtime="20170727 19:28:01.762" starttime="20170727 19:28:01.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170727 19:28:01.765" level="INFO">${user_id[0][0]_transaction} = 88889239</msg>
<status status="PASS" endtime="20170727 19:28:01.766" starttime="20170727 19:28:01.763"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id[0][0]}'</arg>
</arguments>
<assign>
<var>${user_id_unilateral_delete1}</var>
</assign>
<msg timestamp="20170727 19:28:01.769" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88889239' </msg>
<msg timestamp="20170727 19:28:01.873" level="INFO">${user_id_unilateral_delete1} = None</msg>
<status status="PASS" endtime="20170727 19:28:01.874" starttime="20170727 19:28:01.767"></status>
</kw>
<status status="PASS" endtime="20170727 19:28:01.875" starttime="20170727 19:28:01.409"></status>
</kw>
<kw name="表account_amount的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_amount</arg>
</arguments>
<msg timestamp="20170727 19:28:01.879" level="INFO">现在开始校验表account_amount</msg>
<status status="PASS" endtime="20170727 19:28:01.879" starttime="20170727 19:28:01.878"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170727 19:28:01.885" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170727 19:28:01.904" starttime="20170727 19:28:01.883"></status>
</kw>
<status status="PASS" endtime="20170727 19:28:01.905" starttime="20170727 19:28:01.882"></status>
</kw>
<status status="PASS" endtime="20170727 19:28:01.906" starttime="20170727 19:28:01.880"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time1}</var>
</assign>
<msg timestamp="20170727 19:28:01.907" level="INFO">${current_time1} = 2017-07-27 19:28:01.907</msg>
<status status="PASS" endtime="20170727 19:28:01.907" starttime="20170727 19:28:01.906"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_before_30}</var>
</assign>
<msg timestamp="20170727 19:28:01.909" level="INFO">${current_time1_before_30} = 2017-07-27 19:27:01.907</msg>
<status status="PASS" endtime="20170727 19:28:01.909" starttime="20170727 19:28:01.908"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_after_30}</var>
</assign>
<msg timestamp="20170727 19:28:01.911" level="INFO">${current_time1_after_30} = 2017-07-27 19:29:01.907</msg>
<status status="PASS" endtime="20170727 19:28:01.911" starttime="20170727 19:28:01.910"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170727 19:28:01.913" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6131' </msg>
<msg timestamp="20170727 19:28:01.929" level="INFO">${user_id} = ((12445, 6131, Decimal('45157.00'), Decimal('172450.00'), Decimal('72705.00'), datetime.datetime(2017, 7, 12, 20, 3, 46), datetime.datetime(2017, 7, 27, 19, 29, 4), 0),)</msg>
<status status="PASS" endtime="20170727 19:28:01.929" starttime="20170727 19:28:01.912"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>13</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:01.934" starttime="20170727 19:28:01.934"></status>
</kw>
<msg timestamp="20170727 19:28:01.935" level="INFO">${event_code} = 13</msg>
<status status="PASS" endtime="20170727 19:28:01.935" starttime="20170727 19:28:01.930"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170727 19:28:01.936" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170727 19:28:01.937" starttime="20170727 19:28:01.936"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:01.939" starttime="20170727 19:28:01.939"></status>
</kw>
<msg timestamp="20170727 19:28:01.940" level="INFO">${event_code_after} = 13</msg>
<status status="PASS" endtime="20170727 19:28:01.940" starttime="20170727 19:28:01.937"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170727 19:28:01.942" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170727 19:28:01.942" starttime="20170727 19:28:01.941"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:01.945" starttime="20170727 19:28:01.944"></status>
</kw>
<msg timestamp="20170727 19:28:01.945" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170727 19:28:01.946" starttime="20170727 19:28:01.943"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:01.949" starttime="20170727 19:28:01.948"></status>
</kw>
<msg timestamp="20170727 19:28:01.950" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170727 19:28:01.950" starttime="20170727 19:28:01.947"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170727 19:28:01.952" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170727 19:28:01.952" starttime="20170727 19:28:01.951"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:01.955" starttime="20170727 19:28:01.954"></status>
</kw>
<msg timestamp="20170727 19:28:01.955" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170727 19:28:01.955" starttime="20170727 19:28:01.952"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${total_amount_before}-${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:01.958" starttime="20170727 19:28:01.958"></status>
</kw>
<msg timestamp="20170727 19:28:01.959" level="INFO">${total_amount} = 45157.0</msg>
<status status="PASS" endtime="20170727 19:28:01.959" starttime="20170727 19:28:01.956"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:01.962" starttime="20170727 19:28:01.962"></status>
</kw>
<msg timestamp="20170727 19:28:01.963" level="INFO">${balance_amount} = 172450.00</msg>
<status status="PASS" endtime="20170727 19:28:01.963" starttime="20170727 19:28:01.960"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:01.967" starttime="20170727 19:28:01.966"></status>
</kw>
<msg timestamp="20170727 19:28:01.968" level="INFO">${frozen_amount} = 72705.0</msg>
<status status="PASS" endtime="20170727 19:28:01.968" starttime="20170727 19:28:01.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170727 19:28:01.970" level="INFO">${event_code} = 13</msg>
<status status="PASS" endtime="20170727 19:28:01.970" starttime="20170727 19:28:01.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170727 19:28:01.972" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170727 19:28:01.973" starttime="20170727 19:28:01.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170727 19:28:01.975" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170727 19:28:01.976" starttime="20170727 19:28:01.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170727 19:28:01.978" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170727 19:28:01.978" starttime="20170727 19:28:01.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170727 19:28:01.980" level="INFO">${total_amount} = 45157.0</msg>
<status status="PASS" endtime="20170727 19:28:01.980" starttime="20170727 19:28:01.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170727 19:28:01.981" level="INFO">${balance_amount} = 172450.00</msg>
<status status="PASS" endtime="20170727 19:28:01.982" starttime="20170727 19:28:01.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170727 19:28:01.983" level="INFO">${frozen_amount} = 72705.0</msg>
<status status="PASS" endtime="20170727 19:28:01.983" starttime="20170727 19:28:01.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170727 19:28:01.984" level="INFO">${event_code_after} = 13</msg>
<status status="PASS" endtime="20170727 19:28:01.985" starttime="20170727 19:28:01.984"></status>
</kw>
<status status="PASS" endtime="20170727 19:28:01.985" starttime="20170727 19:28:01.930"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170727 19:28:01.987" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170727 19:28:01.987" starttime="20170727 19:28:01.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170727 19:28:01.988" level="INFO">total_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170727 19:28:01.989" starttime="20170727 19:28:01.988"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount}</arg>
</arguments>
<status status="PASS" endtime="20170727 19:28:01.991" starttime="20170727 19:28:01.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170727 19:28:01.993" level="INFO">balance_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170727 19:28:01.994" starttime="20170727 19:28:01.992"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170727 19:28:01.995" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170727 19:28:01.995" starttime="20170727 19:28:01.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170727 19:28:01.996" level="INFO">frozen_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170727 19:28:01.997" starttime="20170727 19:28:01.996"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170727 19:28:01.998" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170727 19:28:01.998" starttime="20170727 19:28:01.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170727 19:28:02.000" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170727 19:28:02.000" starttime="20170727 19:28:01.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount校验成功！</arg>
</arguments>
<msg timestamp="20170727 19:28:02.001" level="INFO">表account_amount校验成功！</msg>
<status status="PASS" endtime="20170727 19:28:02.001" starttime="20170727 19:28:02.000"></status>
</kw>
<status status="PASS" endtime="20170727 19:28:02.002" starttime="20170727 19:28:01.876"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<msg timestamp="20170727 19:28:02.003" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=888888 </msg>
<status status="PASS" endtime="20170727 19:28:02.148" starttime="20170727 19:28:02.002"></status>
</kw>
<status status="PASS" endtime="20170727 19:28:02.151" critical="yes" starttime="20170727 19:28:00.489"></status>
</test>
<status status="PASS" endtime="20170727 19:28:02.158" starttime="20170727 19:28:00.465"></status>
</suite>
<status status="PASS" endtime="20170727 19:28:02.165" starttime="20170727 19:27:58.065"></status>
</suite>
<status status="PASS" endtime="20170727 19:28:02.170" starttime="20170727 19:27:57.860"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="3">Critical Tests</stat>
<stat fail="0" pass="3">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="账户中心" pass="3">账户中心</stat>
<stat fail="0" id="s1-s1" name="订单" pass="3">账户中心.订单</stat>
<stat fail="0" id="s1-s1-s1" name="订单支付退款（线上）" pass="2">账户中心.订单.订单支付退款（线上）</stat>
<stat fail="0" id="s1-s1-s2" name="订单确认支付（线上）" pass="1">账户中心.订单.订单确认支付（线上）</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
