<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170728 15:01:13.948" generator="Robot 3.0.2 (Python 2.7.8 on win32)">
<suite source="F:\logs and reports\账户中心" id="s1" name="账户中心">
<suite source="F:\logs and reports\账户中心\艾佳币" id="s1-s1" name="艾佳币">
<suite source="F:\logs and reports\账户中心\艾佳币\艾佳币充值.txt" id="s1-s1-s1" name="艾佳币充值">
<test id="s1-s1-s1-t1" name="输入已有的userId和正确amount参数">
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>100000</arg>
<arg>1</arg>
<arg>2</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 15:01:14.446" level="INFO">${args11} = 100000</msg>
<status status="PASS" endtime="20170728 15:01:14.447" starttime="20170728 15:01:14.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 15:01:14.450" level="INFO">${args22} = 1</msg>
<status status="PASS" endtime="20170728 15:01:14.450" starttime="20170728 15:01:14.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 15:01:14.451" level="INFO">${args33} = 2</msg>
<status status="PASS" endtime="20170728 15:01:14.452" starttime="20170728 15:01:14.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 15:01:14.454" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 15:01:14.454" starttime="20170728 15:01:14.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 15:01:14.456" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</msg>
<status status="PASS" endtime="20170728 15:01:14.457" starttime="20170728 15:01:14.455"></status>
</kw>
<status status="PASS" endtime="20170728 15:01:14.458" starttime="20170728 15:01:14.444"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 15:01:14.460" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</msg>
<status status="PASS" endtime="20170728 15:01:14.460" starttime="20170728 15:01:14.459"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 15:01:14.461" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 15:01:14.462" starttime="20170728 15:01:14.461"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 15:01:14.464" starttime="20170728 15:01:14.463"></status>
</kw>
<msg timestamp="20170728 15:01:14.465" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 15:01:14.465" starttime="20170728 15:01:14.462"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>user_id</arg>
</arguments>
<status status="PASS" endtime="20170728 15:01:14.467" starttime="20170728 15:01:14.466"></status>
</kw>
<msg timestamp="20170728 15:01:14.467" level="INFO">${args11_after} = user_id</msg>
<status status="PASS" endtime="20170728 15:01:14.468" starttime="20170728 15:01:14.465"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:01:14.491" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:01:14.519" starttime="20170728 15:01:14.470"></status>
</kw>
<status status="PASS" endtime="20170728 15:01:14.520" starttime="20170728 15:01:14.469"></status>
</kw>
<status status="PASS" endtime="20170728 15:01:14.520" starttime="20170728 15:01:14.468"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 15:01:14.523" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and channel_no='1' </msg>
<msg timestamp="20170728 15:01:14.542" level="INFO">${database1} = ((9100, '32102151361499943857', 100000, 6135, 1, '32102151361499943857', '20170714000118SSP038852', Decimal('2.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, ...</msg>
<status status="PASS" endtime="20170728 15:01:14.542" starttime="20170728 15:01:14.521"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 15:01:14.544" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 15:01:14.551" level="INFO">${database} = ((12449, 6135, Decimal('50421.00'), Decimal('49599.00'), Decimal('822.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 15, 1, 35), 0),)</msg>
<status status="PASS" endtime="20170728 15:01:14.551" starttime="20170728 15:01:14.543"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 15:01:14.553" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 15:01:14.553" starttime="20170728 15:01:14.552"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 15:01:14.554" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 15:01:14.555" starttime="20170728 15:01:14.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 15:01:14.556" level="INFO">获得account_id值为：6135</msg>
<status status="PASS" endtime="20170728 15:01:14.556" starttime="20170728 15:01:14.555"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 15:01:14.559" level="INFO">${total_amount_before} = 50421.00</msg>
<status status="PASS" endtime="20170728 15:01:14.559" starttime="20170728 15:01:14.557"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 15:01:14.560" level="INFO">${balance_amount_before} = 49599.00</msg>
<status status="PASS" endtime="20170728 15:01:14.561" starttime="20170728 15:01:14.560"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 15:01:14.562" level="INFO">${frozen_amount_before} = 822.00</msg>
<status status="PASS" endtime="20170728 15:01:14.562" starttime="20170728 15:01:14.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 15:01:14.563" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 15:01:14.564" starttime="20170728 15:01:14.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 15:01:14.565" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 15:01:14.565" starttime="20170728 15:01:14.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 15:01:14.566" level="INFO">${total_amount_before} = 50421.00</msg>
<status status="PASS" endtime="20170728 15:01:14.567" starttime="20170728 15:01:14.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 15:01:14.568" level="INFO">${balance_amount_before} = 49599.00</msg>
<status status="PASS" endtime="20170728 15:01:14.568" starttime="20170728 15:01:14.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 15:01:14.569" level="INFO">${frozen_amount_before} = 822.00</msg>
<status status="PASS" endtime="20170728 15:01:14.570" starttime="20170728 15:01:14.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 15:01:14.571" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 15:01:14.571" starttime="20170728 15:01:14.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 15:01:14.572" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 15:01:14.573" starttime="20170728 15:01:14.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 15:01:14.574" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</msg>
<status status="PASS" endtime="20170728 15:01:14.575" starttime="20170728 15:01:14.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170728 15:01:14.577" level="INFO">${database} = ((12449, 6135, Decimal('50421.00'), Decimal('49599.00'), Decimal('822.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 15, 1, 35), 0),)</msg>
<status status="PASS" endtime="20170728 15:01:14.578" starttime="20170728 15:01:14.576"></status>
</kw>
<status status="PASS" endtime="20170728 15:01:14.579" starttime="20170728 15:01:14.458"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Data" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:01:14.700" starttime="20170728 15:01:14.584"></status>
</kw>
<msg timestamp="20170728 15:01:14.701" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 15:01:14.702" starttime="20170728 15:01:14.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 15:01:14.703" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 15:01:14.704" starttime="20170728 15:01:14.702"></status>
</kw>
<status status="PASS" endtime="20170728 15:01:14.704" starttime="20170728 15:01:14.580"></status>
</kw>
<kw name="字段验证" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 15:01:14.706" level="INFO">200</msg>
<status status="PASS" endtime="20170728 15:01:14.706" starttime="20170728 15:01:14.705"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 15:01:14.708" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:01:14.708" starttime="20170728 15:01:14.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 15:01:14.709" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 15:01:14.709" starttime="20170728 15:01:14.708"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 15:01:14.710" level="INFO">To JSON using : content={"data":{"orderNum":"32102151361501207563"},"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 15:01:14.711" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 15:01:14.711" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': {u'orderNum': u'32102151361501207563'}, u'success': True}</msg>
<status status="PASS" endtime="20170728 15:01:14.711" starttime="20170728 15:01:14.710"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 15:01:14.712" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:01:14.713" starttime="20170728 15:01:14.712"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 15:01:14.714" starttime="20170728 15:01:14.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 15:01:14.716" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 15:01:14.716" starttime="20170728 15:01:14.715"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<assign>
<var>@{Link1}</var>
</assign>
<msg timestamp="20170728 15:01:14.718" level="INFO">@{Link1} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 15:01:14.718" starttime="20170728 15:01:14.717"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>"${value}" in @{Link1}</arg>
<arg>Get From Dictionary</arg>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${orderNum}</var>
</assign>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<status status="PASS" endtime="20170728 15:01:14.722" starttime="20170728 15:01:14.721"></status>
</kw>
<msg timestamp="20170728 15:01:14.722" level="INFO">${orderNum} = 32102151361501207563</msg>
<status status="PASS" endtime="20170728 15:01:14.722" starttime="20170728 15:01:14.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<msg timestamp="20170728 15:01:14.724" level="INFO">${orderNum} = 32102151361501207563</msg>
<status status="PASS" endtime="20170728 15:01:14.724" starttime="20170728 15:01:14.723"></status>
</kw>
<status status="PASS" endtime="20170728 15:01:14.724" starttime="20170728 15:01:14.705"></status>
</kw>
<kw name="表account_unilateral_bill的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_unilateral_bill</arg>
</arguments>
<msg timestamp="20170728 15:01:14.726" level="INFO">现在开始校验表account_unilateral_bill</msg>
<status status="PASS" endtime="20170728 15:01:14.726" starttime="20170728 15:01:14.726"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:01:14.729" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:01:14.737" starttime="20170728 15:01:14.728"></status>
</kw>
<status status="PASS" endtime="20170728 15:01:14.738" starttime="20170728 15:01:14.727"></status>
</kw>
<status status="PASS" endtime="20170728 15:01:14.738" starttime="20170728 15:01:14.727"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>account_unilateral_bill</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:01:14.742" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:01:14.759" starttime="20170728 15:01:14.741"></status>
</kw>
<status status="PASS" endtime="20170728 15:01:14.760" starttime="20170728 15:01:14.740"></status>
</kw>
<status status="PASS" endtime="20170728 15:01:14.761" starttime="20170728 15:01:14.740"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 15:01:14.764" level="INFO">${current_time} = 2017-07-28 15:01:14.763</msg>
<status status="PASS" endtime="20170728 15:01:14.764" starttime="20170728 15:01:14.763"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>10 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 15:01:14.770" level="INFO">${current_time_before_30} = 2017-07-28 15:01:04.763</msg>
<status status="PASS" endtime="20170728 15:01:14.771" starttime="20170728 15:01:14.765"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 15:01:14.774" level="INFO">${current_time_after_30} = 2017-07-28 15:02:19.763</msg>
<status status="PASS" endtime="20170728 15:01:14.774" starttime="20170728 15:01:14.772"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 15:01:14.776" level="INFO">Executing : Query  |  select * from account_unilateral_bill where user_id='100000' and update_time between' 2017-07-28 15:01:04.763' and '2017-07-28 15:02:19.763' </msg>
<msg timestamp="20170728 15:01:14.786" level="INFO">${updatetime} = ()</msg>
<status status="PASS" endtime="20170728 15:01:14.786" starttime="20170728 15:01:14.775"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 15:01:14.787" level="INFO">Length is 0</msg>
<msg timestamp="20170728 15:01:14.788" level="FAIL">TypeError: not enough arguments for format string</msg>
<status status="FAIL" endtime="20170728 15:01:14.788" starttime="20170728 15:01:14.787"></status>
</kw>
<status status="FAIL" endtime="20170728 15:01:14.789" starttime="20170728 15:01:14.739"></status>
</kw>
<status status="FAIL" endtime="20170728 15:01:14.789" starttime="20170728 15:01:14.725"></status>
</kw>
<status status="FAIL" endtime="20170728 15:01:14.790" critical="yes" starttime="20170728 15:01:14.442">TypeError: not enough arguments for format string</status>
</test>
<status status="FAIL" endtime="20170728 15:01:14.791" starttime="20170728 15:01:14.163"></status>
</suite>
<status status="FAIL" endtime="20170728 15:01:14.794" starttime="20170728 15:01:14.160"></status>
</suite>
<status status="FAIL" endtime="20170728 15:01:14.798" starttime="20170728 15:01:13.976"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="0">Critical Tests</stat>
<stat fail="1" pass="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="1" id="s1" name="账户中心" pass="0">账户中心</stat>
<stat fail="1" id="s1-s1" name="艾佳币" pass="0">账户中心.艾佳币</stat>
<stat fail="1" id="s1-s1-s1" name="艾佳币充值" pass="0">账户中心.艾佳币.艾佳币充值</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20170728 15:01:14.439" level="ERROR">Error in file 'F:\logs and reports\账户中心\艾佳币\艾佳币充值.txt': Resource file '艾佳币需要的操作.txt' does not exist.</msg>
</errors>
</robot>
