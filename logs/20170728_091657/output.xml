<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170728 09:17:17.153" generator="Robot 3.0.2 (Python 2.7.8 on win32)">
<suite source="F:\logs and reports\账户中心" id="s1" name="账户中心">
<suite source="F:\logs and reports\账户中心\艾佳币" id="s1-s1" name="艾佳币">
<suite source="F:\logs and reports\账户中心\艾佳币\艾佳币回收冻结.txt" id="s1-s1-s1" name="艾佳币回收冻结">
<test id="s1-s1-s1-t1" name="输入已有的userId和正确amount参数">
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>1000000</arg>
<arg>200</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 09:17:17.672" level="INFO">${args11} = 1000000</msg>
<status status="PASS" endtime="20170728 09:17:17.673" starttime="20170728 09:17:17.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 09:17:17.675" level="INFO">${args22} = 200</msg>
<status status="PASS" endtime="20170728 09:17:17.675" starttime="20170728 09:17:17.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 09:17:17.677" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170728 09:17:17.677" starttime="20170728 09:17:17.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 09:17:17.679" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 09:17:17.679" starttime="20170728 09:17:17.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 09:17:17.680" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</msg>
<status status="PASS" endtime="20170728 09:17:17.681" starttime="20170728 09:17:17.680"></status>
</kw>
<status status="PASS" endtime="20170728 09:17:17.681" starttime="20170728 09:17:17.669"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 09:17:17.706" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 09:17:17.720" starttime="20170728 09:17:17.683"></status>
</kw>
<status status="PASS" endtime="20170728 09:17:17.721" starttime="20170728 09:17:17.682"></status>
</kw>
<status status="PASS" endtime="20170728 09:17:17.722" starttime="20170728 09:17:17.682"></status>
</kw>
<kw name="已有的用户判断" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 09:17:17.725" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 09:17:17.732" starttime="20170728 09:17:17.724"></status>
</kw>
<status status="PASS" endtime="20170728 09:17:17.733" starttime="20170728 09:17:17.724"></status>
</kw>
<status status="PASS" endtime="20170728 09:17:17.734" starttime="20170728 09:17:17.723"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id=${args11}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170728 09:17:17.736" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id=1000000 </msg>
<msg timestamp="20170728 09:17:17.745" level="INFO">${check} = ((6086, '32102151361499849639', 1000000, 6131, 1, 2, 0, datetime.datetime(2017, 7, 12, 20, 3, 46), datetime.datetime(2017, 7, 12, 20, 3, 46)), (10212, '32102151361500285171', 1000000, 6161, 2, 2, 0, d...</msg>
<status status="PASS" endtime="20170728 09:17:17.745" starttime="20170728 09:17:17.734"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170728 09:17:17.747" level="INFO">Length is 3</msg>
<msg timestamp="20170728 09:17:17.748" level="INFO">${check_length} = 3</msg>
<status status="PASS" endtime="20170728 09:17:17.748" starttime="20170728 09:17:17.746"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} == 0</arg>
<arg>execute sql string</arg>
<arg>into ajb_account_open_record(id,business_no,user_id,account_id,channel_no,status,del_flag,add_time,update_time) values("6086","32102151361499849639","1000000","6131","1","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>该用户已经存在啦</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>该用户已经存在啦</arg>
</arguments>
<msg timestamp="20170728 09:17:17.751" level="INFO">该用户已经存在啦</msg>
<status status="PASS" endtime="20170728 09:17:17.751" starttime="20170728 09:17:17.750"></status>
</kw>
<status status="PASS" endtime="20170728 09:17:17.752" starttime="20170728 09:17:17.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>已经有用户已经判断成功啦</arg>
<arg>into ajb_account_open_record(id,business_no,user_id,account_id,channel_no,status,del_flag,add_time,update_time) values("6086","32102151361499849639","${args11}","6131","1","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170728 09:17:17.753" level="FAIL">Invalid log level ''.</msg>
<status status="FAIL" endtime="20170728 09:17:17.754" starttime="20170728 09:17:17.752"></status>
</kw>
<status status="FAIL" endtime="20170728 09:17:17.756" starttime="20170728 09:17:17.722"></status>
</kw>
<status status="FAIL" endtime="20170728 09:17:17.757" critical="yes" starttime="20170728 09:17:17.667">Invalid log level ''.</status>
</test>
<test id="s1-s1-s1-t2" name="输入已有的user_id和amount为0的参数">
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>1000000</arg>
<arg>0</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 09:17:17.763" level="INFO">${args11} = 1000000</msg>
<status status="PASS" endtime="20170728 09:17:17.764" starttime="20170728 09:17:17.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 09:17:17.766" level="INFO">${args22} = 0</msg>
<status status="PASS" endtime="20170728 09:17:17.767" starttime="20170728 09:17:17.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 09:17:17.768" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170728 09:17:17.769" starttime="20170728 09:17:17.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 09:17:17.770" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 09:17:17.770" starttime="20170728 09:17:17.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 09:17:17.772" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</msg>
<status status="PASS" endtime="20170728 09:17:17.772" starttime="20170728 09:17:17.771"></status>
</kw>
<status status="PASS" endtime="20170728 09:17:17.773" starttime="20170728 09:17:17.761"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 09:17:17.776" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 09:17:17.796" starttime="20170728 09:17:17.775"></status>
</kw>
<status status="PASS" endtime="20170728 09:17:17.797" starttime="20170728 09:17:17.774"></status>
</kw>
<status status="PASS" endtime="20170728 09:17:17.798" starttime="20170728 09:17:17.773"></status>
</kw>
<kw name="已有的用户判断" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 09:17:17.802" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 09:17:17.815" starttime="20170728 09:17:17.801"></status>
</kw>
<status status="PASS" endtime="20170728 09:17:17.816" starttime="20170728 09:17:17.800"></status>
</kw>
<status status="PASS" endtime="20170728 09:17:17.817" starttime="20170728 09:17:17.799"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id=${args11}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170728 09:17:17.818" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id=1000000 </msg>
<msg timestamp="20170728 09:17:17.868" level="INFO">${check} = ((6086, '32102151361499849639', 1000000, 6131, 1, 2, 0, datetime.datetime(2017, 7, 12, 20, 3, 46), datetime.datetime(2017, 7, 12, 20, 3, 46)), (10212, '32102151361500285171', 1000000, 6161, 2, 2, 0, d...</msg>
<status status="PASS" endtime="20170728 09:17:17.869" starttime="20170728 09:17:17.817"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170728 09:17:17.870" level="INFO">Length is 3</msg>
<msg timestamp="20170728 09:17:17.871" level="INFO">${check_length} = 3</msg>
<status status="PASS" endtime="20170728 09:17:17.871" starttime="20170728 09:17:17.869"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} == 0</arg>
<arg>execute sql string</arg>
<arg>into ajb_account_open_record(id,business_no,user_id,account_id,channel_no,status,del_flag,add_time,update_time) values("6086","32102151361499849639","1000000","6131","1","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>该用户已经存在啦</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>该用户已经存在啦</arg>
</arguments>
<msg timestamp="20170728 09:17:17.874" level="INFO">该用户已经存在啦</msg>
<status status="PASS" endtime="20170728 09:17:17.875" starttime="20170728 09:17:17.873"></status>
</kw>
<status status="PASS" endtime="20170728 09:17:17.875" starttime="20170728 09:17:17.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>已经有用户已经判断成功啦</arg>
<arg>into ajb_account_open_record(id,business_no,user_id,account_id,channel_no,status,del_flag,add_time,update_time) values("6086","32102151361499849639","${args11}","6131","1","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170728 09:17:17.877" level="FAIL">Invalid log level ''.</msg>
<status status="FAIL" endtime="20170728 09:17:17.878" starttime="20170728 09:17:17.876"></status>
</kw>
<status status="FAIL" endtime="20170728 09:17:17.878" starttime="20170728 09:17:17.798"></status>
</kw>
<status status="FAIL" endtime="20170728 09:17:17.879" critical="yes" starttime="20170728 09:17:17.758">Invalid log level ''.</status>
</test>
<test id="s1-s1-s1-t3" name="输入木有的user_id和正确的amount参数">
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>123456784</arg>
<arg>1</arg>
<arg>2</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 09:17:17.885" level="INFO">${args11} = 123456784</msg>
<status status="PASS" endtime="20170728 09:17:17.885" starttime="20170728 09:17:17.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 09:17:17.887" level="INFO">${args22} = 1</msg>
<status status="PASS" endtime="20170728 09:17:17.887" starttime="20170728 09:17:17.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 09:17:17.889" level="INFO">${args33} = 2</msg>
<status status="PASS" endtime="20170728 09:17:17.889" starttime="20170728 09:17:17.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 09:17:17.891" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 09:17:17.892" starttime="20170728 09:17:17.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 09:17:17.894" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</msg>
<status status="PASS" endtime="20170728 09:17:17.895" starttime="20170728 09:17:17.892"></status>
</kw>
<status status="PASS" endtime="20170728 09:17:17.895" starttime="20170728 09:17:17.883"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 09:17:17.898" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 09:17:17.906" starttime="20170728 09:17:17.898"></status>
</kw>
<status status="PASS" endtime="20170728 09:17:17.907" starttime="20170728 09:17:17.897"></status>
</kw>
<status status="PASS" endtime="20170728 09:17:17.907" starttime="20170728 09:17:17.896"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id ='${args11}'</arg>
</arguments>
<assign>
<var>${no_user_id}</var>
</assign>
<msg timestamp="20170728 09:17:17.911" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id ='123456784' </msg>
<msg timestamp="20170728 09:17:17.924" level="INFO">${no_user_id} = ()</msg>
<status status="PASS" endtime="20170728 09:17:17.924" starttime="20170728 09:17:17.910"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${no_user_id}</arg>
</arguments>
<msg timestamp="20170728 09:17:17.926" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170728 09:17:17.926" starttime="20170728 09:17:17.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>此user_id不存在</arg>
</arguments>
<msg timestamp="20170728 09:17:17.928" level="INFO">此user_id不存在</msg>
<status status="PASS" endtime="20170728 09:17:17.928" starttime="20170728 09:17:17.927"></status>
</kw>
<kw name="Data" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data_no_user_id}</var>
</assign>
<msg timestamp="20170728 09:17:17.950" level="INFO">${data_no_user_id} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 09:17:17.951" starttime="20170728 09:17:17.929"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data_no_user_id.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 09:17:17.952" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 09:17:17.953" starttime="20170728 09:17:17.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 09:17:17.954" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 09:17:17.954" starttime="20170728 09:17:17.954"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data_no_user_id.text}</arg>
</arguments>
<assign>
<var>${toJson1}</var>
</assign>
<msg timestamp="20170728 09:17:17.956" level="INFO">To JSON using : content={"data":{"orderNum":null},"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 09:17:17.956" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 09:17:17.957" level="INFO">${toJson1} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': {u'orderNum': None}, u'success': True}</msg>
<status status="PASS" endtime="20170728 09:17:17.957" starttime="20170728 09:17:17.955"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson1['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 09:17:17.959" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 09:17:17.960" starttime="20170728 09:17:17.958"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson1['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 09:17:17.961" starttime="20170728 09:17:17.960"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${toJson1['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${no_user_id_orderNum}</var>
</assign>
<msg timestamp="20170728 09:17:17.963" level="INFO">${no_user_id_orderNum} = None</msg>
<status status="PASS" endtime="20170728 09:17:17.963" starttime="20170728 09:17:17.962"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${no_user_id_orderNum}</arg>
</arguments>
<assign>
<var>${no_user_id_orderNum_length}</var>
</assign>
<msg timestamp="20170728 09:17:17.965" level="INFO">${no_user_id_orderNum_length} = None</msg>
<status status="PASS" endtime="20170728 09:17:17.965" starttime="20170728 09:17:17.964"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${no_user_id_orderNum_length}</arg>
<arg>None</arg>
</arguments>
<status status="PASS" endtime="20170728 09:17:17.966" starttime="20170728 09:17:17.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 09:17:17.968" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 09:17:17.969" starttime="20170728 09:17:17.967"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id ='${args11}'</arg>
</arguments>
<assign>
<var>${no_user_id_after}</var>
</assign>
<msg timestamp="20170728 09:17:17.970" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id ='123456784' </msg>
<msg timestamp="20170728 09:17:17.979" level="INFO">${no_user_id_after} = ()</msg>
<status status="PASS" endtime="20170728 09:17:17.980" starttime="20170728 09:17:17.969"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${no_user_id_after}</arg>
</arguments>
<msg timestamp="20170728 09:17:17.981" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170728 09:17:17.981" starttime="20170728 09:17:17.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>此用户不存在，调用接口也不能创建账户</arg>
</arguments>
<msg timestamp="20170728 09:17:17.983" level="INFO">此用户不存在，调用接口也不能创建账户</msg>
<status status="PASS" endtime="20170728 09:17:17.983" starttime="20170728 09:17:17.982"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time_no}</var>
</assign>
<msg timestamp="20170728 09:17:17.984" level="INFO">${current_time_no} = 2017-07-28 09:17:17.984</msg>
<status status="PASS" endtime="20170728 09:17:17.985" starttime="20170728 09:17:17.984"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_no}</arg>
<arg>15 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_301}</var>
</assign>
<msg timestamp="20170728 09:17:17.992" level="INFO">${current_time_before_301} = 2017-07-28 09:17:02.984</msg>
<status status="PASS" endtime="20170728 09:17:17.993" starttime="20170728 09:17:17.985"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_no}</arg>
<arg>61 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_302}</var>
</assign>
<msg timestamp="20170728 09:17:17.995" level="INFO">${current_time_after_302} = 2017-07-28 09:18:18.984</msg>
<status status="PASS" endtime="20170728 09:17:17.995" starttime="20170728 09:17:17.994"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where user_id ='${args11}' and update_time between' ${current_time_before_301}' and '${current_time_after_302}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 09:17:17.997" level="INFO">Executing : Query  |  select * from account_unilateral_bill where user_id ='123456784' and update_time between' 2017-07-28 09:17:02.984' and '2017-07-28 09:18:18.984' </msg>
<msg timestamp="20170728 09:17:18.007" level="INFO">${user_id} = ()</msg>
<status status="PASS" endtime="20170728 09:17:18.008" starttime="20170728 09:17:17.996"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${user_id}</arg>
</arguments>
<msg timestamp="20170728 09:17:18.010" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170728 09:17:18.010" starttime="20170728 09:17:18.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill里是空的</arg>
</arguments>
<msg timestamp="20170728 09:17:18.012" level="INFO">表account_unilateral_bill里是空的</msg>
<status status="PASS" endtime="20170728 09:17:18.012" starttime="20170728 09:17:18.011"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time_nouser}</var>
</assign>
<msg timestamp="20170728 09:17:18.013" level="INFO">${current_time_nouser} = 2017-07-28 09:17:18.013</msg>
<status status="PASS" endtime="20170728 09:17:18.014" starttime="20170728 09:17:18.013"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_nouser}</arg>
<arg>15 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_3011}</var>
</assign>
<msg timestamp="20170728 09:17:18.016" level="INFO">${current_time_before_3011} = 2017-07-28 09:17:03.013</msg>
<status status="PASS" endtime="20170728 09:17:18.016" starttime="20170728 09:17:18.014"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_nouser}</arg>
<arg>61 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_3022}</var>
</assign>
<msg timestamp="20170728 09:17:18.018" level="INFO">${current_time_after_3022} = 2017-07-28 09:18:19.013</msg>
<status status="PASS" endtime="20170728 09:17:18.018" starttime="20170728 09:17:18.017"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where user_id ='${args11}' and update_time between' ${current_time_before_3011}' and '${current_time_after_3022}'</arg>
</arguments>
<assign>
<var>${user_id_no}</var>
</assign>
<msg timestamp="20170728 09:17:18.019" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id ='123456784' and update_time between' 2017-07-28 09:17:03.013' and '2017-07-28 09:18:19.013' </msg>
<msg timestamp="20170728 09:17:18.029" level="INFO">${user_id_no} = ()</msg>
<status status="PASS" endtime="20170728 09:17:18.029" starttime="20170728 09:17:18.019"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${user_id_no}</arg>
</arguments>
<msg timestamp="20170728 09:17:18.031" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170728 09:17:18.031" starttime="20170728 09:17:18.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>ajb_account_transaction里是空的</arg>
</arguments>
<msg timestamp="20170728 09:17:18.032" level="INFO">ajb_account_transaction里是空的</msg>
<status status="PASS" endtime="20170728 09:17:18.033" starttime="20170728 09:17:18.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>调用艾佳币回收冻结，没有user_id,也不能创建新的账号。</arg>
</arguments>
<msg timestamp="20170728 09:17:18.034" level="INFO">调用艾佳币回收冻结，没有user_id,也不能创建新的账号。</msg>
<status status="PASS" endtime="20170728 09:17:18.034" starttime="20170728 09:17:18.033"></status>
</kw>
<status status="PASS" endtime="20170728 09:17:18.035" critical="yes" starttime="20170728 09:17:17.880"></status>
</test>
<test id="s1-s1-s1-t4" name="输入已有的userId和amount为字符的时候">
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>1000000</arg>
<arg>str</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 09:17:18.045" level="INFO">${args11} = 1000000</msg>
<status status="PASS" endtime="20170728 09:17:18.046" starttime="20170728 09:17:18.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 09:17:18.048" level="INFO">${args22} = str</msg>
<status status="PASS" endtime="20170728 09:17:18.048" starttime="20170728 09:17:18.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 09:17:18.050" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170728 09:17:18.050" starttime="20170728 09:17:18.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 09:17:18.051" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 09:17:18.052" starttime="20170728 09:17:18.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 09:17:18.053" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</msg>
<status status="PASS" endtime="20170728 09:17:18.054" starttime="20170728 09:17:18.052"></status>
</kw>
<status status="PASS" endtime="20170728 09:17:18.054" starttime="20170728 09:17:18.042"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 09:17:18.057" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 09:17:18.066" starttime="20170728 09:17:18.056"></status>
</kw>
<status status="PASS" endtime="20170728 09:17:18.067" starttime="20170728 09:17:18.055"></status>
</kw>
<status status="PASS" endtime="20170728 09:17:18.068" starttime="20170728 09:17:18.055"></status>
</kw>
<kw name="已有的用户判断" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 09:17:18.071" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 09:17:18.083" starttime="20170728 09:17:18.071"></status>
</kw>
<status status="PASS" endtime="20170728 09:17:18.084" starttime="20170728 09:17:18.070"></status>
</kw>
<status status="PASS" endtime="20170728 09:17:18.085" starttime="20170728 09:17:18.069"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id=${args11}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170728 09:17:18.086" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id=1000000 </msg>
<msg timestamp="20170728 09:17:18.095" level="INFO">${check} = ((6086, '32102151361499849639', 1000000, 6131, 1, 2, 0, datetime.datetime(2017, 7, 12, 20, 3, 46), datetime.datetime(2017, 7, 12, 20, 3, 46)), (10212, '32102151361500285171', 1000000, 6161, 2, 2, 0, d...</msg>
<status status="PASS" endtime="20170728 09:17:18.095" starttime="20170728 09:17:18.085"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170728 09:17:18.097" level="INFO">Length is 3</msg>
<msg timestamp="20170728 09:17:18.097" level="INFO">${check_length} = 3</msg>
<status status="PASS" endtime="20170728 09:17:18.098" starttime="20170728 09:17:18.096"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} == 0</arg>
<arg>execute sql string</arg>
<arg>into ajb_account_open_record(id,business_no,user_id,account_id,channel_no,status,del_flag,add_time,update_time) values("6086","32102151361499849639","1000000","6131","1","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>该用户已经存在啦</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>该用户已经存在啦</arg>
</arguments>
<msg timestamp="20170728 09:17:18.100" level="INFO">该用户已经存在啦</msg>
<status status="PASS" endtime="20170728 09:17:18.100" starttime="20170728 09:17:18.099"></status>
</kw>
<status status="PASS" endtime="20170728 09:17:18.100" starttime="20170728 09:17:18.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>已经有用户已经判断成功啦</arg>
<arg>into ajb_account_open_record(id,business_no,user_id,account_id,channel_no,status,del_flag,add_time,update_time) values("6086","32102151361499849639","${args11}","6131","1","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170728 09:17:18.102" level="FAIL">Invalid log level ''.</msg>
<status status="FAIL" endtime="20170728 09:17:18.102" starttime="20170728 09:17:18.101"></status>
</kw>
<status status="FAIL" endtime="20170728 09:17:18.103" starttime="20170728 09:17:18.068"></status>
</kw>
<status status="FAIL" endtime="20170728 09:17:18.103" critical="yes" starttime="20170728 09:17:18.037">Invalid log level ''.</status>
</test>
<status status="FAIL" endtime="20170728 09:17:18.105" starttime="20170728 09:17:17.395"></status>
</suite>
<status status="FAIL" endtime="20170728 09:17:18.113" starttime="20170728 09:17:17.390"></status>
</suite>
<status status="FAIL" endtime="20170728 09:17:18.116" starttime="20170728 09:17:17.183"></status>
</suite>
<statistics>
<total>
<stat fail="3" pass="1">Critical Tests</stat>
<stat fail="3" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="3" id="s1" name="账户中心" pass="1">账户中心</stat>
<stat fail="3" id="s1-s1" name="艾佳币" pass="1">账户中心.艾佳币</stat>
<stat fail="3" id="s1-s1-s1" name="艾佳币回收冻结" pass="1">账户中心.艾佳币.艾佳币回收冻结</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
