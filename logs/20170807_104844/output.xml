<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170807 10:52:43.890" generator="Robot 3.0.2 (Python 2.7.8 on win32)">
<suite source="F:\logs and reports\账户中心" id="s1" name="账户中心">
<suite source="F:\logs and reports\账户中心\艾佳币" id="s1-s1" name="艾佳币">
<suite source="F:\logs and reports\账户中心\艾佳币\艾佳币回收冻结.txt" id="s1-s1-s1" name="艾佳币回收冻结">
<test id="s1-s1-s1-t1" name="拥有boss账户的用户，BOSS发起退款（未确认），冻结艾佳币当输入的amount为0时，接口返回失败，艾佳币数额不合法，数据不如库里">
<kw name="参数配置" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170807 10:52:44.469" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170807 10:52:44.484" starttime="20170807 10:52:44.443"></status>
</kw>
<status status="PASS" endtime="20170807 10:52:44.486" starttime="20170807 10:52:44.441"></status>
</kw>
<kw name="输入拥有不同类型账户的用户user_id" library="myResource">
<arguments>
<arg>10000</arg>
<arg>10000</arg>
<arg>123456781</arg>
<arg>http://192.168.1.31:10003</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 10:52:44.492" level="INFO">${boss_user_account_id} = 10000</msg>
<status status="PASS" endtime="20170807 10:52:44.493" starttime="20170807 10:52:44.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 10:52:44.496" level="INFO">${app_user_account_id} = 10000</msg>
<status status="PASS" endtime="20170807 10:52:44.497" starttime="20170807 10:52:44.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${no_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 10:52:44.500" level="INFO">${no_user_account_id} = 123456781</msg>
<status status="PASS" endtime="20170807 10:52:44.501" starttime="20170807 10:52:44.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${environment}</arg>
</arguments>
<msg timestamp="20170807 10:52:44.504" level="INFO">${environment} = http://192.168.1.31:10003</msg>
<status status="PASS" endtime="20170807 10:52:44.505" starttime="20170807 10:52:44.503"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${boss_user_account_id}' and channel_no=1</arg>
</arguments>
<assign>
<var>${boss_channel_no1}</var>
</assign>
<msg timestamp="20170807 10:52:44.509" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='10000' and channel_no=1 </msg>
<msg timestamp="20170807 10:52:44.518" level="INFO">${boss_channel_no1} = ((17757, '32102151361501753586', 10000, 100005, 1, 2, 0, datetime.datetime(2017, 8, 3, 16, 53, 36), datetime.datetime(2017, 8, 3, 16, 53, 36)),)</msg>
<status status="PASS" endtime="20170807 10:52:44.518" starttime="20170807 10:52:44.507"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${boss_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${boss_channel_no}</var>
</assign>
<msg timestamp="20170807 10:52:44.522" level="INFO">${boss_channel_no} = 100005</msg>
<status status="PASS" endtime="20170807 10:52:44.523" starttime="20170807 10:52:44.520"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${app_user_account_id}' and channel_no=2</arg>
</arguments>
<assign>
<var>${app_channel_no1}</var>
</assign>
<msg timestamp="20170807 10:52:44.526" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='10000' and channel_no=2 </msg>
<msg timestamp="20170807 10:52:44.534" level="INFO">${app_channel_no1} = ((17756, '32102151361501753580', 10000, 100004, 2, 2, 0, datetime.datetime(2017, 8, 3, 16, 53, 24), datetime.datetime(2017, 8, 3, 16, 53, 24)),)</msg>
<status status="PASS" endtime="20170807 10:52:44.535" starttime="20170807 10:52:44.525"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${app_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${app_channel_no}</var>
</assign>
<msg timestamp="20170807 10:52:44.538" level="INFO">${app_channel_no} = 100004</msg>
<status status="PASS" endtime="20170807 10:52:44.539" starttime="20170807 10:52:44.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_channel_no}</arg>
</arguments>
<msg timestamp="20170807 10:52:44.542" level="INFO">${boss_channel_no} = 100005</msg>
<status status="PASS" endtime="20170807 10:52:44.542" starttime="20170807 10:52:44.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_channel_no}</arg>
</arguments>
<msg timestamp="20170807 10:52:44.545" level="INFO">${app_channel_no} = 100004</msg>
<status status="PASS" endtime="20170807 10:52:44.546" starttime="20170807 10:52:44.544"></status>
</kw>
<status status="PASS" endtime="20170807 10:52:44.547" starttime="20170807 10:52:44.488"></status>
</kw>
<status status="PASS" endtime="20170807 10:52:44.548" starttime="20170807 10:52:44.438"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>${boss_user_account_id}</arg>
<arg>0</arg>
<arg>${environment}/ihome-api/settlement/ajbWithdrawFreeze</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170807 10:52:44.555" level="INFO">${args11} = 10000</msg>
<status status="PASS" endtime="20170807 10:52:44.556" starttime="20170807 10:52:44.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170807 10:52:44.559" level="INFO">${args22} = 0</msg>
<status status="PASS" endtime="20170807 10:52:44.560" starttime="20170807 10:52:44.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170807 10:52:44.563" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170807 10:52:44.565" starttime="20170807 10:52:44.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170807 10:52:44.569" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170807 10:52:44.571" starttime="20170807 10:52:44.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170807 10:52:44.573" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</msg>
<status status="PASS" endtime="20170807 10:52:44.574" starttime="20170807 10:52:44.572"></status>
</kw>
<status status="PASS" endtime="20170807 10:52:44.576" starttime="20170807 10:52:44.549"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170807 10:52:44.581" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</msg>
<status status="PASS" endtime="20170807 10:52:44.582" starttime="20170807 10:52:44.579"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170807 10:52:44.585" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170807 10:52:44.586" starttime="20170807 10:52:44.583"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170807 10:52:44.590" starttime="20170807 10:52:44.589"></status>
</kw>
<msg timestamp="20170807 10:52:44.592" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170807 10:52:44.592" starttime="20170807 10:52:44.587"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>user_id</arg>
</arguments>
<status status="PASS" endtime="20170807 10:52:44.597" starttime="20170807 10:52:44.596"></status>
</kw>
<msg timestamp="20170807 10:52:44.598" level="INFO">${args11_after} = user_id</msg>
<status status="PASS" endtime="20170807 10:52:44.598" starttime="20170807 10:52:44.594"></status>
</kw>
<kw name="参数配置" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170807 10:52:44.606" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170807 10:52:44.615" starttime="20170807 10:52:44.604"></status>
</kw>
<status status="PASS" endtime="20170807 10:52:44.617" starttime="20170807 10:52:44.602"></status>
</kw>
<kw name="输入拥有不同类型账户的用户user_id" library="myResource">
<arguments>
<arg>10000</arg>
<arg>10000</arg>
<arg>123456781</arg>
<arg>http://192.168.1.31:10003</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 10:52:44.622" level="INFO">${boss_user_account_id} = 10000</msg>
<status status="PASS" endtime="20170807 10:52:44.623" starttime="20170807 10:52:44.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 10:52:44.627" level="INFO">${app_user_account_id} = 10000</msg>
<status status="PASS" endtime="20170807 10:52:44.628" starttime="20170807 10:52:44.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${no_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 10:52:44.632" level="INFO">${no_user_account_id} = 123456781</msg>
<status status="PASS" endtime="20170807 10:52:44.634" starttime="20170807 10:52:44.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${environment}</arg>
</arguments>
<msg timestamp="20170807 10:52:44.637" level="INFO">${environment} = http://192.168.1.31:10003</msg>
<status status="PASS" endtime="20170807 10:52:44.638" starttime="20170807 10:52:44.636"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${boss_user_account_id}' and channel_no=1</arg>
</arguments>
<assign>
<var>${boss_channel_no1}</var>
</assign>
<msg timestamp="20170807 10:52:44.641" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='10000' and channel_no=1 </msg>
<msg timestamp="20170807 10:52:44.651" level="INFO">${boss_channel_no1} = ((17757, '32102151361501753586', 10000, 100005, 1, 2, 0, datetime.datetime(2017, 8, 3, 16, 53, 36), datetime.datetime(2017, 8, 3, 16, 53, 36)),)</msg>
<status status="PASS" endtime="20170807 10:52:44.652" starttime="20170807 10:52:44.640"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${boss_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${boss_channel_no}</var>
</assign>
<msg timestamp="20170807 10:52:44.655" level="INFO">${boss_channel_no} = 100005</msg>
<status status="PASS" endtime="20170807 10:52:44.656" starttime="20170807 10:52:44.653"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${app_user_account_id}' and channel_no=2</arg>
</arguments>
<assign>
<var>${app_channel_no1}</var>
</assign>
<msg timestamp="20170807 10:52:44.658" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='10000' and channel_no=2 </msg>
<msg timestamp="20170807 10:52:44.667" level="INFO">${app_channel_no1} = ((17756, '32102151361501753580', 10000, 100004, 2, 2, 0, datetime.datetime(2017, 8, 3, 16, 53, 24), datetime.datetime(2017, 8, 3, 16, 53, 24)),)</msg>
<status status="PASS" endtime="20170807 10:52:44.668" starttime="20170807 10:52:44.657"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${app_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${app_channel_no}</var>
</assign>
<msg timestamp="20170807 10:52:44.670" level="INFO">${app_channel_no} = 100004</msg>
<status status="PASS" endtime="20170807 10:52:44.671" starttime="20170807 10:52:44.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_channel_no}</arg>
</arguments>
<msg timestamp="20170807 10:52:44.674" level="INFO">${boss_channel_no} = 100005</msg>
<status status="PASS" endtime="20170807 10:52:44.674" starttime="20170807 10:52:44.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_channel_no}</arg>
</arguments>
<msg timestamp="20170807 10:52:44.676" level="INFO">${app_channel_no} = 100004</msg>
<status status="PASS" endtime="20170807 10:52:44.677" starttime="20170807 10:52:44.675"></status>
</kw>
<status status="PASS" endtime="20170807 10:52:44.677" starttime="20170807 10:52:44.619"></status>
</kw>
<status status="PASS" endtime="20170807 10:52:44.678" starttime="20170807 10:52:44.599"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170807 10:52:44.680" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='10000' and channel_no='1' </msg>
<msg timestamp="20170807 10:52:44.697" level="INFO">${database1} = ((10456, '32102151361501753587', 10000, 100005, 1, '32102151361501753587', '20170803165333JEM012476', Decimal('10.00'), 1, 7, 2, 0, datetime.datetime(2017, 8, 3, 16, 53, 36), datetime.datetime(2017, 8...</msg>
<status status="PASS" endtime="20170807 10:52:44.697" starttime="20170807 10:52:44.679"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170807 10:52:44.700" level="INFO">Executing : Query  |  select * from account_amount where account_id ='100005' </msg>
<msg timestamp="20170807 10:52:44.705" level="INFO">${database} = ((17827, 100005, Decimal('70.00'), Decimal('40.00'), Decimal('30.00'), datetime.datetime(2017, 8, 3, 16, 53, 36), datetime.datetime(2017, 8, 7, 10, 52, 2), 0),)</msg>
<status status="PASS" endtime="20170807 10:52:44.705" starttime="20170807 10:52:44.698"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170807 10:52:44.708" level="INFO">${user_id_real} = 10000</msg>
<status status="PASS" endtime="20170807 10:52:44.708" starttime="20170807 10:52:44.706"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170807 10:52:44.711" level="INFO">${account_id} = 100005</msg>
<status status="PASS" endtime="20170807 10:52:44.711" starttime="20170807 10:52:44.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170807 10:52:44.713" level="INFO">获得account_id值为：100005</msg>
<status status="PASS" endtime="20170807 10:52:44.713" starttime="20170807 10:52:44.712"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170807 10:52:44.715" level="INFO">${total_amount_before} = 70.00</msg>
<status status="PASS" endtime="20170807 10:52:44.716" starttime="20170807 10:52:44.714"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170807 10:52:44.719" level="INFO">${balance_amount_before} = 40.00</msg>
<status status="PASS" endtime="20170807 10:52:44.719" starttime="20170807 10:52:44.717"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170807 10:52:44.722" level="INFO">${frozen_amount_before} = 30.00</msg>
<status status="PASS" endtime="20170807 10:52:44.722" starttime="20170807 10:52:44.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170807 10:52:44.724" level="INFO">${account_id} = 100005</msg>
<status status="PASS" endtime="20170807 10:52:44.725" starttime="20170807 10:52:44.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170807 10:52:44.726" level="INFO">${user_id_real} = 10000</msg>
<status status="PASS" endtime="20170807 10:52:44.727" starttime="20170807 10:52:44.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170807 10:52:44.729" level="INFO">${total_amount_before} = 70.00</msg>
<status status="PASS" endtime="20170807 10:52:44.729" starttime="20170807 10:52:44.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170807 10:52:44.731" level="INFO">${balance_amount_before} = 40.00</msg>
<status status="PASS" endtime="20170807 10:52:44.732" starttime="20170807 10:52:44.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170807 10:52:44.733" level="INFO">${frozen_amount_before} = 30.00</msg>
<status status="PASS" endtime="20170807 10:52:44.734" starttime="20170807 10:52:44.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170807 10:52:44.737" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170807 10:52:44.738" starttime="20170807 10:52:44.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170807 10:52:44.740" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170807 10:52:44.740" starttime="20170807 10:52:44.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170807 10:52:44.742" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</msg>
<status status="PASS" endtime="20170807 10:52:44.743" starttime="20170807 10:52:44.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170807 10:52:44.745" level="INFO">${database} = ((17827, 100005, Decimal('70.00'), Decimal('40.00'), Decimal('30.00'), datetime.datetime(2017, 8, 3, 16, 53, 36), datetime.datetime(2017, 8, 7, 10, 52, 2), 0),)</msg>
<status status="PASS" endtime="20170807 10:52:44.746" starttime="20170807 10:52:44.744"></status>
</kw>
<status status="PASS" endtime="20170807 10:52:44.746" starttime="20170807 10:52:44.577"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Data" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170807 10:52:44.786" starttime="20170807 10:52:44.751"></status>
</kw>
<msg timestamp="20170807 10:52:44.787" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170807 10:52:44.787" starttime="20170807 10:52:44.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170807 10:52:44.790" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170807 10:52:44.791" starttime="20170807 10:52:44.789"></status>
</kw>
<status status="PASS" endtime="20170807 10:52:44.792" starttime="20170807 10:52:44.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170807 10:52:44.794" level="INFO">200</msg>
<status status="PASS" endtime="20170807 10:52:44.794" starttime="20170807 10:52:44.793"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170807 10:52:44.796" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 10:52:44.797" starttime="20170807 10:52:44.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170807 10:52:44.798" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170807 10:52:44.800" starttime="20170807 10:52:44.798"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170807 10:52:44.803" level="INFO">To JSON using : content={"data":null,"msg":"{\"amount\":\"艾佳币数额不合法\"}","code":-1,"success":false} </msg>
<msg timestamp="20170807 10:52:44.803" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170807 10:52:44.804" level="INFO">${toJson} = {u'msg': u'{"amount":"\u827e\u4f73\u5e01\u6570\u989d\u4e0d\u5408\u6cd5"}', u'code': -1, u'data': None, u'success': False}</msg>
<status status="PASS" endtime="20170807 10:52:44.805" starttime="20170807 10:52:44.801"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>False</arg>
</arguments>
<msg timestamp="20170807 10:52:44.807" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 10:52:44.807" starttime="20170807 10:52:44.806"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['data']}</arg>
<arg>None</arg>
</arguments>
<msg timestamp="20170807 10:52:44.809" level="INFO">Argument types are:
&lt;type 'NoneType'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 10:52:44.810" starttime="20170807 10:52:44.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170807 10:52:44.812" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170807 10:52:44.813" starttime="20170807 10:52:44.811"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
</arguments>
<assign>
<var>${toJson_after}</var>
</assign>
<msg timestamp="20170807 10:52:44.815" level="INFO">${toJson_after} = {"amount":"艾佳币数额不合法"}</msg>
<status status="PASS" endtime="20170807 10:52:44.816" starttime="20170807 10:52:44.814"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${toJson_after}</arg>
</arguments>
<assign>
<var>${toJson_convert}</var>
</assign>
<msg timestamp="20170807 10:52:44.818" level="INFO">To JSON using : content={"amount":"艾佳币数额不合法"} </msg>
<msg timestamp="20170807 10:52:44.819" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170807 10:52:44.820" level="INFO">${toJson_convert} = {u'amount': u'\u827e\u4f73\u5e01\u6570\u989d\u4e0d\u5408\u6cd5'}</msg>
<status status="PASS" endtime="20170807 10:52:44.820" starttime="20170807 10:52:44.817"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson_convert['amount']}</arg>
<arg>艾佳币数额不合法</arg>
</arguments>
<status status="PASS" endtime="20170807 10:52:44.823" starttime="20170807 10:52:44.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170807 10:52:44.825" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170807 10:52:44.825" starttime="20170807 10:52:44.824"></status>
</kw>
<kw name="参数配置" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170807 10:52:44.829" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170807 10:52:44.837" starttime="20170807 10:52:44.828"></status>
</kw>
<status status="PASS" endtime="20170807 10:52:44.838" starttime="20170807 10:52:44.827"></status>
</kw>
<kw name="输入拥有不同类型账户的用户user_id" library="myResource">
<arguments>
<arg>10000</arg>
<arg>10000</arg>
<arg>123456781</arg>
<arg>http://192.168.1.31:10003</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 10:52:44.841" level="INFO">${boss_user_account_id} = 10000</msg>
<status status="PASS" endtime="20170807 10:52:44.842" starttime="20170807 10:52:44.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 10:52:44.844" level="INFO">${app_user_account_id} = 10000</msg>
<status status="PASS" endtime="20170807 10:52:44.845" starttime="20170807 10:52:44.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${no_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 10:52:44.847" level="INFO">${no_user_account_id} = 123456781</msg>
<status status="PASS" endtime="20170807 10:52:44.848" starttime="20170807 10:52:44.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${environment}</arg>
</arguments>
<msg timestamp="20170807 10:52:44.851" level="INFO">${environment} = http://192.168.1.31:10003</msg>
<status status="PASS" endtime="20170807 10:52:44.851" starttime="20170807 10:52:44.849"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${boss_user_account_id}' and channel_no=1</arg>
</arguments>
<assign>
<var>${boss_channel_no1}</var>
</assign>
<msg timestamp="20170807 10:52:44.854" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='10000' and channel_no=1 </msg>
<msg timestamp="20170807 10:52:44.861" level="INFO">${boss_channel_no1} = ((17757, '32102151361501753586', 10000, 100005, 1, 2, 0, datetime.datetime(2017, 8, 3, 16, 53, 36), datetime.datetime(2017, 8, 3, 16, 53, 36)),)</msg>
<status status="PASS" endtime="20170807 10:52:44.862" starttime="20170807 10:52:44.853"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${boss_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${boss_channel_no}</var>
</assign>
<msg timestamp="20170807 10:52:44.864" level="INFO">${boss_channel_no} = 100005</msg>
<status status="PASS" endtime="20170807 10:52:44.865" starttime="20170807 10:52:44.863"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${app_user_account_id}' and channel_no=2</arg>
</arguments>
<assign>
<var>${app_channel_no1}</var>
</assign>
<msg timestamp="20170807 10:52:44.867" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='10000' and channel_no=2 </msg>
<msg timestamp="20170807 10:52:44.874" level="INFO">${app_channel_no1} = ((17756, '32102151361501753580', 10000, 100004, 2, 2, 0, datetime.datetime(2017, 8, 3, 16, 53, 24), datetime.datetime(2017, 8, 3, 16, 53, 24)),)</msg>
<status status="PASS" endtime="20170807 10:52:44.874" starttime="20170807 10:52:44.866"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${app_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${app_channel_no}</var>
</assign>
<msg timestamp="20170807 10:52:44.877" level="INFO">${app_channel_no} = 100004</msg>
<status status="PASS" endtime="20170807 10:52:44.877" starttime="20170807 10:52:44.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_channel_no}</arg>
</arguments>
<msg timestamp="20170807 10:52:44.879" level="INFO">${boss_channel_no} = 100005</msg>
<status status="PASS" endtime="20170807 10:52:44.880" starttime="20170807 10:52:44.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_channel_no}</arg>
</arguments>
<msg timestamp="20170807 10:52:44.901" level="INFO">${app_channel_no} = 100004</msg>
<status status="PASS" endtime="20170807 10:52:44.902" starttime="20170807 10:52:44.900"></status>
</kw>
<status status="PASS" endtime="20170807 10:52:44.903" starttime="20170807 10:52:44.839"></status>
</kw>
<status status="PASS" endtime="20170807 10:52:44.903" starttime="20170807 10:52:44.826"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170807 10:52:44.905" level="INFO">Executing : Query  |  select * from account_amount where account_id ='100005' </msg>
<msg timestamp="20170807 10:52:44.909" level="INFO">${user_id} = ((17827, 100005, Decimal('70.00'), Decimal('40.00'), Decimal('30.00'), datetime.datetime(2017, 8, 3, 16, 53, 36), datetime.datetime(2017, 8, 7, 10, 52, 2), 0),)</msg>
<status status="PASS" endtime="20170807 10:52:44.910" starttime="20170807 10:52:44.904"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170807 10:52:44.912" starttime="20170807 10:52:44.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170807 10:52:44.913" level="INFO">total_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170807 10:52:44.914" starttime="20170807 10:52:44.912"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170807 10:52:44.916" starttime="20170807 10:52:44.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170807 10:52:44.918" level="INFO">balance_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170807 10:52:44.919" starttime="20170807 10:52:44.917"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170807 10:52:44.921" starttime="20170807 10:52:44.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170807 10:52:44.923" level="INFO">frozen_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170807 10:52:44.923" starttime="20170807 10:52:44.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amounts的数据没有变化正确的</arg>
</arguments>
<msg timestamp="20170807 10:52:44.925" level="INFO">amounts的数据没有变化正确的</msg>
<status status="PASS" endtime="20170807 10:52:44.926" starttime="20170807 10:52:44.924"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170807 10:52:44.929" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 10:52:44.930" starttime="20170807 10:52:44.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount内容没有发生变化</arg>
</arguments>
<msg timestamp="20170807 10:52:44.932" level="INFO">表account_amount内容没有发生变化</msg>
<status status="PASS" endtime="20170807 10:52:44.932" starttime="20170807 10:52:44.931"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170807 10:52:44.935" level="INFO">${current_time} = 2017-08-07 10:52:44.934</msg>
<status status="PASS" endtime="20170807 10:52:44.935" starttime="20170807 10:52:44.934"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170807 10:52:44.942" level="INFO">${current_time_before_30} = 2017-08-07 10:51:44.934</msg>
<status status="PASS" endtime="20170807 10:52:44.942" starttime="20170807 10:52:44.936"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170807 10:52:44.945" level="INFO">${current_time_after_30} = 2017-08-07 10:53:44.934</msg>
<status status="PASS" endtime="20170807 10:52:44.945" starttime="20170807 10:52:44.943"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id}' and event_code=7 and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${bill_check}</var>
</assign>
<msg timestamp="20170807 10:52:44.947" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='100005' and event_code=7 and update_time between' 2017-08-07 10:51:44.934' and '2017-08-07 10:53:44.934' </msg>
<msg timestamp="20170807 10:52:44.952" level="INFO">${bill_check} = ()</msg>
<status status="PASS" endtime="20170807 10:52:44.953" starttime="20170807 10:52:44.946"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${bill_check}</arg>
</arguments>
<assign>
<var>${bill_check_length}</var>
</assign>
<msg timestamp="20170807 10:52:44.955" level="INFO">Length is 0</msg>
<msg timestamp="20170807 10:52:44.956" level="INFO">${bill_check_length} = 0</msg>
<status status="PASS" endtime="20170807 10:52:44.956" starttime="20170807 10:52:44.954"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${bill_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170807 10:52:44.958" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 10:52:44.959" starttime="20170807 10:52:44.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>account_unilateral_bill里的没有相关数据</arg>
</arguments>
<msg timestamp="20170807 10:52:44.960" level="INFO">account_unilateral_bill里的没有相关数据</msg>
<status status="PASS" endtime="20170807 10:52:44.961" starttime="20170807 10:52:44.959"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where user_id ='${args11}' and event_code=7 and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${transaction_check}</var>
</assign>
<msg timestamp="20170807 10:52:44.962" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id ='10000' and event_code=7 and update_time between' 2017-08-07 10:51:44.934' and '2017-08-07 10:53:44.934' </msg>
<msg timestamp="20170807 10:52:44.974" level="INFO">${transaction_check} = ()</msg>
<status status="PASS" endtime="20170807 10:52:44.975" starttime="20170807 10:52:44.961"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${transaction_check}</arg>
</arguments>
<assign>
<var>${transaction_check_length}</var>
</assign>
<msg timestamp="20170807 10:52:44.977" level="INFO">Length is 0</msg>
<msg timestamp="20170807 10:52:44.978" level="INFO">${transaction_check_length} = 0</msg>
<status status="PASS" endtime="20170807 10:52:44.979" starttime="20170807 10:52:44.976"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${transaction_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170807 10:52:44.980" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 10:52:44.981" starttime="20170807 10:52:44.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>ajb_account_transaction里的没有相关数据</arg>
</arguments>
<msg timestamp="20170807 10:52:44.983" level="INFO">ajb_account_transaction里的没有相关数据</msg>
<status status="PASS" endtime="20170807 10:52:44.984" starttime="20170807 10:52:44.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当输入已有的user_id和amount数目为0的时候返回数据没有入库</arg>
</arguments>
<msg timestamp="20170807 10:52:44.986" level="INFO">当输入已有的user_id和amount数目为0的时候返回数据没有入库</msg>
<status status="PASS" endtime="20170807 10:52:44.987" starttime="20170807 10:52:44.985"></status>
</kw>
<kw name="艾佳币恢复数目" library="myResource">
<kw name="参数配置" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170807 10:52:44.992" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170807 10:52:44.999" starttime="20170807 10:52:44.991"></status>
</kw>
<status status="PASS" endtime="20170807 10:52:45.000" starttime="20170807 10:52:44.990"></status>
</kw>
<kw name="输入拥有不同类型账户的用户user_id" library="myResource">
<arguments>
<arg>10000</arg>
<arg>10000</arg>
<arg>123456781</arg>
<arg>http://192.168.1.31:10003</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 10:52:45.004" level="INFO">${boss_user_account_id} = 10000</msg>
<status status="PASS" endtime="20170807 10:52:45.005" starttime="20170807 10:52:45.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 10:52:45.007" level="INFO">${app_user_account_id} = 10000</msg>
<status status="PASS" endtime="20170807 10:52:45.008" starttime="20170807 10:52:45.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${no_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 10:52:45.010" level="INFO">${no_user_account_id} = 123456781</msg>
<status status="PASS" endtime="20170807 10:52:45.010" starttime="20170807 10:52:45.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${environment}</arg>
</arguments>
<msg timestamp="20170807 10:52:45.012" level="INFO">${environment} = http://192.168.1.31:10003</msg>
<status status="PASS" endtime="20170807 10:52:45.012" starttime="20170807 10:52:45.011"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${boss_user_account_id}' and channel_no=1</arg>
</arguments>
<assign>
<var>${boss_channel_no1}</var>
</assign>
<msg timestamp="20170807 10:52:45.015" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='10000' and channel_no=1 </msg>
<msg timestamp="20170807 10:52:45.025" level="INFO">${boss_channel_no1} = ((17757, '32102151361501753586', 10000, 100005, 1, 2, 0, datetime.datetime(2017, 8, 3, 16, 53, 36), datetime.datetime(2017, 8, 3, 16, 53, 36)),)</msg>
<status status="PASS" endtime="20170807 10:52:45.026" starttime="20170807 10:52:45.013"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${boss_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${boss_channel_no}</var>
</assign>
<msg timestamp="20170807 10:52:45.029" level="INFO">${boss_channel_no} = 100005</msg>
<status status="PASS" endtime="20170807 10:52:45.029" starttime="20170807 10:52:45.027"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${app_user_account_id}' and channel_no=2</arg>
</arguments>
<assign>
<var>${app_channel_no1}</var>
</assign>
<msg timestamp="20170807 10:52:45.031" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='10000' and channel_no=2 </msg>
<msg timestamp="20170807 10:52:45.039" level="INFO">${app_channel_no1} = ((17756, '32102151361501753580', 10000, 100004, 2, 2, 0, datetime.datetime(2017, 8, 3, 16, 53, 24), datetime.datetime(2017, 8, 3, 16, 53, 24)),)</msg>
<status status="PASS" endtime="20170807 10:52:45.040" starttime="20170807 10:52:45.030"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${app_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${app_channel_no}</var>
</assign>
<msg timestamp="20170807 10:52:45.042" level="INFO">${app_channel_no} = 100004</msg>
<status status="PASS" endtime="20170807 10:52:45.043" starttime="20170807 10:52:45.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_channel_no}</arg>
</arguments>
<msg timestamp="20170807 10:52:45.045" level="INFO">${boss_channel_no} = 100005</msg>
<status status="PASS" endtime="20170807 10:52:45.045" starttime="20170807 10:52:45.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_channel_no}</arg>
</arguments>
<msg timestamp="20170807 10:52:45.047" level="INFO">${app_channel_no} = 100004</msg>
<status status="PASS" endtime="20170807 10:52:45.048" starttime="20170807 10:52:45.046"></status>
</kw>
<status status="PASS" endtime="20170807 10:52:45.048" starttime="20170807 10:52:45.001"></status>
</kw>
<status status="PASS" endtime="20170807 10:52:45.051" starttime="20170807 10:52:44.989"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount \ SET total_amount=${database[0][2]},balance_amount=${database[0][3]},frozen_amount=${database[0][4]}where account_id="${account_id}";</arg>
</arguments>
<msg timestamp="20170807 10:52:45.054" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount  SET total_amount=70.00,balance_amount=40.00,frozen_amount=30.00where account_id="100005"; </msg>
<status status="PASS" endtime="20170807 10:52:45.059" starttime="20170807 10:52:45.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170807 10:52:45.060" level="INFO">成功</msg>
<status status="PASS" endtime="20170807 10:52:45.061" starttime="20170807 10:52:45.059"></status>
</kw>
<status status="PASS" endtime="20170807 10:52:45.061" starttime="20170807 10:52:44.988"></status>
</kw>
<status status="PASS" endtime="20170807 10:52:45.062" critical="yes" starttime="20170807 10:52:44.426"></status>
</test>
<status status="PASS" endtime="20170807 10:52:45.065" starttime="20170807 10:52:44.097"></status>
</suite>
<status status="PASS" endtime="20170807 10:52:45.072" starttime="20170807 10:52:44.091"></status>
</suite>
<status status="PASS" endtime="20170807 10:52:45.077" starttime="20170807 10:52:43.915"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="账户中心" pass="1">账户中心</stat>
<stat fail="0" id="s1-s1" name="艾佳币" pass="1">账户中心.艾佳币</stat>
<stat fail="0" id="s1-s1-s1" name="艾佳币回收冻结" pass="1">账户中心.艾佳币.艾佳币回收冻结</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
