<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170728 15:17:30.295" generator="Robot 3.0.2 (Python 2.7.8 on win32)">
<suite source="F:\logs and reports\账户中心" id="s1" name="账户中心">
<suite source="F:\logs and reports\账户中心\艾佳币" id="s1-s1" name="艾佳币">
<suite source="F:\logs and reports\账户中心\艾佳币\艾佳币充值.txt" id="s1-s1-s1" name="艾佳币充值">
<test id="s1-s1-s1-t1" name="输入已有的userId和正确amount参数">
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>100000</arg>
<arg>1</arg>
<arg>2</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 15:17:30.802" level="INFO">${args11} = 100000</msg>
<status status="PASS" endtime="20170728 15:17:30.803" starttime="20170728 15:17:30.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 15:17:30.806" level="INFO">${args22} = 1</msg>
<status status="PASS" endtime="20170728 15:17:30.808" starttime="20170728 15:17:30.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 15:17:30.810" level="INFO">${args33} = 2</msg>
<status status="PASS" endtime="20170728 15:17:30.811" starttime="20170728 15:17:30.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 15:17:30.814" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 15:17:30.814" starttime="20170728 15:17:30.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 15:17:30.816" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</msg>
<status status="PASS" endtime="20170728 15:17:30.817" starttime="20170728 15:17:30.815"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:30.818" starttime="20170728 15:17:30.797"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 15:17:30.822" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</msg>
<status status="PASS" endtime="20170728 15:17:30.824" starttime="20170728 15:17:30.820"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 15:17:30.827" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 15:17:30.828" starttime="20170728 15:17:30.825"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:30.834" starttime="20170728 15:17:30.833"></status>
</kw>
<msg timestamp="20170728 15:17:30.836" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 15:17:30.837" starttime="20170728 15:17:30.830"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>user_id</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:30.842" starttime="20170728 15:17:30.840"></status>
</kw>
<msg timestamp="20170728 15:17:30.843" level="INFO">${args11_after} = user_id</msg>
<status status="PASS" endtime="20170728 15:17:30.843" starttime="20170728 15:17:30.838"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:17:30.869" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:17:30.895" starttime="20170728 15:17:30.846"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:30.896" starttime="20170728 15:17:30.845"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:30.897" starttime="20170728 15:17:30.844"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 15:17:30.899" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and channel_no='1' </msg>
<msg timestamp="20170728 15:17:30.920" level="INFO">${database1} = ((9100, '32102151361499943857', 100000, 6135, 1, '32102151361499943857', '20170714000118SSP038852', Decimal('2.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, ...</msg>
<status status="PASS" endtime="20170728 15:17:30.921" starttime="20170728 15:17:30.898"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 15:17:30.924" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 15:17:30.930" level="INFO">${database} = ((12449, 6135, Decimal('50425.00'), Decimal('49603.00'), Decimal('822.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 15, 18, 13), 0),)</msg>
<status status="PASS" endtime="20170728 15:17:30.931" starttime="20170728 15:17:30.922"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 15:17:30.933" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 15:17:30.934" starttime="20170728 15:17:30.932"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 15:17:30.936" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 15:17:30.936" starttime="20170728 15:17:30.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 15:17:30.938" level="INFO">获得account_id值为：6135</msg>
<status status="PASS" endtime="20170728 15:17:30.940" starttime="20170728 15:17:30.937"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 15:17:30.943" level="INFO">${total_amount_before} = 50425.00</msg>
<status status="PASS" endtime="20170728 15:17:30.943" starttime="20170728 15:17:30.941"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 15:17:30.945" level="INFO">${balance_amount_before} = 49603.00</msg>
<status status="PASS" endtime="20170728 15:17:30.946" starttime="20170728 15:17:30.944"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 15:17:30.948" level="INFO">${frozen_amount_before} = 822.00</msg>
<status status="PASS" endtime="20170728 15:17:30.948" starttime="20170728 15:17:30.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 15:17:30.950" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 15:17:30.950" starttime="20170728 15:17:30.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 15:17:30.952" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 15:17:30.953" starttime="20170728 15:17:30.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 15:17:30.955" level="INFO">${total_amount_before} = 50425.00</msg>
<status status="PASS" endtime="20170728 15:17:30.957" starttime="20170728 15:17:30.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 15:17:30.960" level="INFO">${balance_amount_before} = 49603.00</msg>
<status status="PASS" endtime="20170728 15:17:30.960" starttime="20170728 15:17:30.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 15:17:30.962" level="INFO">${frozen_amount_before} = 822.00</msg>
<status status="PASS" endtime="20170728 15:17:30.963" starttime="20170728 15:17:30.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 15:17:30.964" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 15:17:30.965" starttime="20170728 15:17:30.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 15:17:30.967" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 15:17:30.968" starttime="20170728 15:17:30.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 15:17:30.972" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</msg>
<status status="PASS" endtime="20170728 15:17:30.973" starttime="20170728 15:17:30.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170728 15:17:30.975" level="INFO">${database} = ((12449, 6135, Decimal('50425.00'), Decimal('49603.00'), Decimal('822.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 15, 18, 13), 0),)</msg>
<status status="PASS" endtime="20170728 15:17:30.976" starttime="20170728 15:17:30.974"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:30.977" starttime="20170728 15:17:30.819"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Data" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:31.065" starttime="20170728 15:17:30.981"></status>
</kw>
<msg timestamp="20170728 15:17:31.066" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 15:17:31.067" starttime="20170728 15:17:30.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 15:17:31.072" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 15:17:31.074" starttime="20170728 15:17:31.069"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:31.075" starttime="20170728 15:17:30.978"></status>
</kw>
<kw name="字段验证" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 15:17:31.081" level="INFO">200</msg>
<status status="PASS" endtime="20170728 15:17:31.083" starttime="20170728 15:17:31.079"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 15:17:31.088" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:31.090" starttime="20170728 15:17:31.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 15:17:31.094" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 15:17:31.095" starttime="20170728 15:17:31.092"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 15:17:31.099" level="INFO">To JSON using : content={"data":{"orderNum":"32102151361501207657"},"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 15:17:31.100" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 15:17:31.102" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': {u'orderNum': u'32102151361501207657'}, u'success': True}</msg>
<status status="PASS" endtime="20170728 15:17:31.103" starttime="20170728 15:17:31.097"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 15:17:31.108" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:31.110" starttime="20170728 15:17:31.105"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:31.115" starttime="20170728 15:17:31.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 15:17:31.119" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 15:17:31.122" starttime="20170728 15:17:31.117"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<assign>
<var>@{Link1}</var>
</assign>
<msg timestamp="20170728 15:17:31.128" level="INFO">@{Link1} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 15:17:31.130" starttime="20170728 15:17:31.125"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>"${value}" in @{Link1}</arg>
<arg>Get From Dictionary</arg>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${orderNum}</var>
</assign>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:31.139" starttime="20170728 15:17:31.137"></status>
</kw>
<msg timestamp="20170728 15:17:31.141" level="INFO">${orderNum} = 32102151361501207657</msg>
<status status="PASS" endtime="20170728 15:17:31.143" starttime="20170728 15:17:31.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<msg timestamp="20170728 15:17:31.147" level="INFO">${orderNum} = 32102151361501207657</msg>
<status status="PASS" endtime="20170728 15:17:31.149" starttime="20170728 15:17:31.145"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:31.150" starttime="20170728 15:17:31.077"></status>
</kw>
<kw name="表account_unilateral_bill的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_unilateral_bill</arg>
</arguments>
<msg timestamp="20170728 15:17:31.155" level="INFO">现在开始校验表account_unilateral_bill</msg>
<status status="PASS" endtime="20170728 15:17:31.158" starttime="20170728 15:17:31.153"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:17:31.168" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:17:31.203" starttime="20170728 15:17:31.166"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:31.205" starttime="20170728 15:17:31.163"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:31.208" starttime="20170728 15:17:31.161"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>account_unilateral_bill</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:17:31.218" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:17:31.228" starttime="20170728 15:17:31.216"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:31.230" starttime="20170728 15:17:31.214"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:31.232" starttime="20170728 15:17:31.212"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 15:17:31.236" level="INFO">${current_time} = 2017-07-28 15:17:31.236</msg>
<status status="PASS" endtime="20170728 15:17:31.238" starttime="20170728 15:17:31.234"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>5 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 15:17:31.252" level="INFO">${current_time_before_30} = 2017-07-28 15:17:26.236</msg>
<status status="PASS" endtime="20170728 15:17:31.254" starttime="20170728 15:17:31.241"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 15:17:31.259" level="INFO">${current_time_after_30} = 2017-07-28 15:19:11.236</msg>
<status status="PASS" endtime="20170728 15:17:31.261" starttime="20170728 15:17:31.256"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 15:17:31.265" level="INFO">Executing : Query  |  select * from account_unilateral_bill where user_id='100000' and update_time between' 2017-07-28 15:17:26.236' and '2017-07-28 15:19:11.236' </msg>
<msg timestamp="20170728 15:17:31.276" level="INFO">${updatetime} = ((6888, '32102151361501207661', 100000, 6135, '32102151361501207658', 1, 7, 3, Decimal('1.00'), None, datetime.datetime(2017, 7, 28, 15, 18, 36), datetime.datetime(2017, 7, 28, 15, 18, 36), 0),)</msg>
<status status="PASS" endtime="20170728 15:17:31.277" starttime="20170728 15:17:31.262"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 15:17:31.282" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 15:17:31.283" starttime="20170728 15:17:31.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 15:17:31.287" level="INFO">account_unilateral_bill表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 15:17:31.288" starttime="20170728 15:17:31.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 15:17:31.292" level="INFO">${current_time_before_30} = 2017-07-28 15:17:26.236</msg>
<status status="PASS" endtime="20170728 15:17:31.294" starttime="20170728 15:17:31.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 15:17:31.299" level="INFO">${current_time_after_30} = 2017-07-28 15:19:11.236</msg>
<status status="PASS" endtime="20170728 15:17:31.301" starttime="20170728 15:17:31.297"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:31.303" starttime="20170728 15:17:31.210"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id} 'and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 15:17:31.308" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6135 'and update_time between' 2017-07-28 15:17:26.236' and '2017-07-28 15:19:11.236' </msg>
<msg timestamp="20170728 15:17:31.318" level="INFO">${user_id} = ((6888, '32102151361501207661', 100000, 6135, '32102151361501207658', 1, 7, 3, Decimal('1.00'), None, datetime.datetime(2017, 7, 28, 15, 18, 36), datetime.datetime(2017, 7, 28, 15, 18, 36), 0),)</msg>
<status status="PASS" endtime="20170728 15:17:31.320" starttime="20170728 15:17:31.305"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170728 15:17:31.326" level="INFO">Length is 20</msg>
<msg timestamp="20170728 15:17:31.328" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170728 15:17:31.329" starttime="20170728 15:17:31.323"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 15:17:31.334" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:31.335" starttime="20170728 15:17:31.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 15:17:31.340" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 15:17:31.341" starttime="20170728 15:17:31.337"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:31.346" starttime="20170728 15:17:31.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 15:17:31.351" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 15:17:31.352" starttime="20170728 15:17:31.349"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170728 15:17:31.356" level="INFO">Length is 20</msg>
<msg timestamp="20170728 15:17:31.360" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170728 15:17:31.362" starttime="20170728 15:17:31.354"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 15:17:31.366" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:31.368" starttime="20170728 15:17:31.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 15:17:31.371" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 15:17:31.373" starttime="20170728 15:17:31.369"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 15:17:31.378" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:31.379" starttime="20170728 15:17:31.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 15:17:31.383" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 15:17:31.384" starttime="20170728 15:17:31.381"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>7</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:31.397" starttime="20170728 15:17:31.395"></status>
</kw>
<msg timestamp="20170728 15:17:31.399" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 15:17:31.400" starttime="20170728 15:17:31.388"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 15:17:31.404" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 15:17:31.405" starttime="20170728 15:17:31.402"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:31.413" starttime="20170728 15:17:31.410"></status>
</kw>
<msg timestamp="20170728 15:17:31.415" level="INFO">${event_code_after} = 7</msg>
<status status="PASS" endtime="20170728 15:17:31.416" starttime="20170728 15:17:31.407"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 15:17:31.422" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 15:17:31.424" starttime="20170728 15:17:31.418"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:31.433" starttime="20170728 15:17:31.430"></status>
</kw>
<msg timestamp="20170728 15:17:31.435" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 15:17:31.436" starttime="20170728 15:17:31.426"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:31.445" starttime="20170728 15:17:31.443"></status>
</kw>
<msg timestamp="20170728 15:17:31.447" level="INFO">${amount} = 1</msg>
<status status="PASS" endtime="20170728 15:17:31.449" starttime="20170728 15:17:31.438"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 15:17:31.453" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 15:17:31.454" starttime="20170728 15:17:31.451"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:31.463" starttime="20170728 15:17:31.461"></status>
</kw>
<msg timestamp="20170728 15:17:31.465" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 15:17:31.466" starttime="20170728 15:17:31.457"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:31.476" starttime="20170728 15:17:31.473"></status>
</kw>
<msg timestamp="20170728 15:17:31.477" level="INFO">${total_amount} = 50426.0</msg>
<status status="PASS" endtime="20170728 15:17:31.479" starttime="20170728 15:17:31.469"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:31.489" starttime="20170728 15:17:31.487"></status>
</kw>
<msg timestamp="20170728 15:17:31.491" level="INFO">${balance_amount} = 49604.0</msg>
<status status="PASS" endtime="20170728 15:17:31.492" starttime="20170728 15:17:31.481"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:31.502" starttime="20170728 15:17:31.500"></status>
</kw>
<msg timestamp="20170728 15:17:31.504" level="INFO">${frozen_amount} = 822.00</msg>
<status status="PASS" endtime="20170728 15:17:31.506" starttime="20170728 15:17:31.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 15:17:31.510" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 15:17:31.512" starttime="20170728 15:17:31.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 15:17:31.516" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 15:17:31.517" starttime="20170728 15:17:31.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 15:17:31.521" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 15:17:31.524" starttime="20170728 15:17:31.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 15:17:31.528" level="INFO">${amount} = 1</msg>
<status status="PASS" endtime="20170728 15:17:31.529" starttime="20170728 15:17:31.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 15:17:31.534" level="INFO">${total_amount} = 50426.0</msg>
<status status="PASS" endtime="20170728 15:17:31.535" starttime="20170728 15:17:31.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 15:17:31.540" level="INFO">${balance_amount} = 49604.0</msg>
<status status="PASS" endtime="20170728 15:17:31.541" starttime="20170728 15:17:31.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 15:17:31.545" level="INFO">${frozen_amount} = 822.00</msg>
<status status="PASS" endtime="20170728 15:17:31.546" starttime="20170728 15:17:31.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 15:17:31.551" level="INFO">${event_code_after} = 7</msg>
<status status="PASS" endtime="20170728 15:17:31.552" starttime="20170728 15:17:31.549"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:31.554" starttime="20170728 15:17:31.386"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 15:17:31.559" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:31.560" starttime="20170728 15:17:31.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 15:17:31.564" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 15:17:31.565" starttime="20170728 15:17:31.562"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 15:17:31.568" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:31.569" starttime="20170728 15:17:31.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170728 15:17:31.573" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170728 15:17:31.574" starttime="20170728 15:17:31.571"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 15:17:31.578" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:31.579" starttime="20170728 15:17:31.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 15:17:31.584" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 15:17:31.585" starttime="20170728 15:17:31.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 15:17:31.588" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 15:17:31.589" starttime="20170728 15:17:31.587"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 15:17:31.592" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:31.593" starttime="20170728 15:17:31.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 15:17:31.595" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 15:17:31.595" starttime="20170728 15:17:31.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170728 15:17:31.597" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170728 15:17:31.597" starttime="20170728 15:17:31.596"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_unilateral}</var>
</assign>
<msg timestamp="20170728 15:17:31.600" level="INFO">${user_id[0][0]_unilateral} = 6888</msg>
<status status="PASS" endtime="20170728 15:17:31.600" starttime="20170728 15:17:31.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_unilateral}</arg>
</arguments>
<msg timestamp="20170728 15:17:31.602" level="INFO">${user_id[0][0]_unilateral} = 6888</msg>
<status status="PASS" endtime="20170728 15:17:31.603" starttime="20170728 15:17:31.601"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]_unilateral}'</arg>
</arguments>
<msg timestamp="20170728 15:17:31.605" level="INFO">Executing : Execute SQL String  |  delete from account_unilateral_bill where id ='6888' </msg>
<status status="PASS" endtime="20170728 15:17:31.683" starttime="20170728 15:17:31.604"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:31.684" starttime="20170728 15:17:31.151"></status>
</kw>
<kw name="表ajb_account_transaction" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170728 15:17:31.687" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170728 15:17:31.688" starttime="20170728 15:17:31.686"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:17:31.694" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:17:31.704" starttime="20170728 15:17:31.693"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:31.705" starttime="20170728 15:17:31.691"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:31.706" starttime="20170728 15:17:31.690"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>ajb_account_transaction</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:17:31.712" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:17:31.723" starttime="20170728 15:17:31.711"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:31.725" starttime="20170728 15:17:31.710"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:31.726" starttime="20170728 15:17:31.709"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 15:17:31.728" level="INFO">${current_time} = 2017-07-28 15:17:31.728</msg>
<status status="PASS" endtime="20170728 15:17:31.729" starttime="20170728 15:17:31.727"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>5 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 15:17:31.731" level="INFO">${current_time_before_30} = 2017-07-28 15:17:26.728</msg>
<status status="PASS" endtime="20170728 15:17:31.732" starttime="20170728 15:17:31.730"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 15:17:31.735" level="INFO">${current_time_after_30} = 2017-07-28 15:19:11.728</msg>
<status status="PASS" endtime="20170728 15:17:31.736" starttime="20170728 15:17:31.733"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 15:17:31.740" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and update_time between' 2017-07-28 15:17:26.728' and '2017-07-28 15:19:11.728' </msg>
<msg timestamp="20170728 15:17:31.752" level="INFO">${updatetime} = ((88889477, '32102151361501207657', 100000, 6135, 1, '32102151361501207657', '20170728151833DFC051366', Decimal('1.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 28, 15, 18, 36), datetime.datetime(2017,...</msg>
<status status="PASS" endtime="20170728 15:17:31.753" starttime="20170728 15:17:31.738"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 15:17:31.755" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 15:17:31.757" starttime="20170728 15:17:31.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 15:17:31.760" level="INFO">ajb_account_transaction表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 15:17:31.760" starttime="20170728 15:17:31.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 15:17:31.762" level="INFO">${current_time_before_30} = 2017-07-28 15:17:26.728</msg>
<status status="PASS" endtime="20170728 15:17:31.763" starttime="20170728 15:17:31.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 15:17:31.765" level="INFO">${current_time_after_30} = 2017-07-28 15:19:11.728</msg>
<status status="PASS" endtime="20170728 15:17:31.765" starttime="20170728 15:17:31.764"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:31.766" starttime="20170728 15:17:31.707"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 15:17:31.769" level="INFO">Executing : Query  |  select * from ajb_account_transaction where account_id ='6135' and update_time between' 2017-07-28 15:17:26.728' and '2017-07-28 15:19:11.728' </msg>
<msg timestamp="20170728 15:17:31.780" level="INFO">${user_id} = ((88889477, '32102151361501207657', 100000, 6135, 1, '32102151361501207657', '20170728151833DFC051366', Decimal('1.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 28, 15, 18, 36), datetime.datetime(2017,...</msg>
<status status="PASS" endtime="20170728 15:17:31.781" starttime="20170728 15:17:31.767"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 15:17:31.783" level="INFO">Length is 20</msg>
<msg timestamp="20170728 15:17:31.783" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 15:17:31.784" starttime="20170728 15:17:31.782"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 15:17:31.786" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:31.787" starttime="20170728 15:17:31.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 15:17:31.789" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 15:17:31.790" starttime="20170728 15:17:31.788"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:31.792" starttime="20170728 15:17:31.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 15:17:31.794" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 15:17:31.795" starttime="20170728 15:17:31.793"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 15:17:31.798" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:31.800" starttime="20170728 15:17:31.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no的值正确</arg>
</arguments>
<msg timestamp="20170728 15:17:31.802" level="INFO">channel_no的值正确</msg>
<status status="PASS" endtime="20170728 15:17:31.803" starttime="20170728 15:17:31.801"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${args11}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${orderNum}</arg>
</arguments>
<assign>
<var>${bill_order_num}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:31.807" starttime="20170728 15:17:31.805"></status>
</kw>
<msg timestamp="20170728 15:17:31.807" level="INFO">${bill_order_num} = 32102151361501207657</msg>
<status status="PASS" endtime="20170728 15:17:31.808" starttime="20170728 15:17:31.803"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>${bill_order_num}</arg>
</arguments>
<msg timestamp="20170728 15:17:31.810" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:31.811" starttime="20170728 15:17:31.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170728 15:17:31.814" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170728 15:17:31.815" starttime="20170728 15:17:31.812"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>7</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:31.822" starttime="20170728 15:17:31.821"></status>
</kw>
<msg timestamp="20170728 15:17:31.824" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 15:17:31.824" starttime="20170728 15:17:31.818"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 15:17:31.826" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 15:17:31.827" starttime="20170728 15:17:31.825"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:31.830" starttime="20170728 15:17:31.829"></status>
</kw>
<msg timestamp="20170728 15:17:31.831" level="INFO">${event_code_after} = 7</msg>
<status status="PASS" endtime="20170728 15:17:31.832" starttime="20170728 15:17:31.828"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 15:17:31.835" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 15:17:31.835" starttime="20170728 15:17:31.833"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:31.839" starttime="20170728 15:17:31.838"></status>
</kw>
<msg timestamp="20170728 15:17:31.840" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 15:17:31.840" starttime="20170728 15:17:31.836"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:31.845" starttime="20170728 15:17:31.844"></status>
</kw>
<msg timestamp="20170728 15:17:31.846" level="INFO">${amount} = 1</msg>
<status status="PASS" endtime="20170728 15:17:31.846" starttime="20170728 15:17:31.842"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 15:17:31.848" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 15:17:31.848" starttime="20170728 15:17:31.847"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:31.852" starttime="20170728 15:17:31.851"></status>
</kw>
<msg timestamp="20170728 15:17:31.852" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 15:17:31.853" starttime="20170728 15:17:31.849"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:31.858" starttime="20170728 15:17:31.856"></status>
</kw>
<msg timestamp="20170728 15:17:31.859" level="INFO">${total_amount} = 50426.0</msg>
<status status="PASS" endtime="20170728 15:17:31.860" starttime="20170728 15:17:31.854"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:31.867" starttime="20170728 15:17:31.865"></status>
</kw>
<msg timestamp="20170728 15:17:31.868" level="INFO">${balance_amount} = 49604.0</msg>
<status status="PASS" endtime="20170728 15:17:31.869" starttime="20170728 15:17:31.861"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:31.874" starttime="20170728 15:17:31.872"></status>
</kw>
<msg timestamp="20170728 15:17:31.874" level="INFO">${frozen_amount} = 822.00</msg>
<status status="PASS" endtime="20170728 15:17:31.875" starttime="20170728 15:17:31.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 15:17:31.877" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 15:17:31.878" starttime="20170728 15:17:31.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 15:17:31.881" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 15:17:31.882" starttime="20170728 15:17:31.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 15:17:31.884" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 15:17:31.884" starttime="20170728 15:17:31.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 15:17:31.886" level="INFO">${amount} = 1</msg>
<status status="PASS" endtime="20170728 15:17:31.886" starttime="20170728 15:17:31.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 15:17:31.891" level="INFO">${total_amount} = 50426.0</msg>
<status status="PASS" endtime="20170728 15:17:31.893" starttime="20170728 15:17:31.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 15:17:31.897" level="INFO">${balance_amount} = 49604.0</msg>
<status status="PASS" endtime="20170728 15:17:31.898" starttime="20170728 15:17:31.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 15:17:31.902" level="INFO">${frozen_amount} = 822.00</msg>
<status status="PASS" endtime="20170728 15:17:31.903" starttime="20170728 15:17:31.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 15:17:31.905" level="INFO">${event_code_after} = 7</msg>
<status status="PASS" endtime="20170728 15:17:31.906" starttime="20170728 15:17:31.904"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:31.906" starttime="20170728 15:17:31.817"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170728 15:17:31.910" level="INFO">${pay_no_after} = 20170728151833DFC051366</msg>
<status status="PASS" endtime="20170728 15:17:31.912" starttime="20170728 15:17:31.907"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170728 15:17:31.915" level="INFO">Length is 23</msg>
<msg timestamp="20170728 15:17:31.916" level="INFO">${pay_no_after_length} = 23</msg>
<status status="PASS" endtime="20170728 15:17:31.917" starttime="20170728 15:17:31.914"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 15:17:31.921" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:31.923" starttime="20170728 15:17:31.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170728 15:17:31.927" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170728 15:17:31.928" starttime="20170728 15:17:31.925"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 15:17:31.930" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:31.932" starttime="20170728 15:17:31.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 15:17:31.934" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 15:17:31.936" starttime="20170728 15:17:31.933"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 15:17:31.940" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:31.959" starttime="20170728 15:17:31.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 15:17:31.961" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 15:17:31.962" starttime="20170728 15:17:31.960"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][9]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 15:17:31.963" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:31.964" starttime="20170728 15:17:31.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 15:17:31.966" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 15:17:31.966" starttime="20170728 15:17:31.965"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 15:17:31.968" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:31.969" starttime="20170728 15:17:31.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170728 15:17:31.971" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170728 15:17:31.972" starttime="20170728 15:17:31.970"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 15:17:31.975" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:31.976" starttime="20170728 15:17:31.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 15:17:31.977" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 15:17:31.978" starttime="20170728 15:17:31.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 15:17:31.979" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 15:17:31.980" starttime="20170728 15:17:31.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170728 15:17:31.981" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170728 15:17:31.982" starttime="20170728 15:17:31.981"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170728 15:17:31.986" level="INFO">${user_id[0][0]_transaction} = 88889477</msg>
<status status="PASS" endtime="20170728 15:17:31.987" starttime="20170728 15:17:31.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170728 15:17:31.990" level="INFO">${user_id[0][0]_transaction} = 88889477</msg>
<status status="PASS" endtime="20170728 15:17:31.991" starttime="20170728 15:17:31.989"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id[0][0]}'</arg>
</arguments>
<assign>
<var>${user_id_unilateral_delete1}</var>
</assign>
<msg timestamp="20170728 15:17:31.993" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88889477' </msg>
<msg timestamp="20170728 15:17:32.056" level="INFO">${user_id_unilateral_delete1} = None</msg>
<status status="PASS" endtime="20170728 15:17:32.057" starttime="20170728 15:17:31.992"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:32.059" starttime="20170728 15:17:31.685"></status>
</kw>
<kw name="表account_amount的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_amount</arg>
</arguments>
<msg timestamp="20170728 15:17:32.064" level="INFO">现在开始校验表account_amount</msg>
<status status="PASS" endtime="20170728 15:17:32.064" starttime="20170728 15:17:32.063"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:17:32.226" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:17:32.237" starttime="20170728 15:17:32.224"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:32.239" starttime="20170728 15:17:32.221"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:32.241" starttime="20170728 15:17:32.218"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time1}</var>
</assign>
<msg timestamp="20170728 15:17:32.245" level="INFO">${current_time1} = 2017-07-28 15:17:32.245</msg>
<status status="PASS" endtime="20170728 15:17:32.246" starttime="20170728 15:17:32.243"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_before_30}</var>
</assign>
<msg timestamp="20170728 15:17:32.250" level="INFO">${current_time1_before_30} = 2017-07-28 15:16:32.245</msg>
<status status="PASS" endtime="20170728 15:17:32.251" starttime="20170728 15:17:32.248"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_after_30}</var>
</assign>
<msg timestamp="20170728 15:17:32.254" level="INFO">${current_time1_after_30} = 2017-07-28 15:18:32.245</msg>
<status status="PASS" endtime="20170728 15:17:32.256" starttime="20170728 15:17:32.253"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 15:17:32.260" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 15:17:32.266" level="INFO">${user_id} = ((12449, 6135, Decimal('50426.00'), Decimal('49604.00'), Decimal('822.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 15, 18, 36), 0),)</msg>
<status status="PASS" endtime="20170728 15:17:32.266" starttime="20170728 15:17:32.258"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>7</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:32.272" starttime="20170728 15:17:32.271"></status>
</kw>
<msg timestamp="20170728 15:17:32.273" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 15:17:32.274" starttime="20170728 15:17:32.268"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 15:17:32.275" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 15:17:32.276" starttime="20170728 15:17:32.274"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:32.279" starttime="20170728 15:17:32.278"></status>
</kw>
<msg timestamp="20170728 15:17:32.281" level="INFO">${event_code_after} = 7</msg>
<status status="PASS" endtime="20170728 15:17:32.281" starttime="20170728 15:17:32.277"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 15:17:32.284" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 15:17:32.285" starttime="20170728 15:17:32.282"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:32.289" starttime="20170728 15:17:32.288"></status>
</kw>
<msg timestamp="20170728 15:17:32.290" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 15:17:32.291" starttime="20170728 15:17:32.286"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:32.294" starttime="20170728 15:17:32.293"></status>
</kw>
<msg timestamp="20170728 15:17:32.295" level="INFO">${amount} = 1</msg>
<status status="PASS" endtime="20170728 15:17:32.296" starttime="20170728 15:17:32.291"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 15:17:32.300" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 15:17:32.300" starttime="20170728 15:17:32.298"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:32.305" starttime="20170728 15:17:32.304"></status>
</kw>
<msg timestamp="20170728 15:17:32.306" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 15:17:32.307" starttime="20170728 15:17:32.302"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:32.311" starttime="20170728 15:17:32.310"></status>
</kw>
<msg timestamp="20170728 15:17:32.312" level="INFO">${total_amount} = 50426.0</msg>
<status status="PASS" endtime="20170728 15:17:32.312" starttime="20170728 15:17:32.308"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:32.317" starttime="20170728 15:17:32.316"></status>
</kw>
<msg timestamp="20170728 15:17:32.318" level="INFO">${balance_amount} = 49604.0</msg>
<status status="PASS" endtime="20170728 15:17:32.318" starttime="20170728 15:17:32.313"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:32.324" starttime="20170728 15:17:32.322"></status>
</kw>
<msg timestamp="20170728 15:17:32.325" level="INFO">${frozen_amount} = 822.00</msg>
<status status="PASS" endtime="20170728 15:17:32.325" starttime="20170728 15:17:32.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 15:17:32.327" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 15:17:32.327" starttime="20170728 15:17:32.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 15:17:32.330" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 15:17:32.331" starttime="20170728 15:17:32.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 15:17:32.333" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 15:17:32.334" starttime="20170728 15:17:32.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 15:17:32.336" level="INFO">${amount} = 1</msg>
<status status="PASS" endtime="20170728 15:17:32.336" starttime="20170728 15:17:32.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 15:17:32.340" level="INFO">${total_amount} = 50426.0</msg>
<status status="PASS" endtime="20170728 15:17:32.340" starttime="20170728 15:17:32.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 15:17:32.342" level="INFO">${balance_amount} = 49604.0</msg>
<status status="PASS" endtime="20170728 15:17:32.343" starttime="20170728 15:17:32.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 15:17:32.346" level="INFO">${frozen_amount} = 822.00</msg>
<status status="PASS" endtime="20170728 15:17:32.347" starttime="20170728 15:17:32.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 15:17:32.348" level="INFO">${event_code_after} = 7</msg>
<status status="PASS" endtime="20170728 15:17:32.349" starttime="20170728 15:17:32.347"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:32.350" starttime="20170728 15:17:32.267"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 15:17:32.351" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:32.352" starttime="20170728 15:17:32.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 15:17:32.354" level="INFO">total_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 15:17:32.354" starttime="20170728 15:17:32.353"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 15:17:32.358" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:32.360" starttime="20170728 15:17:32.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 15:17:32.362" level="INFO">balance_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 15:17:32.362" starttime="20170728 15:17:32.361"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:32.364" starttime="20170728 15:17:32.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 15:17:32.366" level="INFO">frozen_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 15:17:32.367" starttime="20170728 15:17:32.365"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 15:17:32.368" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:32.369" starttime="20170728 15:17:32.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 15:17:32.371" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 15:17:32.371" starttime="20170728 15:17:32.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount校验成功！</arg>
</arguments>
<msg timestamp="20170728 15:17:32.374" level="INFO">表account_amount校验成功！</msg>
<status status="PASS" endtime="20170728 15:17:32.375" starttime="20170728 15:17:32.372"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:32.376" starttime="20170728 15:17:32.061"></status>
</kw>
<kw name="艾佳币恢复数目" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:17:32.381" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:17:32.390" starttime="20170728 15:17:32.380"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:32.391" starttime="20170728 15:17:32.379"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:32.392" starttime="20170728 15:17:32.378"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount \ SET total_amount=${database[0][2]},balance_amount=${database[0][3]},frozen_amount=${database[0][4]}where account_id="${account_id}";</arg>
</arguments>
<msg timestamp="20170728 15:17:32.395" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount  SET total_amount=50425.00,balance_amount=49603.00,frozen_amount=822.00where account_id="6135"; </msg>
<status status="PASS" endtime="20170728 15:17:32.435" starttime="20170728 15:17:32.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170728 15:17:32.437" level="INFO">成功</msg>
<status status="PASS" endtime="20170728 15:17:32.438" starttime="20170728 15:17:32.436"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:32.439" starttime="20170728 15:17:32.377"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:32.440" critical="yes" starttime="20170728 15:17:30.794"></status>
</test>
<test id="s1-s1-s1-t2" name="输入已有的user_id和amount数目为0参数">
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>100000</arg>
<arg>0</arg>
<arg>2</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 15:17:32.450" level="INFO">${args11} = 100000</msg>
<status status="PASS" endtime="20170728 15:17:32.452" starttime="20170728 15:17:32.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 15:17:32.454" level="INFO">${args22} = 0</msg>
<status status="PASS" endtime="20170728 15:17:32.456" starttime="20170728 15:17:32.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 15:17:32.459" level="INFO">${args33} = 2</msg>
<status status="PASS" endtime="20170728 15:17:32.459" starttime="20170728 15:17:32.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 15:17:32.461" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 15:17:32.462" starttime="20170728 15:17:32.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 15:17:32.464" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</msg>
<status status="PASS" endtime="20170728 15:17:32.464" starttime="20170728 15:17:32.463"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:32.465" starttime="20170728 15:17:32.445"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 15:17:32.468" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</msg>
<status status="PASS" endtime="20170728 15:17:32.469" starttime="20170728 15:17:32.467"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 15:17:32.473" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 15:17:32.474" starttime="20170728 15:17:32.470"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:32.478" starttime="20170728 15:17:32.477"></status>
</kw>
<msg timestamp="20170728 15:17:32.478" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 15:17:32.479" starttime="20170728 15:17:32.475"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>user_id</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:32.484" starttime="20170728 15:17:32.482"></status>
</kw>
<msg timestamp="20170728 15:17:32.485" level="INFO">${args11_after} = user_id</msg>
<status status="PASS" endtime="20170728 15:17:32.486" starttime="20170728 15:17:32.480"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:17:32.493" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:17:32.505" starttime="20170728 15:17:32.491"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:32.506" starttime="20170728 15:17:32.490"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:32.507" starttime="20170728 15:17:32.488"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 15:17:32.509" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and channel_no='1' </msg>
<msg timestamp="20170728 15:17:32.529" level="INFO">${database1} = ((9100, '32102151361499943857', 100000, 6135, 1, '32102151361499943857', '20170714000118SSP038852', Decimal('2.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, ...</msg>
<status status="PASS" endtime="20170728 15:17:32.530" starttime="20170728 15:17:32.508"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 15:17:32.532" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 15:17:32.541" level="INFO">${database} = ((12449, 6135, Decimal('50425.00'), Decimal('49603.00'), Decimal('822.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 15, 18, 37), 0),)</msg>
<status status="PASS" endtime="20170728 15:17:32.541" starttime="20170728 15:17:32.531"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 15:17:32.546" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 15:17:32.547" starttime="20170728 15:17:32.544"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 15:17:32.550" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 15:17:32.550" starttime="20170728 15:17:32.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 15:17:32.552" level="INFO">获得account_id值为：6135</msg>
<status status="PASS" endtime="20170728 15:17:32.553" starttime="20170728 15:17:32.551"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 15:17:32.555" level="INFO">${total_amount_before} = 50425.00</msg>
<status status="PASS" endtime="20170728 15:17:32.555" starttime="20170728 15:17:32.554"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 15:17:32.559" level="INFO">${balance_amount_before} = 49603.00</msg>
<status status="PASS" endtime="20170728 15:17:32.559" starttime="20170728 15:17:32.557"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 15:17:32.561" level="INFO">${frozen_amount_before} = 822.00</msg>
<status status="PASS" endtime="20170728 15:17:32.562" starttime="20170728 15:17:32.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 15:17:32.565" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 15:17:32.567" starttime="20170728 15:17:32.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 15:17:32.569" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 15:17:32.570" starttime="20170728 15:17:32.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 15:17:32.574" level="INFO">${total_amount_before} = 50425.00</msg>
<status status="PASS" endtime="20170728 15:17:32.575" starttime="20170728 15:17:32.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 15:17:32.577" level="INFO">${balance_amount_before} = 49603.00</msg>
<status status="PASS" endtime="20170728 15:17:32.577" starttime="20170728 15:17:32.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 15:17:32.579" level="INFO">${frozen_amount_before} = 822.00</msg>
<status status="PASS" endtime="20170728 15:17:32.579" starttime="20170728 15:17:32.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 15:17:32.581" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 15:17:32.582" starttime="20170728 15:17:32.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 15:17:32.584" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 15:17:32.584" starttime="20170728 15:17:32.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 15:17:32.586" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</msg>
<status status="PASS" endtime="20170728 15:17:32.586" starttime="20170728 15:17:32.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170728 15:17:32.589" level="INFO">${database} = ((12449, 6135, Decimal('50425.00'), Decimal('49603.00'), Decimal('822.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 15, 18, 37), 0),)</msg>
<status status="PASS" endtime="20170728 15:17:32.590" starttime="20170728 15:17:32.587"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:32.591" starttime="20170728 15:17:32.466"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Data" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:32.679" starttime="20170728 15:17:32.595"></status>
</kw>
<msg timestamp="20170728 15:17:32.679" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 15:17:32.680" starttime="20170728 15:17:32.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 15:17:32.682" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 15:17:32.683" starttime="20170728 15:17:32.681"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:32.685" starttime="20170728 15:17:32.592"></status>
</kw>
<kw name="字段验证" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 15:17:32.688" level="INFO">200</msg>
<status status="PASS" endtime="20170728 15:17:32.689" starttime="20170728 15:17:32.687"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 15:17:32.691" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:32.692" starttime="20170728 15:17:32.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 15:17:32.693" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 15:17:32.694" starttime="20170728 15:17:32.692"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 15:17:32.695" level="INFO">To JSON using : content={"data":{"orderNum":"32102151361501207662"},"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 15:17:32.696" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 15:17:32.697" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': {u'orderNum': u'32102151361501207662'}, u'success': True}</msg>
<status status="PASS" endtime="20170728 15:17:32.697" starttime="20170728 15:17:32.695"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 15:17:32.699" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:32.699" starttime="20170728 15:17:32.698"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:32.702" starttime="20170728 15:17:32.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 15:17:32.705" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 15:17:32.706" starttime="20170728 15:17:32.704"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<assign>
<var>@{Link1}</var>
</assign>
<msg timestamp="20170728 15:17:32.708" level="INFO">@{Link1} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 15:17:32.709" starttime="20170728 15:17:32.707"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>"${value}" in @{Link1}</arg>
<arg>Get From Dictionary</arg>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${orderNum}</var>
</assign>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:32.712" starttime="20170728 15:17:32.711"></status>
</kw>
<msg timestamp="20170728 15:17:32.713" level="INFO">${orderNum} = 32102151361501207662</msg>
<status status="PASS" endtime="20170728 15:17:32.714" starttime="20170728 15:17:32.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<msg timestamp="20170728 15:17:32.716" level="INFO">${orderNum} = 32102151361501207662</msg>
<status status="PASS" endtime="20170728 15:17:32.716" starttime="20170728 15:17:32.715"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:32.717" starttime="20170728 15:17:32.686"></status>
</kw>
<kw name="表ajb_account_open_record的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_open_record</arg>
</arguments>
<msg timestamp="20170728 15:17:32.721" level="INFO">现在开始校验表ajb_account_open_record</msg>
<status status="PASS" endtime="20170728 15:17:32.722" starttime="20170728 15:17:32.720"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:17:32.727" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:17:32.740" starttime="20170728 15:17:32.725"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:32.741" starttime="20170728 15:17:32.724"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:32.742" starttime="20170728 15:17:32.723"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 15:17:32.744" level="INFO">Executing : Query  |  select * from ajb_account_open_record where account_id ='6135' </msg>
<msg timestamp="20170728 15:17:32.755" level="INFO">${user_id} = ((6090, '32102151361499943856', 100000, 6135, 1, 2, 0, datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 13, 23, 57, 26)),)</msg>
<status status="PASS" endtime="20170728 15:17:32.756" starttime="20170728 15:17:32.743"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 15:17:32.759" level="INFO">Length is 20</msg>
<msg timestamp="20170728 15:17:32.760" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 15:17:32.761" starttime="20170728 15:17:32.758"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 15:17:32.763" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:32.764" starttime="20170728 15:17:32.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 15:17:32.765" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 15:17:32.766" starttime="20170728 15:17:32.765"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 15:17:32.768" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:32.768" starttime="20170728 15:17:32.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 15:17:32.770" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 15:17:32.771" starttime="20170728 15:17:32.769"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 15:17:32.774" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:32.775" starttime="20170728 15:17:32.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no正确反映艾佳币账户渠道</arg>
</arguments>
<msg timestamp="20170728 15:17:32.777" level="INFO">channel_no正确反映艾佳币账户渠道</msg>
<status status="PASS" endtime="20170728 15:17:32.777" starttime="20170728 15:17:32.776"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 15:17:32.779" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:32.781" starttime="20170728 15:17:32.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>status的值为2,表示生效，是正确的</arg>
</arguments>
<msg timestamp="20170728 15:17:32.784" level="INFO">status的值为2,表示生效，是正确的</msg>
<status status="PASS" endtime="20170728 15:17:32.784" starttime="20170728 15:17:32.783"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 15:17:32.786" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:32.787" starttime="20170728 15:17:32.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 15:17:32.790" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 15:17:32.790" starttime="20170728 15:17:32.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表里面的add_time和update_time的时间是一致的。校验正确。</arg>
</arguments>
<msg timestamp="20170728 15:17:32.792" level="INFO">表里面的add_time和update_time的时间是一致的。校验正确。</msg>
<status status="PASS" endtime="20170728 15:17:32.793" starttime="20170728 15:17:32.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_open_record的校验成功！</arg>
</arguments>
<msg timestamp="20170728 15:17:32.795" level="INFO">表ajb_account_open_record的校验成功！</msg>
<status status="PASS" endtime="20170728 15:17:32.796" starttime="20170728 15:17:32.793"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:32.798" starttime="20170728 15:17:32.718"></status>
</kw>
<kw name="表account_unilateral_bill的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_unilateral_bill</arg>
</arguments>
<msg timestamp="20170728 15:17:32.802" level="INFO">现在开始校验表account_unilateral_bill</msg>
<status status="PASS" endtime="20170728 15:17:32.803" starttime="20170728 15:17:32.801"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:17:32.809" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:17:32.823" starttime="20170728 15:17:32.808"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:32.824" starttime="20170728 15:17:32.806"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:32.826" starttime="20170728 15:17:32.805"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>account_unilateral_bill</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:17:32.832" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:17:32.848" starttime="20170728 15:17:32.830"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:32.849" starttime="20170728 15:17:32.829"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:32.850" starttime="20170728 15:17:32.828"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 15:17:32.852" level="INFO">${current_time} = 2017-07-28 15:17:32.852</msg>
<status status="PASS" endtime="20170728 15:17:32.852" starttime="20170728 15:17:32.851"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>5 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 15:17:32.856" level="INFO">${current_time_before_30} = 2017-07-28 15:17:27.852</msg>
<status status="PASS" endtime="20170728 15:17:32.858" starttime="20170728 15:17:32.853"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 15:17:32.861" level="INFO">${current_time_after_30} = 2017-07-28 15:19:12.852</msg>
<status status="PASS" endtime="20170728 15:17:32.862" starttime="20170728 15:17:32.859"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 15:17:32.865" level="INFO">Executing : Query  |  select * from account_unilateral_bill where user_id='100000' and update_time between' 2017-07-28 15:17:27.852' and '2017-07-28 15:19:12.852' </msg>
<msg timestamp="20170728 15:17:32.878" level="INFO">${updatetime} = ((6891, '32102151361501207666', 100000, 6135, '32102151361501207663', 1, 7, 3, Decimal('0.00'), None, datetime.datetime(2017, 7, 28, 15, 18, 38), datetime.datetime(2017, 7, 28, 15, 18, 38), 0),)</msg>
<status status="PASS" endtime="20170728 15:17:32.879" starttime="20170728 15:17:32.863"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 15:17:32.880" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 15:17:32.881" starttime="20170728 15:17:32.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 15:17:32.883" level="INFO">account_unilateral_bill表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 15:17:32.883" starttime="20170728 15:17:32.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 15:17:32.885" level="INFO">${current_time_before_30} = 2017-07-28 15:17:27.852</msg>
<status status="PASS" endtime="20170728 15:17:32.885" starttime="20170728 15:17:32.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 15:17:32.887" level="INFO">${current_time_after_30} = 2017-07-28 15:19:12.852</msg>
<status status="PASS" endtime="20170728 15:17:32.888" starttime="20170728 15:17:32.886"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:32.889" starttime="20170728 15:17:32.827"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id} 'and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 15:17:32.892" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6135 'and update_time between' 2017-07-28 15:17:27.852' and '2017-07-28 15:19:12.852' </msg>
<msg timestamp="20170728 15:17:32.906" level="INFO">${user_id} = ((6891, '32102151361501207666', 100000, 6135, '32102151361501207663', 1, 7, 3, Decimal('0.00'), None, datetime.datetime(2017, 7, 28, 15, 18, 38), datetime.datetime(2017, 7, 28, 15, 18, 38), 0),)</msg>
<status status="PASS" endtime="20170728 15:17:32.907" starttime="20170728 15:17:32.890"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170728 15:17:32.910" level="INFO">Length is 20</msg>
<msg timestamp="20170728 15:17:32.911" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170728 15:17:32.912" starttime="20170728 15:17:32.908"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 15:17:32.914" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:32.915" starttime="20170728 15:17:32.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 15:17:32.916" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 15:17:32.917" starttime="20170728 15:17:32.916"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:32.921" starttime="20170728 15:17:32.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 15:17:32.924" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 15:17:32.925" starttime="20170728 15:17:32.923"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170728 15:17:32.927" level="INFO">Length is 20</msg>
<msg timestamp="20170728 15:17:32.928" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170728 15:17:32.928" starttime="20170728 15:17:32.926"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 15:17:32.930" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:32.930" starttime="20170728 15:17:32.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 15:17:32.932" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 15:17:32.933" starttime="20170728 15:17:32.931"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 15:17:32.935" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:32.936" starttime="20170728 15:17:32.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 15:17:32.940" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 15:17:32.941" starttime="20170728 15:17:32.938"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>7</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:32.947" starttime="20170728 15:17:32.946"></status>
</kw>
<msg timestamp="20170728 15:17:32.947" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 15:17:32.948" starttime="20170728 15:17:32.943"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 15:17:32.950" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 15:17:32.950" starttime="20170728 15:17:32.949"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:32.955" starttime="20170728 15:17:32.953"></status>
</kw>
<msg timestamp="20170728 15:17:32.957" level="INFO">${event_code_after} = 7</msg>
<status status="PASS" endtime="20170728 15:17:32.958" starttime="20170728 15:17:32.951"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 15:17:32.960" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 15:17:32.960" starttime="20170728 15:17:32.959"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:32.964" starttime="20170728 15:17:32.963"></status>
</kw>
<msg timestamp="20170728 15:17:32.965" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 15:17:32.965" starttime="20170728 15:17:32.961"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:32.970" starttime="20170728 15:17:32.968"></status>
</kw>
<msg timestamp="20170728 15:17:32.971" level="INFO">${amount} = 0</msg>
<status status="PASS" endtime="20170728 15:17:32.972" starttime="20170728 15:17:32.966"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 15:17:32.974" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 15:17:32.974" starttime="20170728 15:17:32.973"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:32.977" starttime="20170728 15:17:32.977"></status>
</kw>
<msg timestamp="20170728 15:17:32.978" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 15:17:32.979" starttime="20170728 15:17:32.975"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:32.984" starttime="20170728 15:17:32.983"></status>
</kw>
<msg timestamp="20170728 15:17:32.986" level="INFO">${total_amount} = 50425.0</msg>
<status status="PASS" endtime="20170728 15:17:32.986" starttime="20170728 15:17:32.980"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:32.992" starttime="20170728 15:17:32.990"></status>
</kw>
<msg timestamp="20170728 15:17:32.993" level="INFO">${balance_amount} = 49603.0</msg>
<status status="PASS" endtime="20170728 15:17:32.993" starttime="20170728 15:17:32.987"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:32.997" starttime="20170728 15:17:32.996"></status>
</kw>
<msg timestamp="20170728 15:17:32.998" level="INFO">${frozen_amount} = 822.00</msg>
<status status="PASS" endtime="20170728 15:17:32.998" starttime="20170728 15:17:32.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 15:17:33.000" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 15:17:33.001" starttime="20170728 15:17:32.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 15:17:33.003" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 15:17:33.005" starttime="20170728 15:17:33.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 15:17:33.007" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 15:17:33.007" starttime="20170728 15:17:33.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 15:17:33.009" level="INFO">${amount} = 0</msg>
<status status="PASS" endtime="20170728 15:17:33.010" starttime="20170728 15:17:33.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 15:17:33.012" level="INFO">${total_amount} = 50425.0</msg>
<status status="PASS" endtime="20170728 15:17:33.013" starttime="20170728 15:17:33.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 15:17:33.014" level="INFO">${balance_amount} = 49603.0</msg>
<status status="PASS" endtime="20170728 15:17:33.015" starttime="20170728 15:17:33.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 15:17:33.017" level="INFO">${frozen_amount} = 822.00</msg>
<status status="PASS" endtime="20170728 15:17:33.017" starttime="20170728 15:17:33.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 15:17:33.019" level="INFO">${event_code_after} = 7</msg>
<status status="PASS" endtime="20170728 15:17:33.020" starttime="20170728 15:17:33.018"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:33.021" starttime="20170728 15:17:32.942"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 15:17:33.023" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:33.024" starttime="20170728 15:17:33.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 15:17:33.025" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 15:17:33.026" starttime="20170728 15:17:33.024"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 15:17:33.030" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:33.031" starttime="20170728 15:17:33.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170728 15:17:33.033" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170728 15:17:33.033" starttime="20170728 15:17:33.032"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 15:17:33.035" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:33.036" starttime="20170728 15:17:33.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 15:17:33.038" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 15:17:33.039" starttime="20170728 15:17:33.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 15:17:33.042" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 15:17:33.043" starttime="20170728 15:17:33.040"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 15:17:33.046" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:33.047" starttime="20170728 15:17:33.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 15:17:33.049" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 15:17:33.050" starttime="20170728 15:17:33.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170728 15:17:33.051" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170728 15:17:33.052" starttime="20170728 15:17:33.050"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_unilateral}</var>
</assign>
<msg timestamp="20170728 15:17:33.054" level="INFO">${user_id[0][0]_unilateral} = 6891</msg>
<status status="PASS" endtime="20170728 15:17:33.055" starttime="20170728 15:17:33.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_unilateral}</arg>
</arguments>
<msg timestamp="20170728 15:17:33.058" level="INFO">${user_id[0][0]_unilateral} = 6891</msg>
<status status="PASS" endtime="20170728 15:17:33.060" starttime="20170728 15:17:33.056"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]_unilateral}'</arg>
</arguments>
<msg timestamp="20170728 15:17:33.063" level="INFO">Executing : Execute SQL String  |  delete from account_unilateral_bill where id ='6891' </msg>
<status status="PASS" endtime="20170728 15:17:33.182" starttime="20170728 15:17:33.061"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:33.184" starttime="20170728 15:17:32.799"></status>
</kw>
<kw name="表ajb_account_transaction" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170728 15:17:33.190" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170728 15:17:33.191" starttime="20170728 15:17:33.187"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:17:33.200" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:17:33.214" starttime="20170728 15:17:33.198"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:33.216" starttime="20170728 15:17:33.195"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:33.218" starttime="20170728 15:17:33.193"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>ajb_account_transaction</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:17:33.230" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:17:33.247" starttime="20170728 15:17:33.227"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:33.249" starttime="20170728 15:17:33.224"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:33.251" starttime="20170728 15:17:33.222"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 15:17:33.255" level="INFO">${current_time} = 2017-07-28 15:17:33.255</msg>
<status status="PASS" endtime="20170728 15:17:33.256" starttime="20170728 15:17:33.253"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>5 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 15:17:33.259" level="INFO">${current_time_before_30} = 2017-07-28 15:17:28.255</msg>
<status status="PASS" endtime="20170728 15:17:33.260" starttime="20170728 15:17:33.258"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 15:17:33.262" level="INFO">${current_time_after_30} = 2017-07-28 15:19:13.255</msg>
<status status="PASS" endtime="20170728 15:17:33.263" starttime="20170728 15:17:33.261"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 15:17:33.265" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and update_time between' 2017-07-28 15:17:28.255' and '2017-07-28 15:19:13.255' </msg>
<msg timestamp="20170728 15:17:33.278" level="INFO">${updatetime} = ((88889478, '32102151361501207662', 100000, 6135, 1, '32102151361501207662', '20170728151834RER051367', Decimal('0.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 28, 15, 18, 38), datetime.datetime(2017,...</msg>
<status status="PASS" endtime="20170728 15:17:33.279" starttime="20170728 15:17:33.264"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 15:17:33.281" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 15:17:33.281" starttime="20170728 15:17:33.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 15:17:33.283" level="INFO">ajb_account_transaction表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 15:17:33.284" starttime="20170728 15:17:33.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 15:17:33.286" level="INFO">${current_time_before_30} = 2017-07-28 15:17:28.255</msg>
<status status="PASS" endtime="20170728 15:17:33.287" starttime="20170728 15:17:33.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 15:17:33.290" level="INFO">${current_time_after_30} = 2017-07-28 15:19:13.255</msg>
<status status="PASS" endtime="20170728 15:17:33.291" starttime="20170728 15:17:33.289"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:33.292" starttime="20170728 15:17:33.219"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 15:17:33.296" level="INFO">Executing : Query  |  select * from ajb_account_transaction where account_id ='6135' and update_time between' 2017-07-28 15:17:28.255' and '2017-07-28 15:19:13.255' </msg>
<msg timestamp="20170728 15:17:33.321" level="INFO">${user_id} = ((88889478, '32102151361501207662', 100000, 6135, 1, '32102151361501207662', '20170728151834RER051367', Decimal('0.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 28, 15, 18, 38), datetime.datetime(2017,...</msg>
<status status="PASS" endtime="20170728 15:17:33.323" starttime="20170728 15:17:33.294"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 15:17:33.325" level="INFO">Length is 20</msg>
<msg timestamp="20170728 15:17:33.326" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 15:17:33.326" starttime="20170728 15:17:33.324"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 15:17:33.328" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:33.329" starttime="20170728 15:17:33.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 15:17:33.330" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 15:17:33.331" starttime="20170728 15:17:33.329"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:33.333" starttime="20170728 15:17:33.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 15:17:33.334" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 15:17:33.335" starttime="20170728 15:17:33.334"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 15:17:33.337" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:33.338" starttime="20170728 15:17:33.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no的值正确</arg>
</arguments>
<msg timestamp="20170728 15:17:33.340" level="INFO">channel_no的值正确</msg>
<status status="PASS" endtime="20170728 15:17:33.341" starttime="20170728 15:17:33.339"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${args11}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${orderNum}</arg>
</arguments>
<assign>
<var>${bill_order_num}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:33.345" starttime="20170728 15:17:33.344"></status>
</kw>
<msg timestamp="20170728 15:17:33.346" level="INFO">${bill_order_num} = 32102151361501207662</msg>
<status status="PASS" endtime="20170728 15:17:33.346" starttime="20170728 15:17:33.342"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>${bill_order_num}</arg>
</arguments>
<msg timestamp="20170728 15:17:33.348" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:33.348" starttime="20170728 15:17:33.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170728 15:17:33.350" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170728 15:17:33.351" starttime="20170728 15:17:33.349"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>7</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:33.358" starttime="20170728 15:17:33.357"></status>
</kw>
<msg timestamp="20170728 15:17:33.360" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 15:17:33.361" starttime="20170728 15:17:33.353"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 15:17:33.363" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 15:17:33.365" starttime="20170728 15:17:33.362"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:33.370" starttime="20170728 15:17:33.368"></status>
</kw>
<msg timestamp="20170728 15:17:33.372" level="INFO">${event_code_after} = 7</msg>
<status status="PASS" endtime="20170728 15:17:33.372" starttime="20170728 15:17:33.366"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 15:17:33.375" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 15:17:33.375" starttime="20170728 15:17:33.373"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:33.379" starttime="20170728 15:17:33.378"></status>
</kw>
<msg timestamp="20170728 15:17:33.380" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 15:17:33.380" starttime="20170728 15:17:33.376"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:33.384" starttime="20170728 15:17:33.383"></status>
</kw>
<msg timestamp="20170728 15:17:33.384" level="INFO">${amount} = 0</msg>
<status status="PASS" endtime="20170728 15:17:33.385" starttime="20170728 15:17:33.381"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 15:17:33.387" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 15:17:33.389" starttime="20170728 15:17:33.386"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:33.392" starttime="20170728 15:17:33.391"></status>
</kw>
<msg timestamp="20170728 15:17:33.393" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 15:17:33.393" starttime="20170728 15:17:33.390"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:33.397" starttime="20170728 15:17:33.396"></status>
</kw>
<msg timestamp="20170728 15:17:33.398" level="INFO">${total_amount} = 50425.0</msg>
<status status="PASS" endtime="20170728 15:17:33.399" starttime="20170728 15:17:33.394"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:33.403" starttime="20170728 15:17:33.402"></status>
</kw>
<msg timestamp="20170728 15:17:33.404" level="INFO">${balance_amount} = 49603.0</msg>
<status status="PASS" endtime="20170728 15:17:33.404" starttime="20170728 15:17:33.400"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:33.411" starttime="20170728 15:17:33.410"></status>
</kw>
<msg timestamp="20170728 15:17:33.412" level="INFO">${frozen_amount} = 822.00</msg>
<status status="PASS" endtime="20170728 15:17:33.412" starttime="20170728 15:17:33.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 15:17:33.414" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 15:17:33.415" starttime="20170728 15:17:33.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 15:17:33.418" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 15:17:33.419" starttime="20170728 15:17:33.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 15:17:33.421" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 15:17:33.422" starttime="20170728 15:17:33.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 15:17:33.425" level="INFO">${amount} = 0</msg>
<status status="PASS" endtime="20170728 15:17:33.426" starttime="20170728 15:17:33.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 15:17:33.428" level="INFO">${total_amount} = 50425.0</msg>
<status status="PASS" endtime="20170728 15:17:33.428" starttime="20170728 15:17:33.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 15:17:33.430" level="INFO">${balance_amount} = 49603.0</msg>
<status status="PASS" endtime="20170728 15:17:33.430" starttime="20170728 15:17:33.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 15:17:33.434" level="INFO">${frozen_amount} = 822.00</msg>
<status status="PASS" endtime="20170728 15:17:33.435" starttime="20170728 15:17:33.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 15:17:33.437" level="INFO">${event_code_after} = 7</msg>
<status status="PASS" endtime="20170728 15:17:33.438" starttime="20170728 15:17:33.436"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:33.439" starttime="20170728 15:17:33.352"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170728 15:17:33.441" level="INFO">${pay_no_after} = 20170728151834RER051367</msg>
<status status="PASS" endtime="20170728 15:17:33.442" starttime="20170728 15:17:33.440"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170728 15:17:33.444" level="INFO">Length is 23</msg>
<msg timestamp="20170728 15:17:33.444" level="INFO">${pay_no_after_length} = 23</msg>
<status status="PASS" endtime="20170728 15:17:33.445" starttime="20170728 15:17:33.443"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 15:17:33.446" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:33.447" starttime="20170728 15:17:33.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170728 15:17:33.451" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170728 15:17:33.451" starttime="20170728 15:17:33.449"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 15:17:33.455" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:33.456" starttime="20170728 15:17:33.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 15:17:33.459" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 15:17:33.459" starttime="20170728 15:17:33.458"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 15:17:33.461" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:33.462" starttime="20170728 15:17:33.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 15:17:33.464" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 15:17:33.464" starttime="20170728 15:17:33.463"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][9]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 15:17:33.466" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:33.467" starttime="20170728 15:17:33.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 15:17:33.468" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 15:17:33.469" starttime="20170728 15:17:33.468"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 15:17:33.473" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:33.473" starttime="20170728 15:17:33.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170728 15:17:33.475" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170728 15:17:33.475" starttime="20170728 15:17:33.474"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 15:17:33.477" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:33.478" starttime="20170728 15:17:33.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 15:17:33.481" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 15:17:33.482" starttime="20170728 15:17:33.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 15:17:33.484" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 15:17:33.485" starttime="20170728 15:17:33.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170728 15:17:33.486" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170728 15:17:33.487" starttime="20170728 15:17:33.485"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170728 15:17:33.489" level="INFO">${user_id[0][0]_transaction} = 88889478</msg>
<status status="PASS" endtime="20170728 15:17:33.489" starttime="20170728 15:17:33.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170728 15:17:33.491" level="INFO">${user_id[0][0]_transaction} = 88889478</msg>
<status status="PASS" endtime="20170728 15:17:33.492" starttime="20170728 15:17:33.490"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id[0][0]}'</arg>
</arguments>
<assign>
<var>${user_id_unilateral_delete1}</var>
</assign>
<msg timestamp="20170728 15:17:33.498" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88889478' </msg>
<msg timestamp="20170728 15:17:33.579" level="INFO">${user_id_unilateral_delete1} = None</msg>
<status status="PASS" endtime="20170728 15:17:33.580" starttime="20170728 15:17:33.494"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:33.581" starttime="20170728 15:17:33.185"></status>
</kw>
<kw name="表account_amount的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_amount</arg>
</arguments>
<msg timestamp="20170728 15:17:33.586" level="INFO">现在开始校验表account_amount</msg>
<status status="PASS" endtime="20170728 15:17:33.587" starttime="20170728 15:17:33.584"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:17:33.592" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:17:33.605" starttime="20170728 15:17:33.590"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:33.607" starttime="20170728 15:17:33.589"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:33.608" starttime="20170728 15:17:33.588"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time1}</var>
</assign>
<msg timestamp="20170728 15:17:33.611" level="INFO">${current_time1} = 2017-07-28 15:17:33.611</msg>
<status status="PASS" endtime="20170728 15:17:33.612" starttime="20170728 15:17:33.610"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_before_30}</var>
</assign>
<msg timestamp="20170728 15:17:33.614" level="INFO">${current_time1_before_30} = 2017-07-28 15:16:33.611</msg>
<status status="PASS" endtime="20170728 15:17:33.615" starttime="20170728 15:17:33.613"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_after_30}</var>
</assign>
<msg timestamp="20170728 15:17:33.617" level="INFO">${current_time1_after_30} = 2017-07-28 15:18:33.611</msg>
<status status="PASS" endtime="20170728 15:17:33.617" starttime="20170728 15:17:33.616"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 15:17:33.621" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 15:17:33.630" level="INFO">${user_id} = ((12449, 6135, Decimal('50425.00'), Decimal('49603.00'), Decimal('822.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 15, 18, 37), 0),)</msg>
<status status="PASS" endtime="20170728 15:17:33.631" starttime="20170728 15:17:33.618"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>7</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:33.639" starttime="20170728 15:17:33.637"></status>
</kw>
<msg timestamp="20170728 15:17:33.640" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 15:17:33.641" starttime="20170728 15:17:33.633"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 15:17:33.643" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 15:17:33.643" starttime="20170728 15:17:33.642"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:33.647" starttime="20170728 15:17:33.646"></status>
</kw>
<msg timestamp="20170728 15:17:33.647" level="INFO">${event_code_after} = 7</msg>
<status status="PASS" endtime="20170728 15:17:33.648" starttime="20170728 15:17:33.644"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 15:17:33.650" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 15:17:33.651" starttime="20170728 15:17:33.649"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>3</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:33.657" starttime="20170728 15:17:33.655"></status>
</kw>
<msg timestamp="20170728 15:17:33.658" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 15:17:33.659" starttime="20170728 15:17:33.652"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:33.663" starttime="20170728 15:17:33.662"></status>
</kw>
<msg timestamp="20170728 15:17:33.663" level="INFO">${amount} = 0</msg>
<status status="PASS" endtime="20170728 15:17:33.664" starttime="20170728 15:17:33.660"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 15:17:33.667" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 15:17:33.668" starttime="20170728 15:17:33.665"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:33.674" starttime="20170728 15:17:33.672"></status>
</kw>
<msg timestamp="20170728 15:17:33.675" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 15:17:33.675" starttime="20170728 15:17:33.669"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:33.679" starttime="20170728 15:17:33.678"></status>
</kw>
<msg timestamp="20170728 15:17:33.680" level="INFO">${total_amount} = 50425.0</msg>
<status status="PASS" endtime="20170728 15:17:33.681" starttime="20170728 15:17:33.676"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:33.688" starttime="20170728 15:17:33.686"></status>
</kw>
<msg timestamp="20170728 15:17:33.689" level="INFO">${balance_amount} = 49603.0</msg>
<status status="PASS" endtime="20170728 15:17:33.690" starttime="20170728 15:17:33.682"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:33.693" starttime="20170728 15:17:33.692"></status>
</kw>
<msg timestamp="20170728 15:17:33.694" level="INFO">${frozen_amount} = 822.00</msg>
<status status="PASS" endtime="20170728 15:17:33.695" starttime="20170728 15:17:33.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 15:17:33.697" level="INFO">${event_code} = 7</msg>
<status status="PASS" endtime="20170728 15:17:33.698" starttime="20170728 15:17:33.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 15:17:33.700" level="INFO">${command_type} = 3</msg>
<status status="PASS" endtime="20170728 15:17:33.700" starttime="20170728 15:17:33.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 15:17:33.702" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 15:17:33.703" starttime="20170728 15:17:33.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 15:17:33.706" level="INFO">${amount} = 0</msg>
<status status="PASS" endtime="20170728 15:17:33.706" starttime="20170728 15:17:33.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 15:17:33.708" level="INFO">${total_amount} = 50425.0</msg>
<status status="PASS" endtime="20170728 15:17:33.709" starttime="20170728 15:17:33.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 15:17:33.711" level="INFO">${balance_amount} = 49603.0</msg>
<status status="PASS" endtime="20170728 15:17:33.711" starttime="20170728 15:17:33.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 15:17:33.714" level="INFO">${frozen_amount} = 822.00</msg>
<status status="PASS" endtime="20170728 15:17:33.715" starttime="20170728 15:17:33.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 15:17:33.718" level="INFO">${event_code_after} = 7</msg>
<status status="PASS" endtime="20170728 15:17:33.718" starttime="20170728 15:17:33.716"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:33.719" starttime="20170728 15:17:33.632"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 15:17:33.722" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:33.723" starttime="20170728 15:17:33.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 15:17:33.724" level="INFO">total_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 15:17:33.725" starttime="20170728 15:17:33.723"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 15:17:33.727" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:33.728" starttime="20170728 15:17:33.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 15:17:33.729" level="INFO">balance_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 15:17:33.730" starttime="20170728 15:17:33.728"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:33.735" starttime="20170728 15:17:33.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 15:17:33.739" level="INFO">frozen_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 15:17:33.741" starttime="20170728 15:17:33.737"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 15:17:33.744" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:33.745" starttime="20170728 15:17:33.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 15:17:33.747" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 15:17:33.747" starttime="20170728 15:17:33.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount校验成功！</arg>
</arguments>
<msg timestamp="20170728 15:17:33.749" level="INFO">表account_amount校验成功！</msg>
<status status="PASS" endtime="20170728 15:17:33.751" starttime="20170728 15:17:33.749"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:33.753" starttime="20170728 15:17:33.583"></status>
</kw>
<kw name="艾佳币恢复数目" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:17:33.760" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:17:33.797" starttime="20170728 15:17:33.759"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:33.798" starttime="20170728 15:17:33.757"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:33.799" starttime="20170728 15:17:33.755"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount \ SET total_amount=${database[0][2]},balance_amount=${database[0][3]},frozen_amount=${database[0][4]}where account_id="${account_id}";</arg>
</arguments>
<msg timestamp="20170728 15:17:33.801" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount  SET total_amount=50425.00,balance_amount=49603.00,frozen_amount=822.00where account_id="6135"; </msg>
<status status="PASS" endtime="20170728 15:17:33.841" starttime="20170728 15:17:33.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170728 15:17:33.843" level="INFO">成功</msg>
<status status="PASS" endtime="20170728 15:17:33.843" starttime="20170728 15:17:33.842"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:33.844" starttime="20170728 15:17:33.754"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:33.845" critical="yes" starttime="20170728 15:17:32.442"></status>
</test>
<test id="s1-s1-s1-t3" name="输入未有的user_id和正确的amount参数">
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>123456785</arg>
<arg>1</arg>
<arg>2</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 15:17:33.855" level="INFO">${args11} = 123456785</msg>
<status status="PASS" endtime="20170728 15:17:33.856" starttime="20170728 15:17:33.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 15:17:33.859" level="INFO">${args22} = 1</msg>
<status status="PASS" endtime="20170728 15:17:33.860" starttime="20170728 15:17:33.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 15:17:33.862" level="INFO">${args33} = 2</msg>
<status status="PASS" endtime="20170728 15:17:33.863" starttime="20170728 15:17:33.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 15:17:33.866" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 15:17:33.867" starttime="20170728 15:17:33.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 15:17:33.869" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</msg>
<status status="PASS" endtime="20170728 15:17:33.869" starttime="20170728 15:17:33.868"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:33.871" starttime="20170728 15:17:33.851"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:17:33.877" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:17:33.911" starttime="20170728 15:17:33.875"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:33.913" starttime="20170728 15:17:33.874"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:33.914" starttime="20170728 15:17:33.872"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id ='${args11}'</arg>
</arguments>
<assign>
<var>${no_user_id}</var>
</assign>
<msg timestamp="20170728 15:17:33.916" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id ='123456785' </msg>
<msg timestamp="20170728 15:17:33.934" level="INFO">${no_user_id} = ()</msg>
<status status="PASS" endtime="20170728 15:17:33.935" starttime="20170728 15:17:33.915"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${no_user_id}</arg>
</arguments>
<msg timestamp="20170728 15:17:33.938" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170728 15:17:33.939" starttime="20170728 15:17:33.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>此user_id不存在</arg>
</arguments>
<msg timestamp="20170728 15:17:33.941" level="INFO">此user_id不存在</msg>
<status status="PASS" endtime="20170728 15:17:33.941" starttime="20170728 15:17:33.940"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 15:17:33.943" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</msg>
<status status="PASS" endtime="20170728 15:17:33.943" starttime="20170728 15:17:33.942"></status>
</kw>
<kw name="Data" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data_no_user_id}</var>
</assign>
<msg timestamp="20170728 15:17:34.041" level="INFO">${data_no_user_id} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 15:17:34.043" starttime="20170728 15:17:33.944"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data_no_user_id.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 15:17:34.053" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:34.055" starttime="20170728 15:17:34.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 15:17:34.063" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 15:17:34.066" starttime="20170728 15:17:34.059"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data_no_user_id.text}</arg>
</arguments>
<assign>
<var>${toJson1}</var>
</assign>
<msg timestamp="20170728 15:17:34.076" level="INFO">To JSON using : content={"data":{"orderNum":"32102151361501207668"},"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 15:17:34.078" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 15:17:34.079" level="INFO">${toJson1} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': {u'orderNum': u'32102151361501207668'}, u'success': True}</msg>
<status status="PASS" endtime="20170728 15:17:34.079" starttime="20170728 15:17:34.070"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson1['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 15:17:34.081" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:34.082" starttime="20170728 15:17:34.080"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson1['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:34.085" starttime="20170728 15:17:34.083"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${toJson1['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${no_user_id_orderNum}</var>
</assign>
<msg timestamp="20170728 15:17:34.090" level="INFO">${no_user_id_orderNum} = 32102151361501207668</msg>
<status status="PASS" endtime="20170728 15:17:34.092" starttime="20170728 15:17:34.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 15:17:34.094" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 15:17:34.095" starttime="20170728 15:17:34.093"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id ='${args11}'</arg>
</arguments>
<assign>
<var>${no_user_id_after}</var>
</assign>
<msg timestamp="20170728 15:17:34.097" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id ='123456785' </msg>
<msg timestamp="20170728 15:17:34.115" level="INFO">${no_user_id_after} = ((100000000025L, '32102151361501207667', 123456785, 6291, 1, 2, 0, datetime.datetime(2017, 7, 28, 15, 18, 39), datetime.datetime(2017, 7, 28, 15, 18, 39)),)</msg>
<status status="PASS" endtime="20170728 15:17:34.116" starttime="20170728 15:17:34.095"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${no_user_id_after}</arg>
</arguments>
<msg timestamp="20170728 15:17:34.118" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 15:17:34.118" starttime="20170728 15:17:34.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>调用艾佳币充值接口自动生成boss的账号</arg>
</arguments>
<msg timestamp="20170728 15:17:34.122" level="INFO">调用艾佳币充值接口自动生成boss的账号</msg>
<status status="PASS" endtime="20170728 15:17:34.123" starttime="20170728 15:17:34.119"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${no_user_id_after[0][3]}</arg>
</arguments>
<assign>
<var>${no_user_id_account_id}</var>
</assign>
<msg timestamp="20170728 15:17:34.126" level="INFO">${no_user_id_account_id} = 6291</msg>
<status status="PASS" endtime="20170728 15:17:34.126" starttime="20170728 15:17:34.124"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_open_record where user_id ='${args11}'</arg>
</arguments>
<msg timestamp="20170728 15:17:34.128" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_open_record where user_id ='123456785' </msg>
<status status="PASS" endtime="20170728 15:17:34.257" starttime="20170728 15:17:34.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>已删除该账号！</arg>
</arguments>
<msg timestamp="20170728 15:17:34.261" level="INFO">已删除该账号！</msg>
<status status="PASS" endtime="20170728 15:17:34.262" starttime="20170728 15:17:34.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_unilateral_bill</arg>
</arguments>
<msg timestamp="20170728 15:17:34.265" level="INFO">现在开始校验表account_unilateral_bill</msg>
<status status="PASS" endtime="20170728 15:17:34.266" starttime="20170728 15:17:34.263"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time_no}</var>
</assign>
<msg timestamp="20170728 15:17:34.270" level="INFO">${current_time_no} = 2017-07-28 15:17:34.270</msg>
<status status="PASS" endtime="20170728 15:17:34.271" starttime="20170728 15:17:34.268"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_no}</arg>
<arg>15 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_301}</var>
</assign>
<msg timestamp="20170728 15:17:34.274" level="INFO">${current_time_before_301} = 2017-07-28 15:17:19.270</msg>
<status status="PASS" endtime="20170728 15:17:34.275" starttime="20170728 15:17:34.272"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_no}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_302}</var>
</assign>
<msg timestamp="20170728 15:17:34.279" level="INFO">${current_time_after_302} = 2017-07-28 15:18:39.270</msg>
<status status="PASS" endtime="20170728 15:17:34.281" starttime="20170728 15:17:34.277"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${no_user_id_account_id}'and update_time between' ${current_time_before_301}' and '${current_time_after_302}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 15:17:34.283" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6291'and update_time between' 2017-07-28 15:17:19.270' and '2017-07-28 15:18:39.270' </msg>
<msg timestamp="20170728 15:17:34.294" level="INFO">${user_id} = ((6894, '32102151361501207672', 123456785, 6291, '32102151361501207669', 1, 7, 3, Decimal('1.00'), None, datetime.datetime(2017, 7, 28, 15, 18, 39), datetime.datetime(2017, 7, 28, 15, 18, 39), 0),)</msg>
<status status="PASS" endtime="20170728 15:17:34.295" starttime="20170728 15:17:34.282"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170728 15:17:34.298" level="INFO">Length is 20</msg>
<msg timestamp="20170728 15:17:34.299" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170728 15:17:34.300" starttime="20170728 15:17:34.296"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 15:17:34.302" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:34.302" starttime="20170728 15:17:34.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 15:17:34.305" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 15:17:34.305" starttime="20170728 15:17:34.303"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 15:17:34.307" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:34.308" starttime="20170728 15:17:34.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 15:17:34.310" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 15:17:34.311" starttime="20170728 15:17:34.308"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170728 15:17:34.313" level="INFO">Length is 20</msg>
<msg timestamp="20170728 15:17:34.313" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170728 15:17:34.314" starttime="20170728 15:17:34.312"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 15:17:34.315" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:34.316" starttime="20170728 15:17:34.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 15:17:34.318" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 15:17:34.318" starttime="20170728 15:17:34.317"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 15:17:34.321" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:34.322" starttime="20170728 15:17:34.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 15:17:34.323" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 15:17:34.324" starttime="20170728 15:17:34.322"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>7</arg>
</arguments>
<msg timestamp="20170728 15:17:34.326" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:34.326" starttime="20170728 15:17:34.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 15:17:34.328" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 15:17:34.328" starttime="20170728 15:17:34.327"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20170728 15:17:34.331" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:34.332" starttime="20170728 15:17:34.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170728 15:17:34.333" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170728 15:17:34.334" starttime="20170728 15:17:34.332"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 15:17:34.336" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:34.337" starttime="20170728 15:17:34.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 15:17:34.339" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 15:17:34.340" starttime="20170728 15:17:34.337"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${user_id[0][10]}</arg>
<arg>${user_id[0][11]}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:34.343" starttime="20170728 15:17:34.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 15:17:34.345" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 15:17:34.345" starttime="20170728 15:17:34.344"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 15:17:34.347" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:34.348" starttime="20170728 15:17:34.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 15:17:34.350" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 15:17:34.350" starttime="20170728 15:17:34.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170728 15:17:34.352" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170728 15:17:34.352" starttime="20170728 15:17:34.351"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_unilateral}</var>
</assign>
<msg timestamp="20170728 15:17:34.355" level="INFO">${user_id[0][0]_unilateral} = 6894</msg>
<status status="PASS" endtime="20170728 15:17:34.357" starttime="20170728 15:17:34.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_unilateral}</arg>
</arguments>
<msg timestamp="20170728 15:17:34.359" level="INFO">${user_id[0][0]_unilateral} = 6894</msg>
<status status="PASS" endtime="20170728 15:17:34.360" starttime="20170728 15:17:34.358"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]_unilateral}'</arg>
</arguments>
<msg timestamp="20170728 15:17:34.362" level="INFO">Executing : Execute SQL String  |  delete from account_unilateral_bill where id ='6894' </msg>
<status status="PASS" endtime="20170728 15:17:34.418" starttime="20170728 15:17:34.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170728 15:17:34.421" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170728 15:17:34.422" starttime="20170728 15:17:34.420"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time_nouser}</var>
</assign>
<msg timestamp="20170728 15:17:34.424" level="INFO">${current_time_nouser} = 2017-07-28 15:17:34.423</msg>
<status status="PASS" endtime="20170728 15:17:34.424" starttime="20170728 15:17:34.423"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_nouser}</arg>
<arg>15 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_3011}</var>
</assign>
<msg timestamp="20170728 15:17:34.426" level="INFO">${current_time_before_3011} = 2017-07-28 15:17:19.423</msg>
<status status="PASS" endtime="20170728 15:17:34.427" starttime="20170728 15:17:34.425"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_nouser}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_3022}</var>
</assign>
<msg timestamp="20170728 15:17:34.429" level="INFO">${current_time_after_3022} = 2017-07-28 15:18:39.423</msg>
<status status="PASS" endtime="20170728 15:17:34.429" starttime="20170728 15:17:34.427"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where account_id ='${no_user_id_account_id}' and update_time between' ${current_time_before_3011}' and '${current_time_after_3022}'</arg>
</arguments>
<assign>
<var>${user_id_no}</var>
</assign>
<msg timestamp="20170728 15:17:34.433" level="INFO">Executing : Query  |  select * from ajb_account_transaction where account_id ='6291' and update_time between' 2017-07-28 15:17:19.423' and '2017-07-28 15:18:39.423' </msg>
<msg timestamp="20170728 15:17:34.451" level="INFO">${user_id_no} = ((88889479, '32102151361501207668', 123456785, 6291, 1, '32102151361501207668', '20170728151836JOB051368', Decimal('1.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 28, 15, 18, 39), datetime.datetime(20...</msg>
<status status="PASS" endtime="20170728 15:17:34.452" starttime="20170728 15:17:34.430"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id_no[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 15:17:34.455" level="INFO">Length is 20</msg>
<msg timestamp="20170728 15:17:34.456" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 15:17:34.457" starttime="20170728 15:17:34.454"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 15:17:34.459" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:34.460" starttime="20170728 15:17:34.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 15:17:34.462" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 15:17:34.463" starttime="20170728 15:17:34.461"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][2]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 15:17:34.466" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:34.466" starttime="20170728 15:17:34.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 15:17:34.468" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 15:17:34.468" starttime="20170728 15:17:34.467"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][4]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 15:17:34.470" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:34.471" starttime="20170728 15:17:34.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no的值正确</arg>
</arguments>
<msg timestamp="20170728 15:17:34.472" level="INFO">channel_no的值正确</msg>
<status status="PASS" endtime="20170728 15:17:34.473" starttime="20170728 15:17:34.472"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][5]}</arg>
<arg>${no_user_id_orderNum}</arg>
</arguments>
<msg timestamp="20170728 15:17:34.475" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:34.476" starttime="20170728 15:17:34.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170728 15:17:34.478" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170728 15:17:34.479" starttime="20170728 15:17:34.476"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id_no[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170728 15:17:34.482" level="INFO">${pay_no_after} = 20170728151836JOB051368</msg>
<status status="PASS" endtime="20170728 15:17:34.483" starttime="20170728 15:17:34.480"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170728 15:17:34.485" level="INFO">Length is 23</msg>
<msg timestamp="20170728 15:17:34.486" level="INFO">${pay_no_after_length} = 23</msg>
<status status="PASS" endtime="20170728 15:17:34.487" starttime="20170728 15:17:34.484"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>23</arg>
</arguments>
<msg timestamp="20170728 15:17:34.489" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:34.489" starttime="20170728 15:17:34.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170728 15:17:34.491" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170728 15:17:34.492" starttime="20170728 15:17:34.490"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][7]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 15:17:34.495" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:34.496" starttime="20170728 15:17:34.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 15:17:34.498" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 15:17:34.498" starttime="20170728 15:17:34.497"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 15:17:34.500" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:34.501" starttime="20170728 15:17:34.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 15:17:34.503" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 15:17:34.504" starttime="20170728 15:17:34.502"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][9]}</arg>
<arg>7</arg>
</arguments>
<msg timestamp="20170728 15:17:34.506" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:34.506" starttime="20170728 15:17:34.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 15:17:34.509" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 15:17:34.510" starttime="20170728 15:17:34.507"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 15:17:34.513" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:34.513" starttime="20170728 15:17:34.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170728 15:17:34.515" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170728 15:17:34.516" starttime="20170728 15:17:34.514"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 15:17:34.517" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:34.518" starttime="20170728 15:17:34.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 15:17:34.520" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 15:17:34.521" starttime="20170728 15:17:34.519"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${user_id_no[0][12]}</arg>
<arg>${user_id_no[0][13]}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:34.523" starttime="20170728 15:17:34.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 15:17:34.525" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 15:17:34.526" starttime="20170728 15:17:34.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170728 15:17:34.527" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170728 15:17:34.528" starttime="20170728 15:17:34.526"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id_no[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170728 15:17:34.532" level="INFO">${user_id[0][0]_transaction} = 88889479</msg>
<status status="PASS" endtime="20170728 15:17:34.533" starttime="20170728 15:17:34.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170728 15:17:34.535" level="INFO">${user_id[0][0]_transaction} = 88889479</msg>
<status status="PASS" endtime="20170728 15:17:34.536" starttime="20170728 15:17:34.534"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id_no[0][0]}'</arg>
</arguments>
<msg timestamp="20170728 15:17:34.539" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88889479' </msg>
<status status="PASS" endtime="20170728 15:17:34.602" starttime="20170728 15:17:34.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_amount</arg>
</arguments>
<msg timestamp="20170728 15:17:34.606" level="INFO">现在开始校验表account_amount</msg>
<status status="PASS" endtime="20170728 15:17:34.607" starttime="20170728 15:17:34.604"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${no_user_id_account_id}'</arg>
</arguments>
<assign>
<var>${user_id_t}</var>
</assign>
<msg timestamp="20170728 15:17:34.610" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6291' </msg>
<msg timestamp="20170728 15:17:34.619" level="INFO">${user_id_t} = ((12605, 6291, Decimal('1.00'), Decimal('1.00'), Decimal('0.00'), datetime.datetime(2017, 7, 28, 15, 18, 39), datetime.datetime(2017, 7, 28, 15, 18, 39), 0),)</msg>
<status status="PASS" endtime="20170728 15:17:34.620" starttime="20170728 15:17:34.609"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][2]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 15:17:34.623" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:34.624" starttime="20170728 15:17:34.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 15:17:34.627" level="INFO">total_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 15:17:34.627" starttime="20170728 15:17:34.626"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][3]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 15:17:34.629" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:34.630" starttime="20170728 15:17:34.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 15:17:34.631" level="INFO">balance_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 15:17:34.632" starttime="20170728 15:17:34.631"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][4]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 15:17:34.634" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:34.634" starttime="20170728 15:17:34.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 15:17:34.638" level="INFO">frozen_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 15:17:34.638" starttime="20170728 15:17:34.636"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 15:17:34.640" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:34.641" starttime="20170728 15:17:34.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 15:17:34.643" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 15:17:34.644" starttime="20170728 15:17:34.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount校验成功！</arg>
</arguments>
<msg timestamp="20170728 15:17:34.646" level="INFO">表account_amount校验成功！</msg>
<status status="PASS" endtime="20170728 15:17:34.646" starttime="20170728 15:17:34.645"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_amount where account_id ='${no_user_id_account_id}'</arg>
</arguments>
<msg timestamp="20170728 15:17:34.648" level="INFO">Executing : Execute SQL String  |  delete from account_amount where account_id ='6291' </msg>
<status status="PASS" endtime="20170728 15:17:34.703" starttime="20170728 15:17:34.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>输入未有的user_id和正确的amount参数，会直接生成boss账户，然后表里的数据都入库成功！</arg>
</arguments>
<msg timestamp="20170728 15:17:34.705" level="INFO">输入未有的user_id和正确的amount参数，会直接生成boss账户，然后表里的数据都入库成功！</msg>
<status status="PASS" endtime="20170728 15:17:34.706" starttime="20170728 15:17:34.704"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:34.706" critical="yes" starttime="20170728 15:17:33.846"></status>
</test>
<test id="s1-s1-s1-t4" name="输入已有的userId和amount为字符时">
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>100000</arg>
<arg>str</arg>
<arg>2</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 15:17:34.718" level="INFO">${args11} = 100000</msg>
<status status="PASS" endtime="20170728 15:17:34.719" starttime="20170728 15:17:34.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 15:17:34.723" level="INFO">${args22} = str</msg>
<status status="PASS" endtime="20170728 15:17:34.724" starttime="20170728 15:17:34.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 15:17:34.728" level="INFO">${args33} = 2</msg>
<status status="PASS" endtime="20170728 15:17:34.729" starttime="20170728 15:17:34.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 15:17:34.733" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 15:17:34.734" starttime="20170728 15:17:34.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 15:17:34.738" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</msg>
<status status="PASS" endtime="20170728 15:17:34.740" starttime="20170728 15:17:34.736"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:34.740" starttime="20170728 15:17:34.713"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 15:17:34.746" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</msg>
<status status="PASS" endtime="20170728 15:17:34.747" starttime="20170728 15:17:34.744"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 15:17:34.749" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 15:17:34.750" starttime="20170728 15:17:34.748"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:34.754" starttime="20170728 15:17:34.753"></status>
</kw>
<msg timestamp="20170728 15:17:34.755" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 15:17:34.756" starttime="20170728 15:17:34.751"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>user_id</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:34.762" starttime="20170728 15:17:34.761"></status>
</kw>
<msg timestamp="20170728 15:17:34.763" level="INFO">${args11_after} = user_id</msg>
<status status="PASS" endtime="20170728 15:17:34.764" starttime="20170728 15:17:34.758"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:17:34.767" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:17:34.784" starttime="20170728 15:17:34.766"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:34.785" starttime="20170728 15:17:34.765"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:34.786" starttime="20170728 15:17:34.764"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 15:17:34.789" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and channel_no='1' </msg>
<msg timestamp="20170728 15:17:34.809" level="INFO">${database1} = ((9100, '32102151361499943857', 100000, 6135, 1, '32102151361499943857', '20170714000118SSP038852', Decimal('2.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, ...</msg>
<status status="PASS" endtime="20170728 15:17:34.810" starttime="20170728 15:17:34.787"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 15:17:34.812" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 15:17:34.828" level="INFO">${database} = ((12449, 6135, Decimal('50425.00'), Decimal('49603.00'), Decimal('822.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 15, 18, 37), 0),)</msg>
<status status="PASS" endtime="20170728 15:17:34.830" starttime="20170728 15:17:34.811"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 15:17:34.832" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 15:17:34.832" starttime="20170728 15:17:34.830"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 15:17:34.834" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 15:17:34.834" starttime="20170728 15:17:34.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 15:17:34.836" level="INFO">获得account_id值为：6135</msg>
<status status="PASS" endtime="20170728 15:17:34.837" starttime="20170728 15:17:34.835"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 15:17:34.838" level="INFO">${total_amount_before} = 50425.00</msg>
<status status="PASS" endtime="20170728 15:17:34.839" starttime="20170728 15:17:34.837"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 15:17:34.842" level="INFO">${balance_amount_before} = 49603.00</msg>
<status status="PASS" endtime="20170728 15:17:34.843" starttime="20170728 15:17:34.840"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 15:17:34.847" level="INFO">${frozen_amount_before} = 822.00</msg>
<status status="PASS" endtime="20170728 15:17:34.848" starttime="20170728 15:17:34.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 15:17:34.851" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 15:17:34.852" starttime="20170728 15:17:34.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 15:17:34.854" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 15:17:34.855" starttime="20170728 15:17:34.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 15:17:34.857" level="INFO">${total_amount_before} = 50425.00</msg>
<status status="PASS" endtime="20170728 15:17:34.858" starttime="20170728 15:17:34.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 15:17:34.860" level="INFO">${balance_amount_before} = 49603.00</msg>
<status status="PASS" endtime="20170728 15:17:34.861" starttime="20170728 15:17:34.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 15:17:34.863" level="INFO">${frozen_amount_before} = 822.00</msg>
<status status="PASS" endtime="20170728 15:17:34.863" starttime="20170728 15:17:34.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 15:17:34.865" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 15:17:34.865" starttime="20170728 15:17:34.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 15:17:34.867" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 15:17:34.868" starttime="20170728 15:17:34.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 15:17:34.870" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</msg>
<status status="PASS" endtime="20170728 15:17:34.871" starttime="20170728 15:17:34.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170728 15:17:34.873" level="INFO">${database} = ((12449, 6135, Decimal('50425.00'), Decimal('49603.00'), Decimal('822.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 15, 18, 37), 0),)</msg>
<status status="PASS" endtime="20170728 15:17:34.874" starttime="20170728 15:17:34.872"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:34.874" starttime="20170728 15:17:34.742"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Data" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:34.891" starttime="20170728 15:17:34.878"></status>
</kw>
<msg timestamp="20170728 15:17:34.892" level="INFO">${data} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20170728 15:17:34.893" starttime="20170728 15:17:34.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 15:17:34.896" level="INFO">${data} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20170728 15:17:34.896" starttime="20170728 15:17:34.895"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:34.897" starttime="20170728 15:17:34.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 15:17:34.899" level="INFO">400</msg>
<status status="PASS" endtime="20170728 15:17:34.900" starttime="20170728 15:17:34.898"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20170728 15:17:34.902" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:34.902" starttime="20170728 15:17:34.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>400由于语法格式有误，服务器无法理解此请求。</arg>
</arguments>
<msg timestamp="20170728 15:17:34.904" level="INFO">400由于语法格式有误，服务器无法理解此请求。</msg>
<status status="PASS" endtime="20170728 15:17:34.905" starttime="20170728 15:17:34.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 15:17:34.906" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 15:17:34.907" starttime="20170728 15:17:34.905"></status>
</kw>
<kw name="amount和表里的校验" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:17:34.912" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:17:34.924" starttime="20170728 15:17:34.911"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:34.925" starttime="20170728 15:17:34.910"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:34.926" starttime="20170728 15:17:34.909"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 15:17:34.928" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 15:17:34.940" level="INFO">${user_id} = ((12449, 6135, Decimal('50425.00'), Decimal('49603.00'), Decimal('822.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 15, 18, 37), 0),)</msg>
<status status="PASS" endtime="20170728 15:17:34.941" starttime="20170728 15:17:34.927"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:34.944" starttime="20170728 15:17:34.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 15:17:34.946" level="INFO">total_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 15:17:34.946" starttime="20170728 15:17:34.945"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:34.948" starttime="20170728 15:17:34.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 15:17:34.950" level="INFO">balance_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 15:17:34.950" starttime="20170728 15:17:34.949"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:17:34.954" starttime="20170728 15:17:34.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 15:17:34.957" level="INFO">frozen_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 15:17:34.958" starttime="20170728 15:17:34.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amounts的数据没有变化正确的</arg>
</arguments>
<msg timestamp="20170728 15:17:34.960" level="INFO">amounts的数据没有变化正确的</msg>
<status status="PASS" endtime="20170728 15:17:34.962" starttime="20170728 15:17:34.960"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 15:17:34.964" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:34.965" starttime="20170728 15:17:34.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount内容没有发生变化</arg>
</arguments>
<msg timestamp="20170728 15:17:34.967" level="INFO">表account_amount内容没有发生变化</msg>
<status status="PASS" endtime="20170728 15:17:34.968" starttime="20170728 15:17:34.966"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 15:17:34.969" level="INFO">${current_time} = 2017-07-28 15:17:34.969</msg>
<status status="PASS" endtime="20170728 15:17:34.970" starttime="20170728 15:17:34.968"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 15:17:34.973" level="INFO">${current_time_before_30} = 2017-07-28 15:16:34.969</msg>
<status status="PASS" endtime="20170728 15:17:34.973" starttime="20170728 15:17:34.972"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 15:17:34.975" level="INFO">${current_time_after_30} = 2017-07-28 15:18:39.969</msg>
<status status="PASS" endtime="20170728 15:17:34.976" starttime="20170728 15:17:34.974"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${bill_check}</var>
</assign>
<msg timestamp="20170728 15:17:34.978" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6135' and update_time between' 2017-07-28 15:16:34.969' and '2017-07-28 15:18:39.969' </msg>
<msg timestamp="20170728 15:17:34.986" level="INFO">${bill_check} = ()</msg>
<status status="PASS" endtime="20170728 15:17:34.987" starttime="20170728 15:17:34.977"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${bill_check}</arg>
</arguments>
<assign>
<var>${bill_check_length}</var>
</assign>
<msg timestamp="20170728 15:17:34.989" level="INFO">Length is 0</msg>
<msg timestamp="20170728 15:17:34.990" level="INFO">${bill_check_length} = 0</msg>
<status status="PASS" endtime="20170728 15:17:34.991" starttime="20170728 15:17:34.988"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${bill_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 15:17:34.992" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:34.994" starttime="20170728 15:17:34.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>account_unilateral_bill里的没有相关数据</arg>
</arguments>
<msg timestamp="20170728 15:17:34.996" level="INFO">account_unilateral_bill里的没有相关数据</msg>
<status status="PASS" endtime="20170728 15:17:34.998" starttime="20170728 15:17:34.995"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num ='${args11}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${transaction_check}</var>
</assign>
<msg timestamp="20170728 15:17:35.001" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num ='100000' and update_time between' 2017-07-28 15:16:34.969' and '2017-07-28 15:18:39.969' </msg>
<msg timestamp="20170728 15:17:35.014" level="INFO">${transaction_check} = ()</msg>
<status status="PASS" endtime="20170728 15:17:35.015" starttime="20170728 15:17:34.999"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${transaction_check}</arg>
</arguments>
<assign>
<var>${transaction_check_length}</var>
</assign>
<msg timestamp="20170728 15:17:35.018" level="INFO">Length is 0</msg>
<msg timestamp="20170728 15:17:35.018" level="INFO">${transaction_check_length} = 0</msg>
<status status="PASS" endtime="20170728 15:17:35.019" starttime="20170728 15:17:35.017"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${transaction_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 15:17:35.021" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:17:35.022" starttime="20170728 15:17:35.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>ajb_account_transaction里的没有相关数据</arg>
</arguments>
<msg timestamp="20170728 15:17:35.024" level="INFO">ajb_account_transaction里的没有相关数据</msg>
<status status="PASS" endtime="20170728 15:17:35.024" starttime="20170728 15:17:35.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库表里数据调用接口前后没有发生变化</arg>
</arguments>
<msg timestamp="20170728 15:17:35.027" level="INFO">数据库表里数据调用接口前后没有发生变化</msg>
<status status="PASS" endtime="20170728 15:17:35.027" starttime="20170728 15:17:35.025"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:35.028" starttime="20170728 15:17:34.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>输入已有的user_id和amount为字符的时候，语法错误，报400</arg>
</arguments>
<msg timestamp="20170728 15:17:35.030" level="INFO">输入已有的user_id和amount为字符的时候，语法错误，报400</msg>
<status status="PASS" endtime="20170728 15:17:35.030" starttime="20170728 15:17:35.029"></status>
</kw>
<kw name="艾佳币恢复数目" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:17:35.034" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:17:35.053" starttime="20170728 15:17:35.033"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:35.054" starttime="20170728 15:17:35.032"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:35.056" starttime="20170728 15:17:35.032"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount \ SET total_amount=${database[0][2]},balance_amount=${database[0][3]},frozen_amount=${database[0][4]}where account_id="${account_id}";</arg>
</arguments>
<msg timestamp="20170728 15:17:35.060" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount  SET total_amount=50425.00,balance_amount=49603.00,frozen_amount=822.00where account_id="6135"; </msg>
<status status="PASS" endtime="20170728 15:17:35.112" starttime="20170728 15:17:35.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170728 15:17:35.114" level="INFO">成功</msg>
<status status="PASS" endtime="20170728 15:17:35.115" starttime="20170728 15:17:35.114"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:35.116" starttime="20170728 15:17:35.031"></status>
</kw>
<status status="PASS" endtime="20170728 15:17:35.117" critical="yes" starttime="20170728 15:17:34.708"></status>
</test>
<status status="PASS" endtime="20170728 15:17:35.119" starttime="20170728 15:17:30.518"></status>
</suite>
<status status="PASS" endtime="20170728 15:17:35.129" starttime="20170728 15:17:30.514"></status>
</suite>
<status status="PASS" endtime="20170728 15:17:35.136" starttime="20170728 15:17:30.323"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="4">Critical Tests</stat>
<stat fail="0" pass="4">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="账户中心" pass="4">账户中心</stat>
<stat fail="0" id="s1-s1" name="艾佳币" pass="4">账户中心.艾佳币</stat>
<stat fail="0" id="s1-s1-s1" name="艾佳币充值" pass="4">账户中心.艾佳币.艾佳币充值</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20170728 15:17:30.790" level="ERROR">Error in file 'F:\logs and reports\账户中心\艾佳币\艾佳币充值.txt': Resource file '艾佳币需要的操作.txt' does not exist.</msg>
</errors>
</robot>
