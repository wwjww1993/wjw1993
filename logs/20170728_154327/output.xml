<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170728 15:44:50.509" generator="Robot 3.0.2 (Python 2.7.8 on win32)">
<suite source="F:\logs and reports\账户中心" id="s1" name="账户中心">
<suite source="F:\logs and reports\账户中心\订单" id="s1-s1" name="订单">
<suite source="F:\logs and reports\账户中心\订单\订单支付退款（线上）.txt" id="s1-s1-s1" name="订单支付退款（线上）">
<test id="s1-s1-s1-t1" name="输入参数全部正确">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:44:51.060" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:44:51.075" starttime="20170728 15:44:51.036"></status>
</kw>
<status status="PASS" endtime="20170728 15:44:51.077" starttime="20170728 15:44:51.035"></status>
</kw>
<status status="PASS" endtime="20170728 15:44:51.078" starttime="20170728 15:44:51.034"></status>
</kw>
<kw name="清数据" library="myResource">
<arguments>
<arg>888888</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:44:51.084" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:44:51.094" starttime="20170728 15:44:51.083"></status>
</kw>
<status status="PASS" endtime="20170728 15:44:51.095" starttime="20170728 15:44:51.081"></status>
</kw>
<status status="PASS" endtime="20170728 15:44:51.097" starttime="20170728 15:44:51.080"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170728 15:44:51.098" level="INFO">Executing : Query  |  select * from ajb_account_transaction where id=888888 </msg>
<msg timestamp="20170728 15:44:51.105" level="INFO">${check} = ((888888, '32102151361500885834', 100000, 6135, 1, '32102151361500885834', '', Decimal('2.00'), 1, 13, 2, 0, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)),)</msg>
<status status="PASS" endtime="20170728 15:44:51.105" starttime="20170728 15:44:51.097"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170728 15:44:51.107" level="INFO">Length is 1</msg>
<msg timestamp="20170728 15:44:51.108" level="INFO">${check_length} = 1</msg>
<status status="PASS" endtime="20170728 15:44:51.108" starttime="20170728 15:44:51.106"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} != 0</arg>
<arg>execute sql string</arg>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>数据库之前没有数据</arg>
</arguments>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<msg timestamp="20170728 15:44:51.111" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=888888 </msg>
<status status="PASS" endtime="20170728 15:44:51.191" starttime="20170728 15:44:51.110"></status>
</kw>
<status status="PASS" endtime="20170728 15:44:51.194" starttime="20170728 15:44:51.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库里面的这条数据清理成功啦。</arg>
</arguments>
<msg timestamp="20170728 15:44:51.199" level="INFO">数据库里面的这条数据清理成功啦。</msg>
<status status="PASS" endtime="20170728 15:44:51.200" starttime="20170728 15:44:51.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_delete}</arg>
</arguments>
<msg timestamp="20170728 15:44:51.205" level="INFO">${id_delete} = 888888</msg>
<status status="PASS" endtime="20170728 15:44:51.206" starttime="20170728 15:44:51.202"></status>
</kw>
<status status="PASS" endtime="20170728 15:44:51.208" starttime="20170728 15:44:51.079"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("${id_delete}","32102151361500885834","100000","6135","1","32102151361500885834","","2","1","13","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170728 15:44:51.214" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("888888","32102151361500885834","100000","6135","1","32102151361500885834","","2","1","13","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170728 15:44:51.300" starttime="20170728 15:44:51.210"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>32102151361500885834</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 15:44:51.308" level="INFO">${args11} = 32102151361500885834</msg>
<status status="PASS" endtime="20170728 15:44:51.309" starttime="20170728 15:44:51.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 15:44:51.315" level="INFO">${args22} = </msg>
<status status="PASS" endtime="20170728 15:44:51.316" starttime="20170728 15:44:51.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 15:44:51.325" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170728 15:44:51.327" starttime="20170728 15:44:51.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 15:44:51.334" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 15:44:51.335" starttime="20170728 15:44:51.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 15:44:51.339" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</msg>
<status status="PASS" endtime="20170728 15:44:51.341" starttime="20170728 15:44:51.336"></status>
</kw>
<status status="PASS" endtime="20170728 15:44:51.342" starttime="20170728 15:44:51.302"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num='${args11}' and event_code=13</arg>
</arguments>
<assign>
<var>${user_id_refund}</var>
</assign>
<msg timestamp="20170728 15:44:51.345" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num='32102151361500885834' and event_code=13 </msg>
<msg timestamp="20170728 15:44:51.359" level="INFO">${user_id_refund} = ((888888, '32102151361500885834', 100000, 6135, 1, '32102151361500885834', '', Decimal('2.00'), 1, 13, 2, 0, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)),)</msg>
<status status="PASS" endtime="20170728 15:44:51.361" starttime="20170728 15:44:51.344"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${user_id_refund[0][2]}' and channel_no=1</arg>
</arguments>
<assign>
<var>${account_id_bos}</var>
</assign>
<msg timestamp="20170728 15:44:51.366" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=1 </msg>
<msg timestamp="20170728 15:44:51.379" level="INFO">${account_id_bos} = ((6090, '32102151361499943856', 100000, 6135, 1, 2, 0, datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 13, 23, 57, 26)),)</msg>
<status status="PASS" endtime="20170728 15:44:51.380" starttime="20170728 15:44:51.363"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_id_bos[0][3]}</arg>
</arguments>
<assign>
<var>${account_id_boss}</var>
</assign>
<msg timestamp="20170728 15:44:51.384" level="INFO">${account_id_boss} = 6135</msg>
<status status="PASS" endtime="20170728 15:44:51.385" starttime="20170728 15:44:51.382"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${user_id_refund[0][2]}' and channel_no=2</arg>
</arguments>
<assign>
<var>${account_id_ap}</var>
</assign>
<msg timestamp="20170728 15:44:51.389" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=2 </msg>
<msg timestamp="20170728 15:44:51.400" level="INFO">${account_id_ap} = ((100000000010L, '32102151361501206852', 100000, 6273, 2, 2, 0, datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 10, 46, 53)),)</msg>
<status status="PASS" endtime="20170728 15:44:51.402" starttime="20170728 15:44:51.386"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_id_ap[0][3]}</arg>
</arguments>
<assign>
<var>${account_id_app}</var>
</assign>
<msg timestamp="20170728 15:44:51.405" level="INFO">${account_id_app} = 6273</msg>
<status status="PASS" endtime="20170728 15:44:51.406" starttime="20170728 15:44:51.403"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_boss}'</arg>
</arguments>
<assign>
<var>${amount_boss}</var>
</assign>
<msg timestamp="20170728 15:44:51.409" level="INFO">Executing : Query  |  select * from account_amount where account_id='6135' </msg>
<msg timestamp="20170728 15:44:51.417" level="INFO">${amount_boss} = ((12449, 6135, Decimal('50429.00'), Decimal('49607.00'), Decimal('822.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 15, 43, 33), 0),)</msg>
<status status="PASS" endtime="20170728 15:44:51.418" starttime="20170728 15:44:51.408"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_app}'</arg>
</arguments>
<assign>
<var>${amount_app}</var>
</assign>
<msg timestamp="20170728 15:44:51.421" level="INFO">Executing : Query  |  select * from account_amount where account_id='6273' </msg>
<msg timestamp="20170728 15:44:51.430" level="INFO">${amount_app} = ((12587, 6273, Decimal('50418.00'), Decimal('49596.00'), Decimal('822.00'), datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 14, 27, 14), 0),)</msg>
<status status="PASS" endtime="20170728 15:44:51.431" starttime="20170728 15:44:51.419"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 15:44:51.434" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</msg>
<status status="PASS" endtime="20170728 15:44:51.435" starttime="20170728 15:44:51.432"></status>
</kw>
<kw name="Ajb Withdraw Cancel" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170728 15:44:52.058" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 15:44:52.060" starttime="20170728 15:44:51.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 15:44:52.066" level="INFO">200</msg>
<status status="PASS" endtime="20170728 15:44:52.068" starttime="20170728 15:44:52.063"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 15:44:52.072" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:44:52.074" starttime="20170728 15:44:52.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 15:44:52.078" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 15:44:52.080" starttime="20170728 15:44:52.076"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 15:44:52.085" level="INFO">To JSON using : content={"data":null,"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 15:44:52.086" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 15:44:52.088" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': None, u'success': True}</msg>
<status status="PASS" endtime="20170728 15:44:52.089" starttime="20170728 15:44:52.082"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 15:44:52.093" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:44:52.095" starttime="20170728 15:44:52.091"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 15:44:52.104" starttime="20170728 15:44:52.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 15:44:52.109" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 15:44:52.110" starttime="20170728 15:44:52.107"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 15:44:52.116" level="INFO">${current_time} = 2017-07-28 15:44:52.115</msg>
<status status="PASS" endtime="20170728 15:44:52.117" starttime="20170728 15:44:52.113"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>5 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 15:44:52.129" level="INFO">${current_time_before_30} = 2017-07-28 15:44:47.115</msg>
<status status="PASS" endtime="20170728 15:44:52.130" starttime="20170728 15:44:52.119"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 15:44:52.136" level="INFO">${current_time_after_30} = 2017-07-28 15:46:32.115</msg>
<status status="PASS" endtime="20170728 15:44:52.137" starttime="20170728 15:44:52.133"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where event_code=14 and user_id='${user_id_refund[0][2]}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 15:44:52.140" level="INFO">Executing : Query  |  select * from account_unilateral_bill where event_code=14 and user_id='100000' and update_time between' 2017-07-28 15:44:47.115' and '2017-07-28 15:46:32.115' </msg>
<msg timestamp="20170728 15:44:52.154" level="INFO">${user_id} = ((6923, '32102151361501207733', 100000, 6135, '32102151361501207731', 1, 14, 3, Decimal('2.00'), None, datetime.datetime(2017, 7, 28, 15, 45, 57), datetime.datetime(2017, 7, 28, 15, 45, 57), 0),)</msg>
<status status="PASS" endtime="20170728 15:44:52.154" starttime="20170728 15:44:52.139"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170728 15:44:52.156" level="INFO">Length is 20</msg>
<msg timestamp="20170728 15:44:52.157" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170728 15:44:52.158" starttime="20170728 15:44:52.155"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 15:44:52.160" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:44:52.161" starttime="20170728 15:44:52.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 15:44:52.163" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 15:44:52.164" starttime="20170728 15:44:52.162"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_refund[0][2]}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:44:52.166" starttime="20170728 15:44:52.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 15:44:52.167" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 15:44:52.168" starttime="20170728 15:44:52.167"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170728 15:44:52.170" level="INFO">Length is 20</msg>
<msg timestamp="20170728 15:44:52.170" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170728 15:44:52.171" starttime="20170728 15:44:52.169"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 15:44:52.172" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:44:52.173" starttime="20170728 15:44:52.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 15:44:52.174" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 15:44:52.174" starttime="20170728 15:44:52.173"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 15:44:52.176" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:44:52.176" starttime="20170728 15:44:52.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 15:44:52.179" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 15:44:52.180" starttime="20170728 15:44:52.178"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>14</arg>
</arguments>
<msg timestamp="20170728 15:44:52.182" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:44:52.182" starttime="20170728 15:44:52.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 15:44:52.184" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 15:44:52.184" starttime="20170728 15:44:52.183"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20170728 15:44:52.186" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:44:52.186" starttime="20170728 15:44:52.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170728 15:44:52.187" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170728 15:44:52.188" starttime="20170728 15:44:52.187"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:44:52.190" starttime="20170728 15:44:52.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 15:44:52.192" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 15:44:52.192" starttime="20170728 15:44:52.190"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 15:44:52.195" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:44:52.196" starttime="20170728 15:44:52.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 15:44:52.198" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 15:44:52.199" starttime="20170728 15:44:52.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170728 15:44:52.200" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170728 15:44:52.201" starttime="20170728 15:44:52.200"></status>
</kw>
<kw name="Conn Mysql" library="wjwTestLibrary">
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]}'</arg>
</arguments>
<assign>
<var>${user_id_unilateral_delete}</var>
</assign>
<msg timestamp="20170728 15:44:52.298" level="INFO">${user_id_unilateral_delete} = ()</msg>
<status status="PASS" endtime="20170728 15:44:52.301" starttime="20170728 15:44:52.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170728 15:44:52.306" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170728 15:44:52.307" starttime="20170728 15:44:52.303"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time1}</var>
</assign>
<msg timestamp="20170728 15:44:52.312" level="INFO">${current_time1} = 2017-07-28 15:44:52.311</msg>
<status status="PASS" endtime="20170728 15:44:52.313" starttime="20170728 15:44:52.309"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>5 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_301}</var>
</assign>
<msg timestamp="20170728 15:44:52.319" level="INFO">${current_time_before_301} = 2017-07-28 15:44:47.311</msg>
<status status="PASS" endtime="20170728 15:44:52.321" starttime="20170728 15:44:52.315"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_301}</var>
</assign>
<msg timestamp="20170728 15:44:52.328" level="INFO">${current_time_after_301} = 2017-07-28 15:46:32.311</msg>
<status status="PASS" endtime="20170728 15:44:52.330" starttime="20170728 15:44:52.324"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where event_code=14 and user_id='${user_id_refund[0][2]}' and update_time between' ${current_time_before_301}' and '${current_time_after_301}'</arg>
</arguments>
<assign>
<var>${user_id1}</var>
</assign>
<msg timestamp="20170728 15:44:52.335" level="INFO">Executing : Query  |  select * from ajb_account_transaction where event_code=14 and user_id='100000' and update_time between' 2017-07-28 15:44:47.311' and '2017-07-28 15:46:32.311' </msg>
<msg timestamp="20170728 15:44:52.351" level="INFO">${user_id1} = ((88889492, '32102151361501207730', 100000, 6135, 1, '32102151361500885834', '20170728154553KOE051379', Decimal('2.00'), 1, 14, 2, 0, datetime.datetime(2017, 7, 28, 15, 45, 56), datetime.datetime(2017...</msg>
<status status="PASS" endtime="20170728 15:44:52.353" starttime="20170728 15:44:52.333"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id1[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 15:44:52.356" level="INFO">Length is 20</msg>
<msg timestamp="20170728 15:44:52.358" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 15:44:52.361" starttime="20170728 15:44:52.354"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 15:44:52.367" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:44:52.368" starttime="20170728 15:44:52.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 15:44:52.371" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 15:44:52.372" starttime="20170728 15:44:52.370"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][2]}</arg>
<arg>${user_id_refund[0][2]}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:44:52.377" starttime="20170728 15:44:52.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 15:44:52.382" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 15:44:52.384" starttime="20170728 15:44:52.379"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][4]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 15:44:52.390" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170728 15:44:52.392" level="FAIL">1 != 2</msg>
<status status="FAIL" endtime="20170728 15:44:52.394" starttime="20170728 15:44:52.386"></status>
</kw>
<status status="FAIL" endtime="20170728 15:44:52.397" critical="yes" starttime="20170728 15:44:51.031">1 != 2</status>
</test>
<status status="FAIL" endtime="20170728 15:44:52.403" starttime="20170728 15:44:50.737"></status>
</suite>
<status status="FAIL" endtime="20170728 15:44:52.418" starttime="20170728 15:44:50.733"></status>
</suite>
<status status="FAIL" endtime="20170728 15:44:52.428" starttime="20170728 15:44:50.537"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="0">Critical Tests</stat>
<stat fail="1" pass="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="1" id="s1" name="账户中心" pass="0">账户中心</stat>
<stat fail="1" id="s1-s1" name="订单" pass="0">账户中心.订单</stat>
<stat fail="1" id="s1-s1-s1" name="订单支付退款（线上）" pass="0">账户中心.订单.订单支付退款（线上）</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
