<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170728 15:48:20.002" generator="Robot 3.0.2 (Python 2.7.8 on win32)">
<suite source="F:\logs and reports\账户中心" id="s1" name="账户中心">
<suite source="F:\logs and reports\账户中心\订单" id="s1-s1" name="订单">
<suite source="F:\logs and reports\账户中心\订单\订单取消支付（线上）.txt" id="s1-s1-s1" name="订单取消支付（线上）">
<test id="s1-s1-s1-t1" name="输入正确的订单冻结oderNum">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:48:20.607" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:48:20.646" starttime="20170728 15:48:20.579"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:20.650" starttime="20170728 15:48:20.577"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:20.652" starttime="20170728 15:48:20.576"></status>
</kw>
<kw name="清数据" library="myResource">
<arguments>
<arg>888888</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:48:20.675" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:48:20.686" starttime="20170728 15:48:20.672"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:20.689" starttime="20170728 15:48:20.668"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:20.692" starttime="20170728 15:48:20.662"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170728 15:48:20.698" level="INFO">Executing : Query  |  select * from ajb_account_transaction where id=888888 </msg>
<msg timestamp="20170728 15:48:20.707" level="INFO">${check} = ()</msg>
<status status="PASS" endtime="20170728 15:48:20.709" starttime="20170728 15:48:20.694"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170728 15:48:20.714" level="INFO">Length is 0</msg>
<msg timestamp="20170728 15:48:20.716" level="INFO">${check_length} = 0</msg>
<status status="PASS" endtime="20170728 15:48:20.717" starttime="20170728 15:48:20.711"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} != 0</arg>
<arg>execute sql string</arg>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>数据库之前没有数据</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库之前没有数据</arg>
</arguments>
<msg timestamp="20170728 15:48:20.728" level="INFO">数据库之前没有数据</msg>
<status status="PASS" endtime="20170728 15:48:20.730" starttime="20170728 15:48:20.726"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:20.733" starttime="20170728 15:48:20.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库里面的这条数据清理成功啦。</arg>
</arguments>
<msg timestamp="20170728 15:48:20.738" level="INFO">数据库里面的这条数据清理成功啦。</msg>
<status status="PASS" endtime="20170728 15:48:20.740" starttime="20170728 15:48:20.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_delete}</arg>
</arguments>
<msg timestamp="20170728 15:48:20.745" level="INFO">${id_delete} = 888888</msg>
<status status="PASS" endtime="20170728 15:48:20.747" starttime="20170728 15:48:20.742"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:20.749" starttime="20170728 15:48:20.655"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("${id_delete}","32102151361500975216","100000","6135","1","32102151361500012119","","2","1","11","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170728 15:48:20.754" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("888888","32102151361500975216","100000","6135","1","32102151361500012119","","2","1","11","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170728 15:48:20.940" starttime="20170728 15:48:20.751"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>32102151361500012119</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 15:48:20.952" level="INFO">${args11} = 32102151361500012119</msg>
<status status="PASS" endtime="20170728 15:48:20.955" starttime="20170728 15:48:20.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 15:48:20.964" level="INFO">${args22} = </msg>
<status status="PASS" endtime="20170728 15:48:20.967" starttime="20170728 15:48:20.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 15:48:20.974" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170728 15:48:20.976" starttime="20170728 15:48:20.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 15:48:20.981" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 15:48:20.983" starttime="20170728 15:48:20.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 15:48:20.988" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/cancelPay</msg>
<status status="PASS" endtime="20170728 15:48:20.990" starttime="20170728 15:48:20.985"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:20.992" starttime="20170728 15:48:20.944"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 15:48:20.999" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/cancelPay</msg>
<status status="PASS" endtime="20170728 15:48:21.001" starttime="20170728 15:48:20.997"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 15:48:21.008" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 15:48:21.010" starttime="20170728 15:48:21.004"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:21.019" starttime="20170728 15:48:21.017"></status>
</kw>
<msg timestamp="20170728 15:48:21.021" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 15:48:21.022" starttime="20170728 15:48:21.012"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>order_num</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:21.029" starttime="20170728 15:48:21.027"></status>
</kw>
<msg timestamp="20170728 15:48:21.032" level="INFO">${args11_after} = order_num</msg>
<status status="PASS" endtime="20170728 15:48:21.034" starttime="20170728 15:48:21.024"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:48:21.044" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:48:21.072" starttime="20170728 15:48:21.042"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:21.074" starttime="20170728 15:48:21.039"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:21.076" starttime="20170728 15:48:21.037"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 15:48:21.084" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num='32102151361500012119' and channel_no='1' </msg>
<msg timestamp="20170728 15:48:21.099" level="INFO">${database1} = ((9242, '32102151361500012119', 100000, 6135, 1, '32102151361500012119', '20170717133633HCE041747', Decimal('2000.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 17, 13, 36, 36), datetime.datetime(2017, ...</msg>
<status status="PASS" endtime="20170728 15:48:21.101" starttime="20170728 15:48:21.079"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 15:48:21.106" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 15:48:21.115" level="INFO">${database} = ((12449, 6135, Decimal('50433.00'), Decimal('49611.00'), Decimal('822.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 15, 49, 1), 0),)</msg>
<status status="PASS" endtime="20170728 15:48:21.116" starttime="20170728 15:48:21.103"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 15:48:21.120" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 15:48:21.121" starttime="20170728 15:48:21.118"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 15:48:21.125" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 15:48:21.126" starttime="20170728 15:48:21.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 15:48:21.133" level="INFO">获得account_id值为：6135</msg>
<status status="PASS" endtime="20170728 15:48:21.134" starttime="20170728 15:48:21.129"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 15:48:21.138" level="INFO">${total_amount_before} = 50433.00</msg>
<status status="PASS" endtime="20170728 15:48:21.139" starttime="20170728 15:48:21.136"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 15:48:21.143" level="INFO">${balance_amount_before} = 49611.00</msg>
<status status="PASS" endtime="20170728 15:48:21.145" starttime="20170728 15:48:21.141"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 15:48:21.151" level="INFO">${frozen_amount_before} = 822.00</msg>
<status status="PASS" endtime="20170728 15:48:21.153" starttime="20170728 15:48:21.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 15:48:21.160" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 15:48:21.163" starttime="20170728 15:48:21.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 15:48:21.168" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 15:48:21.169" starttime="20170728 15:48:21.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 15:48:21.173" level="INFO">${total_amount_before} = 50433.00</msg>
<status status="PASS" endtime="20170728 15:48:21.174" starttime="20170728 15:48:21.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 15:48:21.179" level="INFO">${balance_amount_before} = 49611.00</msg>
<status status="PASS" endtime="20170728 15:48:21.181" starttime="20170728 15:48:21.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 15:48:21.185" level="INFO">${frozen_amount_before} = 822.00</msg>
<status status="PASS" endtime="20170728 15:48:21.187" starttime="20170728 15:48:21.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 15:48:21.190" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 15:48:21.192" starttime="20170728 15:48:21.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 15:48:21.198" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 15:48:21.200" starttime="20170728 15:48:21.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 15:48:21.206" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/cancelPay</msg>
<status status="PASS" endtime="20170728 15:48:21.207" starttime="20170728 15:48:21.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170728 15:48:21.211" level="INFO">${database} = ((12449, 6135, Decimal('50433.00'), Decimal('49611.00'), Decimal('822.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 15, 49, 1), 0),)</msg>
<status status="PASS" endtime="20170728 15:48:21.212" starttime="20170728 15:48:21.209"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:21.214" starttime="20170728 15:48:20.994"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Ajb Withdraw Cancel" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:21.373" starttime="20170728 15:48:21.224"></status>
</kw>
<msg timestamp="20170728 15:48:21.376" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 15:48:21.379" starttime="20170728 15:48:21.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 15:48:21.387" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 15:48:21.390" starttime="20170728 15:48:21.383"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:21.393" starttime="20170728 15:48:21.216"></status>
</kw>
<kw name="字段验证" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 15:48:21.403" level="INFO">200</msg>
<status status="PASS" endtime="20170728 15:48:21.406" starttime="20170728 15:48:21.399"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 15:48:21.414" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:21.418" starttime="20170728 15:48:21.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 15:48:21.426" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 15:48:21.429" starttime="20170728 15:48:21.421"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 15:48:21.438" level="INFO">To JSON using : content={"data":null,"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 15:48:21.442" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 15:48:21.444" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': None, u'success': True}</msg>
<status status="PASS" endtime="20170728 15:48:21.447" starttime="20170728 15:48:21.433"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 15:48:21.453" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:21.454" starttime="20170728 15:48:21.450"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:21.463" starttime="20170728 15:48:21.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 15:48:21.467" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 15:48:21.471" starttime="20170728 15:48:21.466"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<assign>
<var>@{Link1}</var>
</assign>
<msg timestamp="20170728 15:48:21.475" level="INFO">@{Link1} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 15:48:21.477" starttime="20170728 15:48:21.473"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>"${value}" in @{Link1}</arg>
<arg>Get From Dictionary</arg>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${orderNum}</var>
</assign>
<msg timestamp="20170728 15:48:21.483" level="INFO">${orderNum} = None</msg>
<status status="PASS" endtime="20170728 15:48:21.484" starttime="20170728 15:48:21.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<msg timestamp="20170728 15:48:21.489" level="INFO">${orderNum} = None</msg>
<status status="PASS" endtime="20170728 15:48:21.491" starttime="20170728 15:48:21.486"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:21.493" starttime="20170728 15:48:21.396"></status>
</kw>
<kw name="确认取消的金额数" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:48:21.505" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:48:21.520" starttime="20170728 15:48:21.503"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:21.523" starttime="20170728 15:48:21.500"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:21.525" starttime="20170728 15:48:21.497"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>8</arg>
</arguments>
<assign>
<var>${event_code_judge}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>11</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:21.534" starttime="20170728 15:48:21.530"></status>
</kw>
<msg timestamp="20170728 15:48:21.536" level="INFO">${event_code_judge} = 11</msg>
<status status="PASS" endtime="20170728 15:48:21.538" starttime="20170728 15:48:21.527"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num ='${args11}' and event_code=${event_code_judge}</arg>
</arguments>
<assign>
<var>${search}</var>
</assign>
<msg timestamp="20170728 15:48:21.542" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num ='32102151361500012119' and event_code=11 </msg>
<msg timestamp="20170728 15:48:21.557" level="INFO">${search} = ((888888, '32102151361500975216', 100000, 6135, 1, '32102151361500012119', '', Decimal('2.00'), 1, 11, 2, 0, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)),)</msg>
<status status="PASS" endtime="20170728 15:48:21.558" starttime="20170728 15:48:21.540"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${search[0][7]}</arg>
</arguments>
<assign>
<var>${change_total_amount}</var>
</assign>
<msg timestamp="20170728 15:48:21.566" level="INFO">${change_total_amount} = 2.00</msg>
<status status="PASS" endtime="20170728 15:48:21.568" starttime="20170728 15:48:21.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${change_total_amount}</arg>
</arguments>
<msg timestamp="20170728 15:48:21.573" level="INFO">${change_total_amount} = 2.00</msg>
<status status="PASS" endtime="20170728 15:48:21.575" starttime="20170728 15:48:21.571"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:21.576" starttime="20170728 15:48:21.494"></status>
</kw>
<kw name="表account_unilateral_bill的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_unilateral_bill</arg>
</arguments>
<msg timestamp="20170728 15:48:21.586" level="INFO">现在开始校验表account_unilateral_bill</msg>
<status status="PASS" endtime="20170728 15:48:21.588" starttime="20170728 15:48:21.584"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:48:21.598" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:48:21.607" starttime="20170728 15:48:21.595"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:21.608" starttime="20170728 15:48:21.591"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:21.609" starttime="20170728 15:48:21.589"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>account_unilateral_bill</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:48:21.618" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:48:21.636" starttime="20170728 15:48:21.616"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:21.637" starttime="20170728 15:48:21.615"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:21.638" starttime="20170728 15:48:21.612"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 15:48:21.640" level="INFO">${current_time} = 2017-07-28 15:48:21.640</msg>
<status status="PASS" endtime="20170728 15:48:21.641" starttime="20170728 15:48:21.639"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>10 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 15:48:21.648" level="INFO">${current_time_before_30} = 2017-07-28 15:48:11.640</msg>
<status status="PASS" endtime="20170728 15:48:21.649" starttime="20170728 15:48:21.642"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 15:48:21.651" level="INFO">${current_time_after_30} = 2017-07-28 15:49:26.640</msg>
<status status="PASS" endtime="20170728 15:48:21.652" starttime="20170728 15:48:21.650"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 15:48:21.654" level="INFO">Executing : Query  |  select * from account_unilateral_bill where user_id='100000' and update_time between' 2017-07-28 15:48:11.640' and '2017-07-28 15:49:26.640' </msg>
<msg timestamp="20170728 15:48:21.677" level="INFO">${updatetime} = ((6928, '32102151361501207745', 100000, 6135, '32102151361501207744', 1, 12, 2, Decimal('2.00'), None, datetime.datetime(2017, 7, 28, 15, 49, 26), datetime.datetime(2017, 7, 28, 15, 49, 26), 0),)</msg>
<status status="PASS" endtime="20170728 15:48:21.678" starttime="20170728 15:48:21.653"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 15:48:21.681" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 15:48:21.682" starttime="20170728 15:48:21.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 15:48:21.684" level="INFO">account_unilateral_bill表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 15:48:21.684" starttime="20170728 15:48:21.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 15:48:21.686" level="INFO">${current_time_before_30} = 2017-07-28 15:48:11.640</msg>
<status status="PASS" endtime="20170728 15:48:21.687" starttime="20170728 15:48:21.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 15:48:21.689" level="INFO">${current_time_after_30} = 2017-07-28 15:49:26.640</msg>
<status status="PASS" endtime="20170728 15:48:21.690" starttime="20170728 15:48:21.688"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:21.690" starttime="20170728 15:48:21.610"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id} 'and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 15:48:21.693" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6135 'and update_time between' 2017-07-28 15:48:11.640' and '2017-07-28 15:49:26.640' </msg>
<msg timestamp="20170728 15:48:21.706" level="INFO">${user_id} = ((6928, '32102151361501207745', 100000, 6135, '32102151361501207744', 1, 12, 2, Decimal('2.00'), None, datetime.datetime(2017, 7, 28, 15, 49, 26), datetime.datetime(2017, 7, 28, 15, 49, 26), 0),)</msg>
<status status="PASS" endtime="20170728 15:48:21.707" starttime="20170728 15:48:21.691"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170728 15:48:21.710" level="INFO">Length is 20</msg>
<msg timestamp="20170728 15:48:21.711" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170728 15:48:21.711" starttime="20170728 15:48:21.709"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 15:48:21.714" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:21.715" starttime="20170728 15:48:21.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 15:48:21.717" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 15:48:21.717" starttime="20170728 15:48:21.716"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:21.721" starttime="20170728 15:48:21.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 15:48:21.723" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 15:48:21.724" starttime="20170728 15:48:21.722"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170728 15:48:21.727" level="INFO">Length is 20</msg>
<msg timestamp="20170728 15:48:21.728" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170728 15:48:21.729" starttime="20170728 15:48:21.725"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 15:48:21.732" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:21.732" starttime="20170728 15:48:21.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 15:48:21.734" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 15:48:21.735" starttime="20170728 15:48:21.733"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 15:48:21.737" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:21.738" starttime="20170728 15:48:21.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 15:48:21.740" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 15:48:21.741" starttime="20170728 15:48:21.739"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>12</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:21.746" starttime="20170728 15:48:21.745"></status>
</kw>
<msg timestamp="20170728 15:48:21.747" level="INFO">${event_code} = 12</msg>
<status status="PASS" endtime="20170728 15:48:21.748" starttime="20170728 15:48:21.743"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 15:48:21.750" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 15:48:21.751" starttime="20170728 15:48:21.749"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:21.756" starttime="20170728 15:48:21.755"></status>
</kw>
<msg timestamp="20170728 15:48:21.758" level="INFO">${event_code_after} = 12</msg>
<status status="PASS" endtime="20170728 15:48:21.759" starttime="20170728 15:48:21.752"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 15:48:21.761" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 15:48:21.762" starttime="20170728 15:48:21.760"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:21.767" starttime="20170728 15:48:21.766"></status>
</kw>
<msg timestamp="20170728 15:48:21.768" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 15:48:21.769" starttime="20170728 15:48:21.763"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:21.773" starttime="20170728 15:48:21.772"></status>
</kw>
<msg timestamp="20170728 15:48:21.774" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 15:48:21.774" starttime="20170728 15:48:21.770"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 15:48:21.777" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 15:48:21.777" starttime="20170728 15:48:21.775"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>4</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:21.783" starttime="20170728 15:48:21.781"></status>
</kw>
<msg timestamp="20170728 15:48:21.785" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 15:48:21.786" starttime="20170728 15:48:21.778"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:21.791" starttime="20170728 15:48:21.790"></status>
</kw>
<msg timestamp="20170728 15:48:21.792" level="INFO">${total_amount} = 50433.00</msg>
<status status="PASS" endtime="20170728 15:48:21.793" starttime="20170728 15:48:21.788"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${change_total_amount}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:21.800" starttime="20170728 15:48:21.798"></status>
</kw>
<msg timestamp="20170728 15:48:21.801" level="INFO">${balance_amount} = 49613.0</msg>
<status status="PASS" endtime="20170728 15:48:21.801" starttime="20170728 15:48:21.795"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:21.806" starttime="20170728 15:48:21.804"></status>
</kw>
<msg timestamp="20170728 15:48:21.807" level="INFO">${frozen_amount} = 820.0</msg>
<status status="PASS" endtime="20170728 15:48:21.807" starttime="20170728 15:48:21.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 15:48:21.809" level="INFO">${event_code} = 12</msg>
<status status="PASS" endtime="20170728 15:48:21.811" starttime="20170728 15:48:21.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 15:48:21.814" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 15:48:21.815" starttime="20170728 15:48:21.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 15:48:21.817" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 15:48:21.817" starttime="20170728 15:48:21.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 15:48:21.819" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 15:48:21.820" starttime="20170728 15:48:21.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 15:48:21.822" level="INFO">${total_amount} = 50433.00</msg>
<status status="PASS" endtime="20170728 15:48:21.823" starttime="20170728 15:48:21.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 15:48:21.825" level="INFO">${balance_amount} = 49613.0</msg>
<status status="PASS" endtime="20170728 15:48:21.826" starttime="20170728 15:48:21.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 15:48:21.828" level="INFO">${frozen_amount} = 820.0</msg>
<status status="PASS" endtime="20170728 15:48:21.830" starttime="20170728 15:48:21.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 15:48:21.832" level="INFO">${event_code_after} = 12</msg>
<status status="PASS" endtime="20170728 15:48:21.833" starttime="20170728 15:48:21.831"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:21.834" starttime="20170728 15:48:21.741"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 15:48:21.836" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:21.837" starttime="20170728 15:48:21.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 15:48:21.838" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 15:48:21.839" starttime="20170728 15:48:21.838"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 15:48:21.841" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:21.842" starttime="20170728 15:48:21.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170728 15:48:21.845" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170728 15:48:21.846" starttime="20170728 15:48:21.843"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:21.850" starttime="20170728 15:48:21.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 15:48:21.853" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 15:48:21.854" starttime="20170728 15:48:21.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 15:48:21.856" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 15:48:21.858" starttime="20170728 15:48:21.855"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 15:48:21.860" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:21.861" starttime="20170728 15:48:21.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 15:48:21.864" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 15:48:21.865" starttime="20170728 15:48:21.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170728 15:48:21.867" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170728 15:48:21.867" starttime="20170728 15:48:21.866"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_unilateral}</var>
</assign>
<msg timestamp="20170728 15:48:21.869" level="INFO">${user_id[0][0]_unilateral} = 6928</msg>
<status status="PASS" endtime="20170728 15:48:21.870" starttime="20170728 15:48:21.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_unilateral}</arg>
</arguments>
<msg timestamp="20170728 15:48:21.872" level="INFO">${user_id[0][0]_unilateral} = 6928</msg>
<status status="PASS" endtime="20170728 15:48:21.873" starttime="20170728 15:48:21.871"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]_unilateral}'</arg>
</arguments>
<msg timestamp="20170728 15:48:21.875" level="INFO">Executing : Execute SQL String  |  delete from account_unilateral_bill where id ='6928' </msg>
<status status="PASS" endtime="20170728 15:48:21.941" starttime="20170728 15:48:21.874"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:21.942" starttime="20170728 15:48:21.578"></status>
</kw>
<kw name="表ajb_account_transaction" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170728 15:48:21.945" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170728 15:48:21.945" starttime="20170728 15:48:21.944"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:48:21.949" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:48:21.958" starttime="20170728 15:48:21.948"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:21.960" starttime="20170728 15:48:21.947"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:21.961" starttime="20170728 15:48:21.946"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>ajb_account_transaction</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:48:21.967" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:48:22.002" starttime="20170728 15:48:21.965"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:22.003" starttime="20170728 15:48:21.964"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:22.004" starttime="20170728 15:48:21.963"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 15:48:22.006" level="INFO">${current_time} = 2017-07-28 15:48:22.006</msg>
<status status="PASS" endtime="20170728 15:48:22.007" starttime="20170728 15:48:22.005"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>10 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 15:48:22.009" level="INFO">${current_time_before_30} = 2017-07-28 15:48:12.006</msg>
<status status="PASS" endtime="20170728 15:48:22.010" starttime="20170728 15:48:22.008"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 15:48:22.013" level="INFO">${current_time_after_30} = 2017-07-28 15:49:27.006</msg>
<status status="PASS" endtime="20170728 15:48:22.013" starttime="20170728 15:48:22.011"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 15:48:22.016" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and update_time between' 2017-07-28 15:48:12.006' and '2017-07-28 15:49:27.006' </msg>
<msg timestamp="20170728 15:48:22.268" level="INFO">${updatetime} = ((88889495, '32102151361501207743', 100000, 6135, 1, '32102151361500012119', None, Decimal('2.00'), 1, 12, 2, 0, datetime.datetime(2017, 7, 28, 15, 49, 26), datetime.datetime(2017, 7, 28, 15, 49, 26))...</msg>
<status status="PASS" endtime="20170728 15:48:22.270" starttime="20170728 15:48:22.014"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 15:48:22.276" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 15:48:22.278" starttime="20170728 15:48:22.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 15:48:22.285" level="INFO">ajb_account_transaction表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 15:48:22.288" starttime="20170728 15:48:22.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 15:48:22.295" level="INFO">${current_time_before_30} = 2017-07-28 15:48:12.006</msg>
<status status="PASS" endtime="20170728 15:48:22.299" starttime="20170728 15:48:22.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 15:48:22.307" level="INFO">${current_time_after_30} = 2017-07-28 15:49:27.006</msg>
<status status="PASS" endtime="20170728 15:48:22.309" starttime="20170728 15:48:22.303"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:22.314" starttime="20170728 15:48:21.962"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 15:48:22.322" level="INFO">Executing : Query  |  select * from ajb_account_transaction where account_id ='6135' and update_time between' 2017-07-28 15:48:12.006' and '2017-07-28 15:49:27.006' </msg>
<msg timestamp="20170728 15:48:22.384" level="INFO">${user_id} = ((88889495, '32102151361501207743', 100000, 6135, 1, '32102151361500012119', None, Decimal('2.00'), 1, 12, 2, 0, datetime.datetime(2017, 7, 28, 15, 49, 26), datetime.datetime(2017, 7, 28, 15, 49, 26))...</msg>
<status status="PASS" endtime="20170728 15:48:22.385" starttime="20170728 15:48:22.318"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 15:48:22.388" level="INFO">Length is 20</msg>
<msg timestamp="20170728 15:48:22.389" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 15:48:22.390" starttime="20170728 15:48:22.386"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 15:48:22.393" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:22.394" starttime="20170728 15:48:22.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 15:48:22.399" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 15:48:22.400" starttime="20170728 15:48:22.397"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:22.404" starttime="20170728 15:48:22.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 15:48:22.408" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 15:48:22.410" starttime="20170728 15:48:22.406"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 15:48:22.416" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:22.417" starttime="20170728 15:48:22.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no的值正确</arg>
</arguments>
<msg timestamp="20170728 15:48:22.420" level="INFO">channel_no的值正确</msg>
<status status="PASS" endtime="20170728 15:48:22.421" starttime="20170728 15:48:22.418"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${args11}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${orderNum}</arg>
</arguments>
<assign>
<var>${bill_order_num}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:22.428" starttime="20170728 15:48:22.426"></status>
</kw>
<msg timestamp="20170728 15:48:22.430" level="INFO">${bill_order_num} = 32102151361500012119</msg>
<status status="PASS" endtime="20170728 15:48:22.431" starttime="20170728 15:48:22.422"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>${bill_order_num}</arg>
</arguments>
<msg timestamp="20170728 15:48:22.456" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:22.458" starttime="20170728 15:48:22.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170728 15:48:22.463" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170728 15:48:22.464" starttime="20170728 15:48:22.461"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>12</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:22.474" starttime="20170728 15:48:22.472"></status>
</kw>
<msg timestamp="20170728 15:48:22.476" level="INFO">${event_code} = 12</msg>
<status status="PASS" endtime="20170728 15:48:22.476" starttime="20170728 15:48:22.468"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 15:48:22.481" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 15:48:22.481" starttime="20170728 15:48:22.478"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:22.488" starttime="20170728 15:48:22.486"></status>
</kw>
<msg timestamp="20170728 15:48:22.489" level="INFO">${event_code_after} = 12</msg>
<status status="PASS" endtime="20170728 15:48:22.490" starttime="20170728 15:48:22.483"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 15:48:22.495" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 15:48:22.496" starttime="20170728 15:48:22.492"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:22.505" starttime="20170728 15:48:22.503"></status>
</kw>
<msg timestamp="20170728 15:48:22.506" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 15:48:22.507" starttime="20170728 15:48:22.498"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:22.514" starttime="20170728 15:48:22.512"></status>
</kw>
<msg timestamp="20170728 15:48:22.516" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 15:48:22.517" starttime="20170728 15:48:22.509"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 15:48:22.521" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 15:48:22.522" starttime="20170728 15:48:22.519"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>4</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:22.528" starttime="20170728 15:48:22.526"></status>
</kw>
<msg timestamp="20170728 15:48:22.531" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 15:48:22.533" starttime="20170728 15:48:22.524"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:22.544" starttime="20170728 15:48:22.540"></status>
</kw>
<msg timestamp="20170728 15:48:22.547" level="INFO">${total_amount} = 50433.00</msg>
<status status="PASS" endtime="20170728 15:48:22.549" starttime="20170728 15:48:22.536"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${change_total_amount}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:22.563" starttime="20170728 15:48:22.559"></status>
</kw>
<msg timestamp="20170728 15:48:22.565" level="INFO">${balance_amount} = 49613.0</msg>
<status status="PASS" endtime="20170728 15:48:22.567" starttime="20170728 15:48:22.552"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:22.578" starttime="20170728 15:48:22.573"></status>
</kw>
<msg timestamp="20170728 15:48:22.581" level="INFO">${frozen_amount} = 820.0</msg>
<status status="PASS" endtime="20170728 15:48:22.583" starttime="20170728 15:48:22.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 15:48:22.589" level="INFO">${event_code} = 12</msg>
<status status="PASS" endtime="20170728 15:48:22.592" starttime="20170728 15:48:22.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 15:48:22.600" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 15:48:22.602" starttime="20170728 15:48:22.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 15:48:22.610" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 15:48:22.612" starttime="20170728 15:48:22.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 15:48:22.617" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 15:48:22.619" starttime="20170728 15:48:22.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 15:48:22.624" level="INFO">${total_amount} = 50433.00</msg>
<status status="PASS" endtime="20170728 15:48:22.625" starttime="20170728 15:48:22.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 15:48:22.631" level="INFO">${balance_amount} = 49613.0</msg>
<status status="PASS" endtime="20170728 15:48:22.633" starttime="20170728 15:48:22.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 15:48:22.637" level="INFO">${frozen_amount} = 820.0</msg>
<status status="PASS" endtime="20170728 15:48:22.638" starttime="20170728 15:48:22.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 15:48:22.644" level="INFO">${event_code_after} = 12</msg>
<status status="PASS" endtime="20170728 15:48:22.646" starttime="20170728 15:48:22.641"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:22.648" starttime="20170728 15:48:22.465"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170728 15:48:22.654" level="INFO">${pay_no_after} = None</msg>
<status status="PASS" endtime="20170728 15:48:22.657" starttime="20170728 15:48:22.650"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170728 15:48:22.664" level="INFO">Length is 4</msg>
<msg timestamp="20170728 15:48:22.665" level="INFO">${pay_no_after_length} = 4</msg>
<status status="PASS" endtime="20170728 15:48:22.667" starttime="20170728 15:48:22.661"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 15:48:22.671" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:22.673" starttime="20170728 15:48:22.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170728 15:48:22.677" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170728 15:48:22.679" starttime="20170728 15:48:22.675"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:22.684" starttime="20170728 15:48:22.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 15:48:22.689" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 15:48:22.691" starttime="20170728 15:48:22.687"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 15:48:22.696" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:22.697" starttime="20170728 15:48:22.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 15:48:22.701" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 15:48:22.703" starttime="20170728 15:48:22.699"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][9]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 15:48:22.708" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:22.709" starttime="20170728 15:48:22.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 15:48:22.715" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 15:48:22.717" starttime="20170728 15:48:22.712"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 15:48:22.721" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:22.723" starttime="20170728 15:48:22.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170728 15:48:22.727" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170728 15:48:22.728" starttime="20170728 15:48:22.725"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 15:48:22.734" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:22.735" starttime="20170728 15:48:22.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 15:48:22.739" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 15:48:22.741" starttime="20170728 15:48:22.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 15:48:22.745" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 15:48:22.747" starttime="20170728 15:48:22.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170728 15:48:22.751" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170728 15:48:22.753" starttime="20170728 15:48:22.749"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170728 15:48:22.759" level="INFO">${user_id[0][0]_transaction} = 88889495</msg>
<status status="PASS" endtime="20170728 15:48:22.761" starttime="20170728 15:48:22.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170728 15:48:22.766" level="INFO">${user_id[0][0]_transaction} = 88889495</msg>
<status status="PASS" endtime="20170728 15:48:22.768" starttime="20170728 15:48:22.763"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id[0][0]}'</arg>
</arguments>
<assign>
<var>${user_id_unilateral_delete1}</var>
</assign>
<msg timestamp="20170728 15:48:22.773" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88889495' </msg>
<msg timestamp="20170728 15:48:22.883" level="INFO">${user_id_unilateral_delete1} = None</msg>
<status status="PASS" endtime="20170728 15:48:22.884" starttime="20170728 15:48:22.770"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:22.886" starttime="20170728 15:48:21.943"></status>
</kw>
<kw name="表account_amount的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_amount</arg>
</arguments>
<msg timestamp="20170728 15:48:22.893" level="INFO">现在开始校验表account_amount</msg>
<status status="PASS" endtime="20170728 15:48:22.895" starttime="20170728 15:48:22.891"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:48:22.904" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:48:22.927" starttime="20170728 15:48:22.902"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:22.930" starttime="20170728 15:48:22.899"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:22.932" starttime="20170728 15:48:22.897"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time1}</var>
</assign>
<msg timestamp="20170728 15:48:22.936" level="INFO">${current_time1} = 2017-07-28 15:48:22.936</msg>
<status status="PASS" endtime="20170728 15:48:22.937" starttime="20170728 15:48:22.934"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_before_30}</var>
</assign>
<msg timestamp="20170728 15:48:22.943" level="INFO">${current_time1_before_30} = 2017-07-28 15:47:22.936</msg>
<status status="PASS" endtime="20170728 15:48:22.946" starttime="20170728 15:48:22.940"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_after_30}</var>
</assign>
<msg timestamp="20170728 15:48:22.950" level="INFO">${current_time1_after_30} = 2017-07-28 15:49:22.936</msg>
<status status="PASS" endtime="20170728 15:48:22.952" starttime="20170728 15:48:22.948"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 15:48:22.955" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 15:48:22.964" level="INFO">${user_id} = ((12449, 6135, Decimal('50433.00'), Decimal('49613.00'), Decimal('820.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 15, 49, 26), 0),)</msg>
<status status="PASS" endtime="20170728 15:48:22.966" starttime="20170728 15:48:22.954"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>12</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:22.978" starttime="20170728 15:48:22.976"></status>
</kw>
<msg timestamp="20170728 15:48:22.981" level="INFO">${event_code} = 12</msg>
<status status="PASS" endtime="20170728 15:48:22.983" starttime="20170728 15:48:22.971"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 15:48:22.987" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 15:48:22.989" starttime="20170728 15:48:22.985"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:22.997" starttime="20170728 15:48:22.994"></status>
</kw>
<msg timestamp="20170728 15:48:22.999" level="INFO">${event_code_after} = 12</msg>
<status status="PASS" endtime="20170728 15:48:23.000" starttime="20170728 15:48:22.991"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 15:48:23.005" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 15:48:23.006" starttime="20170728 15:48:23.002"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:23.015" starttime="20170728 15:48:23.013"></status>
</kw>
<msg timestamp="20170728 15:48:23.018" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 15:48:23.019" starttime="20170728 15:48:23.008"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:23.027" starttime="20170728 15:48:23.024"></status>
</kw>
<msg timestamp="20170728 15:48:23.030" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 15:48:23.032" starttime="20170728 15:48:23.021"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 15:48:23.037" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 15:48:23.039" starttime="20170728 15:48:23.034"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>4</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:23.046" starttime="20170728 15:48:23.044"></status>
</kw>
<msg timestamp="20170728 15:48:23.048" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 15:48:23.049" starttime="20170728 15:48:23.041"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:23.053" starttime="20170728 15:48:23.052"></status>
</kw>
<msg timestamp="20170728 15:48:23.053" level="INFO">${total_amount} = 50433.00</msg>
<status status="PASS" endtime="20170728 15:48:23.054" starttime="20170728 15:48:23.050"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${change_total_amount}+${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:23.061" starttime="20170728 15:48:23.059"></status>
</kw>
<msg timestamp="20170728 15:48:23.063" level="INFO">${balance_amount} = 49613.0</msg>
<status status="PASS" endtime="20170728 15:48:23.063" starttime="20170728 15:48:23.055"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:23.068" starttime="20170728 15:48:23.066"></status>
</kw>
<msg timestamp="20170728 15:48:23.069" level="INFO">${frozen_amount} = 820.0</msg>
<status status="PASS" endtime="20170728 15:48:23.069" starttime="20170728 15:48:23.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 15:48:23.071" level="INFO">${event_code} = 12</msg>
<status status="PASS" endtime="20170728 15:48:23.072" starttime="20170728 15:48:23.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 15:48:23.074" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 15:48:23.075" starttime="20170728 15:48:23.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 15:48:23.078" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 15:48:23.079" starttime="20170728 15:48:23.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 15:48:23.081" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 15:48:23.082" starttime="20170728 15:48:23.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 15:48:23.084" level="INFO">${total_amount} = 50433.00</msg>
<status status="PASS" endtime="20170728 15:48:23.084" starttime="20170728 15:48:23.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 15:48:23.086" level="INFO">${balance_amount} = 49613.0</msg>
<status status="PASS" endtime="20170728 15:48:23.087" starttime="20170728 15:48:23.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 15:48:23.089" level="INFO">${frozen_amount} = 820.0</msg>
<status status="PASS" endtime="20170728 15:48:23.090" starttime="20170728 15:48:23.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 15:48:23.095" level="INFO">${event_code_after} = 12</msg>
<status status="PASS" endtime="20170728 15:48:23.096" starttime="20170728 15:48:23.093"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:23.097" starttime="20170728 15:48:22.968"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:23.100" starttime="20170728 15:48:23.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 15:48:23.102" level="INFO">total_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 15:48:23.102" starttime="20170728 15:48:23.101"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 15:48:23.106" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:23.108" starttime="20170728 15:48:23.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 15:48:23.111" level="INFO">balance_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 15:48:23.112" starttime="20170728 15:48:23.109"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 15:48:23.114" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:23.115" starttime="20170728 15:48:23.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 15:48:23.117" level="INFO">frozen_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 15:48:23.117" starttime="20170728 15:48:23.116"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 15:48:23.120" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:23.120" starttime="20170728 15:48:23.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 15:48:23.122" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 15:48:23.123" starttime="20170728 15:48:23.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount校验成功！</arg>
</arguments>
<msg timestamp="20170728 15:48:23.125" level="INFO">表account_amount校验成功！</msg>
<status status="PASS" endtime="20170728 15:48:23.126" starttime="20170728 15:48:23.124"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:23.127" starttime="20170728 15:48:22.888"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<msg timestamp="20170728 15:48:23.130" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=888888 </msg>
<status status="PASS" endtime="20170728 15:48:23.308" starttime="20170728 15:48:23.129"></status>
</kw>
<kw name="艾佳币恢复数目" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:48:23.324" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:48:23.382" starttime="20170728 15:48:23.322"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:23.384" starttime="20170728 15:48:23.319"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:23.387" starttime="20170728 15:48:23.316"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount \ SET total_amount=${database[0][2]},balance_amount=${database[0][3]},frozen_amount=${database[0][4]}where account_id="${account_id}";</arg>
</arguments>
<msg timestamp="20170728 15:48:23.397" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount  SET total_amount=50433.00,balance_amount=49611.00,frozen_amount=822.00where account_id="6135"; </msg>
<status status="PASS" endtime="20170728 15:48:23.491" starttime="20170728 15:48:23.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170728 15:48:23.498" level="INFO">成功</msg>
<status status="PASS" endtime="20170728 15:48:23.499" starttime="20170728 15:48:23.495"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:23.501" starttime="20170728 15:48:23.310"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:23.503" critical="yes" starttime="20170728 15:48:20.573"></status>
</test>
<status status="PASS" endtime="20170728 15:48:23.508" starttime="20170728 15:48:20.243"></status>
</suite>
<suite source="F:\logs and reports\账户中心\订单\订单支付冻结（线上）.txt" id="s1-s1-s2" name="订单支付冻结（线上）">
<test id="s1-s1-s2-t1" name="输入正确的userId和orderNum，ajbAmount的参数">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:48:23.558" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:48:23.569" starttime="20170728 15:48:23.555"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:23.571" starttime="20170728 15:48:23.554"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:23.572" starttime="20170728 15:48:23.552"></status>
</kw>
<kw name="清数据" library="myResource">
<arguments>
<arg>8880888</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:48:23.577" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:48:23.587" starttime="20170728 15:48:23.576"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:23.589" starttime="20170728 15:48:23.574"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:23.590" starttime="20170728 15:48:23.573"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170728 15:48:23.593" level="INFO">Executing : Query  |  select * from ajb_account_transaction where id=8880888 </msg>
<msg timestamp="20170728 15:48:23.600" level="INFO">${check} = ()</msg>
<status status="PASS" endtime="20170728 15:48:23.601" starttime="20170728 15:48:23.592"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170728 15:48:23.603" level="INFO">Length is 0</msg>
<msg timestamp="20170728 15:48:23.604" level="INFO">${check_length} = 0</msg>
<status status="PASS" endtime="20170728 15:48:23.604" starttime="20170728 15:48:23.602"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} != 0</arg>
<arg>execute sql string</arg>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>数据库之前没有数据</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库之前没有数据</arg>
</arguments>
<msg timestamp="20170728 15:48:23.608" level="INFO">数据库之前没有数据</msg>
<status status="PASS" endtime="20170728 15:48:23.609" starttime="20170728 15:48:23.607"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:23.611" starttime="20170728 15:48:23.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库里面的这条数据清理成功啦。</arg>
</arguments>
<msg timestamp="20170728 15:48:23.613" level="INFO">数据库里面的这条数据清理成功啦。</msg>
<status status="PASS" endtime="20170728 15:48:23.614" starttime="20170728 15:48:23.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_delete}</arg>
</arguments>
<msg timestamp="20170728 15:48:23.616" level="INFO">${id_delete} = 8880888</msg>
<status status="PASS" endtime="20170728 15:48:23.616" starttime="20170728 15:48:23.614"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:23.617" starttime="20170728 15:48:23.572"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("${id_delete}","32102151361500284867","100000","6135","1","32102151361500284867","","2000","1","6","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170728 15:48:23.619" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("8880888","32102151361500284867","100000","6135","1","32102151361500284867","","2000","1","6","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170728 15:48:23.676" starttime="20170728 15:48:23.618"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>100000</arg>
<arg>32102151361500284867</arg>
<arg>10</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 15:48:23.680" level="INFO">${args11} = 100000</msg>
<status status="PASS" endtime="20170728 15:48:23.681" starttime="20170728 15:48:23.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 15:48:23.683" level="INFO">${args22} = 32102151361500284867</msg>
<status status="PASS" endtime="20170728 15:48:23.684" starttime="20170728 15:48:23.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 15:48:23.686" level="INFO">${args33} = 10</msg>
<status status="PASS" endtime="20170728 15:48:23.687" starttime="20170728 15:48:23.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 15:48:23.688" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 15:48:23.689" starttime="20170728 15:48:23.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 15:48:23.693" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/freezePay</msg>
<status status="PASS" endtime="20170728 15:48:23.694" starttime="20170728 15:48:23.691"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:23.694" starttime="20170728 15:48:23.677"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 15:48:23.699" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/freezePay</msg>
<status status="PASS" endtime="20170728 15:48:23.700" starttime="20170728 15:48:23.697"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 15:48:23.702" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 15:48:23.702" starttime="20170728 15:48:23.701"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:23.706" starttime="20170728 15:48:23.705"></status>
</kw>
<msg timestamp="20170728 15:48:23.706" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 15:48:23.707" starttime="20170728 15:48:23.703"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>user_id</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:23.711" starttime="20170728 15:48:23.710"></status>
</kw>
<msg timestamp="20170728 15:48:23.712" level="INFO">${args11_after} = user_id</msg>
<status status="PASS" endtime="20170728 15:48:23.712" starttime="20170728 15:48:23.708"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:48:23.720" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:48:23.743" starttime="20170728 15:48:23.718"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:23.745" starttime="20170728 15:48:23.716"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:23.747" starttime="20170728 15:48:23.714"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 15:48:23.751" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and channel_no='1' </msg>
<msg timestamp="20170728 15:48:23.769" level="INFO">${database1} = ((9100, '32102151361499943857', 100000, 6135, 1, '32102151361499943857', '20170714000118SSP038852', Decimal('2.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, ...</msg>
<status status="PASS" endtime="20170728 15:48:23.770" starttime="20170728 15:48:23.749"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 15:48:23.773" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 15:48:23.783" level="INFO">${database} = ((12449, 6135, Decimal('50433.00'), Decimal('49611.00'), Decimal('822.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 15, 49, 28), 0),)</msg>
<status status="PASS" endtime="20170728 15:48:23.784" starttime="20170728 15:48:23.772"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 15:48:23.786" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 15:48:23.787" starttime="20170728 15:48:23.785"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 15:48:23.789" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 15:48:23.790" starttime="20170728 15:48:23.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 15:48:23.792" level="INFO">获得account_id值为：6135</msg>
<status status="PASS" endtime="20170728 15:48:23.794" starttime="20170728 15:48:23.791"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 15:48:23.797" level="INFO">${total_amount_before} = 50433.00</msg>
<status status="PASS" endtime="20170728 15:48:23.798" starttime="20170728 15:48:23.795"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 15:48:23.800" level="INFO">${balance_amount_before} = 49611.00</msg>
<status status="PASS" endtime="20170728 15:48:23.800" starttime="20170728 15:48:23.799"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 15:48:23.803" level="INFO">${frozen_amount_before} = 822.00</msg>
<status status="PASS" endtime="20170728 15:48:23.803" starttime="20170728 15:48:23.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 15:48:23.805" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 15:48:23.806" starttime="20170728 15:48:23.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 15:48:23.808" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 15:48:23.808" starttime="20170728 15:48:23.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 15:48:23.810" level="INFO">${total_amount_before} = 50433.00</msg>
<status status="PASS" endtime="20170728 15:48:23.811" starttime="20170728 15:48:23.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 15:48:23.814" level="INFO">${balance_amount_before} = 49611.00</msg>
<status status="PASS" endtime="20170728 15:48:23.815" starttime="20170728 15:48:23.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 15:48:23.818" level="INFO">${frozen_amount_before} = 822.00</msg>
<status status="PASS" endtime="20170728 15:48:23.819" starttime="20170728 15:48:23.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 15:48:23.821" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 15:48:23.821" starttime="20170728 15:48:23.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 15:48:23.824" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 15:48:23.825" starttime="20170728 15:48:23.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 15:48:23.828" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/freezePay</msg>
<status status="PASS" endtime="20170728 15:48:23.829" starttime="20170728 15:48:23.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170728 15:48:23.831" level="INFO">${database} = ((12449, 6135, Decimal('50433.00'), Decimal('49611.00'), Decimal('822.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 15, 49, 28), 0),)</msg>
<status status="PASS" endtime="20170728 15:48:23.832" starttime="20170728 15:48:23.830"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:23.833" starttime="20170728 15:48:23.696"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Freeze Pay" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:24.000" starttime="20170728 15:48:23.837"></status>
</kw>
<msg timestamp="20170728 15:48:24.002" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 15:48:24.003" starttime="20170728 15:48:23.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 15:48:24.007" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 15:48:24.008" starttime="20170728 15:48:24.005"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:24.009" starttime="20170728 15:48:23.834"></status>
</kw>
<kw name="字段验证" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 15:48:24.015" level="INFO">200</msg>
<status status="PASS" endtime="20170728 15:48:24.017" starttime="20170728 15:48:24.013"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 15:48:24.021" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:24.022" starttime="20170728 15:48:24.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 15:48:24.025" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 15:48:24.026" starttime="20170728 15:48:24.023"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 15:48:24.030" level="INFO">To JSON using : content={"data":null,"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 15:48:24.031" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 15:48:24.033" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': None, u'success': True}</msg>
<status status="PASS" endtime="20170728 15:48:24.034" starttime="20170728 15:48:24.028"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 15:48:24.036" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:24.037" starttime="20170728 15:48:24.035"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:24.039" starttime="20170728 15:48:24.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 15:48:24.041" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 15:48:24.044" starttime="20170728 15:48:24.040"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<assign>
<var>@{Link1}</var>
</assign>
<msg timestamp="20170728 15:48:24.047" level="INFO">@{Link1} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 15:48:24.048" starttime="20170728 15:48:24.045"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>"${value}" in @{Link1}</arg>
<arg>Get From Dictionary</arg>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${orderNum}</var>
</assign>
<msg timestamp="20170728 15:48:24.051" level="INFO">${orderNum} = None</msg>
<status status="PASS" endtime="20170728 15:48:24.051" starttime="20170728 15:48:24.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<msg timestamp="20170728 15:48:24.053" level="INFO">${orderNum} = None</msg>
<status status="PASS" endtime="20170728 15:48:24.054" starttime="20170728 15:48:24.052"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:24.055" starttime="20170728 15:48:24.011"></status>
</kw>
<kw name="表account_unilateral_bill的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_unilateral_bill</arg>
</arguments>
<msg timestamp="20170728 15:48:24.060" level="INFO">现在开始校验表account_unilateral_bill</msg>
<status status="PASS" endtime="20170728 15:48:24.061" starttime="20170728 15:48:24.058"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:48:24.066" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:48:24.146" starttime="20170728 15:48:24.065"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:24.147" starttime="20170728 15:48:24.063"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:24.148" starttime="20170728 15:48:24.062"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>account_unilateral_bill</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:48:24.172" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:48:24.187" starttime="20170728 15:48:24.166"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:24.192" starttime="20170728 15:48:24.159"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:24.197" starttime="20170728 15:48:24.154"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 15:48:24.206" level="INFO">${current_time} = 2017-07-28 15:48:24.205</msg>
<status status="PASS" endtime="20170728 15:48:24.208" starttime="20170728 15:48:24.201"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>10 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 15:48:24.215" level="INFO">${current_time_before_30} = 2017-07-28 15:48:14.205</msg>
<status status="PASS" endtime="20170728 15:48:24.219" starttime="20170728 15:48:24.210"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 15:48:24.228" level="INFO">${current_time_after_30} = 2017-07-28 15:49:29.205</msg>
<status status="PASS" endtime="20170728 15:48:24.231" starttime="20170728 15:48:24.222"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 15:48:24.239" level="INFO">Executing : Query  |  select * from account_unilateral_bill where user_id='100000' and update_time between' 2017-07-28 15:48:14.205' and '2017-07-28 15:49:29.205' </msg>
<msg timestamp="20170728 15:48:24.249" level="INFO">${updatetime} = ((6929, '32102151361501207748', 100000, 6135, '32102151361501207747', 1, 11, 1, Decimal('10.00'), None, datetime.datetime(2017, 7, 28, 15, 49, 29), datetime.datetime(2017, 7, 28, 15, 49, 29), 0),)</msg>
<status status="PASS" endtime="20170728 15:48:24.250" starttime="20170728 15:48:24.236"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 15:48:24.253" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 15:48:24.254" starttime="20170728 15:48:24.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 15:48:24.257" level="INFO">account_unilateral_bill表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 15:48:24.258" starttime="20170728 15:48:24.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 15:48:24.262" level="INFO">${current_time_before_30} = 2017-07-28 15:48:14.205</msg>
<status status="PASS" endtime="20170728 15:48:24.262" starttime="20170728 15:48:24.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 15:48:24.264" level="INFO">${current_time_after_30} = 2017-07-28 15:49:29.205</msg>
<status status="PASS" endtime="20170728 15:48:24.265" starttime="20170728 15:48:24.263"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:24.266" starttime="20170728 15:48:24.149"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id} 'and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 15:48:24.269" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6135 'and update_time between' 2017-07-28 15:48:14.205' and '2017-07-28 15:49:29.205' </msg>
<msg timestamp="20170728 15:48:24.274" level="INFO">${user_id} = ((6929, '32102151361501207748', 100000, 6135, '32102151361501207747', 1, 11, 1, Decimal('10.00'), None, datetime.datetime(2017, 7, 28, 15, 49, 29), datetime.datetime(2017, 7, 28, 15, 49, 29), 0),)</msg>
<status status="PASS" endtime="20170728 15:48:24.275" starttime="20170728 15:48:24.267"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170728 15:48:24.279" level="INFO">Length is 20</msg>
<msg timestamp="20170728 15:48:24.280" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170728 15:48:24.282" starttime="20170728 15:48:24.277"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 15:48:24.285" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:24.287" starttime="20170728 15:48:24.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 15:48:24.289" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 15:48:24.289" starttime="20170728 15:48:24.288"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:24.294" starttime="20170728 15:48:24.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 15:48:24.296" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 15:48:24.297" starttime="20170728 15:48:24.295"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170728 15:48:24.299" level="INFO">Length is 20</msg>
<msg timestamp="20170728 15:48:24.299" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170728 15:48:24.300" starttime="20170728 15:48:24.297"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 15:48:24.302" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:24.303" starttime="20170728 15:48:24.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 15:48:24.304" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 15:48:24.305" starttime="20170728 15:48:24.303"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 15:48:24.307" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:24.308" starttime="20170728 15:48:24.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 15:48:24.309" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 15:48:24.311" starttime="20170728 15:48:24.308"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>11</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:24.317" starttime="20170728 15:48:24.315"></status>
</kw>
<msg timestamp="20170728 15:48:24.318" level="INFO">${event_code} = 11</msg>
<status status="PASS" endtime="20170728 15:48:24.318" starttime="20170728 15:48:24.313"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 15:48:24.321" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 15:48:24.321" starttime="20170728 15:48:24.319"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:24.325" starttime="20170728 15:48:24.323"></status>
</kw>
<msg timestamp="20170728 15:48:24.325" level="INFO">${event_code_after} = 11</msg>
<status status="PASS" endtime="20170728 15:48:24.326" starttime="20170728 15:48:24.322"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 15:48:24.330" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 15:48:24.331" starttime="20170728 15:48:24.328"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:24.336" starttime="20170728 15:48:24.335"></status>
</kw>
<msg timestamp="20170728 15:48:24.336" level="INFO">${command_type} = 1</msg>
<status status="PASS" endtime="20170728 15:48:24.337" starttime="20170728 15:48:24.333"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:24.344" starttime="20170728 15:48:24.341"></status>
</kw>
<msg timestamp="20170728 15:48:24.345" level="INFO">${amount} = 10</msg>
<status status="PASS" endtime="20170728 15:48:24.346" starttime="20170728 15:48:24.338"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 15:48:24.348" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 15:48:24.349" starttime="20170728 15:48:24.347"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>4</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:24.353" starttime="20170728 15:48:24.351"></status>
</kw>
<msg timestamp="20170728 15:48:24.354" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 15:48:24.355" starttime="20170728 15:48:24.350"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:24.360" starttime="20170728 15:48:24.358"></status>
</kw>
<msg timestamp="20170728 15:48:24.362" level="INFO">${total_amount} = 50433.00</msg>
<status status="PASS" endtime="20170728 15:48:24.362" starttime="20170728 15:48:24.356"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${balance_amount_before}-${args33}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:24.368" starttime="20170728 15:48:24.366"></status>
</kw>
<msg timestamp="20170728 15:48:24.369" level="INFO">${balance_amount} = 49601.0</msg>
<status status="PASS" endtime="20170728 15:48:24.370" starttime="20170728 15:48:24.363"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${frozen_amount_before}+${args33}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:24.376" starttime="20170728 15:48:24.374"></status>
</kw>
<msg timestamp="20170728 15:48:24.377" level="INFO">${frozen_amount} = 832.0</msg>
<status status="PASS" endtime="20170728 15:48:24.379" starttime="20170728 15:48:24.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 15:48:24.381" level="INFO">${event_code} = 11</msg>
<status status="PASS" endtime="20170728 15:48:24.381" starttime="20170728 15:48:24.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 15:48:24.383" level="INFO">${command_type} = 1</msg>
<status status="PASS" endtime="20170728 15:48:24.384" starttime="20170728 15:48:24.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 15:48:24.386" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 15:48:24.387" starttime="20170728 15:48:24.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 15:48:24.390" level="INFO">${amount} = 10</msg>
<status status="PASS" endtime="20170728 15:48:24.391" starttime="20170728 15:48:24.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 15:48:24.394" level="INFO">${total_amount} = 50433.00</msg>
<status status="PASS" endtime="20170728 15:48:24.395" starttime="20170728 15:48:24.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 15:48:24.398" level="INFO">${balance_amount} = 49601.0</msg>
<status status="PASS" endtime="20170728 15:48:24.398" starttime="20170728 15:48:24.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 15:48:24.401" level="INFO">${frozen_amount} = 832.0</msg>
<status status="PASS" endtime="20170728 15:48:24.402" starttime="20170728 15:48:24.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 15:48:24.406" level="INFO">${event_code_after} = 11</msg>
<status status="PASS" endtime="20170728 15:48:24.407" starttime="20170728 15:48:24.404"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:24.408" starttime="20170728 15:48:24.312"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 15:48:24.411" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:24.412" starttime="20170728 15:48:24.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 15:48:24.413" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 15:48:24.414" starttime="20170728 15:48:24.412"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 15:48:24.416" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:24.417" starttime="20170728 15:48:24.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170728 15:48:24.420" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170728 15:48:24.421" starttime="20170728 15:48:24.418"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 15:48:24.423" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:24.424" starttime="20170728 15:48:24.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 15:48:24.427" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 15:48:24.428" starttime="20170728 15:48:24.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 15:48:24.430" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 15:48:24.432" starttime="20170728 15:48:24.429"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 15:48:24.434" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:24.434" starttime="20170728 15:48:24.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 15:48:24.436" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 15:48:24.437" starttime="20170728 15:48:24.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170728 15:48:24.439" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170728 15:48:24.439" starttime="20170728 15:48:24.438"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_unilateral}</var>
</assign>
<msg timestamp="20170728 15:48:24.441" level="INFO">${user_id[0][0]_unilateral} = 6929</msg>
<status status="PASS" endtime="20170728 15:48:24.443" starttime="20170728 15:48:24.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_unilateral}</arg>
</arguments>
<msg timestamp="20170728 15:48:24.446" level="INFO">${user_id[0][0]_unilateral} = 6929</msg>
<status status="PASS" endtime="20170728 15:48:24.447" starttime="20170728 15:48:24.445"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]_unilateral}'</arg>
</arguments>
<msg timestamp="20170728 15:48:24.449" level="INFO">Executing : Execute SQL String  |  delete from account_unilateral_bill where id ='6929' </msg>
<status status="PASS" endtime="20170728 15:48:24.628" starttime="20170728 15:48:24.448"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:24.631" starttime="20170728 15:48:24.056"></status>
</kw>
<kw name="表ajb_account_transaction" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170728 15:48:24.638" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170728 15:48:24.640" starttime="20170728 15:48:24.636"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:48:24.650" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:48:24.689" starttime="20170728 15:48:24.647"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:24.691" starttime="20170728 15:48:24.644"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:24.692" starttime="20170728 15:48:24.642"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>ajb_account_transaction</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:48:24.702" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:48:24.713" starttime="20170728 15:48:24.701"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:24.715" starttime="20170728 15:48:24.699"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:24.717" starttime="20170728 15:48:24.697"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 15:48:24.720" level="INFO">${current_time} = 2017-07-28 15:48:24.720</msg>
<status status="PASS" endtime="20170728 15:48:24.721" starttime="20170728 15:48:24.719"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>10 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 15:48:24.725" level="INFO">${current_time_before_30} = 2017-07-28 15:48:14.720</msg>
<status status="PASS" endtime="20170728 15:48:24.725" starttime="20170728 15:48:24.723"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 15:48:24.729" level="INFO">${current_time_after_30} = 2017-07-28 15:49:29.720</msg>
<status status="PASS" endtime="20170728 15:48:24.730" starttime="20170728 15:48:24.727"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 15:48:24.736" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and update_time between' 2017-07-28 15:48:14.720' and '2017-07-28 15:49:29.720' </msg>
<msg timestamp="20170728 15:48:24.760" level="INFO">${updatetime} = ((88889496, '32102151361501207746', 100000, 6135, 1, '32102151361500284867', None, Decimal('10.00'), 1, 11, 2, 0, datetime.datetime(2017, 7, 28, 15, 49, 29), datetime.datetime(2017, 7, 28, 15, 49, 29)...</msg>
<status status="PASS" endtime="20170728 15:48:24.762" starttime="20170728 15:48:24.733"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 15:48:24.765" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 15:48:24.766" starttime="20170728 15:48:24.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 15:48:24.768" level="INFO">ajb_account_transaction表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 15:48:24.769" starttime="20170728 15:48:24.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 15:48:24.772" level="INFO">${current_time_before_30} = 2017-07-28 15:48:14.720</msg>
<status status="PASS" endtime="20170728 15:48:24.775" starttime="20170728 15:48:24.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 15:48:24.780" level="INFO">${current_time_after_30} = 2017-07-28 15:49:29.720</msg>
<status status="PASS" endtime="20170728 15:48:24.781" starttime="20170728 15:48:24.777"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:24.783" starttime="20170728 15:48:24.694"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 15:48:24.787" level="INFO">Executing : Query  |  select * from ajb_account_transaction where account_id ='6135' and update_time between' 2017-07-28 15:48:14.720' and '2017-07-28 15:49:29.720' </msg>
<msg timestamp="20170728 15:48:24.800" level="INFO">${user_id} = ((88889496, '32102151361501207746', 100000, 6135, 1, '32102151361500284867', None, Decimal('10.00'), 1, 11, 2, 0, datetime.datetime(2017, 7, 28, 15, 49, 29), datetime.datetime(2017, 7, 28, 15, 49, 29)...</msg>
<status status="PASS" endtime="20170728 15:48:24.802" starttime="20170728 15:48:24.785"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 15:48:24.807" level="INFO">Length is 20</msg>
<msg timestamp="20170728 15:48:24.808" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 15:48:24.811" starttime="20170728 15:48:24.804"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 15:48:24.815" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:24.816" starttime="20170728 15:48:24.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 15:48:24.820" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 15:48:24.821" starttime="20170728 15:48:24.818"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:24.825" starttime="20170728 15:48:24.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 15:48:24.830" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 15:48:24.831" starttime="20170728 15:48:24.828"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 15:48:24.834" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:24.835" starttime="20170728 15:48:24.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no的值正确</arg>
</arguments>
<msg timestamp="20170728 15:48:24.840" level="INFO">channel_no的值正确</msg>
<status status="PASS" endtime="20170728 15:48:24.842" starttime="20170728 15:48:24.838"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${args11}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${orderNum}</arg>
</arguments>
<assign>
<var>${bill_order_num}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:24.850" starttime="20170728 15:48:24.848"></status>
</kw>
<msg timestamp="20170728 15:48:24.852" level="INFO">${bill_order_num} = 32102151361500284867</msg>
<status status="PASS" endtime="20170728 15:48:24.854" starttime="20170728 15:48:24.845"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>${bill_order_num}</arg>
</arguments>
<msg timestamp="20170728 15:48:24.858" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:24.860" starttime="20170728 15:48:24.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170728 15:48:24.863" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170728 15:48:24.864" starttime="20170728 15:48:24.862"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>11</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:24.871" starttime="20170728 15:48:24.869"></status>
</kw>
<msg timestamp="20170728 15:48:24.872" level="INFO">${event_code} = 11</msg>
<status status="PASS" endtime="20170728 15:48:24.873" starttime="20170728 15:48:24.866"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 15:48:24.876" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 15:48:24.877" starttime="20170728 15:48:24.874"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:24.884" starttime="20170728 15:48:24.882"></status>
</kw>
<msg timestamp="20170728 15:48:24.887" level="INFO">${event_code_after} = 11</msg>
<status status="PASS" endtime="20170728 15:48:24.889" starttime="20170728 15:48:24.879"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 15:48:24.894" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 15:48:24.896" starttime="20170728 15:48:24.892"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:24.904" starttime="20170728 15:48:24.902"></status>
</kw>
<msg timestamp="20170728 15:48:24.906" level="INFO">${command_type} = 1</msg>
<status status="PASS" endtime="20170728 15:48:24.907" starttime="20170728 15:48:24.897"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:24.913" starttime="20170728 15:48:24.910"></status>
</kw>
<msg timestamp="20170728 15:48:24.914" level="INFO">${amount} = 10</msg>
<status status="PASS" endtime="20170728 15:48:24.915" starttime="20170728 15:48:24.908"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 15:48:24.920" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 15:48:24.921" starttime="20170728 15:48:24.917"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>4</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:24.926" starttime="20170728 15:48:24.925"></status>
</kw>
<msg timestamp="20170728 15:48:24.927" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 15:48:24.928" starttime="20170728 15:48:24.923"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:24.934" starttime="20170728 15:48:24.932"></status>
</kw>
<msg timestamp="20170728 15:48:24.935" level="INFO">${total_amount} = 50433.00</msg>
<status status="PASS" endtime="20170728 15:48:24.936" starttime="20170728 15:48:24.929"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${balance_amount_before}-${args33}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:24.941" starttime="20170728 15:48:24.939"></status>
</kw>
<msg timestamp="20170728 15:48:24.942" level="INFO">${balance_amount} = 49601.0</msg>
<status status="PASS" endtime="20170728 15:48:24.942" starttime="20170728 15:48:24.937"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${frozen_amount_before}+${args33}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:24.947" starttime="20170728 15:48:24.946"></status>
</kw>
<msg timestamp="20170728 15:48:24.948" level="INFO">${frozen_amount} = 832.0</msg>
<status status="PASS" endtime="20170728 15:48:24.949" starttime="20170728 15:48:24.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 15:48:24.952" level="INFO">${event_code} = 11</msg>
<status status="PASS" endtime="20170728 15:48:24.953" starttime="20170728 15:48:24.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 15:48:24.955" level="INFO">${command_type} = 1</msg>
<status status="PASS" endtime="20170728 15:48:24.955" starttime="20170728 15:48:24.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 15:48:24.959" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 15:48:24.960" starttime="20170728 15:48:24.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 15:48:24.964" level="INFO">${amount} = 10</msg>
<status status="PASS" endtime="20170728 15:48:24.965" starttime="20170728 15:48:24.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 15:48:24.967" level="INFO">${total_amount} = 50433.00</msg>
<status status="PASS" endtime="20170728 15:48:24.968" starttime="20170728 15:48:24.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 15:48:24.970" level="INFO">${balance_amount} = 49601.0</msg>
<status status="PASS" endtime="20170728 15:48:24.971" starttime="20170728 15:48:24.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 15:48:24.973" level="INFO">${frozen_amount} = 832.0</msg>
<status status="PASS" endtime="20170728 15:48:24.974" starttime="20170728 15:48:24.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 15:48:24.976" level="INFO">${event_code_after} = 11</msg>
<status status="PASS" endtime="20170728 15:48:24.977" starttime="20170728 15:48:24.974"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:24.977" starttime="20170728 15:48:24.865"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170728 15:48:24.981" level="INFO">${pay_no_after} = None</msg>
<status status="PASS" endtime="20170728 15:48:24.982" starttime="20170728 15:48:24.979"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170728 15:48:24.985" level="INFO">Length is 4</msg>
<msg timestamp="20170728 15:48:24.986" level="INFO">${pay_no_after_length} = 4</msg>
<status status="PASS" endtime="20170728 15:48:24.986" starttime="20170728 15:48:24.984"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 15:48:24.988" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:24.989" starttime="20170728 15:48:24.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170728 15:48:24.991" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170728 15:48:24.992" starttime="20170728 15:48:24.990"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 15:48:24.995" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:24.995" starttime="20170728 15:48:24.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 15:48:24.997" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 15:48:24.998" starttime="20170728 15:48:24.996"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 15:48:25.001" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:25.002" starttime="20170728 15:48:25.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 15:48:25.003" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 15:48:25.004" starttime="20170728 15:48:25.003"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][9]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 15:48:25.006" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:25.007" starttime="20170728 15:48:25.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 15:48:25.010" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 15:48:25.011" starttime="20170728 15:48:25.009"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 15:48:25.013" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:25.014" starttime="20170728 15:48:25.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170728 15:48:25.016" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170728 15:48:25.016" starttime="20170728 15:48:25.015"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 15:48:25.018" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:25.019" starttime="20170728 15:48:25.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 15:48:25.021" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 15:48:25.021" starttime="20170728 15:48:25.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 15:48:25.023" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 15:48:25.024" starttime="20170728 15:48:25.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170728 15:48:25.027" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170728 15:48:25.028" starttime="20170728 15:48:25.025"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170728 15:48:25.031" level="INFO">${user_id[0][0]_transaction} = 88889496</msg>
<status status="PASS" endtime="20170728 15:48:25.032" starttime="20170728 15:48:25.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170728 15:48:25.035" level="INFO">${user_id[0][0]_transaction} = 88889496</msg>
<status status="PASS" endtime="20170728 15:48:25.036" starttime="20170728 15:48:25.034"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id[0][0]}'</arg>
</arguments>
<assign>
<var>${user_id_unilateral_delete1}</var>
</assign>
<msg timestamp="20170728 15:48:25.038" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88889496' </msg>
<msg timestamp="20170728 15:48:25.097" level="INFO">${user_id_unilateral_delete1} = None</msg>
<status status="PASS" endtime="20170728 15:48:25.100" starttime="20170728 15:48:25.037"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:25.103" starttime="20170728 15:48:24.633"></status>
</kw>
<kw name="表account_amount的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_amount</arg>
</arguments>
<msg timestamp="20170728 15:48:25.117" level="INFO">现在开始校验表account_amount</msg>
<status status="PASS" endtime="20170728 15:48:25.120" starttime="20170728 15:48:25.113"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:48:25.140" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:48:25.169" starttime="20170728 15:48:25.134"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:25.173" starttime="20170728 15:48:25.129"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:25.175" starttime="20170728 15:48:25.124"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time1}</var>
</assign>
<msg timestamp="20170728 15:48:25.181" level="INFO">${current_time1} = 2017-07-28 15:48:25.181</msg>
<status status="PASS" endtime="20170728 15:48:25.183" starttime="20170728 15:48:25.179"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_before_30}</var>
</assign>
<msg timestamp="20170728 15:48:25.188" level="INFO">${current_time1_before_30} = 2017-07-28 15:47:25.181</msg>
<status status="PASS" endtime="20170728 15:48:25.190" starttime="20170728 15:48:25.185"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_after_30}</var>
</assign>
<msg timestamp="20170728 15:48:25.195" level="INFO">${current_time1_after_30} = 2017-07-28 15:49:25.181</msg>
<status status="PASS" endtime="20170728 15:48:25.197" starttime="20170728 15:48:25.192"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 15:48:25.204" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 15:48:25.213" level="INFO">${user_id} = ((12449, 6135, Decimal('50433.00'), Decimal('49601.00'), Decimal('832.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 15, 49, 29), 0),)</msg>
<status status="PASS" endtime="20170728 15:48:25.215" starttime="20170728 15:48:25.200"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>11</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:25.230" starttime="20170728 15:48:25.226"></status>
</kw>
<msg timestamp="20170728 15:48:25.232" level="INFO">${event_code} = 11</msg>
<status status="PASS" endtime="20170728 15:48:25.234" starttime="20170728 15:48:25.220"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 15:48:25.238" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 15:48:25.240" starttime="20170728 15:48:25.236"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:25.249" starttime="20170728 15:48:25.247"></status>
</kw>
<msg timestamp="20170728 15:48:25.251" level="INFO">${event_code_after} = 11</msg>
<status status="PASS" endtime="20170728 15:48:25.252" starttime="20170728 15:48:25.243"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 15:48:25.256" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 15:48:25.259" starttime="20170728 15:48:25.253"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:25.271" starttime="20170728 15:48:25.268"></status>
</kw>
<msg timestamp="20170728 15:48:25.274" level="INFO">${command_type} = 1</msg>
<status status="PASS" endtime="20170728 15:48:25.276" starttime="20170728 15:48:25.264"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:25.289" starttime="20170728 15:48:25.286"></status>
</kw>
<msg timestamp="20170728 15:48:25.291" level="INFO">${amount} = 10</msg>
<status status="PASS" endtime="20170728 15:48:25.292" starttime="20170728 15:48:25.280"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 15:48:25.296" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 15:48:25.297" starttime="20170728 15:48:25.294"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>4</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:25.300" starttime="20170728 15:48:25.299"></status>
</kw>
<msg timestamp="20170728 15:48:25.301" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 15:48:25.302" starttime="20170728 15:48:25.298"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:25.306" starttime="20170728 15:48:25.305"></status>
</kw>
<msg timestamp="20170728 15:48:25.307" level="INFO">${total_amount} = 50433.00</msg>
<status status="PASS" endtime="20170728 15:48:25.307" starttime="20170728 15:48:25.303"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${balance_amount_before}-${args33}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:25.315" starttime="20170728 15:48:25.314"></status>
</kw>
<msg timestamp="20170728 15:48:25.316" level="INFO">${balance_amount} = 49601.0</msg>
<status status="PASS" endtime="20170728 15:48:25.317" starttime="20170728 15:48:25.310"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${frozen_amount_before}+${args33}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:25.321" starttime="20170728 15:48:25.320"></status>
</kw>
<msg timestamp="20170728 15:48:25.322" level="INFO">${frozen_amount} = 832.0</msg>
<status status="PASS" endtime="20170728 15:48:25.322" starttime="20170728 15:48:25.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 15:48:25.324" level="INFO">${event_code} = 11</msg>
<status status="PASS" endtime="20170728 15:48:25.325" starttime="20170728 15:48:25.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 15:48:25.330" level="INFO">${command_type} = 1</msg>
<status status="PASS" endtime="20170728 15:48:25.330" starttime="20170728 15:48:25.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 15:48:25.332" level="INFO">${pay_no} = 4</msg>
<status status="PASS" endtime="20170728 15:48:25.333" starttime="20170728 15:48:25.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 15:48:25.336" level="INFO">${amount} = 10</msg>
<status status="PASS" endtime="20170728 15:48:25.337" starttime="20170728 15:48:25.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 15:48:25.340" level="INFO">${total_amount} = 50433.00</msg>
<status status="PASS" endtime="20170728 15:48:25.341" starttime="20170728 15:48:25.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 15:48:25.344" level="INFO">${balance_amount} = 49601.0</msg>
<status status="PASS" endtime="20170728 15:48:25.345" starttime="20170728 15:48:25.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 15:48:25.347" level="INFO">${frozen_amount} = 832.0</msg>
<status status="PASS" endtime="20170728 15:48:25.348" starttime="20170728 15:48:25.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 15:48:25.350" level="INFO">${event_code_after} = 11</msg>
<status status="PASS" endtime="20170728 15:48:25.351" starttime="20170728 15:48:25.349"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:25.351" starttime="20170728 15:48:25.217"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:25.355" starttime="20170728 15:48:25.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 15:48:25.358" level="INFO">total_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 15:48:25.360" starttime="20170728 15:48:25.357"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 15:48:25.363" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:25.364" starttime="20170728 15:48:25.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 15:48:25.366" level="INFO">balance_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 15:48:25.367" starttime="20170728 15:48:25.365"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 15:48:25.370" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:25.372" starttime="20170728 15:48:25.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 15:48:25.375" level="INFO">frozen_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 15:48:25.377" starttime="20170728 15:48:25.374"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 15:48:25.380" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:25.381" starttime="20170728 15:48:25.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 15:48:25.383" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 15:48:25.384" starttime="20170728 15:48:25.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount校验成功！</arg>
</arguments>
<msg timestamp="20170728 15:48:25.386" level="INFO">表account_amount校验成功！</msg>
<status status="PASS" endtime="20170728 15:48:25.386" starttime="20170728 15:48:25.385"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:25.388" starttime="20170728 15:48:25.106"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<msg timestamp="20170728 15:48:25.391" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=8880888 </msg>
<status status="PASS" endtime="20170728 15:48:25.533" starttime="20170728 15:48:25.390"></status>
</kw>
<kw name="艾佳币恢复数目" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:48:25.551" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:48:25.586" starttime="20170728 15:48:25.547"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:25.588" starttime="20170728 15:48:25.543"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:25.590" starttime="20170728 15:48:25.539"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount \ SET total_amount=${database[0][2]},balance_amount=${database[0][3]},frozen_amount=${database[0][4]}where account_id="${account_id}";</arg>
</arguments>
<msg timestamp="20170728 15:48:25.596" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount  SET total_amount=50433.00,balance_amount=49611.00,frozen_amount=822.00where account_id="6135"; </msg>
<status status="PASS" endtime="20170728 15:48:25.829" starttime="20170728 15:48:25.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170728 15:48:25.839" level="INFO">成功</msg>
<status status="PASS" endtime="20170728 15:48:25.841" starttime="20170728 15:48:25.833"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:25.845" starttime="20170728 15:48:25.536"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:25.848" critical="yes" starttime="20170728 15:48:23.549"></status>
</test>
<test id="s1-s1-s2-t2" name="当输入ajbAmount为0其他输入正确参数的时候">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:48:25.878" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:48:26.038" starttime="20170728 15:48:25.874"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:26.043" starttime="20170728 15:48:25.871"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:26.047" starttime="20170728 15:48:25.867"></status>
</kw>
<kw name="清数据" library="myResource">
<arguments>
<arg>8880888</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:48:26.068" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:48:26.083" starttime="20170728 15:48:26.064"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:26.087" starttime="20170728 15:48:26.058"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:26.091" starttime="20170728 15:48:26.054"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170728 15:48:26.100" level="INFO">Executing : Query  |  select * from ajb_account_transaction where id=8880888 </msg>
<msg timestamp="20170728 15:48:26.113" level="INFO">${check} = ()</msg>
<status status="PASS" endtime="20170728 15:48:26.116" starttime="20170728 15:48:26.095"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170728 15:48:26.129" level="INFO">Length is 0</msg>
<msg timestamp="20170728 15:48:26.134" level="INFO">${check_length} = 0</msg>
<status status="PASS" endtime="20170728 15:48:26.137" starttime="20170728 15:48:26.121"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} != 0</arg>
<arg>execute sql string</arg>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>数据库之前没有数据</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库之前没有数据</arg>
</arguments>
<msg timestamp="20170728 15:48:26.150" level="INFO">数据库之前没有数据</msg>
<status status="PASS" endtime="20170728 15:48:26.153" starttime="20170728 15:48:26.145"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:26.159" starttime="20170728 15:48:26.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库里面的这条数据清理成功啦。</arg>
</arguments>
<msg timestamp="20170728 15:48:26.174" level="INFO">数据库里面的这条数据清理成功啦。</msg>
<status status="PASS" endtime="20170728 15:48:26.177" starttime="20170728 15:48:26.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_delete}</arg>
</arguments>
<msg timestamp="20170728 15:48:26.186" level="INFO">${id_delete} = 8880888</msg>
<status status="PASS" endtime="20170728 15:48:26.188" starttime="20170728 15:48:26.180"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:26.191" starttime="20170728 15:48:26.050"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("${id_delete}","32102151361500284867","100000","6135","1","32102151361500284867","","2000","1","6","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170728 15:48:26.197" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("8880888","32102151361500284867","100000","6135","1","32102151361500284867","","2000","1","6","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170728 15:48:26.286" starttime="20170728 15:48:26.194"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>100000</arg>
<arg>32102151361500284867</arg>
<arg>0</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 15:48:26.297" level="INFO">${args11} = 100000</msg>
<status status="PASS" endtime="20170728 15:48:26.299" starttime="20170728 15:48:26.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 15:48:26.304" level="INFO">${args22} = 32102151361500284867</msg>
<status status="PASS" endtime="20170728 15:48:26.306" starttime="20170728 15:48:26.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 15:48:26.313" level="INFO">${args33} = 0</msg>
<status status="PASS" endtime="20170728 15:48:26.315" starttime="20170728 15:48:26.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 15:48:26.320" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 15:48:26.321" starttime="20170728 15:48:26.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 15:48:26.328" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/freezePay</msg>
<status status="PASS" endtime="20170728 15:48:26.330" starttime="20170728 15:48:26.326"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:26.332" starttime="20170728 15:48:26.289"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 15:48:26.344" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/freezePay</msg>
<status status="PASS" endtime="20170728 15:48:26.347" starttime="20170728 15:48:26.340"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 15:48:26.353" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 15:48:26.356" starttime="20170728 15:48:26.349"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:26.368" starttime="20170728 15:48:26.364"></status>
</kw>
<msg timestamp="20170728 15:48:26.371" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 15:48:26.373" starttime="20170728 15:48:26.360"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>user_id</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:26.385" starttime="20170728 15:48:26.381"></status>
</kw>
<msg timestamp="20170728 15:48:26.389" level="INFO">${args11_after} = user_id</msg>
<status status="PASS" endtime="20170728 15:48:26.392" starttime="20170728 15:48:26.375"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:48:26.410" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:48:26.424" starttime="20170728 15:48:26.406"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:26.427" starttime="20170728 15:48:26.401"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:26.432" starttime="20170728 15:48:26.396"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 15:48:26.440" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and channel_no='1' </msg>
<msg timestamp="20170728 15:48:26.471" level="INFO">${database1} = ((9100, '32102151361499943857', 100000, 6135, 1, '32102151361499943857', '20170714000118SSP038852', Decimal('2.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, ...</msg>
<status status="PASS" endtime="20170728 15:48:26.474" starttime="20170728 15:48:26.436"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 15:48:26.479" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 15:48:26.490" level="INFO">${database} = ((12449, 6135, Decimal('50433.00'), Decimal('49611.00'), Decimal('822.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 15, 49, 31), 0),)</msg>
<status status="PASS" endtime="20170728 15:48:26.493" starttime="20170728 15:48:26.476"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 15:48:26.500" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 15:48:26.502" starttime="20170728 15:48:26.497"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 15:48:26.508" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 15:48:26.511" starttime="20170728 15:48:26.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 15:48:26.517" level="INFO">获得account_id值为：6135</msg>
<status status="PASS" endtime="20170728 15:48:26.518" starttime="20170728 15:48:26.513"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 15:48:26.528" level="INFO">${total_amount_before} = 50433.00</msg>
<status status="PASS" endtime="20170728 15:48:26.531" starttime="20170728 15:48:26.523"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 15:48:26.539" level="INFO">${balance_amount_before} = 49611.00</msg>
<status status="PASS" endtime="20170728 15:48:26.542" starttime="20170728 15:48:26.535"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 15:48:26.548" level="INFO">${frozen_amount_before} = 822.00</msg>
<status status="PASS" endtime="20170728 15:48:26.550" starttime="20170728 15:48:26.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 15:48:26.555" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 15:48:26.558" starttime="20170728 15:48:26.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 15:48:26.566" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 15:48:26.567" starttime="20170728 15:48:26.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 15:48:26.577" level="INFO">${total_amount_before} = 50433.00</msg>
<status status="PASS" endtime="20170728 15:48:26.580" starttime="20170728 15:48:26.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 15:48:26.591" level="INFO">${balance_amount_before} = 49611.00</msg>
<status status="PASS" endtime="20170728 15:48:26.595" starttime="20170728 15:48:26.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 15:48:26.600" level="INFO">${frozen_amount_before} = 822.00</msg>
<status status="PASS" endtime="20170728 15:48:26.602" starttime="20170728 15:48:26.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 15:48:26.608" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 15:48:26.610" starttime="20170728 15:48:26.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 15:48:26.616" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 15:48:26.618" starttime="20170728 15:48:26.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 15:48:26.625" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/freezePay</msg>
<status status="PASS" endtime="20170728 15:48:26.628" starttime="20170728 15:48:26.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170728 15:48:26.637" level="INFO">${database} = ((12449, 6135, Decimal('50433.00'), Decimal('49611.00'), Decimal('822.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 15, 49, 31), 0),)</msg>
<status status="PASS" endtime="20170728 15:48:26.638" starttime="20170728 15:48:26.633"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:26.640" starttime="20170728 15:48:26.335"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Freeze Pay" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:26.691" starttime="20170728 15:48:26.657"></status>
</kw>
<msg timestamp="20170728 15:48:26.694" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 15:48:26.696" starttime="20170728 15:48:26.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 15:48:26.704" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 15:48:26.706" starttime="20170728 15:48:26.700"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:26.708" starttime="20170728 15:48:26.643"></status>
</kw>
<kw name="字段验证" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 15:48:26.719" level="INFO">200</msg>
<status status="PASS" endtime="20170728 15:48:26.722" starttime="20170728 15:48:26.715"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 15:48:26.729" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:26.731" starttime="20170728 15:48:26.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 15:48:26.734" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 15:48:26.735" starttime="20170728 15:48:26.732"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 15:48:26.738" level="INFO">To JSON using : content={"data":null,"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 15:48:26.740" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 15:48:26.741" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': None, u'success': True}</msg>
<status status="PASS" endtime="20170728 15:48:26.743" starttime="20170728 15:48:26.736"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 15:48:26.746" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:26.747" starttime="20170728 15:48:26.744"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:26.750" starttime="20170728 15:48:26.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 15:48:26.752" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 15:48:26.753" starttime="20170728 15:48:26.751"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<assign>
<var>@{Link1}</var>
</assign>
<msg timestamp="20170728 15:48:26.761" level="INFO">@{Link1} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 15:48:26.762" starttime="20170728 15:48:26.756"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>"${value}" in @{Link1}</arg>
<arg>Get From Dictionary</arg>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${orderNum}</var>
</assign>
<msg timestamp="20170728 15:48:26.765" level="INFO">${orderNum} = None</msg>
<status status="PASS" endtime="20170728 15:48:26.766" starttime="20170728 15:48:26.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<msg timestamp="20170728 15:48:26.769" level="INFO">${orderNum} = None</msg>
<status status="PASS" endtime="20170728 15:48:26.770" starttime="20170728 15:48:26.768"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:26.772" starttime="20170728 15:48:26.710"></status>
</kw>
<kw name="amount和表里的校验" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:48:26.782" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:48:26.854" starttime="20170728 15:48:26.781"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:26.856" starttime="20170728 15:48:26.779"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:26.858" starttime="20170728 15:48:26.777"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 15:48:26.862" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 15:48:26.870" level="INFO">${user_id} = ((12449, 6135, Decimal('50433.00'), Decimal('49611.00'), Decimal('822.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 15, 49, 31), 0),)</msg>
<status status="PASS" endtime="20170728 15:48:26.871" starttime="20170728 15:48:26.860"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:26.875" starttime="20170728 15:48:26.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 15:48:26.878" level="INFO">total_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 15:48:26.879" starttime="20170728 15:48:26.876"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:26.883" starttime="20170728 15:48:26.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 15:48:26.886" level="INFO">balance_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 15:48:26.887" starttime="20170728 15:48:26.885"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:26.891" starttime="20170728 15:48:26.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 15:48:26.893" level="INFO">frozen_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 15:48:26.894" starttime="20170728 15:48:26.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amounts的数据没有变化正确的</arg>
</arguments>
<msg timestamp="20170728 15:48:26.900" level="INFO">amounts的数据没有变化正确的</msg>
<status status="PASS" endtime="20170728 15:48:26.902" starttime="20170728 15:48:26.899"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 15:48:26.905" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:26.906" starttime="20170728 15:48:26.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount内容没有发生变化</arg>
</arguments>
<msg timestamp="20170728 15:48:26.910" level="INFO">表account_amount内容没有发生变化</msg>
<status status="PASS" endtime="20170728 15:48:26.912" starttime="20170728 15:48:26.908"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 15:48:26.915" level="INFO">${current_time} = 2017-07-28 15:48:26.915</msg>
<status status="PASS" endtime="20170728 15:48:26.918" starttime="20170728 15:48:26.913"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 15:48:26.922" level="INFO">${current_time_before_30} = 2017-07-28 15:47:26.915</msg>
<status status="PASS" endtime="20170728 15:48:26.923" starttime="20170728 15:48:26.920"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 15:48:26.929" level="INFO">${current_time_after_30} = 2017-07-28 15:49:31.915</msg>
<status status="PASS" endtime="20170728 15:48:26.930" starttime="20170728 15:48:26.925"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${bill_check}</var>
</assign>
<msg timestamp="20170728 15:48:26.933" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6135' and update_time between' 2017-07-28 15:47:26.915' and '2017-07-28 15:49:31.915' </msg>
<msg timestamp="20170728 15:48:26.943" level="INFO">${bill_check} = ()</msg>
<status status="PASS" endtime="20170728 15:48:26.944" starttime="20170728 15:48:26.931"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${bill_check}</arg>
</arguments>
<assign>
<var>${bill_check_length}</var>
</assign>
<msg timestamp="20170728 15:48:26.948" level="INFO">Length is 0</msg>
<msg timestamp="20170728 15:48:26.950" level="INFO">${bill_check_length} = 0</msg>
<status status="PASS" endtime="20170728 15:48:26.951" starttime="20170728 15:48:26.946"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${bill_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 15:48:26.954" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:26.955" starttime="20170728 15:48:26.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>account_unilateral_bill里的没有相关数据</arg>
</arguments>
<msg timestamp="20170728 15:48:26.960" level="INFO">account_unilateral_bill里的没有相关数据</msg>
<status status="PASS" endtime="20170728 15:48:26.962" starttime="20170728 15:48:26.958"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num ='${args11}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${transaction_check}</var>
</assign>
<msg timestamp="20170728 15:48:26.966" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num ='100000' and update_time between' 2017-07-28 15:47:26.915' and '2017-07-28 15:49:31.915' </msg>
<msg timestamp="20170728 15:48:26.979" level="INFO">${transaction_check} = ()</msg>
<status status="PASS" endtime="20170728 15:48:26.980" starttime="20170728 15:48:26.964"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${transaction_check}</arg>
</arguments>
<assign>
<var>${transaction_check_length}</var>
</assign>
<msg timestamp="20170728 15:48:26.983" level="INFO">Length is 0</msg>
<msg timestamp="20170728 15:48:26.984" level="INFO">${transaction_check_length} = 0</msg>
<status status="PASS" endtime="20170728 15:48:26.985" starttime="20170728 15:48:26.981"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${transaction_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 15:48:26.988" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:26.989" starttime="20170728 15:48:26.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>ajb_account_transaction里的没有相关数据</arg>
</arguments>
<msg timestamp="20170728 15:48:26.991" level="INFO">ajb_account_transaction里的没有相关数据</msg>
<status status="PASS" endtime="20170728 15:48:26.994" starttime="20170728 15:48:26.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库表里数据调用接口前后没有发生变化</arg>
</arguments>
<msg timestamp="20170728 15:48:26.998" level="INFO">数据库表里数据调用接口前后没有发生变化</msg>
<status status="PASS" endtime="20170728 15:48:26.999" starttime="20170728 15:48:26.996"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:27.000" starttime="20170728 15:48:26.775"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<msg timestamp="20170728 15:48:27.004" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=8880888 </msg>
<status status="PASS" endtime="20170728 15:48:27.086" starttime="20170728 15:48:27.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当输入艾佳币的数量为0的时候，接口返回成功，但是数据不入库里</arg>
</arguments>
<msg timestamp="20170728 15:48:27.090" level="INFO">当输入艾佳币的数量为0的时候，接口返回成功，但是数据不入库里</msg>
<status status="PASS" endtime="20170728 15:48:27.092" starttime="20170728 15:48:27.089"></status>
</kw>
<kw name="艾佳币恢复数目" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:48:27.099" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:48:27.110" starttime="20170728 15:48:27.098"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:27.112" starttime="20170728 15:48:27.096"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:27.113" starttime="20170728 15:48:27.095"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount \ SET total_amount=${database[0][2]},balance_amount=${database[0][3]},frozen_amount=${database[0][4]}where account_id="${account_id}";</arg>
</arguments>
<msg timestamp="20170728 15:48:27.119" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount  SET total_amount=50433.00,balance_amount=49611.00,frozen_amount=822.00where account_id="6135"; </msg>
<status status="PASS" endtime="20170728 15:48:27.127" starttime="20170728 15:48:27.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170728 15:48:27.130" level="INFO">成功</msg>
<status status="PASS" endtime="20170728 15:48:27.131" starttime="20170728 15:48:27.128"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:27.134" starttime="20170728 15:48:27.093"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:27.136" critical="yes" starttime="20170728 15:48:25.856"></status>
</test>
<test id="s1-s1-s2-t3" name="当ajbAmount为字符">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:48:27.154" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:48:27.166" starttime="20170728 15:48:27.152"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:27.168" starttime="20170728 15:48:27.149"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:27.169" starttime="20170728 15:48:27.146"></status>
</kw>
<kw name="清数据" library="myResource">
<arguments>
<arg>8880888</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:48:27.179" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:48:27.187" starttime="20170728 15:48:27.177"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:27.188" starttime="20170728 15:48:27.174"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:27.189" starttime="20170728 15:48:27.172"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170728 15:48:27.193" level="INFO">Executing : Query  |  select * from ajb_account_transaction where id=8880888 </msg>
<msg timestamp="20170728 15:48:27.199" level="INFO">${check} = ()</msg>
<status status="PASS" endtime="20170728 15:48:27.200" starttime="20170728 15:48:27.190"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170728 15:48:27.202" level="INFO">Length is 0</msg>
<msg timestamp="20170728 15:48:27.203" level="INFO">${check_length} = 0</msg>
<status status="PASS" endtime="20170728 15:48:27.203" starttime="20170728 15:48:27.201"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} != 0</arg>
<arg>execute sql string</arg>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>数据库之前没有数据</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库之前没有数据</arg>
</arguments>
<msg timestamp="20170728 15:48:27.206" level="INFO">数据库之前没有数据</msg>
<status status="PASS" endtime="20170728 15:48:27.208" starttime="20170728 15:48:27.205"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:27.209" starttime="20170728 15:48:27.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库里面的这条数据清理成功啦。</arg>
</arguments>
<msg timestamp="20170728 15:48:27.211" level="INFO">数据库里面的这条数据清理成功啦。</msg>
<status status="PASS" endtime="20170728 15:48:27.212" starttime="20170728 15:48:27.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_delete}</arg>
</arguments>
<msg timestamp="20170728 15:48:27.214" level="INFO">${id_delete} = 8880888</msg>
<status status="PASS" endtime="20170728 15:48:27.215" starttime="20170728 15:48:27.213"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:27.216" starttime="20170728 15:48:27.171"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("${id_delete}","32102151361500284867","100000","6135","1","32102151361500284867","","2000","1","6","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170728 15:48:27.218" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("8880888","32102151361500284867","100000","6135","1","32102151361500284867","","2000","1","6","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170728 15:48:27.290" starttime="20170728 15:48:27.217"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>100000</arg>
<arg>32102151361500284867</arg>
<arg>str</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 15:48:27.301" level="INFO">${args11} = 100000</msg>
<status status="PASS" endtime="20170728 15:48:27.302" starttime="20170728 15:48:27.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 15:48:27.305" level="INFO">${args22} = 32102151361500284867</msg>
<status status="PASS" endtime="20170728 15:48:27.306" starttime="20170728 15:48:27.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 15:48:27.310" level="INFO">${args33} = str</msg>
<status status="PASS" endtime="20170728 15:48:27.311" starttime="20170728 15:48:27.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 15:48:27.315" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 15:48:27.316" starttime="20170728 15:48:27.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 15:48:27.321" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/freezePay</msg>
<status status="PASS" endtime="20170728 15:48:27.323" starttime="20170728 15:48:27.318"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:27.326" starttime="20170728 15:48:27.294"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 15:48:27.333" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/freezePay</msg>
<status status="PASS" endtime="20170728 15:48:27.335" starttime="20170728 15:48:27.330"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 15:48:27.342" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 15:48:27.344" starttime="20170728 15:48:27.338"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:27.351" starttime="20170728 15:48:27.348"></status>
</kw>
<msg timestamp="20170728 15:48:27.353" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 15:48:27.354" starttime="20170728 15:48:27.346"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>user_id</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:27.361" starttime="20170728 15:48:27.359"></status>
</kw>
<msg timestamp="20170728 15:48:27.362" level="INFO">${args11_after} = user_id</msg>
<status status="PASS" endtime="20170728 15:48:27.362" starttime="20170728 15:48:27.356"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:48:27.366" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:48:27.376" starttime="20170728 15:48:27.365"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:27.378" starttime="20170728 15:48:27.364"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:27.380" starttime="20170728 15:48:27.363"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 15:48:27.382" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and channel_no='1' </msg>
<msg timestamp="20170728 15:48:27.400" level="INFO">${database1} = ((9100, '32102151361499943857', 100000, 6135, 1, '32102151361499943857', '20170714000118SSP038852', Decimal('2.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, ...</msg>
<status status="PASS" endtime="20170728 15:48:27.401" starttime="20170728 15:48:27.381"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 15:48:27.405" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 15:48:27.411" level="INFO">${database} = ((12449, 6135, Decimal('50433.00'), Decimal('49611.00'), Decimal('822.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 15, 49, 31), 0),)</msg>
<status status="PASS" endtime="20170728 15:48:27.411" starttime="20170728 15:48:27.403"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 15:48:27.415" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 15:48:27.416" starttime="20170728 15:48:27.413"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 15:48:27.419" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 15:48:27.419" starttime="20170728 15:48:27.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 15:48:27.421" level="INFO">获得account_id值为：6135</msg>
<status status="PASS" endtime="20170728 15:48:27.422" starttime="20170728 15:48:27.420"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 15:48:27.425" level="INFO">${total_amount_before} = 50433.00</msg>
<status status="PASS" endtime="20170728 15:48:27.426" starttime="20170728 15:48:27.423"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 15:48:27.428" level="INFO">${balance_amount_before} = 49611.00</msg>
<status status="PASS" endtime="20170728 15:48:27.429" starttime="20170728 15:48:27.427"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 15:48:27.431" level="INFO">${frozen_amount_before} = 822.00</msg>
<status status="PASS" endtime="20170728 15:48:27.432" starttime="20170728 15:48:27.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 15:48:27.435" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 15:48:27.435" starttime="20170728 15:48:27.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 15:48:27.438" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 15:48:27.438" starttime="20170728 15:48:27.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 15:48:27.441" level="INFO">${total_amount_before} = 50433.00</msg>
<status status="PASS" endtime="20170728 15:48:27.442" starttime="20170728 15:48:27.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 15:48:27.445" level="INFO">${balance_amount_before} = 49611.00</msg>
<status status="PASS" endtime="20170728 15:48:27.446" starttime="20170728 15:48:27.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 15:48:27.449" level="INFO">${frozen_amount_before} = 822.00</msg>
<status status="PASS" endtime="20170728 15:48:27.449" starttime="20170728 15:48:27.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 15:48:27.451" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 15:48:27.452" starttime="20170728 15:48:27.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 15:48:27.454" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 15:48:27.455" starttime="20170728 15:48:27.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 15:48:27.459" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/freezePay</msg>
<status status="PASS" endtime="20170728 15:48:27.461" starttime="20170728 15:48:27.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170728 15:48:27.464" level="INFO">${database} = ((12449, 6135, Decimal('50433.00'), Decimal('49611.00'), Decimal('822.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 15, 49, 31), 0),)</msg>
<status status="PASS" endtime="20170728 15:48:27.465" starttime="20170728 15:48:27.462"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:27.466" starttime="20170728 15:48:27.328"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Freeze Pay" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:27.481" starttime="20170728 15:48:27.470"></status>
</kw>
<msg timestamp="20170728 15:48:27.482" level="INFO">${data} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20170728 15:48:27.483" starttime="20170728 15:48:27.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 15:48:27.486" level="INFO">${data} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20170728 15:48:27.486" starttime="20170728 15:48:27.484"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:27.487" starttime="20170728 15:48:27.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 15:48:27.489" level="INFO">400</msg>
<status status="PASS" endtime="20170728 15:48:27.490" starttime="20170728 15:48:27.488"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20170728 15:48:27.493" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:27.494" starttime="20170728 15:48:27.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>400由于语法格式有误，服务器无法理解此请求。</arg>
</arguments>
<msg timestamp="20170728 15:48:27.496" level="INFO">400由于语法格式有误，服务器无法理解此请求。</msg>
<status status="PASS" endtime="20170728 15:48:27.496" starttime="20170728 15:48:27.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 15:48:27.498" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 15:48:27.499" starttime="20170728 15:48:27.497"></status>
</kw>
<kw name="amount和表里的校验" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:48:27.504" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:48:27.512" starttime="20170728 15:48:27.503"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:27.514" starttime="20170728 15:48:27.502"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:27.515" starttime="20170728 15:48:27.501"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 15:48:27.517" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 15:48:27.522" level="INFO">${user_id} = ((12449, 6135, Decimal('50433.00'), Decimal('49611.00'), Decimal('822.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 15, 49, 31), 0),)</msg>
<status status="PASS" endtime="20170728 15:48:27.524" starttime="20170728 15:48:27.516"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:27.527" starttime="20170728 15:48:27.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 15:48:27.529" level="INFO">total_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 15:48:27.530" starttime="20170728 15:48:27.528"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:27.532" starttime="20170728 15:48:27.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 15:48:27.534" level="INFO">balance_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 15:48:27.535" starttime="20170728 15:48:27.533"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:27.537" starttime="20170728 15:48:27.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 15:48:27.539" level="INFO">frozen_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 15:48:27.541" starttime="20170728 15:48:27.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amounts的数据没有变化正确的</arg>
</arguments>
<msg timestamp="20170728 15:48:27.543" level="INFO">amounts的数据没有变化正确的</msg>
<status status="PASS" endtime="20170728 15:48:27.544" starttime="20170728 15:48:27.542"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 15:48:27.546" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:27.547" starttime="20170728 15:48:27.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount内容没有发生变化</arg>
</arguments>
<msg timestamp="20170728 15:48:27.549" level="INFO">表account_amount内容没有发生变化</msg>
<status status="PASS" endtime="20170728 15:48:27.549" starttime="20170728 15:48:27.548"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 15:48:27.553" level="INFO">${current_time} = 2017-07-28 15:48:27.552</msg>
<status status="PASS" endtime="20170728 15:48:27.554" starttime="20170728 15:48:27.550"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 15:48:27.558" level="INFO">${current_time_before_30} = 2017-07-28 15:47:27.552</msg>
<status status="PASS" endtime="20170728 15:48:27.559" starttime="20170728 15:48:27.555"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 15:48:27.562" level="INFO">${current_time_after_30} = 2017-07-28 15:49:32.552</msg>
<status status="PASS" endtime="20170728 15:48:27.563" starttime="20170728 15:48:27.561"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${bill_check}</var>
</assign>
<msg timestamp="20170728 15:48:27.565" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6135' and update_time between' 2017-07-28 15:47:27.552' and '2017-07-28 15:49:32.552' </msg>
<msg timestamp="20170728 15:48:27.570" level="INFO">${bill_check} = ()</msg>
<status status="PASS" endtime="20170728 15:48:27.571" starttime="20170728 15:48:27.564"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${bill_check}</arg>
</arguments>
<assign>
<var>${bill_check_length}</var>
</assign>
<msg timestamp="20170728 15:48:27.574" level="INFO">Length is 0</msg>
<msg timestamp="20170728 15:48:27.576" level="INFO">${bill_check_length} = 0</msg>
<status status="PASS" endtime="20170728 15:48:27.576" starttime="20170728 15:48:27.572"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${bill_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 15:48:27.578" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:27.579" starttime="20170728 15:48:27.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>account_unilateral_bill里的没有相关数据</arg>
</arguments>
<msg timestamp="20170728 15:48:27.581" level="INFO">account_unilateral_bill里的没有相关数据</msg>
<status status="PASS" endtime="20170728 15:48:27.582" starttime="20170728 15:48:27.580"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num ='${args11}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${transaction_check}</var>
</assign>
<msg timestamp="20170728 15:48:27.585" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num ='100000' and update_time between' 2017-07-28 15:47:27.552' and '2017-07-28 15:49:32.552' </msg>
<msg timestamp="20170728 15:48:27.595" level="INFO">${transaction_check} = ()</msg>
<status status="PASS" endtime="20170728 15:48:27.596" starttime="20170728 15:48:27.584"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${transaction_check}</arg>
</arguments>
<assign>
<var>${transaction_check_length}</var>
</assign>
<msg timestamp="20170728 15:48:27.601" level="INFO">Length is 0</msg>
<msg timestamp="20170728 15:48:27.602" level="INFO">${transaction_check_length} = 0</msg>
<status status="PASS" endtime="20170728 15:48:27.603" starttime="20170728 15:48:27.599"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${transaction_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 15:48:27.605" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:27.605" starttime="20170728 15:48:27.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>ajb_account_transaction里的没有相关数据</arg>
</arguments>
<msg timestamp="20170728 15:48:27.607" level="INFO">ajb_account_transaction里的没有相关数据</msg>
<status status="PASS" endtime="20170728 15:48:27.609" starttime="20170728 15:48:27.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库表里数据调用接口前后没有发生变化</arg>
</arguments>
<msg timestamp="20170728 15:48:27.610" level="INFO">数据库表里数据调用接口前后没有发生变化</msg>
<status status="PASS" endtime="20170728 15:48:27.611" starttime="20170728 15:48:27.610"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:27.612" starttime="20170728 15:48:27.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>输入已有的user_id和amount为字符的时候，语法错误，报400</arg>
</arguments>
<msg timestamp="20170728 15:48:27.614" level="INFO">输入已有的user_id和amount为字符的时候，语法错误，报400</msg>
<status status="PASS" endtime="20170728 15:48:27.614" starttime="20170728 15:48:27.613"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<msg timestamp="20170728 15:48:27.616" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=8880888 </msg>
<status status="PASS" endtime="20170728 15:48:27.728" starttime="20170728 15:48:27.615"></status>
</kw>
<kw name="艾佳币恢复数目" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:48:27.740" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:48:27.798" starttime="20170728 15:48:27.737"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:27.801" starttime="20170728 15:48:27.735"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:27.803" starttime="20170728 15:48:27.732"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount \ SET total_amount=${database[0][2]},balance_amount=${database[0][3]},frozen_amount=${database[0][4]}where account_id="${account_id}";</arg>
</arguments>
<msg timestamp="20170728 15:48:27.809" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount  SET total_amount=50433.00,balance_amount=49611.00,frozen_amount=822.00where account_id="6135"; </msg>
<status status="PASS" endtime="20170728 15:48:27.818" starttime="20170728 15:48:27.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170728 15:48:27.822" level="INFO">成功</msg>
<status status="PASS" endtime="20170728 15:48:27.824" starttime="20170728 15:48:27.821"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:27.826" starttime="20170728 15:48:27.730"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:27.828" critical="yes" starttime="20170728 15:48:27.140"></status>
</test>
<status status="PASS" endtime="20170728 15:48:27.833" starttime="20170728 15:48:23.520"></status>
</suite>
<suite source="F:\logs and reports\账户中心\订单\订单支付退款（线上）.txt" id="s1-s1-s3" name="订单支付退款（线上）">
<test id="s1-s1-s3-t1" name="输入参数全部正确">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:48:27.888" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:48:27.899" starttime="20170728 15:48:27.886"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:27.901" starttime="20170728 15:48:27.884"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:27.902" starttime="20170728 15:48:27.881"></status>
</kw>
<kw name="清数据" library="myResource">
<arguments>
<arg>888888</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:48:27.907" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:48:27.918" starttime="20170728 15:48:27.906"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:27.919" starttime="20170728 15:48:27.905"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:27.920" starttime="20170728 15:48:27.904"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170728 15:48:27.922" level="INFO">Executing : Query  |  select * from ajb_account_transaction where id=888888 </msg>
<msg timestamp="20170728 15:48:27.928" level="INFO">${check} = ()</msg>
<status status="PASS" endtime="20170728 15:48:27.929" starttime="20170728 15:48:27.921"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170728 15:48:27.934" level="INFO">Length is 0</msg>
<msg timestamp="20170728 15:48:27.936" level="INFO">${check_length} = 0</msg>
<status status="PASS" endtime="20170728 15:48:27.937" starttime="20170728 15:48:27.932"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} != 0</arg>
<arg>execute sql string</arg>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>数据库之前没有数据</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库之前没有数据</arg>
</arguments>
<msg timestamp="20170728 15:48:27.941" level="INFO">数据库之前没有数据</msg>
<status status="PASS" endtime="20170728 15:48:27.942" starttime="20170728 15:48:27.939"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:27.943" starttime="20170728 15:48:27.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库里面的这条数据清理成功啦。</arg>
</arguments>
<msg timestamp="20170728 15:48:27.944" level="INFO">数据库里面的这条数据清理成功啦。</msg>
<status status="PASS" endtime="20170728 15:48:27.945" starttime="20170728 15:48:27.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_delete}</arg>
</arguments>
<msg timestamp="20170728 15:48:27.947" level="INFO">${id_delete} = 888888</msg>
<status status="PASS" endtime="20170728 15:48:27.948" starttime="20170728 15:48:27.946"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:27.949" starttime="20170728 15:48:27.903"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("${id_delete}","32102151361500885834","100000","6135","1","32102151361500885834","","2","1","13","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170728 15:48:27.951" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("888888","32102151361500885834","100000","6135","1","32102151361500885834","","2","1","13","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170728 15:48:28.067" starttime="20170728 15:48:27.950"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>32102151361500885834</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 15:48:28.075" level="INFO">${args11} = 32102151361500885834</msg>
<status status="PASS" endtime="20170728 15:48:28.077" starttime="20170728 15:48:28.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 15:48:28.082" level="INFO">${args22} = </msg>
<status status="PASS" endtime="20170728 15:48:28.084" starttime="20170728 15:48:28.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 15:48:28.088" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170728 15:48:28.090" starttime="20170728 15:48:28.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 15:48:28.096" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 15:48:28.097" starttime="20170728 15:48:28.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 15:48:28.104" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</msg>
<status status="PASS" endtime="20170728 15:48:28.107" starttime="20170728 15:48:28.100"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:28.110" starttime="20170728 15:48:28.069"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num='${args11}' and event_code=13</arg>
</arguments>
<assign>
<var>${user_id_refund}</var>
</assign>
<msg timestamp="20170728 15:48:28.116" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num='32102151361500885834' and event_code=13 </msg>
<msg timestamp="20170728 15:48:28.131" level="INFO">${user_id_refund} = ((888888, '32102151361500885834', 100000, 6135, 1, '32102151361500885834', '', Decimal('2.00'), 1, 13, 2, 0, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)),)</msg>
<status status="PASS" endtime="20170728 15:48:28.133" starttime="20170728 15:48:28.112"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${user_id_refund[0][2]}' and channel_no=1</arg>
</arguments>
<assign>
<var>${account_id_bos}</var>
</assign>
<msg timestamp="20170728 15:48:28.138" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=1 </msg>
<msg timestamp="20170728 15:48:28.147" level="INFO">${account_id_bos} = ((6090, '32102151361499943856', 100000, 6135, 1, 2, 0, datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 13, 23, 57, 26)),)</msg>
<status status="PASS" endtime="20170728 15:48:28.149" starttime="20170728 15:48:28.135"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_id_bos[0][3]}</arg>
</arguments>
<assign>
<var>${account_id_boss}</var>
</assign>
<msg timestamp="20170728 15:48:28.154" level="INFO">${account_id_boss} = 6135</msg>
<status status="PASS" endtime="20170728 15:48:28.155" starttime="20170728 15:48:28.151"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${user_id_refund[0][2]}' and channel_no=2</arg>
</arguments>
<assign>
<var>${account_id_ap}</var>
</assign>
<msg timestamp="20170728 15:48:28.161" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='100000' and channel_no=2 </msg>
<msg timestamp="20170728 15:48:28.170" level="INFO">${account_id_ap} = ((100000000010L, '32102151361501206852', 100000, 6273, 2, 2, 0, datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 10, 46, 53)),)</msg>
<status status="PASS" endtime="20170728 15:48:28.172" starttime="20170728 15:48:28.157"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${account_id_ap[0][3]}</arg>
</arguments>
<assign>
<var>${account_id_app}</var>
</assign>
<msg timestamp="20170728 15:48:28.177" level="INFO">${account_id_app} = 6273</msg>
<status status="PASS" endtime="20170728 15:48:28.178" starttime="20170728 15:48:28.174"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_boss}'</arg>
</arguments>
<assign>
<var>${amount_boss}</var>
</assign>
<msg timestamp="20170728 15:48:28.182" level="INFO">Executing : Query  |  select * from account_amount where account_id='6135' </msg>
<msg timestamp="20170728 15:48:28.188" level="INFO">${amount_boss} = ((12449, 6135, Decimal('50433.00'), Decimal('49611.00'), Decimal('822.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 15, 49, 31), 0),)</msg>
<status status="PASS" endtime="20170728 15:48:28.190" starttime="20170728 15:48:28.180"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_app}'</arg>
</arguments>
<assign>
<var>${amount_app}</var>
</assign>
<msg timestamp="20170728 15:48:28.194" level="INFO">Executing : Query  |  select * from account_amount where account_id='6273' </msg>
<msg timestamp="20170728 15:48:28.201" level="INFO">${amount_app} = ((12587, 6273, Decimal('50433.00'), Decimal('49611.00'), Decimal('822.00'), datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 15, 49, 1), 0),)</msg>
<status status="PASS" endtime="20170728 15:48:28.203" starttime="20170728 15:48:28.192"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 15:48:28.207" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</msg>
<status status="PASS" endtime="20170728 15:48:28.210" starttime="20170728 15:48:28.205"></status>
</kw>
<kw name="Ajb Withdraw Cancel" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20170728 15:48:28.927" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 15:48:28.930" starttime="20170728 15:48:28.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 15:48:28.935" level="INFO">200</msg>
<status status="PASS" endtime="20170728 15:48:28.937" starttime="20170728 15:48:28.932"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 15:48:28.943" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:28.946" starttime="20170728 15:48:28.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 15:48:28.950" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 15:48:28.952" starttime="20170728 15:48:28.948"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 15:48:28.957" level="INFO">To JSON using : content={"data":null,"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 15:48:28.959" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 15:48:28.962" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': None, u'success': True}</msg>
<status status="PASS" endtime="20170728 15:48:28.964" starttime="20170728 15:48:28.954"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 15:48:28.972" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:28.975" starttime="20170728 15:48:28.968"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:28.981" starttime="20170728 15:48:28.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 15:48:28.986" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 15:48:28.988" starttime="20170728 15:48:28.984"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 15:48:28.993" level="INFO">${current_time} = 2017-07-28 15:48:28.993</msg>
<status status="PASS" endtime="20170728 15:48:28.994" starttime="20170728 15:48:28.990"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>5 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 15:48:28.997" level="INFO">${current_time_before_30} = 2017-07-28 15:48:23.993</msg>
<status status="PASS" endtime="20170728 15:48:28.998" starttime="20170728 15:48:28.995"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 15:48:29.001" level="INFO">${current_time_after_30} = 2017-07-28 15:50:08.993</msg>
<status status="PASS" endtime="20170728 15:48:29.003" starttime="20170728 15:48:28.999"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where event_code=14 and user_id='${user_id_refund[0][2]}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 15:48:29.010" level="INFO">Executing : Query  |  select * from account_unilateral_bill where event_code=14 and user_id='100000' and update_time between' 2017-07-28 15:48:23.993' and '2017-07-28 15:50:08.993' </msg>
<msg timestamp="20170728 15:48:29.021" level="INFO">${user_id} = ((6931, '32102151361501207752', 100000, 6135, '32102151361501207750', 1, 14, 3, Decimal('2.00'), None, datetime.datetime(2017, 7, 28, 15, 49, 33), datetime.datetime(2017, 7, 28, 15, 49, 33), 0),)</msg>
<status status="PASS" endtime="20170728 15:48:29.022" starttime="20170728 15:48:29.006"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170728 15:48:29.025" level="INFO">Length is 20</msg>
<msg timestamp="20170728 15:48:29.026" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170728 15:48:29.027" starttime="20170728 15:48:29.023"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 15:48:29.029" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:29.029" starttime="20170728 15:48:29.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 15:48:29.031" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 15:48:29.032" starttime="20170728 15:48:29.030"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_refund[0][2]}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:29.034" starttime="20170728 15:48:29.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 15:48:29.037" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 15:48:29.038" starttime="20170728 15:48:29.036"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170728 15:48:29.040" level="INFO">Length is 20</msg>
<msg timestamp="20170728 15:48:29.041" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170728 15:48:29.042" starttime="20170728 15:48:29.039"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 15:48:29.045" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:29.046" starttime="20170728 15:48:29.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 15:48:29.048" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 15:48:29.048" starttime="20170728 15:48:29.047"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 15:48:29.050" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:29.051" starttime="20170728 15:48:29.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 15:48:29.053" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 15:48:29.055" starttime="20170728 15:48:29.052"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>14</arg>
</arguments>
<msg timestamp="20170728 15:48:29.059" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:29.060" starttime="20170728 15:48:29.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 15:48:29.062" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 15:48:29.063" starttime="20170728 15:48:29.061"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20170728 15:48:29.066" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:29.067" starttime="20170728 15:48:29.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170728 15:48:29.069" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170728 15:48:29.070" starttime="20170728 15:48:29.068"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:29.072" starttime="20170728 15:48:29.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 15:48:29.075" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 15:48:29.076" starttime="20170728 15:48:29.073"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 15:48:29.078" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:29.079" starttime="20170728 15:48:29.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 15:48:29.081" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 15:48:29.083" starttime="20170728 15:48:29.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170728 15:48:29.086" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170728 15:48:29.086" starttime="20170728 15:48:29.085"></status>
</kw>
<kw name="Conn Mysql" library="wjwTestLibrary">
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]}'</arg>
</arguments>
<assign>
<var>${user_id_unilateral_delete}</var>
</assign>
<msg timestamp="20170728 15:48:29.154" level="INFO">${user_id_unilateral_delete} = ()</msg>
<status status="PASS" endtime="20170728 15:48:29.157" starttime="20170728 15:48:29.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170728 15:48:29.164" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170728 15:48:29.166" starttime="20170728 15:48:29.162"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time1}</var>
</assign>
<msg timestamp="20170728 15:48:29.169" level="INFO">${current_time1} = 2017-07-28 15:48:29.169</msg>
<status status="PASS" endtime="20170728 15:48:29.170" starttime="20170728 15:48:29.167"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>5 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_301}</var>
</assign>
<msg timestamp="20170728 15:48:29.175" level="INFO">${current_time_before_301} = 2017-07-28 15:48:24.169</msg>
<status status="PASS" endtime="20170728 15:48:29.176" starttime="20170728 15:48:29.172"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_301}</var>
</assign>
<msg timestamp="20170728 15:48:29.181" level="INFO">${current_time_after_301} = 2017-07-28 15:50:09.169</msg>
<status status="PASS" endtime="20170728 15:48:29.182" starttime="20170728 15:48:29.178"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where event_code=14 and user_id='${user_id_refund[0][2]}' and update_time between' ${current_time_before_301}' and '${current_time_after_301}'</arg>
</arguments>
<assign>
<var>${user_id1}</var>
</assign>
<msg timestamp="20170728 15:48:29.186" level="INFO">Executing : Query  |  select * from ajb_account_transaction where event_code=14 and user_id='100000' and update_time between' 2017-07-28 15:48:24.169' and '2017-07-28 15:50:09.169' </msg>
<msg timestamp="20170728 15:48:29.199" level="INFO">${user_id1} = ((88889497, '32102151361501207749', 100000, 6135, 1, '32102151361500885834', '20170728154930VGX051382', Decimal('2.00'), 1, 14, 2, 0, datetime.datetime(2017, 7, 28, 15, 49, 33), datetime.datetime(2017...</msg>
<status status="PASS" endtime="20170728 15:48:29.200" starttime="20170728 15:48:29.184"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id1[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 15:48:29.205" level="INFO">Length is 20</msg>
<msg timestamp="20170728 15:48:29.207" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 15:48:29.209" starttime="20170728 15:48:29.202"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 15:48:29.216" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:29.218" starttime="20170728 15:48:29.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 15:48:29.221" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 15:48:29.222" starttime="20170728 15:48:29.220"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][2]}</arg>
<arg>${user_id_refund[0][2]}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:29.228" starttime="20170728 15:48:29.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 15:48:29.231" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 15:48:29.232" starttime="20170728 15:48:29.229"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][5]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 15:48:29.236" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:29.237" starttime="20170728 15:48:29.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170728 15:48:29.242" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170728 15:48:29.244" starttime="20170728 15:48:29.239"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id1[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170728 15:48:29.249" level="INFO">${pay_no_after} = 20170728154930VGX051382</msg>
<status status="PASS" endtime="20170728 15:48:29.250" starttime="20170728 15:48:29.247"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170728 15:48:29.255" level="INFO">Length is 23</msg>
<msg timestamp="20170728 15:48:29.256" level="INFO">${pay_no_after_length} = 23</msg>
<status status="PASS" endtime="20170728 15:48:29.258" starttime="20170728 15:48:29.253"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>23</arg>
</arguments>
<msg timestamp="20170728 15:48:29.263" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:29.264" starttime="20170728 15:48:29.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170728 15:48:29.267" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170728 15:48:29.268" starttime="20170728 15:48:29.266"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][7]}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:29.274" starttime="20170728 15:48:29.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 15:48:29.278" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 15:48:29.279" starttime="20170728 15:48:29.277"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 15:48:29.281" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:29.282" starttime="20170728 15:48:29.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 15:48:29.284" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 15:48:29.285" starttime="20170728 15:48:29.283"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][9]}</arg>
<arg>14</arg>
</arguments>
<msg timestamp="20170728 15:48:29.287" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:29.288" starttime="20170728 15:48:29.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 15:48:29.292" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 15:48:29.294" starttime="20170728 15:48:29.290"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 15:48:29.296" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:29.297" starttime="20170728 15:48:29.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170728 15:48:29.300" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170728 15:48:29.302" starttime="20170728 15:48:29.298"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id1[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 15:48:29.304" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:29.305" starttime="20170728 15:48:29.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 15:48:29.306" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 15:48:29.307" starttime="20170728 15:48:29.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170728 15:48:29.310" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170728 15:48:29.311" starttime="20170728 15:48:29.309"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170728 15:48:29.313" level="INFO">${user_id[0][0]_transaction} = 6931</msg>
<status status="PASS" endtime="20170728 15:48:29.313" starttime="20170728 15:48:29.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170728 15:48:29.315" level="INFO">${user_id[0][0]_transaction} = 6931</msg>
<status status="PASS" endtime="20170728 15:48:29.316" starttime="20170728 15:48:29.314"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id1[0][0]}'</arg>
</arguments>
<msg timestamp="20170728 15:48:29.319" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88889497' </msg>
<status status="PASS" endtime="20170728 15:48:29.433" starttime="20170728 15:48:29.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>检验表account_amount</arg>
</arguments>
<msg timestamp="20170728 15:48:29.438" level="INFO">检验表account_amount</msg>
<status status="PASS" endtime="20170728 15:48:29.439" starttime="20170728 15:48:29.436"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_app}'</arg>
</arguments>
<assign>
<var>${amount_app_after}</var>
</assign>
<msg timestamp="20170728 15:48:29.443" level="INFO">Executing : Query  |  select * from account_amount where account_id='6273' </msg>
<msg timestamp="20170728 15:48:29.452" level="INFO">${amount_app_after} = ((12587, 6273, Decimal('50433.00'), Decimal('49611.00'), Decimal('822.00'), datetime.datetime(2017, 7, 28, 10, 46, 53), datetime.datetime(2017, 7, 28, 15, 49, 1), 0),)</msg>
<status status="PASS" endtime="20170728 15:48:29.454" starttime="20170728 15:48:29.441"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id='${account_id_boss}'</arg>
</arguments>
<assign>
<var>${amount_boss_after}</var>
</assign>
<msg timestamp="20170728 15:48:29.465" level="INFO">Executing : Query  |  select * from account_amount where account_id='6135' </msg>
<msg timestamp="20170728 15:48:29.472" level="INFO">${amount_boss_after} = ((12449, 6135, Decimal('50435.00'), Decimal('49613.00'), Decimal('822.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 15, 49, 34), 0),)</msg>
<status status="PASS" endtime="20170728 15:48:29.474" starttime="20170728 15:48:29.457"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${amount_boss_after[0][2]}+${amount_app_after[0][2]}-${amount_boss[0][2]}-${amount_app[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_check}</var>
</assign>
<msg timestamp="20170728 15:48:29.481" level="INFO">${total_amount_check} = 2.0</msg>
<status status="PASS" endtime="20170728 15:48:29.482" starttime="20170728 15:48:29.477"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${total_amount_check}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<msg timestamp="20170728 15:48:29.487" level="INFO">Argument types are:
&lt;type 'float'&gt;
&lt;class 'decimal.Decimal'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:29.488" starttime="20170728 15:48:29.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount正确</arg>
</arguments>
<msg timestamp="20170728 15:48:29.491" level="INFO">total_amount正确</msg>
<status status="PASS" endtime="20170728 15:48:29.493" starttime="20170728 15:48:29.489"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${amount_boss_after[0][3]}+${amount_app_after[0][3]}-${amount_boss[0][3]}-${amount_app[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_check}</var>
</assign>
<msg timestamp="20170728 15:48:29.497" level="INFO">${balance_amount_check} = 2.0</msg>
<status status="PASS" endtime="20170728 15:48:29.497" starttime="20170728 15:48:29.494"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${balance_amount_check}</arg>
<arg>${user_id_refund[0][7]}</arg>
</arguments>
<msg timestamp="20170728 15:48:29.499" level="INFO">Argument types are:
&lt;type 'float'&gt;
&lt;class 'decimal.Decimal'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:29.500" starttime="20170728 15:48:29.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount正确</arg>
</arguments>
<msg timestamp="20170728 15:48:29.503" level="INFO">balance_amount正确</msg>
<status status="PASS" endtime="20170728 15:48:29.504" starttime="20170728 15:48:29.502"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${amount_boss[0][4]}+${amount_app[0][4]}-${amount_boss_after[0][4]}-${amount_app_after[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_check}</var>
</assign>
<msg timestamp="20170728 15:48:29.506" level="INFO">${frozen_amount_check} = 0.0</msg>
<status status="PASS" endtime="20170728 15:48:29.507" starttime="20170728 15:48:29.504"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${frozen_amount_check}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 15:48:29.510" level="INFO">Argument types are:
&lt;type 'float'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:29.511" starttime="20170728 15:48:29.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount正确</arg>
</arguments>
<msg timestamp="20170728 15:48:29.512" level="INFO">frozen_amount正确</msg>
<status status="PASS" endtime="20170728 15:48:29.513" starttime="20170728 15:48:29.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>检验表account_amount成功</arg>
</arguments>
<msg timestamp="20170728 15:48:29.515" level="INFO">检验表account_amount成功</msg>
<status status="PASS" endtime="20170728 15:48:29.515" starttime="20170728 15:48:29.514"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<msg timestamp="20170728 15:48:29.519" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=888888 </msg>
<status status="PASS" endtime="20170728 15:48:29.649" starttime="20170728 15:48:29.517"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount SET total_amount =${amount_boss[0][2]},balance_amount=${amount_boss[0][3]},frozen_amount=${amount_boss[0][4]} where account_id="${account_id_boss}";</arg>
</arguments>
<msg timestamp="20170728 15:48:29.660" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount SET total_amount =50433.00,balance_amount=49611.00,frozen_amount=822.00 where account_id="6135"; </msg>
<status status="PASS" endtime="20170728 15:48:29.862" starttime="20170728 15:48:29.653"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount SET total_amount=${amount_boss[0][2]},balance_amount=${amount_boss[0][3]},frozen_amount=${amount_boss[0][4]} where account_id="${account_id_app}";</arg>
</arguments>
<msg timestamp="20170728 15:48:29.872" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount SET total_amount=50433.00,balance_amount=49611.00,frozen_amount=822.00 where account_id="6273"; </msg>
<status status="PASS" endtime="20170728 15:48:29.883" starttime="20170728 15:48:29.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170728 15:48:29.889" level="INFO">成功</msg>
<status status="PASS" endtime="20170728 15:48:29.890" starttime="20170728 15:48:29.886"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:29.894" critical="yes" starttime="20170728 15:48:27.878"></status>
</test>
<test id="s1-s1-s3-t2" name="输入库里面标记删除的订单号">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:48:29.931" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:48:29.952" starttime="20170728 15:48:29.926"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:29.954" starttime="20170728 15:48:29.920"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:29.956" starttime="20170728 15:48:29.916"></status>
</kw>
<kw name="清数据" library="myResource">
<arguments>
<arg>88800888</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:48:29.968" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:48:29.976" starttime="20170728 15:48:29.967"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:29.978" starttime="20170728 15:48:29.965"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:29.979" starttime="20170728 15:48:29.963"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170728 15:48:29.982" level="INFO">Executing : Query  |  select * from ajb_account_transaction where id=88800888 </msg>
<msg timestamp="20170728 15:48:29.988" level="INFO">${check} = ()</msg>
<status status="PASS" endtime="20170728 15:48:29.989" starttime="20170728 15:48:29.981"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170728 15:48:29.994" level="INFO">Length is 0</msg>
<msg timestamp="20170728 15:48:29.996" level="INFO">${check_length} = 0</msg>
<status status="PASS" endtime="20170728 15:48:29.998" starttime="20170728 15:48:29.991"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} != 0</arg>
<arg>execute sql string</arg>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>数据库之前没有数据</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库之前没有数据</arg>
</arguments>
<msg timestamp="20170728 15:48:30.004" level="INFO">数据库之前没有数据</msg>
<status status="PASS" endtime="20170728 15:48:30.005" starttime="20170728 15:48:30.003"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:30.006" starttime="20170728 15:48:29.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库里面的这条数据清理成功啦。</arg>
</arguments>
<msg timestamp="20170728 15:48:30.009" level="INFO">数据库里面的这条数据清理成功啦。</msg>
<status status="PASS" endtime="20170728 15:48:30.010" starttime="20170728 15:48:30.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_delete}</arg>
</arguments>
<msg timestamp="20170728 15:48:30.013" level="INFO">${id_delete} = 88800888</msg>
<status status="PASS" endtime="20170728 15:48:30.014" starttime="20170728 15:48:30.011"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:30.015" starttime="20170728 15:48:29.959"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("${id_delete}","32102151361501122443","100000","6135","1","32102151361501122443","","2","1","11","2","1","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170728 15:48:30.018" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("88800888","32102151361501122443","100000","6135","1","32102151361501122443","","2","1","11","2","1","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170728 15:48:30.234" starttime="20170728 15:48:30.016"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>32102151361501122443</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 15:48:30.247" level="INFO">${args11} = 32102151361501122443</msg>
<status status="PASS" endtime="20170728 15:48:30.249" starttime="20170728 15:48:30.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 15:48:30.257" level="INFO">${args22} = </msg>
<status status="PASS" endtime="20170728 15:48:30.260" starttime="20170728 15:48:30.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 15:48:30.269" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170728 15:48:30.271" starttime="20170728 15:48:30.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 15:48:30.275" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 15:48:30.277" starttime="20170728 15:48:30.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 15:48:30.283" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</msg>
<status status="PASS" endtime="20170728 15:48:30.285" starttime="20170728 15:48:30.279"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:30.287" starttime="20170728 15:48:30.237"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 15:48:30.293" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</msg>
<status status="PASS" endtime="20170728 15:48:30.296" starttime="20170728 15:48:30.290"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 15:48:30.301" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 15:48:30.302" starttime="20170728 15:48:30.300"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:30.308" starttime="20170728 15:48:30.306"></status>
</kw>
<msg timestamp="20170728 15:48:30.310" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 15:48:30.311" starttime="20170728 15:48:30.303"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>order_num</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:30.315" starttime="20170728 15:48:30.313"></status>
</kw>
<msg timestamp="20170728 15:48:30.316" level="INFO">${args11_after} = order_num</msg>
<status status="PASS" endtime="20170728 15:48:30.318" starttime="20170728 15:48:30.312"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:48:30.325" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:48:30.347" starttime="20170728 15:48:30.323"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:30.349" starttime="20170728 15:48:30.321"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:30.350" starttime="20170728 15:48:30.319"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 15:48:30.353" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num='32102151361501122443' and channel_no='1' </msg>
<msg timestamp="20170728 15:48:30.364" level="INFO">${database1} = ((88800888, '32102151361501122443', 100000, 6135, 1, '32102151361501122443', '', Decimal('2.00'), 1, 11, 2, 1, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)),)</msg>
<status status="PASS" endtime="20170728 15:48:30.365" starttime="20170728 15:48:30.351"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 15:48:30.368" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 15:48:30.374" level="INFO">${database} = ((12449, 6135, Decimal('50433.00'), Decimal('49611.00'), Decimal('822.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 15, 49, 35), 0),)</msg>
<status status="PASS" endtime="20170728 15:48:30.375" starttime="20170728 15:48:30.366"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 15:48:30.377" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 15:48:30.378" starttime="20170728 15:48:30.376"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 15:48:30.380" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 15:48:30.381" starttime="20170728 15:48:30.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 15:48:30.383" level="INFO">获得account_id值为：6135</msg>
<status status="PASS" endtime="20170728 15:48:30.384" starttime="20170728 15:48:30.382"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 15:48:30.386" level="INFO">${total_amount_before} = 50433.00</msg>
<status status="PASS" endtime="20170728 15:48:30.387" starttime="20170728 15:48:30.385"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 15:48:30.389" level="INFO">${balance_amount_before} = 49611.00</msg>
<status status="PASS" endtime="20170728 15:48:30.390" starttime="20170728 15:48:30.387"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 15:48:30.395" level="INFO">${frozen_amount_before} = 822.00</msg>
<status status="PASS" endtime="20170728 15:48:30.396" starttime="20170728 15:48:30.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 15:48:30.399" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 15:48:30.401" starttime="20170728 15:48:30.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 15:48:30.404" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 15:48:30.405" starttime="20170728 15:48:30.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 15:48:30.410" level="INFO">${total_amount_before} = 50433.00</msg>
<status status="PASS" endtime="20170728 15:48:30.411" starttime="20170728 15:48:30.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 15:48:30.415" level="INFO">${balance_amount_before} = 49611.00</msg>
<status status="PASS" endtime="20170728 15:48:30.417" starttime="20170728 15:48:30.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 15:48:30.420" level="INFO">${frozen_amount_before} = 822.00</msg>
<status status="PASS" endtime="20170728 15:48:30.422" starttime="20170728 15:48:30.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 15:48:30.429" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 15:48:30.430" starttime="20170728 15:48:30.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 15:48:30.435" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 15:48:30.438" starttime="20170728 15:48:30.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 15:48:30.444" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</msg>
<status status="PASS" endtime="20170728 15:48:30.445" starttime="20170728 15:48:30.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170728 15:48:30.450" level="INFO">${database} = ((12449, 6135, Decimal('50433.00'), Decimal('49611.00'), Decimal('822.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 15, 49, 35), 0),)</msg>
<status status="PASS" endtime="20170728 15:48:30.452" starttime="20170728 15:48:30.448"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:30.454" starttime="20170728 15:48:30.288"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Ajb Withdraw Cancel" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:30.482" starttime="20170728 15:48:30.466"></status>
</kw>
<msg timestamp="20170728 15:48:30.485" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 15:48:30.486" starttime="20170728 15:48:30.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 15:48:30.489" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 15:48:30.490" starttime="20170728 15:48:30.487"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:30.493" starttime="20170728 15:48:30.457"></status>
</kw>
<kw name="错误时字段验证" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 15:48:30.500" level="INFO">200</msg>
<status status="PASS" endtime="20170728 15:48:30.501" starttime="20170728 15:48:30.498"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 15:48:30.504" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:30.506" starttime="20170728 15:48:30.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 15:48:30.510" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 15:48:30.511" starttime="20170728 15:48:30.508"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 15:48:30.516" level="INFO">To JSON using : content={"data":null,"msg":"订单退款结算失败","code":0,"success":false} </msg>
<msg timestamp="20170728 15:48:30.518" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 15:48:30.519" level="INFO">${toJson} = {u'msg': u'\u8ba2\u5355\u9000\u6b3e\u7ed3\u7b97\u5931\u8d25', u'code': 0, u'data': None, u'success': False}</msg>
<status status="PASS" endtime="20170728 15:48:30.520" starttime="20170728 15:48:30.513"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>False</arg>
</arguments>
<msg timestamp="20170728 15:48:30.523" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:30.524" starttime="20170728 15:48:30.521"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['data']}</arg>
<arg>None</arg>
</arguments>
<msg timestamp="20170728 15:48:30.526" level="INFO">Argument types are:
&lt;type 'NoneType'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:30.527" starttime="20170728 15:48:30.525"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${toJson['code']}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 15:48:30.529" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:30.530" starttime="20170728 15:48:30.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 15:48:30.532" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 15:48:30.532" starttime="20170728 15:48:30.531"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:30.533" starttime="20170728 15:48:30.495"></status>
</kw>
<kw name="amount和表里的校验" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:48:30.539" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:48:30.556" starttime="20170728 15:48:30.538"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:30.559" starttime="20170728 15:48:30.536"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:30.560" starttime="20170728 15:48:30.535"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 15:48:30.562" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 15:48:30.567" level="INFO">${user_id} = ((12449, 6135, Decimal('50433.00'), Decimal('49611.00'), Decimal('822.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 15, 49, 35), 0),)</msg>
<status status="PASS" endtime="20170728 15:48:30.568" starttime="20170728 15:48:30.561"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:30.571" starttime="20170728 15:48:30.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 15:48:30.573" level="INFO">total_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 15:48:30.574" starttime="20170728 15:48:30.572"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:30.576" starttime="20170728 15:48:30.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 15:48:30.578" level="INFO">balance_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 15:48:30.580" starttime="20170728 15:48:30.577"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:30.583" starttime="20170728 15:48:30.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170728 15:48:30.585" level="INFO">frozen_amount数目没有变化</msg>
<status status="PASS" endtime="20170728 15:48:30.586" starttime="20170728 15:48:30.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amounts的数据没有变化正确的</arg>
</arguments>
<msg timestamp="20170728 15:48:30.587" level="INFO">amounts的数据没有变化正确的</msg>
<status status="PASS" endtime="20170728 15:48:30.588" starttime="20170728 15:48:30.587"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 15:48:30.591" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:30.592" starttime="20170728 15:48:30.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount内容没有发生变化</arg>
</arguments>
<msg timestamp="20170728 15:48:30.595" level="INFO">表account_amount内容没有发生变化</msg>
<status status="PASS" endtime="20170728 15:48:30.595" starttime="20170728 15:48:30.594"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 15:48:30.599" level="INFO">${current_time} = 2017-07-28 15:48:30.599</msg>
<status status="PASS" endtime="20170728 15:48:30.600" starttime="20170728 15:48:30.597"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 15:48:30.603" level="INFO">${current_time_before_30} = 2017-07-28 15:47:30.599</msg>
<status status="PASS" endtime="20170728 15:48:30.604" starttime="20170728 15:48:30.601"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 15:48:30.607" level="INFO">${current_time_after_30} = 2017-07-28 15:49:35.599</msg>
<status status="PASS" endtime="20170728 15:48:30.607" starttime="20170728 15:48:30.605"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${bill_check}</var>
</assign>
<msg timestamp="20170728 15:48:30.610" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6135' and update_time between' 2017-07-28 15:47:30.599' and '2017-07-28 15:49:35.599' </msg>
<msg timestamp="20170728 15:48:30.615" level="INFO">${bill_check} = ()</msg>
<status status="PASS" endtime="20170728 15:48:30.616" starttime="20170728 15:48:30.608"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${bill_check}</arg>
</arguments>
<assign>
<var>${bill_check_length}</var>
</assign>
<msg timestamp="20170728 15:48:30.618" level="INFO">Length is 0</msg>
<msg timestamp="20170728 15:48:30.619" level="INFO">${bill_check_length} = 0</msg>
<status status="PASS" endtime="20170728 15:48:30.620" starttime="20170728 15:48:30.617"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${bill_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 15:48:30.622" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:30.623" starttime="20170728 15:48:30.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>account_unilateral_bill里的没有相关数据</arg>
</arguments>
<msg timestamp="20170728 15:48:30.625" level="INFO">account_unilateral_bill里的没有相关数据</msg>
<status status="PASS" endtime="20170728 15:48:30.626" starttime="20170728 15:48:30.624"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num ='${args11}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${transaction_check}</var>
</assign>
<msg timestamp="20170728 15:48:30.628" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num ='32102151361501122443' and update_time between' 2017-07-28 15:47:30.599' and '2017-07-28 15:49:35.599' </msg>
<msg timestamp="20170728 15:48:30.639" level="INFO">${transaction_check} = ()</msg>
<status status="PASS" endtime="20170728 15:48:30.640" starttime="20170728 15:48:30.627"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${transaction_check}</arg>
</arguments>
<assign>
<var>${transaction_check_length}</var>
</assign>
<msg timestamp="20170728 15:48:30.645" level="INFO">Length is 0</msg>
<msg timestamp="20170728 15:48:30.646" level="INFO">${transaction_check_length} = 0</msg>
<status status="PASS" endtime="20170728 15:48:30.647" starttime="20170728 15:48:30.642"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${transaction_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 15:48:30.651" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:30.652" starttime="20170728 15:48:30.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>ajb_account_transaction里的没有相关数据</arg>
</arguments>
<msg timestamp="20170728 15:48:30.653" level="INFO">ajb_account_transaction里的没有相关数据</msg>
<status status="PASS" endtime="20170728 15:48:30.654" starttime="20170728 15:48:30.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库表里数据调用接口前后没有发生变化</arg>
</arguments>
<msg timestamp="20170728 15:48:30.656" level="INFO">数据库表里数据调用接口前后没有发生变化</msg>
<status status="PASS" endtime="20170728 15:48:30.658" starttime="20170728 15:48:30.655"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:30.660" starttime="20170728 15:48:30.534"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<msg timestamp="20170728 15:48:30.662" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=88800888 </msg>
<status status="PASS" endtime="20170728 15:48:30.786" starttime="20170728 15:48:30.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当订单号为库里面标记删除的时候，接口返回失败</arg>
</arguments>
<msg timestamp="20170728 15:48:30.793" level="INFO">当订单号为库里面标记删除的时候，接口返回失败</msg>
<status status="PASS" endtime="20170728 15:48:30.796" starttime="20170728 15:48:30.790"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:30.799" critical="yes" starttime="20170728 15:48:29.901"></status>
</test>
<status status="PASS" endtime="20170728 15:48:30.806" starttime="20170728 15:48:27.848"></status>
</suite>
<suite source="F:\logs and reports\账户中心\订单\订单确认支付（线上）.txt" id="s1-s1-s4" name="订单确认支付（线上）">
<test id="s1-s1-s4-t1" name="输入的参数全部正确">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:48:30.865" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:48:30.875" starttime="20170728 15:48:30.861"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:30.876" starttime="20170728 15:48:30.857"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:30.878" starttime="20170728 15:48:30.855"></status>
</kw>
<kw name="清数据" library="myResource">
<arguments>
<arg>888888</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:48:30.885" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:48:30.895" starttime="20170728 15:48:30.883"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:30.897" starttime="20170728 15:48:30.882"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:30.898" starttime="20170728 15:48:30.881"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<assign>
<var>${check}</var>
</assign>
<msg timestamp="20170728 15:48:30.900" level="INFO">Executing : Query  |  select * from ajb_account_transaction where id=888888 </msg>
<msg timestamp="20170728 15:48:30.907" level="INFO">${check} = ()</msg>
<status status="PASS" endtime="20170728 15:48:30.908" starttime="20170728 15:48:30.899"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${check}</arg>
</arguments>
<assign>
<var>${check_length}</var>
</assign>
<msg timestamp="20170728 15:48:30.911" level="INFO">Length is 0</msg>
<msg timestamp="20170728 15:48:30.911" level="INFO">${check_length} = 0</msg>
<status status="PASS" endtime="20170728 15:48:30.912" starttime="20170728 15:48:30.909"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${check_length} != 0</arg>
<arg>execute sql string</arg>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
<arg>ELSE</arg>
<arg>log</arg>
<arg>数据库之前没有数据</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库之前没有数据</arg>
</arguments>
<msg timestamp="20170728 15:48:30.915" level="INFO">数据库之前没有数据</msg>
<status status="PASS" endtime="20170728 15:48:30.916" starttime="20170728 15:48:30.914"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:30.917" starttime="20170728 15:48:30.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库里面的这条数据清理成功啦。</arg>
</arguments>
<msg timestamp="20170728 15:48:30.919" level="INFO">数据库里面的这条数据清理成功啦。</msg>
<status status="PASS" endtime="20170728 15:48:30.919" starttime="20170728 15:48:30.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${id_delete}</arg>
</arguments>
<msg timestamp="20170728 15:48:30.921" level="INFO">${id_delete} = 888888</msg>
<status status="PASS" endtime="20170728 15:48:30.922" starttime="20170728 15:48:30.920"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:30.924" starttime="20170728 15:48:30.879"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("${id_delete}","32102151361500975216","100000","6135","1","32102151361500012119","","2","1","11","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40");</arg>
</arguments>
<msg timestamp="20170728 15:48:30.931" level="INFO">Executing : Execute SQL String  |  insert into ajb_account_transaction(id,business_no,user_id,account_id,channel_no,order_num,pay_no,amount,product_code,event_code,trade_status,del_flag,add_time,update_time) values("888888","32102151361500975216","100000","6135","1","32102151361500012119","","2","1","11","2","0","2017-07-26 16:11:40","2017-07-26 16:11:40"); </msg>
<status status="PASS" endtime="20170728 15:48:31.054" starttime="20170728 15:48:30.930"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>32102151361500012119</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 15:48:31.069" level="INFO">${args11} = 32102151361500012119</msg>
<status status="PASS" endtime="20170728 15:48:31.071" starttime="20170728 15:48:31.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 15:48:31.078" level="INFO">${args22} = </msg>
<status status="PASS" endtime="20170728 15:48:31.081" starttime="20170728 15:48:31.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 15:48:31.086" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170728 15:48:31.088" starttime="20170728 15:48:31.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 15:48:31.093" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 15:48:31.094" starttime="20170728 15:48:31.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 15:48:31.099" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/confirmPay</msg>
<status status="PASS" endtime="20170728 15:48:31.100" starttime="20170728 15:48:31.096"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:31.102" starttime="20170728 15:48:31.058"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 15:48:31.108" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/confirmPay</msg>
<status status="PASS" endtime="20170728 15:48:31.109" starttime="20170728 15:48:31.105"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170728 15:48:31.115" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 15:48:31.117" starttime="20170728 15:48:31.111"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:31.126" starttime="20170728 15:48:31.123"></status>
</kw>
<msg timestamp="20170728 15:48:31.127" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 15:48:31.128" starttime="20170728 15:48:31.120"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>order_num</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:31.136" starttime="20170728 15:48:31.135"></status>
</kw>
<msg timestamp="20170728 15:48:31.138" level="INFO">${args11_after} = order_num</msg>
<status status="PASS" endtime="20170728 15:48:31.139" starttime="20170728 15:48:31.130"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:48:31.146" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:48:31.156" starttime="20170728 15:48:31.144"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:31.158" starttime="20170728 15:48:31.142"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:31.160" starttime="20170728 15:48:31.141"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170728 15:48:31.163" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num='32102151361500012119' and channel_no='1' </msg>
<msg timestamp="20170728 15:48:31.174" level="INFO">${database1} = ((9242, '32102151361500012119', 100000, 6135, 1, '32102151361500012119', '20170717133633HCE041747', Decimal('2000.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 17, 13, 36, 36), datetime.datetime(2017, ...</msg>
<status status="PASS" endtime="20170728 15:48:31.175" starttime="20170728 15:48:31.161"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170728 15:48:31.177" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 15:48:31.182" level="INFO">${database} = ((12449, 6135, Decimal('50433.00'), Decimal('49611.00'), Decimal('822.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 15, 49, 35), 0),)</msg>
<status status="PASS" endtime="20170728 15:48:31.182" starttime="20170728 15:48:31.176"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170728 15:48:31.185" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 15:48:31.186" starttime="20170728 15:48:31.184"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170728 15:48:31.188" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 15:48:31.189" starttime="20170728 15:48:31.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170728 15:48:31.192" level="INFO">获得account_id值为：6135</msg>
<status status="PASS" endtime="20170728 15:48:31.193" starttime="20170728 15:48:31.190"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170728 15:48:31.195" level="INFO">${total_amount_before} = 50433.00</msg>
<status status="PASS" endtime="20170728 15:48:31.196" starttime="20170728 15:48:31.194"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170728 15:48:31.198" level="INFO">${balance_amount_before} = 49611.00</msg>
<status status="PASS" endtime="20170728 15:48:31.198" starttime="20170728 15:48:31.197"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170728 15:48:31.200" level="INFO">${frozen_amount_before} = 822.00</msg>
<status status="PASS" endtime="20170728 15:48:31.201" starttime="20170728 15:48:31.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170728 15:48:31.204" level="INFO">${account_id} = 6135</msg>
<status status="PASS" endtime="20170728 15:48:31.205" starttime="20170728 15:48:31.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170728 15:48:31.209" level="INFO">${user_id_real} = 100000</msg>
<status status="PASS" endtime="20170728 15:48:31.210" starttime="20170728 15:48:31.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170728 15:48:31.213" level="INFO">${total_amount_before} = 50433.00</msg>
<status status="PASS" endtime="20170728 15:48:31.214" starttime="20170728 15:48:31.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170728 15:48:31.216" level="INFO">${balance_amount_before} = 49611.00</msg>
<status status="PASS" endtime="20170728 15:48:31.217" starttime="20170728 15:48:31.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170728 15:48:31.221" level="INFO">${frozen_amount_before} = 822.00</msg>
<status status="PASS" endtime="20170728 15:48:31.222" starttime="20170728 15:48:31.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 15:48:31.225" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170728 15:48:31.226" starttime="20170728 15:48:31.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170728 15:48:31.228" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 15:48:31.228" starttime="20170728 15:48:31.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170728 15:48:31.230" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/confirmPay</msg>
<status status="PASS" endtime="20170728 15:48:31.231" starttime="20170728 15:48:31.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170728 15:48:31.233" level="INFO">${database} = ((12449, 6135, Decimal('50433.00'), Decimal('49611.00'), Decimal('822.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 15, 49, 35), 0),)</msg>
<status status="PASS" endtime="20170728 15:48:31.234" starttime="20170728 15:48:31.232"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:31.235" starttime="20170728 15:48:31.103"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Ajb Withdraw Cancel" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:31.355" starttime="20170728 15:48:31.241"></status>
</kw>
<msg timestamp="20170728 15:48:31.359" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 15:48:31.362" starttime="20170728 15:48:31.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170728 15:48:31.369" level="INFO">${data} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 15:48:31.371" starttime="20170728 15:48:31.366"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:31.374" starttime="20170728 15:48:31.236"></status>
</kw>
<kw name="字段验证" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170728 15:48:31.382" level="INFO">200</msg>
<status status="PASS" endtime="20170728 15:48:31.384" starttime="20170728 15:48:31.380"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 15:48:31.390" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:31.392" starttime="20170728 15:48:31.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 15:48:31.396" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 15:48:31.398" starttime="20170728 15:48:31.395"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data.text}</arg>
</arguments>
<assign>
<var>${toJson}</var>
</assign>
<msg timestamp="20170728 15:48:31.403" level="INFO">To JSON using : content={"data":null,"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 15:48:31.404" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 15:48:31.407" level="INFO">${toJson} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': None, u'success': True}</msg>
<status status="PASS" endtime="20170728 15:48:31.409" starttime="20170728 15:48:31.400"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 15:48:31.413" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:31.414" starttime="20170728 15:48:31.411"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:31.416" starttime="20170728 15:48:31.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 15:48:31.417" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 15:48:31.418" starttime="20170728 15:48:31.417"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
</arguments>
<assign>
<var>@{Link1}</var>
</assign>
<msg timestamp="20170728 15:48:31.420" level="INFO">@{Link1} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 15:48:31.421" starttime="20170728 15:48:31.419"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is false.</doc>
<arguments>
<arg>"${value}" in @{Link1}</arg>
<arg>Get From Dictionary</arg>
<arg>${toJson['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${orderNum}</var>
</assign>
<msg timestamp="20170728 15:48:31.424" level="INFO">${orderNum} = None</msg>
<status status="PASS" endtime="20170728 15:48:31.425" starttime="20170728 15:48:31.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${orderNum}</arg>
</arguments>
<msg timestamp="20170728 15:48:31.428" level="INFO">${orderNum} = None</msg>
<status status="PASS" endtime="20170728 15:48:31.428" starttime="20170728 15:48:31.426"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:31.429" starttime="20170728 15:48:31.377"></status>
</kw>
<kw name="确认取消的金额数" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:48:31.434" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:48:31.547" starttime="20170728 15:48:31.433"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:31.551" starttime="20170728 15:48:31.432"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:31.554" starttime="20170728 15:48:31.431"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>8</arg>
</arguments>
<assign>
<var>${event_code_judge}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>11</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:31.568" starttime="20170728 15:48:31.563"></status>
</kw>
<msg timestamp="20170728 15:48:31.572" level="INFO">${event_code_judge} = 11</msg>
<status status="PASS" endtime="20170728 15:48:31.574" starttime="20170728 15:48:31.557"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num ='${args11}' and event_code=${event_code_judge}</arg>
</arguments>
<assign>
<var>${search}</var>
</assign>
<msg timestamp="20170728 15:48:31.583" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num ='32102151361500012119' and event_code=11 </msg>
<msg timestamp="20170728 15:48:31.602" level="INFO">${search} = ((888888, '32102151361500975216', 100000, 6135, 1, '32102151361500012119', '', Decimal('2.00'), 1, 11, 2, 0, datetime.datetime(2017, 7, 26, 16, 11, 40), datetime.datetime(2017, 7, 26, 16, 11, 40)),)</msg>
<status status="PASS" endtime="20170728 15:48:31.604" starttime="20170728 15:48:31.577"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${search[0][7]}</arg>
</arguments>
<assign>
<var>${change_total_amount}</var>
</assign>
<msg timestamp="20170728 15:48:31.616" level="INFO">${change_total_amount} = 2.00</msg>
<status status="PASS" endtime="20170728 15:48:31.618" starttime="20170728 15:48:31.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${change_total_amount}</arg>
</arguments>
<msg timestamp="20170728 15:48:31.628" level="INFO">${change_total_amount} = 2.00</msg>
<status status="PASS" endtime="20170728 15:48:31.632" starttime="20170728 15:48:31.621"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:31.636" starttime="20170728 15:48:31.430"></status>
</kw>
<kw name="退款确认的account_unilateral_bill的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_unilateral_bill</arg>
</arguments>
<msg timestamp="20170728 15:48:31.650" level="INFO">现在开始校验表account_unilateral_bill</msg>
<status status="PASS" endtime="20170728 15:48:31.652" starttime="20170728 15:48:31.646"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:48:31.670" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:48:31.684" starttime="20170728 15:48:31.665"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:31.690" starttime="20170728 15:48:31.660"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:31.693" starttime="20170728 15:48:31.655"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>account_unilateral_bill</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:48:31.717" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:48:31.739" starttime="20170728 15:48:31.713"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:31.743" starttime="20170728 15:48:31.708"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:31.745" starttime="20170728 15:48:31.701"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 15:48:31.748" level="INFO">${current_time} = 2017-07-28 15:48:31.748</msg>
<status status="PASS" endtime="20170728 15:48:31.749" starttime="20170728 15:48:31.747"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>10 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 15:48:31.755" level="INFO">${current_time_before_30} = 2017-07-28 15:48:21.748</msg>
<status status="PASS" endtime="20170728 15:48:31.756" starttime="20170728 15:48:31.752"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 15:48:31.761" level="INFO">${current_time_after_30} = 2017-07-28 15:49:36.748</msg>
<status status="PASS" endtime="20170728 15:48:31.763" starttime="20170728 15:48:31.758"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 15:48:31.768" level="INFO">Executing : Query  |  select * from account_unilateral_bill where user_id='100000' and update_time between' 2017-07-28 15:48:21.748' and '2017-07-28 15:49:36.748' </msg>
<msg timestamp="20170728 15:48:31.781" level="INFO">${updatetime} = ((6932, '32102151361501207755', 100000, 6135, '32102151361501207754', 1, 13, 2, Decimal('2.00'), None, datetime.datetime(2017, 7, 28, 15, 49, 36), datetime.datetime(2017, 7, 28, 15, 49, 36), 0), (6933...</msg>
<status status="PASS" endtime="20170728 15:48:31.782" starttime="20170728 15:48:31.764"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 15:48:31.786" level="INFO">Length is 2</msg>
<status status="PASS" endtime="20170728 15:48:31.788" starttime="20170728 15:48:31.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 15:48:31.792" level="INFO">account_unilateral_bill表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 15:48:31.793" starttime="20170728 15:48:31.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 15:48:31.798" level="INFO">${current_time_before_30} = 2017-07-28 15:48:21.748</msg>
<status status="PASS" endtime="20170728 15:48:31.799" starttime="20170728 15:48:31.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 15:48:31.803" level="INFO">${current_time_after_30} = 2017-07-28 15:49:36.748</msg>
<status status="PASS" endtime="20170728 15:48:31.804" starttime="20170728 15:48:31.801"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:31.805" starttime="20170728 15:48:31.697"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id} 'and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 15:48:31.810" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6135 'and update_time between' 2017-07-28 15:48:21.748' and '2017-07-28 15:49:36.748' </msg>
<msg timestamp="20170728 15:48:31.818" level="INFO">${user_id} = ((6932, '32102151361501207755', 100000, 6135, '32102151361501207754', 1, 13, 2, Decimal('2.00'), None, datetime.datetime(2017, 7, 28, 15, 49, 36), datetime.datetime(2017, 7, 28, 15, 49, 36), 0), (6933...</msg>
<status status="PASS" endtime="20170728 15:48:31.820" starttime="20170728 15:48:31.808"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170728 15:48:31.825" level="INFO">Length is 20</msg>
<msg timestamp="20170728 15:48:31.827" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170728 15:48:31.829" starttime="20170728 15:48:31.823"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[1][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length2}</var>
</assign>
<msg timestamp="20170728 15:48:31.834" level="INFO">Length is 20</msg>
<msg timestamp="20170728 15:48:31.836" level="INFO">${bill_no_length2} = 20</msg>
<status status="PASS" endtime="20170728 15:48:31.837" starttime="20170728 15:48:31.832"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 15:48:31.842" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:31.843" starttime="20170728 15:48:31.840"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>${bill_no_length2}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:31.848" starttime="20170728 15:48:31.846"></status>
</kw>
<kw name="Should Not Be Equal" library="BuiltIn">
<doc>Fails if the given objects are equal.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
<arg>${user_id[1][1]}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:31.852" starttime="20170728 15:48:31.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，且不是相同bill_no,此时校验成功</arg>
</arguments>
<msg timestamp="20170728 15:48:31.855" level="INFO">bill_no的数据长度正确，且不是相同bill_no,此时校验成功</msg>
<status status="PASS" endtime="20170728 15:48:31.857" starttime="20170728 15:48:31.854"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:31.864" starttime="20170728 15:48:31.861"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id[1][2]}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:31.869" starttime="20170728 15:48:31.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 15:48:31.874" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 15:48:31.876" starttime="20170728 15:48:31.871"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170728 15:48:31.879" level="INFO">Length is 20</msg>
<msg timestamp="20170728 15:48:31.881" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170728 15:48:31.882" starttime="20170728 15:48:31.878"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 15:48:31.885" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:31.886" starttime="20170728 15:48:31.883"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${user_id[1][4]}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:31.893" starttime="20170728 15:48:31.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，且此时是同一个command_no,校验成功</arg>
</arguments>
<msg timestamp="20170728 15:48:31.898" level="INFO">commandl_no的数据长度正确，且此时是同一个command_no,校验成功</msg>
<status status="PASS" endtime="20170728 15:48:31.899" starttime="20170728 15:48:31.895"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 15:48:31.904" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:31.906" starttime="20170728 15:48:31.901"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>${user_id[1][5]}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:31.912" starttime="20170728 15:48:31.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 15:48:31.915" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 15:48:31.916" starttime="20170728 15:48:31.914"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>13</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:31.929" starttime="20170728 15:48:31.927"></status>
</kw>
<msg timestamp="20170728 15:48:31.931" level="INFO">${event_code} = 13</msg>
<status status="PASS" endtime="20170728 15:48:31.932" starttime="20170728 15:48:31.920"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 15:48:31.936" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 15:48:31.937" starttime="20170728 15:48:31.934"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:31.946" starttime="20170728 15:48:31.944"></status>
</kw>
<msg timestamp="20170728 15:48:31.948" level="INFO">${event_code_after} = 13</msg>
<status status="PASS" endtime="20170728 15:48:31.949" starttime="20170728 15:48:31.941"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 15:48:31.954" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 15:48:31.956" starttime="20170728 15:48:31.950"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:31.968" starttime="20170728 15:48:31.965"></status>
</kw>
<msg timestamp="20170728 15:48:31.971" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 15:48:31.973" starttime="20170728 15:48:31.959"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:31.981" starttime="20170728 15:48:31.979"></status>
</kw>
<msg timestamp="20170728 15:48:31.983" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 15:48:31.984" starttime="20170728 15:48:31.975"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 15:48:31.989" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 15:48:31.991" starttime="20170728 15:48:31.986"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:32.002" starttime="20170728 15:48:31.999"></status>
</kw>
<msg timestamp="20170728 15:48:32.005" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 15:48:32.007" starttime="20170728 15:48:31.995"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${total_amount_before}-${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:32.016" starttime="20170728 15:48:32.013"></status>
</kw>
<msg timestamp="20170728 15:48:32.019" level="INFO">${total_amount} = 50431.0</msg>
<status status="PASS" endtime="20170728 15:48:32.021" starttime="20170728 15:48:32.009"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:32.031" starttime="20170728 15:48:32.028"></status>
</kw>
<msg timestamp="20170728 15:48:32.032" level="INFO">${balance_amount} = 49611.00</msg>
<status status="PASS" endtime="20170728 15:48:32.034" starttime="20170728 15:48:32.023"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:32.042" starttime="20170728 15:48:32.040"></status>
</kw>
<msg timestamp="20170728 15:48:32.044" level="INFO">${frozen_amount} = 820.0</msg>
<status status="PASS" endtime="20170728 15:48:32.047" starttime="20170728 15:48:32.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 15:48:32.054" level="INFO">${event_code} = 13</msg>
<status status="PASS" endtime="20170728 15:48:32.057" starttime="20170728 15:48:32.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 15:48:32.063" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 15:48:32.064" starttime="20170728 15:48:32.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 15:48:32.068" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 15:48:32.069" starttime="20170728 15:48:32.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 15:48:32.073" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 15:48:32.075" starttime="20170728 15:48:32.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 15:48:32.080" level="INFO">${total_amount} = 50431.0</msg>
<status status="PASS" endtime="20170728 15:48:32.082" starttime="20170728 15:48:32.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 15:48:32.088" level="INFO">${balance_amount} = 49611.00</msg>
<status status="PASS" endtime="20170728 15:48:32.090" starttime="20170728 15:48:32.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 15:48:32.096" level="INFO">${frozen_amount} = 820.0</msg>
<status status="PASS" endtime="20170728 15:48:32.098" starttime="20170728 15:48:32.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 15:48:32.101" level="INFO">${event_code_after} = 13</msg>
<status status="PASS" endtime="20170728 15:48:32.102" starttime="20170728 15:48:32.100"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:32.103" starttime="20170728 15:48:31.918"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 15:48:32.106" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:32.107" starttime="20170728 15:48:32.104"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>${user_id[1][6]}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:32.110" starttime="20170728 15:48:32.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 15:48:32.112" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 15:48:32.113" starttime="20170728 15:48:32.111"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 15:48:32.115" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:32.116" starttime="20170728 15:48:32.114"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[1][7]}</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20170728 15:48:32.118" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:32.119" starttime="20170728 15:48:32.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type俩者值正确</arg>
</arguments>
<msg timestamp="20170728 15:48:32.121" level="INFO">command_type俩者值正确</msg>
<status status="PASS" endtime="20170728 15:48:32.123" starttime="20170728 15:48:32.120"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:32.125" starttime="20170728 15:48:32.124"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>0-${amount}</arg>
</arguments>
<assign>
<var>${amount_after}</var>
</assign>
<msg timestamp="20170728 15:48:32.128" level="INFO">${amount_after} = -2.0</msg>
<status status="PASS" endtime="20170728 15:48:32.129" starttime="20170728 15:48:32.127"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${user_id[1][8]}</arg>
<arg>${amount_after}</arg>
</arguments>
<msg timestamp="20170728 15:48:32.131" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:32.132" starttime="20170728 15:48:32.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 15:48:32.133" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 15:48:32.134" starttime="20170728 15:48:32.132"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${user_id[0][10]}</arg>
<arg>${user_id[0][11]}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:32.136" starttime="20170728 15:48:32.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 15:48:32.138" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 15:48:32.139" starttime="20170728 15:48:32.137"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${user_id[0][10]}</arg>
<arg>${user_id[0][10]}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:32.144" starttime="20170728 15:48:32.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>则调用艾佳币回收确认的接口时，则直接同时发生解冻和转账俩步</arg>
</arguments>
<msg timestamp="20170728 15:48:32.147" level="INFO">则调用艾佳币回收确认的接口时，则直接同时发生解冻和转账俩步</msg>
<status status="PASS" endtime="20170728 15:48:32.149" starttime="20170728 15:48:32.146"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 15:48:32.152" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:32.153" starttime="20170728 15:48:32.150"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>${user_id[1][12]}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:32.159" starttime="20170728 15:48:32.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 15:48:32.161" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 15:48:32.162" starttime="20170728 15:48:32.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170728 15:48:32.164" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170728 15:48:32.164" starttime="20170728 15:48:32.163"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>${user_id[1][0]}</arg>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>@{delete_unilateral_bill}</var>
</assign>
<msg timestamp="20170728 15:48:32.167" level="INFO">@{delete_unilateral_bill} = [ 6933 | 6932 ]</msg>
<status status="PASS" endtime="20170728 15:48:32.167" starttime="20170728 15:48:32.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{delete_unilateral_bill}</arg>
</arguments>
<msg timestamp="20170728 15:48:32.169" level="INFO">@{delete_unilateral_bill} = [ 6933 | 6932 ]</msg>
<status status="PASS" endtime="20170728 15:48:32.170" starttime="20170728 15:48:32.168"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[1][0]}'</arg>
</arguments>
<msg timestamp="20170728 15:48:32.173" level="INFO">Executing : Execute SQL String  |  delete from account_unilateral_bill where id ='6933' </msg>
<status status="PASS" endtime="20170728 15:48:32.408" starttime="20170728 15:48:32.171"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]}'</arg>
</arguments>
<msg timestamp="20170728 15:48:32.417" level="INFO">Executing : Execute SQL String  |  delete from account_unilateral_bill where id ='6932' </msg>
<status status="PASS" endtime="20170728 15:48:32.506" starttime="20170728 15:48:32.413"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:32.511" starttime="20170728 15:48:31.641"></status>
</kw>
<kw name="表ajb_account_transaction" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170728 15:48:32.525" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170728 15:48:32.527" starttime="20170728 15:48:32.522"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:48:32.535" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:48:32.547" starttime="20170728 15:48:32.533"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:32.550" starttime="20170728 15:48:32.530"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:32.552" starttime="20170728 15:48:32.528"></status>
</kw>
<kw name="update_time校验" library="myResource">
<arguments>
<arg>ajb_account_transaction</arg>
</arguments>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:48:32.569" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:48:32.581" starttime="20170728 15:48:32.565"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:32.584" starttime="20170728 15:48:32.560"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:32.586" starttime="20170728 15:48:32.556"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170728 15:48:32.591" level="INFO">${current_time} = 2017-07-28 15:48:32.591</msg>
<status status="PASS" endtime="20170728 15:48:32.592" starttime="20170728 15:48:32.588"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>10 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170728 15:48:32.598" level="INFO">${current_time_before_30} = 2017-07-28 15:48:22.591</msg>
<status status="PASS" endtime="20170728 15:48:32.600" starttime="20170728 15:48:32.595"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170728 15:48:32.604" level="INFO">${current_time_after_30} = 2017-07-28 15:49:37.591</msg>
<status status="PASS" endtime="20170728 15:48:32.605" starttime="20170728 15:48:32.602"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ${args} where user_id='${user_id_real}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${updatetime}</var>
</assign>
<msg timestamp="20170728 15:48:32.610" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='100000' and update_time between' 2017-07-28 15:48:22.591' and '2017-07-28 15:49:37.591' </msg>
<msg timestamp="20170728 15:48:32.625" level="INFO">${updatetime} = ((88889498, '32102151361501207753', 100000, 6135, 1, '32102151361500012119', '20170728154933IBH051383', Decimal('2.00'), 1, 13, 2, 0, datetime.datetime(2017, 7, 28, 15, 49, 36), datetime.datetime(2017...</msg>
<status status="PASS" endtime="20170728 15:48:32.626" starttime="20170728 15:48:32.607"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${updatetime}</arg>
</arguments>
<msg timestamp="20170728 15:48:32.630" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 15:48:32.632" starttime="20170728 15:48:32.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${args}表里的update_time校验成功，满足要求！</arg>
</arguments>
<msg timestamp="20170728 15:48:32.636" level="INFO">ajb_account_transaction表里的update_time校验成功，满足要求！</msg>
<status status="PASS" endtime="20170728 15:48:32.637" starttime="20170728 15:48:32.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_before_30}</arg>
</arguments>
<msg timestamp="20170728 15:48:32.644" level="INFO">${current_time_before_30} = 2017-07-28 15:48:22.591</msg>
<status status="PASS" endtime="20170728 15:48:32.645" starttime="20170728 15:48:32.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${current_time_after_30}</arg>
</arguments>
<msg timestamp="20170728 15:48:32.651" level="INFO">${current_time_after_30} = 2017-07-28 15:49:37.591</msg>
<status status="PASS" endtime="20170728 15:48:32.652" starttime="20170728 15:48:32.648"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:32.654" starttime="20170728 15:48:32.554"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 15:48:32.661" level="INFO">Executing : Query  |  select * from ajb_account_transaction where account_id ='6135' and update_time between' 2017-07-28 15:48:22.591' and '2017-07-28 15:49:37.591' </msg>
<msg timestamp="20170728 15:48:32.677" level="INFO">${user_id} = ((88889498, '32102151361501207753', 100000, 6135, 1, '32102151361500012119', '20170728154933IBH051383', Decimal('2.00'), 1, 13, 2, 0, datetime.datetime(2017, 7, 28, 15, 49, 36), datetime.datetime(2017...</msg>
<status status="PASS" endtime="20170728 15:48:32.679" starttime="20170728 15:48:32.656"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 15:48:32.683" level="INFO">Length is 20</msg>
<msg timestamp="20170728 15:48:32.685" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 15:48:32.686" starttime="20170728 15:48:32.681"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 15:48:32.691" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:32.692" starttime="20170728 15:48:32.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 15:48:32.696" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 15:48:32.697" starttime="20170728 15:48:32.694"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${user_id_real}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:32.704" starttime="20170728 15:48:32.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 15:48:32.710" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 15:48:32.712" starttime="20170728 15:48:32.708"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170728 15:48:32.717" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:32.718" starttime="20170728 15:48:32.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no的值正确</arg>
</arguments>
<msg timestamp="20170728 15:48:32.725" level="INFO">channel_no的值正确</msg>
<status status="PASS" endtime="20170728 15:48:32.726" starttime="20170728 15:48:32.722"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${args11}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${orderNum}</arg>
</arguments>
<assign>
<var>${bill_order_num}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:32.734" starttime="20170728 15:48:32.732"></status>
</kw>
<msg timestamp="20170728 15:48:32.736" level="INFO">${bill_order_num} = 32102151361500012119</msg>
<status status="PASS" endtime="20170728 15:48:32.737" starttime="20170728 15:48:32.728"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>${bill_order_num}</arg>
</arguments>
<msg timestamp="20170728 15:48:32.743" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:32.744" starttime="20170728 15:48:32.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170728 15:48:32.750" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170728 15:48:32.752" starttime="20170728 15:48:32.746"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>13</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:32.769" starttime="20170728 15:48:32.766"></status>
</kw>
<msg timestamp="20170728 15:48:32.772" level="INFO">${event_code} = 13</msg>
<status status="PASS" endtime="20170728 15:48:32.774" starttime="20170728 15:48:32.758"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 15:48:32.780" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 15:48:32.782" starttime="20170728 15:48:32.778"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:32.789" starttime="20170728 15:48:32.786"></status>
</kw>
<msg timestamp="20170728 15:48:32.791" level="INFO">${event_code_after} = 13</msg>
<status status="PASS" endtime="20170728 15:48:32.792" starttime="20170728 15:48:32.784"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 15:48:32.796" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 15:48:32.797" starttime="20170728 15:48:32.794"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:32.810" starttime="20170728 15:48:32.807"></status>
</kw>
<msg timestamp="20170728 15:48:32.813" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 15:48:32.814" starttime="20170728 15:48:32.802"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:32.822" starttime="20170728 15:48:32.819"></status>
</kw>
<msg timestamp="20170728 15:48:32.824" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 15:48:32.825" starttime="20170728 15:48:32.816"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 15:48:32.831" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 15:48:32.833" starttime="20170728 15:48:32.828"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:32.842" starttime="20170728 15:48:32.839"></status>
</kw>
<msg timestamp="20170728 15:48:32.845" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 15:48:32.846" starttime="20170728 15:48:32.835"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${total_amount_before}-${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:32.856" starttime="20170728 15:48:32.853"></status>
</kw>
<msg timestamp="20170728 15:48:32.859" level="INFO">${total_amount} = 50431.0</msg>
<status status="PASS" endtime="20170728 15:48:32.860" starttime="20170728 15:48:32.849"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:32.869" starttime="20170728 15:48:32.867"></status>
</kw>
<msg timestamp="20170728 15:48:32.872" level="INFO">${balance_amount} = 49611.00</msg>
<status status="PASS" endtime="20170728 15:48:32.874" starttime="20170728 15:48:32.863"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:32.882" starttime="20170728 15:48:32.880"></status>
</kw>
<msg timestamp="20170728 15:48:32.883" level="INFO">${frozen_amount} = 820.0</msg>
<status status="PASS" endtime="20170728 15:48:32.885" starttime="20170728 15:48:32.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 15:48:32.890" level="INFO">${event_code} = 13</msg>
<status status="PASS" endtime="20170728 15:48:32.892" starttime="20170728 15:48:32.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 15:48:32.897" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 15:48:32.900" starttime="20170728 15:48:32.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 15:48:32.907" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 15:48:32.909" starttime="20170728 15:48:32.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 15:48:32.911" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 15:48:32.912" starttime="20170728 15:48:32.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 15:48:32.914" level="INFO">${total_amount} = 50431.0</msg>
<status status="PASS" endtime="20170728 15:48:32.915" starttime="20170728 15:48:32.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 15:48:32.917" level="INFO">${balance_amount} = 49611.00</msg>
<status status="PASS" endtime="20170728 15:48:32.917" starttime="20170728 15:48:32.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 15:48:32.921" level="INFO">${frozen_amount} = 820.0</msg>
<status status="PASS" endtime="20170728 15:48:32.923" starttime="20170728 15:48:32.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 15:48:32.925" level="INFO">${event_code_after} = 13</msg>
<status status="PASS" endtime="20170728 15:48:32.926" starttime="20170728 15:48:32.924"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:32.927" starttime="20170728 15:48:32.755"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170728 15:48:32.929" level="INFO">${pay_no_after} = 20170728154933IBH051383</msg>
<status status="PASS" endtime="20170728 15:48:32.930" starttime="20170728 15:48:32.928"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170728 15:48:32.932" level="INFO">Length is 23</msg>
<msg timestamp="20170728 15:48:32.932" level="INFO">${pay_no_after_length} = 23</msg>
<status status="PASS" endtime="20170728 15:48:32.933" starttime="20170728 15:48:32.931"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 15:48:32.935" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:32.935" starttime="20170728 15:48:32.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170728 15:48:32.939" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170728 15:48:32.941" starttime="20170728 15:48:32.937"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>${amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:32.943" starttime="20170728 15:48:32.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 15:48:32.945" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 15:48:32.946" starttime="20170728 15:48:32.944"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 15:48:32.948" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:32.950" starttime="20170728 15:48:32.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 15:48:32.954" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 15:48:32.955" starttime="20170728 15:48:32.952"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][9]}</arg>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 15:48:32.958" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:32.960" starttime="20170728 15:48:32.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 15:48:32.962" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 15:48:32.962" starttime="20170728 15:48:32.961"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 15:48:32.965" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:32.966" starttime="20170728 15:48:32.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170728 15:48:32.968" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170728 15:48:32.969" starttime="20170728 15:48:32.967"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 15:48:32.971" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:32.972" starttime="20170728 15:48:32.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 15:48:32.974" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 15:48:32.975" starttime="20170728 15:48:32.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 15:48:32.977" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 15:48:32.977" starttime="20170728 15:48:32.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170728 15:48:32.979" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170728 15:48:32.980" starttime="20170728 15:48:32.978"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170728 15:48:32.984" level="INFO">${user_id[0][0]_transaction} = 88889498</msg>
<status status="PASS" endtime="20170728 15:48:32.985" starttime="20170728 15:48:32.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170728 15:48:32.988" level="INFO">${user_id[0][0]_transaction} = 88889498</msg>
<status status="PASS" endtime="20170728 15:48:32.989" starttime="20170728 15:48:32.986"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id[0][0]}'</arg>
</arguments>
<assign>
<var>${user_id_unilateral_delete1}</var>
</assign>
<msg timestamp="20170728 15:48:32.991" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88889498' </msg>
<msg timestamp="20170728 15:48:33.148" level="INFO">${user_id_unilateral_delete1} = None</msg>
<status status="PASS" endtime="20170728 15:48:33.150" starttime="20170728 15:48:32.989"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:33.153" starttime="20170728 15:48:32.516"></status>
</kw>
<kw name="表account_amount的校验" library="myResource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_amount</arg>
</arguments>
<msg timestamp="20170728 15:48:33.161" level="INFO">现在开始校验表account_amount</msg>
<status status="PASS" endtime="20170728 15:48:33.163" starttime="20170728 15:48:33.157"></status>
</kw>
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:48:33.172" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:48:33.183" starttime="20170728 15:48:33.169"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:33.185" starttime="20170728 15:48:33.167"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:33.186" starttime="20170728 15:48:33.164"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time1}</var>
</assign>
<msg timestamp="20170728 15:48:33.188" level="INFO">${current_time1} = 2017-07-28 15:48:33.188</msg>
<status status="PASS" endtime="20170728 15:48:33.189" starttime="20170728 15:48:33.187"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_before_30}</var>
</assign>
<msg timestamp="20170728 15:48:33.192" level="INFO">${current_time1_before_30} = 2017-07-28 15:47:33.188</msg>
<status status="PASS" endtime="20170728 15:48:33.193" starttime="20170728 15:48:33.190"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time1}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time1_after_30}</var>
</assign>
<msg timestamp="20170728 15:48:33.195" level="INFO">${current_time1_after_30} = 2017-07-28 15:49:33.188</msg>
<status status="PASS" endtime="20170728 15:48:33.195" starttime="20170728 15:48:33.194"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 15:48:33.197" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6135' </msg>
<msg timestamp="20170728 15:48:33.205" level="INFO">${user_id} = ((12449, 6135, Decimal('50431.00'), Decimal('49611.00'), Decimal('820.00'), datetime.datetime(2017, 7, 13, 23, 57, 26), datetime.datetime(2017, 7, 28, 15, 49, 36), 0),)</msg>
<status status="PASS" endtime="20170728 15:48:33.206" starttime="20170728 15:48:33.196"></status>
</kw>
<kw name="操作判断" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>8</arg>
<arg>ELSE IF</arg>
<arg>"${value}" =="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>set variable</arg>
<arg>9</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>10</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>11</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>set variable</arg>
<arg>12</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>13</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund"</arg>
<arg>set variable</arg>
<arg>14</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>7</arg>
</arguments>
<assign>
<var>${event_code}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>13</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:33.211" starttime="20170728 15:48:33.210"></status>
</kw>
<msg timestamp="20170728 15:48:33.212" level="INFO">${event_code} = 13</msg>
<status status="PASS" endtime="20170728 15:48:33.213" starttime="20170728 15:48:33.208"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>1</arg>
<arg>2</arg>
<arg>3</arg>
<arg>4</arg>
<arg>5</arg>
<arg>6</arg>
</arguments>
<assign>
<var>@{activity_code}</var>
</assign>
<msg timestamp="20170728 15:48:33.215" level="INFO">@{activity_code} = [ 1 | 2 | 3 | 4 | 5 | 6 ]</msg>
<status status="PASS" endtime="20170728 15:48:33.217" starttime="20170728 15:48:33.214"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${args44}" in @{activity_code}</arg>
<arg>set variable</arg>
<arg>${args44}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${event_code}</arg>
</arguments>
<assign>
<var>${event_code_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:33.222" starttime="20170728 15:48:33.220"></status>
</kw>
<msg timestamp="20170728 15:48:33.223" level="INFO">${event_code_after} = 13</msg>
<status status="PASS" endtime="20170728 15:48:33.224" starttime="20170728 15:48:33.218"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
</arguments>
<assign>
<var>@{command_no_type}</var>
</assign>
<msg timestamp="20170728 15:48:33.226" level="INFO">@{command_no_type} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170728 15:48:33.227" starttime="20170728 15:48:33.225"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{command_no_type}</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>3</arg>
</arguments>
<assign>
<var>${command_type}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:33.232" starttime="20170728 15:48:33.231"></status>
</kw>
<msg timestamp="20170728 15:48:33.233" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 15:48:33.234" starttime="20170728 15:48:33.228"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>set variable</arg>
<arg>${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${args22}</arg>
</arguments>
<assign>
<var>${amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:33.237" starttime="20170728 15:48:33.236"></status>
</kw>
<msg timestamp="20170728 15:48:33.239" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 15:48:33.240" starttime="20170728 15:48:33.234"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/freezePay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
</arguments>
<assign>
<var>@{pay_no_list}</var>
</assign>
<msg timestamp="20170728 15:48:33.242" level="INFO">@{pay_no_list} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/freezePay | http:...</msg>
<status status="PASS" endtime="20170728 15:48:33.243" starttime="20170728 15:48:33.241"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>4</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>23</arg>
</arguments>
<assign>
<var>${pay_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>23</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:33.248" starttime="20170728 15:48:33.246"></status>
</kw>
<msg timestamp="20170728 15:48:33.250" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 15:48:33.250" starttime="20170728 15:48:33.244"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"in @{pay_no_list}</arg>
<arg>set variable</arg>
<arg>${total_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>evaluate</arg>
<arg>${total_amount_before}-${change_total_amount}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${total_amount_before}</arg>
</arguments>
<assign>
<var>${total_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${total_amount_before}-${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:33.255" starttime="20170728 15:48:33.253"></status>
</kw>
<msg timestamp="20170728 15:48:33.256" level="INFO">${total_amount} = 50431.0</msg>
<status status="PASS" endtime="20170728 15:48:33.256" starttime="20170728 15:48:33.251"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/cancelPay"</arg>
<arg>evaluate</arg>
<arg>${change_total_amount}+${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${balance_amount_before}-${args33}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/confirmPay"</arg>
<arg>set variable</arg>
<arg>${balance_amount_before}</arg>
<arg>ELSE</arg>
<arg>evaluate</arg>
<arg>${args22}+${balance_amount_before}</arg>
</arguments>
<assign>
<var>${balance_amount}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:33.263" starttime="20170728 15:48:33.262"></status>
</kw>
<msg timestamp="20170728 15:48:33.265" level="INFO">${balance_amount} = 49611.00</msg>
<status status="PASS" endtime="20170728 15:48:33.266" starttime="20170728 15:48:33.258"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args22}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>evaluate</arg>
<arg>${frozen_amount_before}+${args33}</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<assign>
<var>${frozen_amount}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${frozen_amount_before}-${change_total_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:33.272" starttime="20170728 15:48:33.269"></status>
</kw>
<msg timestamp="20170728 15:48:33.274" level="INFO">${frozen_amount} = 820.0</msg>
<status status="PASS" endtime="20170728 15:48:33.274" starttime="20170728 15:48:33.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code}</arg>
</arguments>
<msg timestamp="20170728 15:48:33.277" level="INFO">${event_code} = 13</msg>
<status status="PASS" endtime="20170728 15:48:33.278" starttime="20170728 15:48:33.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${command_type}</arg>
</arguments>
<msg timestamp="20170728 15:48:33.280" level="INFO">${command_type} = 2</msg>
<status status="PASS" endtime="20170728 15:48:33.281" starttime="20170728 15:48:33.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${pay_no}</arg>
</arguments>
<msg timestamp="20170728 15:48:33.284" level="INFO">${pay_no} = 23</msg>
<status status="PASS" endtime="20170728 15:48:33.285" starttime="20170728 15:48:33.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${amount}</arg>
</arguments>
<msg timestamp="20170728 15:48:33.287" level="INFO">${amount} = 2.00</msg>
<status status="PASS" endtime="20170728 15:48:33.288" starttime="20170728 15:48:33.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 15:48:33.291" level="INFO">${total_amount} = 50431.0</msg>
<status status="PASS" endtime="20170728 15:48:33.292" starttime="20170728 15:48:33.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount}</arg>
</arguments>
<msg timestamp="20170728 15:48:33.295" level="INFO">${balance_amount} = 49611.00</msg>
<status status="PASS" endtime="20170728 15:48:33.295" starttime="20170728 15:48:33.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 15:48:33.297" level="INFO">${frozen_amount} = 820.0</msg>
<status status="PASS" endtime="20170728 15:48:33.298" starttime="20170728 15:48:33.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${event_code_after}</arg>
</arguments>
<msg timestamp="20170728 15:48:33.300" level="INFO">${event_code_after} = 13</msg>
<status status="PASS" endtime="20170728 15:48:33.300" starttime="20170728 15:48:33.299"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:33.301" starttime="20170728 15:48:33.207"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount}</arg>
</arguments>
<msg timestamp="20170728 15:48:33.304" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:33.305" starttime="20170728 15:48:33.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 15:48:33.307" level="INFO">total_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 15:48:33.308" starttime="20170728 15:48:33.306"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount}</arg>
</arguments>
<status status="PASS" endtime="20170728 15:48:33.311" starttime="20170728 15:48:33.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 15:48:33.314" level="INFO">balance_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 15:48:33.315" starttime="20170728 15:48:33.313"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount}</arg>
</arguments>
<msg timestamp="20170728 15:48:33.317" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'float'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:33.318" starttime="20170728 15:48:33.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 15:48:33.320" level="INFO">frozen_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 15:48:33.321" starttime="20170728 15:48:33.319"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 15:48:33.325" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 15:48:33.326" starttime="20170728 15:48:33.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 15:48:33.329" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 15:48:33.330" starttime="20170728 15:48:33.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount校验成功！</arg>
</arguments>
<msg timestamp="20170728 15:48:33.332" level="INFO">表account_amount校验成功！</msg>
<status status="PASS" endtime="20170728 15:48:33.333" starttime="20170728 15:48:33.331"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:33.334" starttime="20170728 15:48:33.155"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id=${id_delete}</arg>
</arguments>
<msg timestamp="20170728 15:48:33.335" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id=888888 </msg>
<status status="PASS" endtime="20170728 15:48:33.455" starttime="20170728 15:48:33.334"></status>
</kw>
<kw name="艾佳币恢复数目" library="myResource">
<kw name="数据库环境" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 15:48:33.483" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 15:48:33.550" starttime="20170728 15:48:33.480"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:33.554" starttime="20170728 15:48:33.472"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:33.558" starttime="20170728 15:48:33.466"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount \ SET total_amount=${database[0][2]},balance_amount=${database[0][3]},frozen_amount=${database[0][4]}where account_id="${account_id}";</arg>
</arguments>
<msg timestamp="20170728 15:48:33.567" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount  SET total_amount=50433.00,balance_amount=49611.00,frozen_amount=822.00where account_id="6135"; </msg>
<status status="PASS" endtime="20170728 15:48:33.678" starttime="20170728 15:48:33.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170728 15:48:33.683" level="INFO">成功</msg>
<status status="PASS" endtime="20170728 15:48:33.685" starttime="20170728 15:48:33.680"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:33.686" starttime="20170728 15:48:33.460"></status>
</kw>
<status status="PASS" endtime="20170728 15:48:33.688" critical="yes" starttime="20170728 15:48:30.850"></status>
</test>
<status status="PASS" endtime="20170728 15:48:33.691" starttime="20170728 15:48:30.818"></status>
</suite>
<status status="PASS" endtime="20170728 15:48:33.703" starttime="20170728 15:48:20.236"></status>
</suite>
<status status="PASS" endtime="20170728 15:48:33.718" starttime="20170728 15:48:20.031"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="7">Critical Tests</stat>
<stat fail="0" pass="7">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="账户中心" pass="7">账户中心</stat>
<stat fail="0" id="s1-s1" name="订单" pass="7">账户中心.订单</stat>
<stat fail="0" id="s1-s1-s1" name="订单取消支付（线上）" pass="1">账户中心.订单.订单取消支付（线上）</stat>
<stat fail="0" id="s1-s1-s2" name="订单支付冻结（线上）" pass="3">账户中心.订单.订单支付冻结（线上）</stat>
<stat fail="0" id="s1-s1-s3" name="订单支付退款（线上）" pass="2">账户中心.订单.订单支付退款（线上）</stat>
<stat fail="0" id="s1-s1-s4" name="订单确认支付（线上）" pass="1">账户中心.订单.订单确认支付（线上）</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
