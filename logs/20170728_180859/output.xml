<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170728 18:09:34.793" generator="Robot 3.0.2 (Python 2.7.8 on win32)">
<suite source="F:\logs and reports\账户中心" id="s1" name="账户中心">
<suite source="F:\logs and reports\账户中心\艾佳币" id="s1-s1" name="艾佳币">
<suite source="F:\logs and reports\账户中心\艾佳币\艾佳币充值.txt" id="s1-s1-s1" name="艾佳币充值">
<test id="s1-s1-s1-t1" name="输入未有的user_id和正确的amount参数">
<kw name="参数配置" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 18:09:35.533" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 18:09:35.549" starttime="20170728 18:09:35.508"></status>
</kw>
<status status="PASS" endtime="20170728 18:09:35.550" starttime="20170728 18:09:35.506"></status>
</kw>
<kw name="输入拥有不同类型账户的用户user_id" library="myResource">
<arguments>
<arg>100000</arg>
<arg>100000</arg>
<arg>123456781</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_user_account_id}</arg>
</arguments>
<msg timestamp="20170728 18:09:35.554" level="INFO">${boss_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170728 18:09:35.555" starttime="20170728 18:09:35.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_user_account_id}</arg>
</arguments>
<msg timestamp="20170728 18:09:35.558" level="INFO">${app_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170728 18:09:35.559" starttime="20170728 18:09:35.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${no_user_account_id}</arg>
</arguments>
<msg timestamp="20170728 18:09:35.560" level="INFO">${no_user_account_id} = 123456781</msg>
<status status="PASS" endtime="20170728 18:09:35.561" starttime="20170728 18:09:35.559"></status>
</kw>
<status status="PASS" endtime="20170728 18:09:35.562" starttime="20170728 18:09:35.551"></status>
</kw>
<status status="PASS" endtime="20170728 18:09:35.562" starttime="20170728 18:09:35.504"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>${no_user_account_id}</arg>
<arg>1</arg>
<arg>2</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 18:09:35.566" level="INFO">${args11} = 123456781</msg>
<status status="PASS" endtime="20170728 18:09:35.567" starttime="20170728 18:09:35.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 18:09:35.570" level="INFO">${args22} = 1</msg>
<status status="PASS" endtime="20170728 18:09:35.571" starttime="20170728 18:09:35.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 18:09:35.573" level="INFO">${args33} = 2</msg>
<status status="PASS" endtime="20170728 18:09:35.573" starttime="20170728 18:09:35.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 18:09:35.575" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 18:09:35.575" starttime="20170728 18:09:35.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 18:09:35.578" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</msg>
<status status="PASS" endtime="20170728 18:09:35.579" starttime="20170728 18:09:35.576"></status>
</kw>
<status status="PASS" endtime="20170728 18:09:35.580" starttime="20170728 18:09:35.563"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id ='${args11}'</arg>
</arguments>
<assign>
<var>${no_user_id}</var>
</assign>
<msg timestamp="20170728 18:09:35.582" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id ='123456781' </msg>
<msg timestamp="20170728 18:09:35.594" level="INFO">${no_user_id} = ()</msg>
<status status="PASS" endtime="20170728 18:09:35.595" starttime="20170728 18:09:35.581"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${no_user_id}</arg>
</arguments>
<msg timestamp="20170728 18:09:35.596" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170728 18:09:35.597" starttime="20170728 18:09:35.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>此user_id不存在</arg>
</arguments>
<msg timestamp="20170728 18:09:35.599" level="INFO">此user_id不存在</msg>
<status status="PASS" endtime="20170728 18:09:35.600" starttime="20170728 18:09:35.598"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 18:09:35.602" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</msg>
<status status="PASS" endtime="20170728 18:09:35.603" starttime="20170728 18:09:35.601"></status>
</kw>
<kw name="Data" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data_no_user_id}</var>
</assign>
<msg timestamp="20170728 18:09:35.703" level="INFO">${data_no_user_id} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 18:09:35.706" starttime="20170728 18:09:35.604"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data_no_user_id.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 18:09:35.714" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:35.716" starttime="20170728 18:09:35.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 18:09:35.722" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 18:09:35.725" starttime="20170728 18:09:35.719"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data_no_user_id.text}</arg>
</arguments>
<assign>
<var>${toJson1}</var>
</assign>
<msg timestamp="20170728 18:09:35.732" level="INFO">To JSON using : content={"data":{"orderNum":"32102151361501231386"},"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 18:09:35.734" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 18:09:35.735" level="INFO">${toJson1} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': {u'orderNum': u'32102151361501231386'}, u'success': True}</msg>
<status status="PASS" endtime="20170728 18:09:35.737" starttime="20170728 18:09:35.729"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson1['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 18:09:35.741" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:35.742" starttime="20170728 18:09:35.739"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson1['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 18:09:35.749" starttime="20170728 18:09:35.745"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${toJson1['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${no_user_id_orderNum}</var>
</assign>
<msg timestamp="20170728 18:09:35.754" level="INFO">${no_user_id_orderNum} = 32102151361501231386</msg>
<status status="PASS" endtime="20170728 18:09:35.755" starttime="20170728 18:09:35.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 18:09:35.758" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 18:09:35.759" starttime="20170728 18:09:35.757"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id ='${args11}'</arg>
</arguments>
<assign>
<var>${no_user_id_after}</var>
</assign>
<msg timestamp="20170728 18:09:35.761" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id ='123456781' </msg>
<msg timestamp="20170728 18:09:35.773" level="INFO">${no_user_id_after} = ((100000000097L, '32102151361501231385', 123456781, 6363, 1, 2, 0, datetime.datetime(2017, 7, 28, 18, 10, 41), datetime.datetime(2017, 7, 28, 18, 10, 41)),)</msg>
<status status="PASS" endtime="20170728 18:09:35.773" starttime="20170728 18:09:35.760"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${no_user_id_after}</arg>
</arguments>
<msg timestamp="20170728 18:09:35.775" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 18:09:35.776" starttime="20170728 18:09:35.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>调用艾佳币充值接口自动生成boss的账号</arg>
</arguments>
<msg timestamp="20170728 18:09:35.777" level="INFO">调用艾佳币充值接口自动生成boss的账号</msg>
<status status="PASS" endtime="20170728 18:09:35.778" starttime="20170728 18:09:35.776"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${no_user_id_after[0][3]}</arg>
</arguments>
<assign>
<var>${no_user_id_account_id}</var>
</assign>
<msg timestamp="20170728 18:09:35.780" level="INFO">${no_user_id_account_id} = 6363</msg>
<status status="PASS" endtime="20170728 18:09:35.781" starttime="20170728 18:09:35.779"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_open_record where user_id ='${args11}'</arg>
</arguments>
<msg timestamp="20170728 18:09:35.782" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_open_record where user_id ='123456781' </msg>
<status status="PASS" endtime="20170728 18:09:35.844" starttime="20170728 18:09:35.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>已删除该账号！</arg>
</arguments>
<msg timestamp="20170728 18:09:35.846" level="INFO">已删除该账号！</msg>
<status status="PASS" endtime="20170728 18:09:35.847" starttime="20170728 18:09:35.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_unilateral_bill</arg>
</arguments>
<msg timestamp="20170728 18:09:35.849" level="INFO">现在开始校验表account_unilateral_bill</msg>
<status status="PASS" endtime="20170728 18:09:35.849" starttime="20170728 18:09:35.848"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time_no}</var>
</assign>
<msg timestamp="20170728 18:09:35.851" level="INFO">${current_time_no} = 2017-07-28 18:09:35.851</msg>
<status status="PASS" endtime="20170728 18:09:35.852" starttime="20170728 18:09:35.850"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_no}</arg>
<arg>5 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_301}</var>
</assign>
<msg timestamp="20170728 18:09:35.858" level="INFO">${current_time_before_301} = 2017-07-28 18:09:30.851</msg>
<status status="PASS" endtime="20170728 18:09:35.858" starttime="20170728 18:09:35.853"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_no}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_302}</var>
</assign>
<msg timestamp="20170728 18:09:35.860" level="INFO">${current_time_after_302} = 2017-07-28 18:11:15.851</msg>
<status status="PASS" endtime="20170728 18:09:35.861" starttime="20170728 18:09:35.859"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${no_user_id_account_id}'and update_time between' ${current_time_before_301}' and '${current_time_after_302}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 18:09:35.863" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6363'and update_time between' 2017-07-28 18:09:30.851' and '2017-07-28 18:11:15.851' </msg>
<msg timestamp="20170728 18:09:35.879" level="INFO">${user_id} = ((8171, '32102151361501231390', 123456781, 6363, '32102151361501231387', 1, 7, 3, Decimal('1.00'), None, datetime.datetime(2017, 7, 28, 18, 10, 41), datetime.datetime(2017, 7, 28, 18, 10, 41), 0),)</msg>
<status status="PASS" endtime="20170728 18:09:35.880" starttime="20170728 18:09:35.862"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170728 18:09:35.882" level="INFO">Length is 20</msg>
<msg timestamp="20170728 18:09:35.883" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170728 18:09:35.884" starttime="20170728 18:09:35.881"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 18:09:35.886" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:35.886" starttime="20170728 18:09:35.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 18:09:35.888" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 18:09:35.888" starttime="20170728 18:09:35.887"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 18:09:35.890" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:35.891" starttime="20170728 18:09:35.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 18:09:35.892" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 18:09:35.893" starttime="20170728 18:09:35.891"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170728 18:09:35.894" level="INFO">Length is 20</msg>
<msg timestamp="20170728 18:09:35.895" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170728 18:09:35.895" starttime="20170728 18:09:35.893"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 18:09:35.897" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:35.898" starttime="20170728 18:09:35.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 18:09:35.899" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 18:09:35.900" starttime="20170728 18:09:35.899"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 18:09:35.901" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:35.903" starttime="20170728 18:09:35.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 18:09:35.905" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 18:09:35.905" starttime="20170728 18:09:35.904"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>7</arg>
</arguments>
<msg timestamp="20170728 18:09:35.907" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:35.907" starttime="20170728 18:09:35.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 18:09:35.908" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 18:09:35.909" starttime="20170728 18:09:35.908"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20170728 18:09:35.911" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:35.912" starttime="20170728 18:09:35.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170728 18:09:35.915" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170728 18:09:35.916" starttime="20170728 18:09:35.914"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 18:09:35.918" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:35.918" starttime="20170728 18:09:35.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 18:09:35.921" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 18:09:35.921" starttime="20170728 18:09:35.920"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${user_id[0][10]}</arg>
<arg>${user_id[0][11]}</arg>
</arguments>
<status status="PASS" endtime="20170728 18:09:35.923" starttime="20170728 18:09:35.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 18:09:35.925" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 18:09:35.925" starttime="20170728 18:09:35.924"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 18:09:35.928" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:35.929" starttime="20170728 18:09:35.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 18:09:35.931" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 18:09:35.932" starttime="20170728 18:09:35.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170728 18:09:35.934" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170728 18:09:35.935" starttime="20170728 18:09:35.933"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_unilateral}</var>
</assign>
<msg timestamp="20170728 18:09:35.938" level="INFO">${user_id[0][0]_unilateral} = 8171</msg>
<status status="PASS" endtime="20170728 18:09:35.939" starttime="20170728 18:09:35.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_unilateral}</arg>
</arguments>
<msg timestamp="20170728 18:09:35.941" level="INFO">${user_id[0][0]_unilateral} = 8171</msg>
<status status="PASS" endtime="20170728 18:09:35.941" starttime="20170728 18:09:35.940"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]_unilateral}'</arg>
</arguments>
<msg timestamp="20170728 18:09:35.943" level="INFO">Executing : Execute SQL String  |  delete from account_unilateral_bill where id ='8171' </msg>
<status status="PASS" endtime="20170728 18:09:36.038" starttime="20170728 18:09:35.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170728 18:09:36.048" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170728 18:09:36.051" starttime="20170728 18:09:36.044"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time_nouser}</var>
</assign>
<msg timestamp="20170728 18:09:36.059" level="INFO">${current_time_nouser} = 2017-07-28 18:09:36.058</msg>
<status status="PASS" endtime="20170728 18:09:36.060" starttime="20170728 18:09:36.055"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_nouser}</arg>
<arg>5 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_3011}</var>
</assign>
<msg timestamp="20170728 18:09:36.063" level="INFO">${current_time_before_3011} = 2017-07-28 18:09:31.058</msg>
<status status="PASS" endtime="20170728 18:09:36.063" starttime="20170728 18:09:36.061"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_nouser}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_3022}</var>
</assign>
<msg timestamp="20170728 18:09:36.066" level="INFO">${current_time_after_3022} = 2017-07-28 18:11:16.058</msg>
<status status="PASS" endtime="20170728 18:09:36.067" starttime="20170728 18:09:36.065"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where account_id ='${no_user_id_account_id}' and update_time between' ${current_time_before_3011}' and '${current_time_after_3022}'</arg>
</arguments>
<assign>
<var>${user_id_no}</var>
</assign>
<msg timestamp="20170728 18:09:36.071" level="INFO">Executing : Query  |  select * from ajb_account_transaction where account_id ='6363' and update_time between' 2017-07-28 18:09:31.058' and '2017-07-28 18:11:16.058' </msg>
<msg timestamp="20170728 18:09:36.084" level="INFO">${user_id_no} = ((88889979, '32102151361501231386', 123456781, 6363, 1, '32102151361501231386', '20170728181038KFS051948', Decimal('1.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 28, 18, 10, 41), datetime.datetime(20...</msg>
<status status="PASS" endtime="20170728 18:09:36.085" starttime="20170728 18:09:36.069"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id_no[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 18:09:36.089" level="INFO">Length is 20</msg>
<msg timestamp="20170728 18:09:36.090" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 18:09:36.091" starttime="20170728 18:09:36.087"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 18:09:36.093" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:36.093" starttime="20170728 18:09:36.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 18:09:36.095" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 18:09:36.096" starttime="20170728 18:09:36.094"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][2]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 18:09:36.100" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:36.101" starttime="20170728 18:09:36.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 18:09:36.103" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 18:09:36.104" starttime="20170728 18:09:36.102"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][4]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 18:09:36.106" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:36.106" starttime="20170728 18:09:36.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no的值正确</arg>
</arguments>
<msg timestamp="20170728 18:09:36.108" level="INFO">channel_no的值正确</msg>
<status status="PASS" endtime="20170728 18:09:36.109" starttime="20170728 18:09:36.107"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][5]}</arg>
<arg>${no_user_id_orderNum}</arg>
</arguments>
<msg timestamp="20170728 18:09:36.110" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:36.111" starttime="20170728 18:09:36.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170728 18:09:36.112" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170728 18:09:36.113" starttime="20170728 18:09:36.112"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id_no[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170728 18:09:36.117" level="INFO">${pay_no_after} = 20170728181038KFS051948</msg>
<status status="PASS" endtime="20170728 18:09:36.118" starttime="20170728 18:09:36.115"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170728 18:09:36.119" level="INFO">Length is 23</msg>
<msg timestamp="20170728 18:09:36.120" level="INFO">${pay_no_after_length} = 23</msg>
<status status="PASS" endtime="20170728 18:09:36.121" starttime="20170728 18:09:36.119"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>23</arg>
</arguments>
<msg timestamp="20170728 18:09:36.122" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:36.123" starttime="20170728 18:09:36.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170728 18:09:36.124" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170728 18:09:36.125" starttime="20170728 18:09:36.124"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][7]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 18:09:36.127" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:36.127" starttime="20170728 18:09:36.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 18:09:36.130" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 18:09:36.131" starttime="20170728 18:09:36.128"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 18:09:36.132" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:36.133" starttime="20170728 18:09:36.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 18:09:36.136" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 18:09:36.136" starttime="20170728 18:09:36.135"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][9]}</arg>
<arg>7</arg>
</arguments>
<msg timestamp="20170728 18:09:36.138" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:36.139" starttime="20170728 18:09:36.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 18:09:36.140" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 18:09:36.141" starttime="20170728 18:09:36.139"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 18:09:36.143" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:36.143" starttime="20170728 18:09:36.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170728 18:09:36.145" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170728 18:09:36.147" starttime="20170728 18:09:36.144"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 18:09:36.149" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:36.150" starttime="20170728 18:09:36.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 18:09:36.152" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 18:09:36.152" starttime="20170728 18:09:36.151"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${user_id_no[0][12]}</arg>
<arg>${user_id_no[0][13]}</arg>
</arguments>
<status status="PASS" endtime="20170728 18:09:36.154" starttime="20170728 18:09:36.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 18:09:36.155" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 18:09:36.156" starttime="20170728 18:09:36.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170728 18:09:36.157" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170728 18:09:36.158" starttime="20170728 18:09:36.157"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id_no[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170728 18:09:36.160" level="INFO">${user_id[0][0]_transaction} = 88889979</msg>
<status status="PASS" endtime="20170728 18:09:36.160" starttime="20170728 18:09:36.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170728 18:09:36.164" level="INFO">${user_id[0][0]_transaction} = 88889979</msg>
<status status="PASS" endtime="20170728 18:09:36.165" starttime="20170728 18:09:36.162"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id_no[0][0]}'</arg>
</arguments>
<msg timestamp="20170728 18:09:36.168" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88889979' </msg>
<status status="PASS" endtime="20170728 18:09:36.218" starttime="20170728 18:09:36.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_amount</arg>
</arguments>
<msg timestamp="20170728 18:09:36.224" level="INFO">现在开始校验表account_amount</msg>
<status status="PASS" endtime="20170728 18:09:36.227" starttime="20170728 18:09:36.221"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${no_user_id_account_id}'</arg>
</arguments>
<assign>
<var>${user_id_t}</var>
</assign>
<msg timestamp="20170728 18:09:36.235" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6363' </msg>
<msg timestamp="20170728 18:09:36.246" level="INFO">${user_id_t} = ((12677, 6363, Decimal('1.00'), Decimal('1.00'), Decimal('0.00'), datetime.datetime(2017, 7, 28, 18, 10, 41), datetime.datetime(2017, 7, 28, 18, 10, 41), 0),)</msg>
<status status="PASS" endtime="20170728 18:09:36.247" starttime="20170728 18:09:36.231"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][2]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 18:09:36.251" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:36.252" starttime="20170728 18:09:36.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 18:09:36.254" level="INFO">total_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 18:09:36.255" starttime="20170728 18:09:36.253"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][3]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 18:09:36.258" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:36.260" starttime="20170728 18:09:36.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 18:09:36.265" level="INFO">balance_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 18:09:36.266" starttime="20170728 18:09:36.263"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][4]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 18:09:36.269" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:36.270" starttime="20170728 18:09:36.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 18:09:36.272" level="INFO">frozen_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 18:09:36.273" starttime="20170728 18:09:36.271"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 18:09:36.277" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:09:36.278" starttime="20170728 18:09:36.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 18:09:36.282" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 18:09:36.283" starttime="20170728 18:09:36.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount校验成功！</arg>
</arguments>
<msg timestamp="20170728 18:09:36.286" level="INFO">表account_amount校验成功！</msg>
<status status="PASS" endtime="20170728 18:09:36.288" starttime="20170728 18:09:36.284"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_amount where account_id ='${no_user_id_account_id}'</arg>
</arguments>
<msg timestamp="20170728 18:09:36.292" level="INFO">Executing : Execute SQL String  |  delete from account_amount where account_id ='6363' </msg>
<status status="PASS" endtime="20170728 18:09:36.337" starttime="20170728 18:09:36.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>输入未有的user_id和正确的amount参数，会直接生成boss账户，然后表里的数据都入库成功！</arg>
</arguments>
<msg timestamp="20170728 18:09:36.339" level="INFO">输入未有的user_id和正确的amount参数，会直接生成boss账户，然后表里的数据都入库成功！</msg>
<status status="PASS" endtime="20170728 18:09:36.339" starttime="20170728 18:09:36.338"></status>
</kw>
<status status="PASS" endtime="20170728 18:09:36.340" critical="yes" starttime="20170728 18:09:35.500"></status>
</test>
<status status="PASS" endtime="20170728 18:09:36.342" starttime="20170728 18:09:35.207"></status>
</suite>
<status status="PASS" endtime="20170728 18:09:36.350" starttime="20170728 18:09:35.203"></status>
</suite>
<status status="PASS" endtime="20170728 18:09:36.355" starttime="20170728 18:09:35.011"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="账户中心" pass="1">账户中心</stat>
<stat fail="0" id="s1-s1" name="艾佳币" pass="1">账户中心.艾佳币</stat>
<stat fail="0" id="s1-s1-s1" name="艾佳币充值" pass="1">账户中心.艾佳币.艾佳币充值</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20170728 18:09:35.496" level="ERROR">Error in file 'F:\logs and reports\账户中心\艾佳币\艾佳币充值.txt': Resource file '艾佳币需要的操作.txt' does not exist.</msg>
</errors>
</robot>
