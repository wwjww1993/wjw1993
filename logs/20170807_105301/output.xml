<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170807 10:53:09.870" generator="Robot 3.0.2 (Python 2.7.8 on win32)">
<suite source="F:\logs and reports\账户中心" id="s1" name="账户中心">
<suite source="F:\logs and reports\账户中心\艾佳币" id="s1-s1" name="艾佳币">
<suite source="F:\logs and reports\账户中心\艾佳币\艾佳币回收冻结.txt" id="s1-s1-s1" name="艾佳币回收冻结">
<test id="s1-s1-s1-t1" name="拥有boss账户的用户，BOSS发起退款（未确认），冻结艾佳币艾佳币数目输入为字符，接口返回失败，报400">
<kw name="参数配置" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170807 10:53:10.467" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170807 10:53:10.560" starttime="20170807 10:53:10.440"></status>
</kw>
<status status="PASS" endtime="20170807 10:53:10.562" starttime="20170807 10:53:10.438"></status>
</kw>
<kw name="输入拥有不同类型账户的用户user_id" library="myResource">
<arguments>
<arg>10000</arg>
<arg>10000</arg>
<arg>123456781</arg>
<arg>http://192.168.1.31:10003</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 10:53:10.566" level="INFO">${boss_user_account_id} = 10000</msg>
<status status="PASS" endtime="20170807 10:53:10.567" starttime="20170807 10:53:10.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 10:53:10.570" level="INFO">${app_user_account_id} = 10000</msg>
<status status="PASS" endtime="20170807 10:53:10.571" starttime="20170807 10:53:10.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${no_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 10:53:10.573" level="INFO">${no_user_account_id} = 123456781</msg>
<status status="PASS" endtime="20170807 10:53:10.574" starttime="20170807 10:53:10.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${environment}</arg>
</arguments>
<msg timestamp="20170807 10:53:10.576" level="INFO">${environment} = http://192.168.1.31:10003</msg>
<status status="PASS" endtime="20170807 10:53:10.577" starttime="20170807 10:53:10.575"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${boss_user_account_id}' and channel_no=1</arg>
</arguments>
<assign>
<var>${boss_channel_no1}</var>
</assign>
<msg timestamp="20170807 10:53:10.579" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='10000' and channel_no=1 </msg>
<msg timestamp="20170807 10:53:10.586" level="INFO">${boss_channel_no1} = ((17757, '32102151361501753586', 10000, 100005, 1, 2, 0, datetime.datetime(2017, 8, 3, 16, 53, 36), datetime.datetime(2017, 8, 3, 16, 53, 36)),)</msg>
<status status="PASS" endtime="20170807 10:53:10.587" starttime="20170807 10:53:10.578"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${boss_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${boss_channel_no}</var>
</assign>
<msg timestamp="20170807 10:53:10.590" level="INFO">${boss_channel_no} = 100005</msg>
<status status="PASS" endtime="20170807 10:53:10.591" starttime="20170807 10:53:10.588"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${app_user_account_id}' and channel_no=2</arg>
</arguments>
<assign>
<var>${app_channel_no1}</var>
</assign>
<msg timestamp="20170807 10:53:10.593" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='10000' and channel_no=2 </msg>
<msg timestamp="20170807 10:53:10.602" level="INFO">${app_channel_no1} = ((17756, '32102151361501753580', 10000, 100004, 2, 2, 0, datetime.datetime(2017, 8, 3, 16, 53, 24), datetime.datetime(2017, 8, 3, 16, 53, 24)),)</msg>
<status status="PASS" endtime="20170807 10:53:10.602" starttime="20170807 10:53:10.592"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${app_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${app_channel_no}</var>
</assign>
<msg timestamp="20170807 10:53:10.606" level="INFO">${app_channel_no} = 100004</msg>
<status status="PASS" endtime="20170807 10:53:10.607" starttime="20170807 10:53:10.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_channel_no}</arg>
</arguments>
<msg timestamp="20170807 10:53:10.610" level="INFO">${boss_channel_no} = 100005</msg>
<status status="PASS" endtime="20170807 10:53:10.611" starttime="20170807 10:53:10.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_channel_no}</arg>
</arguments>
<msg timestamp="20170807 10:53:10.614" level="INFO">${app_channel_no} = 100004</msg>
<status status="PASS" endtime="20170807 10:53:10.615" starttime="20170807 10:53:10.612"></status>
</kw>
<status status="PASS" endtime="20170807 10:53:10.616" starttime="20170807 10:53:10.563"></status>
</kw>
<status status="PASS" endtime="20170807 10:53:10.617" starttime="20170807 10:53:10.436"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>${boss_user_account_id}</arg>
<arg>str</arg>
<arg>${environment}/ihome-api/settlement/ajbWithdrawFreeze</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170807 10:53:10.621" level="INFO">${args11} = 10000</msg>
<status status="PASS" endtime="20170807 10:53:10.621" starttime="20170807 10:53:10.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170807 10:53:10.623" level="INFO">${args22} = str</msg>
<status status="PASS" endtime="20170807 10:53:10.623" starttime="20170807 10:53:10.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170807 10:53:10.625" level="INFO">${args33} = </msg>
<status status="PASS" endtime="20170807 10:53:10.625" starttime="20170807 10:53:10.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170807 10:53:10.627" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170807 10:53:10.627" starttime="20170807 10:53:10.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170807 10:53:10.629" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</msg>
<status status="PASS" endtime="20170807 10:53:10.629" starttime="20170807 10:53:10.628"></status>
</kw>
<status status="PASS" endtime="20170807 10:53:10.629" starttime="20170807 10:53:10.618"></status>
</kw>
<kw name="获得account_id" library="myResource">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170807 10:53:10.632" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</msg>
<status status="PASS" endtime="20170807 10:53:10.632" starttime="20170807 10:53:10.631"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/cancelPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/confirmPay</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/orderPayRefund</arg>
</arguments>
<assign>
<var>@{Link}</var>
</assign>
<msg timestamp="20170807 10:53:10.635" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170807 10:53:10.635" starttime="20170807 10:53:10.633"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>set variable</arg>
<arg>2</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${channel_no}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" endtime="20170807 10:53:10.639" starttime="20170807 10:53:10.638"></status>
</kw>
<msg timestamp="20170807 10:53:10.639" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170807 10:53:10.640" starttime="20170807 10:53:10.637"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}" in @{Link}</arg>
<arg>set variable</arg>
<arg>order_num</arg>
<arg>ELSE</arg>
<arg>set variable</arg>
<arg>user_id</arg>
</arguments>
<assign>
<var>${args11_after}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>user_id</arg>
</arguments>
<status status="PASS" endtime="20170807 10:53:10.642" starttime="20170807 10:53:10.642"></status>
</kw>
<msg timestamp="20170807 10:53:10.643" level="INFO">${args11_after} = user_id</msg>
<status status="PASS" endtime="20170807 10:53:10.643" starttime="20170807 10:53:10.640"></status>
</kw>
<kw name="参数配置" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170807 10:53:10.646" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170807 10:53:10.690" starttime="20170807 10:53:10.645"></status>
</kw>
<status status="PASS" endtime="20170807 10:53:10.691" starttime="20170807 10:53:10.644"></status>
</kw>
<kw name="输入拥有不同类型账户的用户user_id" library="myResource">
<arguments>
<arg>10000</arg>
<arg>10000</arg>
<arg>123456781</arg>
<arg>http://192.168.1.31:10003</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 10:53:10.694" level="INFO">${boss_user_account_id} = 10000</msg>
<status status="PASS" endtime="20170807 10:53:10.694" starttime="20170807 10:53:10.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 10:53:10.696" level="INFO">${app_user_account_id} = 10000</msg>
<status status="PASS" endtime="20170807 10:53:10.696" starttime="20170807 10:53:10.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${no_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 10:53:10.697" level="INFO">${no_user_account_id} = 123456781</msg>
<status status="PASS" endtime="20170807 10:53:10.698" starttime="20170807 10:53:10.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${environment}</arg>
</arguments>
<msg timestamp="20170807 10:53:10.699" level="INFO">${environment} = http://192.168.1.31:10003</msg>
<status status="PASS" endtime="20170807 10:53:10.700" starttime="20170807 10:53:10.698"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${boss_user_account_id}' and channel_no=1</arg>
</arguments>
<assign>
<var>${boss_channel_no1}</var>
</assign>
<msg timestamp="20170807 10:53:10.701" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='10000' and channel_no=1 </msg>
<msg timestamp="20170807 10:53:10.708" level="INFO">${boss_channel_no1} = ((17757, '32102151361501753586', 10000, 100005, 1, 2, 0, datetime.datetime(2017, 8, 3, 16, 53, 36), datetime.datetime(2017, 8, 3, 16, 53, 36)),)</msg>
<status status="PASS" endtime="20170807 10:53:10.708" starttime="20170807 10:53:10.700"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${boss_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${boss_channel_no}</var>
</assign>
<msg timestamp="20170807 10:53:10.710" level="INFO">${boss_channel_no} = 100005</msg>
<status status="PASS" endtime="20170807 10:53:10.710" starttime="20170807 10:53:10.709"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${app_user_account_id}' and channel_no=2</arg>
</arguments>
<assign>
<var>${app_channel_no1}</var>
</assign>
<msg timestamp="20170807 10:53:10.712" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='10000' and channel_no=2 </msg>
<msg timestamp="20170807 10:53:10.719" level="INFO">${app_channel_no1} = ((17756, '32102151361501753580', 10000, 100004, 2, 2, 0, datetime.datetime(2017, 8, 3, 16, 53, 24), datetime.datetime(2017, 8, 3, 16, 53, 24)),)</msg>
<status status="PASS" endtime="20170807 10:53:10.719" starttime="20170807 10:53:10.711"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${app_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${app_channel_no}</var>
</assign>
<msg timestamp="20170807 10:53:10.721" level="INFO">${app_channel_no} = 100004</msg>
<status status="PASS" endtime="20170807 10:53:10.721" starttime="20170807 10:53:10.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_channel_no}</arg>
</arguments>
<msg timestamp="20170807 10:53:10.723" level="INFO">${boss_channel_no} = 100005</msg>
<status status="PASS" endtime="20170807 10:53:10.723" starttime="20170807 10:53:10.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_channel_no}</arg>
</arguments>
<msg timestamp="20170807 10:53:10.725" level="INFO">${app_channel_no} = 100004</msg>
<status status="PASS" endtime="20170807 10:53:10.725" starttime="20170807 10:53:10.724"></status>
</kw>
<status status="PASS" endtime="20170807 10:53:10.726" starttime="20170807 10:53:10.692"></status>
</kw>
<status status="PASS" endtime="20170807 10:53:10.727" starttime="20170807 10:53:10.644"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where ${args11_after}='${args11}' and channel_no='${channel_no}'</arg>
</arguments>
<assign>
<var>${database1}</var>
</assign>
<msg timestamp="20170807 10:53:10.728" level="INFO">Executing : Query  |  select * from ajb_account_transaction where user_id='10000' and channel_no='1' </msg>
<msg timestamp="20170807 10:53:10.750" level="INFO">${database1} = ((10456, '32102151361501753587', 10000, 100005, 1, '32102151361501753587', '20170803165333JEM012476', Decimal('10.00'), 1, 7, 2, 0, datetime.datetime(2017, 8, 3, 16, 53, 36), datetime.datetime(2017, 8...</msg>
<status status="PASS" endtime="20170807 10:53:10.750" starttime="20170807 10:53:10.727"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${database1[0][3]}'</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20170807 10:53:10.752" level="INFO">Executing : Query  |  select * from account_amount where account_id ='100005' </msg>
<msg timestamp="20170807 10:53:10.756" level="INFO">${database} = ((17827, 100005, Decimal('70.00'), Decimal('40.00'), Decimal('30.00'), datetime.datetime(2017, 8, 3, 16, 53, 36), datetime.datetime(2017, 8, 7, 10, 52, 2), 0),)</msg>
<status status="PASS" endtime="20170807 10:53:10.756" starttime="20170807 10:53:10.751"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database1[0][2]}</arg>
</arguments>
<assign>
<var>${user_id_real}</var>
</assign>
<msg timestamp="20170807 10:53:10.758" level="INFO">${user_id_real} = 10000</msg>
<status status="PASS" endtime="20170807 10:53:10.758" starttime="20170807 10:53:10.757"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][1]}</arg>
</arguments>
<assign>
<var>${account_id}</var>
</assign>
<msg timestamp="20170807 10:53:10.760" level="INFO">${account_id} = 100005</msg>
<status status="PASS" endtime="20170807 10:53:10.760" starttime="20170807 10:53:10.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>获得account_id值为：${account_id}</arg>
</arguments>
<msg timestamp="20170807 10:53:10.762" level="INFO">获得account_id值为：100005</msg>
<status status="PASS" endtime="20170807 10:53:10.762" starttime="20170807 10:53:10.761"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][2]}</arg>
</arguments>
<assign>
<var>${total_amount_before}</var>
</assign>
<msg timestamp="20170807 10:53:10.764" level="INFO">${total_amount_before} = 70.00</msg>
<status status="PASS" endtime="20170807 10:53:10.764" starttime="20170807 10:53:10.763"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][3]}</arg>
</arguments>
<assign>
<var>${balance_amount_before}</var>
</assign>
<msg timestamp="20170807 10:53:10.766" level="INFO">${balance_amount_before} = 40.00</msg>
<status status="PASS" endtime="20170807 10:53:10.766" starttime="20170807 10:53:10.765"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${database[0][4]}</arg>
</arguments>
<assign>
<var>${frozen_amount_before}</var>
</assign>
<msg timestamp="20170807 10:53:10.768" level="INFO">${frozen_amount_before} = 30.00</msg>
<status status="PASS" endtime="20170807 10:53:10.768" starttime="20170807 10:53:10.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${account_id}</arg>
</arguments>
<msg timestamp="20170807 10:53:10.770" level="INFO">${account_id} = 100005</msg>
<status status="PASS" endtime="20170807 10:53:10.770" starttime="20170807 10:53:10.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id_real}</arg>
</arguments>
<msg timestamp="20170807 10:53:10.771" level="INFO">${user_id_real} = 10000</msg>
<status status="PASS" endtime="20170807 10:53:10.772" starttime="20170807 10:53:10.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${total_amount_before}</arg>
</arguments>
<msg timestamp="20170807 10:53:10.773" level="INFO">${total_amount_before} = 70.00</msg>
<status status="PASS" endtime="20170807 10:53:10.773" starttime="20170807 10:53:10.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${balance_amount_before}</arg>
</arguments>
<msg timestamp="20170807 10:53:10.774" level="INFO">${balance_amount_before} = 40.00</msg>
<status status="PASS" endtime="20170807 10:53:10.775" starttime="20170807 10:53:10.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${frozen_amount_before}</arg>
</arguments>
<msg timestamp="20170807 10:53:10.776" level="INFO">${frozen_amount_before} = 30.00</msg>
<status status="PASS" endtime="20170807 10:53:10.776" starttime="20170807 10:53:10.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${channel_no}</arg>
</arguments>
<msg timestamp="20170807 10:53:10.778" level="INFO">${channel_no} = 1</msg>
<status status="PASS" endtime="20170807 10:53:10.779" starttime="20170807 10:53:10.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>@{Link}</arg>
</arguments>
<msg timestamp="20170807 10:53:10.780" level="INFO">@{Link} = [ http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawCancel | http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawConfirm | http://192.168.1.31:10003/ihome-api/settlement/cancelPay | http...</msg>
<status status="PASS" endtime="20170807 10:53:10.781" starttime="20170807 10:53:10.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20170807 10:53:10.782" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</msg>
<status status="PASS" endtime="20170807 10:53:10.783" starttime="20170807 10:53:10.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${database}</arg>
</arguments>
<msg timestamp="20170807 10:53:10.785" level="INFO">${database} = ((17827, 100005, Decimal('70.00'), Decimal('40.00'), Decimal('30.00'), datetime.datetime(2017, 8, 3, 16, 53, 36), datetime.datetime(2017, 8, 7, 10, 52, 2), 0),)</msg>
<status status="PASS" endtime="20170807 10:53:10.785" starttime="20170807 10:53:10.783"></status>
</kw>
<status status="PASS" endtime="20170807 10:53:10.785" starttime="20170807 10:53:10.630"></status>
</kw>
<kw name="连接接口" library="myResource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/ajbActivityRecharge"</arg>
<arg>ajbActivityRecharge</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}" in @{Link}</arg>
<arg>ajbWithdrawCancel</arg>
<arg>${args11}</arg>
<arg>${args55}</arg>
<arg>ELSE IF</arg>
<arg>"${value}"=="http://192.168.1.31:10003/ihome-api/settlement/freezePay"</arg>
<arg>freezePay</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args44}</arg>
<arg>${args55}</arg>
<arg>ELSE</arg>
<arg>Data</arg>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<kw name="Data" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<status status="PASS" endtime="20170807 10:53:10.806" starttime="20170807 10:53:10.790"></status>
</kw>
<msg timestamp="20170807 10:53:10.806" level="INFO">${data} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20170807 10:53:10.807" starttime="20170807 10:53:10.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${data}</arg>
</arguments>
<msg timestamp="20170807 10:53:10.808" level="INFO">${data} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20170807 10:53:10.809" starttime="20170807 10:53:10.807"></status>
</kw>
<status status="PASS" endtime="20170807 10:53:10.809" starttime="20170807 10:53:10.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${data.status_code}</arg>
</arguments>
<msg timestamp="20170807 10:53:10.810" level="INFO">400</msg>
<status status="PASS" endtime="20170807 10:53:10.811" starttime="20170807 10:53:10.810"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20170807 10:53:10.812" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 10:53:10.813" starttime="20170807 10:53:10.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>400由于语法格式有误，服务器无法理解此请求。</arg>
</arguments>
<msg timestamp="20170807 10:53:10.814" level="INFO">400由于语法格式有误，服务器无法理解此请求。</msg>
<status status="PASS" endtime="20170807 10:53:10.814" starttime="20170807 10:53:10.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170807 10:53:10.816" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170807 10:53:10.817" starttime="20170807 10:53:10.815"></status>
</kw>
<kw name="amount和表里的校验" library="myResource">
<kw name="参数配置" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170807 10:53:10.822" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170807 10:53:10.829" starttime="20170807 10:53:10.821"></status>
</kw>
<status status="PASS" endtime="20170807 10:53:10.830" starttime="20170807 10:53:10.820"></status>
</kw>
<kw name="输入拥有不同类型账户的用户user_id" library="myResource">
<arguments>
<arg>10000</arg>
<arg>10000</arg>
<arg>123456781</arg>
<arg>http://192.168.1.31:10003</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 10:53:10.833" level="INFO">${boss_user_account_id} = 10000</msg>
<status status="PASS" endtime="20170807 10:53:10.833" starttime="20170807 10:53:10.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 10:53:10.834" level="INFO">${app_user_account_id} = 10000</msg>
<status status="PASS" endtime="20170807 10:53:10.835" starttime="20170807 10:53:10.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${no_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 10:53:10.837" level="INFO">${no_user_account_id} = 123456781</msg>
<status status="PASS" endtime="20170807 10:53:10.837" starttime="20170807 10:53:10.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${environment}</arg>
</arguments>
<msg timestamp="20170807 10:53:10.839" level="INFO">${environment} = http://192.168.1.31:10003</msg>
<status status="PASS" endtime="20170807 10:53:10.839" starttime="20170807 10:53:10.838"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${boss_user_account_id}' and channel_no=1</arg>
</arguments>
<assign>
<var>${boss_channel_no1}</var>
</assign>
<msg timestamp="20170807 10:53:10.841" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='10000' and channel_no=1 </msg>
<msg timestamp="20170807 10:53:10.851" level="INFO">${boss_channel_no1} = ((17757, '32102151361501753586', 10000, 100005, 1, 2, 0, datetime.datetime(2017, 8, 3, 16, 53, 36), datetime.datetime(2017, 8, 3, 16, 53, 36)),)</msg>
<status status="PASS" endtime="20170807 10:53:10.851" starttime="20170807 10:53:10.840"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${boss_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${boss_channel_no}</var>
</assign>
<msg timestamp="20170807 10:53:10.854" level="INFO">${boss_channel_no} = 100005</msg>
<status status="PASS" endtime="20170807 10:53:10.855" starttime="20170807 10:53:10.852"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${app_user_account_id}' and channel_no=2</arg>
</arguments>
<assign>
<var>${app_channel_no1}</var>
</assign>
<msg timestamp="20170807 10:53:10.856" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='10000' and channel_no=2 </msg>
<msg timestamp="20170807 10:53:10.866" level="INFO">${app_channel_no1} = ((17756, '32102151361501753580', 10000, 100004, 2, 2, 0, datetime.datetime(2017, 8, 3, 16, 53, 24), datetime.datetime(2017, 8, 3, 16, 53, 24)),)</msg>
<status status="PASS" endtime="20170807 10:53:10.866" starttime="20170807 10:53:10.856"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${app_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${app_channel_no}</var>
</assign>
<msg timestamp="20170807 10:53:10.868" level="INFO">${app_channel_no} = 100004</msg>
<status status="PASS" endtime="20170807 10:53:10.869" starttime="20170807 10:53:10.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_channel_no}</arg>
</arguments>
<msg timestamp="20170807 10:53:10.870" level="INFO">${boss_channel_no} = 100005</msg>
<status status="PASS" endtime="20170807 10:53:10.871" starttime="20170807 10:53:10.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_channel_no}</arg>
</arguments>
<msg timestamp="20170807 10:53:10.872" level="INFO">${app_channel_no} = 100004</msg>
<status status="PASS" endtime="20170807 10:53:10.873" starttime="20170807 10:53:10.872"></status>
</kw>
<status status="PASS" endtime="20170807 10:53:10.873" starttime="20170807 10:53:10.830"></status>
</kw>
<status status="PASS" endtime="20170807 10:53:10.874" starttime="20170807 10:53:10.819"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${account_id}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170807 10:53:10.875" level="INFO">Executing : Query  |  select * from account_amount where account_id ='100005' </msg>
<msg timestamp="20170807 10:53:10.882" level="INFO">${user_id} = ((17827, 100005, Decimal('70.00'), Decimal('40.00'), Decimal('30.00'), datetime.datetime(2017, 8, 3, 16, 53, 36), datetime.datetime(2017, 8, 7, 10, 52, 2), 0),)</msg>
<status status="PASS" endtime="20170807 10:53:10.883" starttime="20170807 10:53:10.874"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${total_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170807 10:53:10.885" starttime="20170807 10:53:10.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170807 10:53:10.886" level="INFO">total_amount数目没有变化</msg>
<status status="PASS" endtime="20170807 10:53:10.886" starttime="20170807 10:53:10.885"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][3]}</arg>
<arg>${balance_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170807 10:53:10.888" starttime="20170807 10:53:10.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170807 10:53:10.889" level="INFO">balance_amount数目没有变化</msg>
<status status="PASS" endtime="20170807 10:53:10.890" starttime="20170807 10:53:10.889"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
<arg>${frozen_amount_before}</arg>
</arguments>
<status status="PASS" endtime="20170807 10:53:10.891" starttime="20170807 10:53:10.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount数目没有变化</arg>
</arguments>
<msg timestamp="20170807 10:53:10.910" level="INFO">frozen_amount数目没有变化</msg>
<status status="PASS" endtime="20170807 10:53:10.910" starttime="20170807 10:53:10.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amounts的数据没有变化正确的</arg>
</arguments>
<msg timestamp="20170807 10:53:10.912" level="INFO">amounts的数据没有变化正确的</msg>
<status status="PASS" endtime="20170807 10:53:10.913" starttime="20170807 10:53:10.911"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170807 10:53:10.915" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 10:53:10.916" starttime="20170807 10:53:10.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount内容没有发生变化</arg>
</arguments>
<msg timestamp="20170807 10:53:10.919" level="INFO">表account_amount内容没有发生变化</msg>
<status status="PASS" endtime="20170807 10:53:10.919" starttime="20170807 10:53:10.917"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time}</var>
</assign>
<msg timestamp="20170807 10:53:10.921" level="INFO">${current_time} = 2017-08-07 10:53:10.921</msg>
<status status="PASS" endtime="20170807 10:53:10.922" starttime="20170807 10:53:10.920"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>60 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_30}</var>
</assign>
<msg timestamp="20170807 10:53:10.928" level="INFO">${current_time_before_30} = 2017-08-07 10:52:10.921</msg>
<status status="PASS" endtime="20170807 10:53:10.928" starttime="20170807 10:53:10.922"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time}</arg>
<arg>65 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_30}</var>
</assign>
<msg timestamp="20170807 10:53:10.930" level="INFO">${current_time_after_30} = 2017-08-07 10:54:15.921</msg>
<status status="PASS" endtime="20170807 10:53:10.930" starttime="20170807 10:53:10.929"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${account_id}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${bill_check}</var>
</assign>
<msg timestamp="20170807 10:53:10.933" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='100005' and update_time between' 2017-08-07 10:52:10.921' and '2017-08-07 10:54:15.921' </msg>
<msg timestamp="20170807 10:53:10.937" level="INFO">${bill_check} = ()</msg>
<status status="PASS" endtime="20170807 10:53:10.938" starttime="20170807 10:53:10.932"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${bill_check}</arg>
</arguments>
<assign>
<var>${bill_check_length}</var>
</assign>
<msg timestamp="20170807 10:53:10.939" level="INFO">Length is 0</msg>
<msg timestamp="20170807 10:53:10.939" level="INFO">${bill_check_length} = 0</msg>
<status status="PASS" endtime="20170807 10:53:10.940" starttime="20170807 10:53:10.938"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${bill_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170807 10:53:10.941" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 10:53:10.941" starttime="20170807 10:53:10.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>account_unilateral_bill里的没有相关数据</arg>
</arguments>
<msg timestamp="20170807 10:53:10.943" level="INFO">account_unilateral_bill里的没有相关数据</msg>
<status status="PASS" endtime="20170807 10:53:10.943" starttime="20170807 10:53:10.942"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where order_num ='${args11}' and update_time between' ${current_time_before_30}' and '${current_time_after_30}'</arg>
</arguments>
<assign>
<var>${transaction_check}</var>
</assign>
<msg timestamp="20170807 10:53:10.945" level="INFO">Executing : Query  |  select * from ajb_account_transaction where order_num ='10000' and update_time between' 2017-08-07 10:52:10.921' and '2017-08-07 10:54:15.921' </msg>
<msg timestamp="20170807 10:53:10.955" level="INFO">${transaction_check} = ()</msg>
<status status="PASS" endtime="20170807 10:53:10.956" starttime="20170807 10:53:10.944"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${transaction_check}</arg>
</arguments>
<assign>
<var>${transaction_check_length}</var>
</assign>
<msg timestamp="20170807 10:53:10.957" level="INFO">Length is 0</msg>
<msg timestamp="20170807 10:53:10.958" level="INFO">${transaction_check_length} = 0</msg>
<status status="PASS" endtime="20170807 10:53:10.958" starttime="20170807 10:53:10.956"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${transaction_check_length}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170807 10:53:10.959" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170807 10:53:10.959" starttime="20170807 10:53:10.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>ajb_account_transaction里的没有相关数据</arg>
</arguments>
<msg timestamp="20170807 10:53:10.960" level="INFO">ajb_account_transaction里的没有相关数据</msg>
<status status="PASS" endtime="20170807 10:53:10.961" starttime="20170807 10:53:10.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>数据库表里数据调用接口前后没有发生变化</arg>
</arguments>
<msg timestamp="20170807 10:53:10.962" level="INFO">数据库表里数据调用接口前后没有发生变化</msg>
<status status="PASS" endtime="20170807 10:53:10.962" starttime="20170807 10:53:10.961"></status>
</kw>
<status status="PASS" endtime="20170807 10:53:10.963" starttime="20170807 10:53:10.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>输入已有的user_id和amount为字符的时候，语法错误，报400</arg>
</arguments>
<msg timestamp="20170807 10:53:10.965" level="INFO">输入已有的user_id和amount为字符的时候，语法错误，报400</msg>
<status status="PASS" endtime="20170807 10:53:10.966" starttime="20170807 10:53:10.964"></status>
</kw>
<kw name="艾佳币恢复数目" library="myResource">
<kw name="参数配置" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170807 10:53:10.970" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170807 10:53:10.978" starttime="20170807 10:53:10.969"></status>
</kw>
<status status="PASS" endtime="20170807 10:53:10.979" starttime="20170807 10:53:10.968"></status>
</kw>
<kw name="输入拥有不同类型账户的用户user_id" library="myResource">
<arguments>
<arg>10000</arg>
<arg>10000</arg>
<arg>123456781</arg>
<arg>http://192.168.1.31:10003</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 10:53:10.983" level="INFO">${boss_user_account_id} = 10000</msg>
<status status="PASS" endtime="20170807 10:53:10.983" starttime="20170807 10:53:10.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 10:53:10.985" level="INFO">${app_user_account_id} = 10000</msg>
<status status="PASS" endtime="20170807 10:53:10.985" starttime="20170807 10:53:10.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${no_user_account_id}</arg>
</arguments>
<msg timestamp="20170807 10:53:10.986" level="INFO">${no_user_account_id} = 123456781</msg>
<status status="PASS" endtime="20170807 10:53:10.987" starttime="20170807 10:53:10.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${environment}</arg>
</arguments>
<msg timestamp="20170807 10:53:10.989" level="INFO">${environment} = http://192.168.1.31:10003</msg>
<status status="PASS" endtime="20170807 10:53:10.989" starttime="20170807 10:53:10.988"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${boss_user_account_id}' and channel_no=1</arg>
</arguments>
<assign>
<var>${boss_channel_no1}</var>
</assign>
<msg timestamp="20170807 10:53:10.991" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='10000' and channel_no=1 </msg>
<msg timestamp="20170807 10:53:10.999" level="INFO">${boss_channel_no1} = ((17757, '32102151361501753586', 10000, 100005, 1, 2, 0, datetime.datetime(2017, 8, 3, 16, 53, 36), datetime.datetime(2017, 8, 3, 16, 53, 36)),)</msg>
<status status="PASS" endtime="20170807 10:53:10.999" starttime="20170807 10:53:10.990"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${boss_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${boss_channel_no}</var>
</assign>
<msg timestamp="20170807 10:53:11.001" level="INFO">${boss_channel_no} = 100005</msg>
<status status="PASS" endtime="20170807 10:53:11.001" starttime="20170807 10:53:11.000"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id='${app_user_account_id}' and channel_no=2</arg>
</arguments>
<assign>
<var>${app_channel_no1}</var>
</assign>
<msg timestamp="20170807 10:53:11.003" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id='10000' and channel_no=2 </msg>
<msg timestamp="20170807 10:53:11.009" level="INFO">${app_channel_no1} = ((17756, '32102151361501753580', 10000, 100004, 2, 2, 0, datetime.datetime(2017, 8, 3, 16, 53, 24), datetime.datetime(2017, 8, 3, 16, 53, 24)),)</msg>
<status status="PASS" endtime="20170807 10:53:11.010" starttime="20170807 10:53:11.002"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${app_channel_no1[0][3]}</arg>
</arguments>
<assign>
<var>${app_channel_no}</var>
</assign>
<msg timestamp="20170807 10:53:11.012" level="INFO">${app_channel_no} = 100004</msg>
<status status="PASS" endtime="20170807 10:53:11.013" starttime="20170807 10:53:11.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_channel_no}</arg>
</arguments>
<msg timestamp="20170807 10:53:11.016" level="INFO">${boss_channel_no} = 100005</msg>
<status status="PASS" endtime="20170807 10:53:11.016" starttime="20170807 10:53:11.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_channel_no}</arg>
</arguments>
<msg timestamp="20170807 10:53:11.018" level="INFO">${app_channel_no} = 100004</msg>
<status status="PASS" endtime="20170807 10:53:11.018" starttime="20170807 10:53:11.017"></status>
</kw>
<status status="PASS" endtime="20170807 10:53:11.019" starttime="20170807 10:53:10.980"></status>
</kw>
<status status="PASS" endtime="20170807 10:53:11.019" starttime="20170807 10:53:10.967"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>UPDATE account_amount \ SET total_amount=${database[0][2]},balance_amount=${database[0][3]},frozen_amount=${database[0][4]}where account_id="${account_id}";</arg>
</arguments>
<msg timestamp="20170807 10:53:11.021" level="INFO">Executing : Execute SQL String  |  UPDATE account_amount  SET total_amount=70.00,balance_amount=40.00,frozen_amount=30.00where account_id="100005"; </msg>
<status status="PASS" endtime="20170807 10:53:11.026" starttime="20170807 10:53:11.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>成功</arg>
</arguments>
<msg timestamp="20170807 10:53:11.027" level="INFO">成功</msg>
<status status="PASS" endtime="20170807 10:53:11.028" starttime="20170807 10:53:11.027"></status>
</kw>
<status status="PASS" endtime="20170807 10:53:11.028" starttime="20170807 10:53:10.966"></status>
</kw>
<status status="PASS" endtime="20170807 10:53:11.029" critical="yes" starttime="20170807 10:53:10.426"></status>
</test>
<status status="PASS" endtime="20170807 10:53:11.030" starttime="20170807 10:53:10.085"></status>
</suite>
<status status="PASS" endtime="20170807 10:53:11.038" starttime="20170807 10:53:10.081"></status>
</suite>
<status status="PASS" endtime="20170807 10:53:11.042" starttime="20170807 10:53:09.896"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="账户中心" pass="1">账户中心</stat>
<stat fail="0" id="s1-s1" name="艾佳币" pass="1">账户中心.艾佳币</stat>
<stat fail="0" id="s1-s1-s1" name="艾佳币回收冻结" pass="1">账户中心.艾佳币.艾佳币回收冻结</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
