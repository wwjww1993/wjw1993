<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170728 18:10:06.587" generator="Robot 3.0.2 (Python 2.7.8 on win32)">
<suite source="F:\logs and reports\账户中心" id="s1" name="账户中心">
<suite source="F:\logs and reports\账户中心\艾佳币" id="s1-s1" name="艾佳币">
<suite source="F:\logs and reports\账户中心\艾佳币\艾佳币充值.txt" id="s1-s1-s1" name="艾佳币充值">
<test id="s1-s1-s1-t1" name="输入未有的user_id和正确的amount参数">
<kw name="参数配置" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 18:10:07.144" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 18:10:07.155" starttime="20170728 18:10:07.118"></status>
</kw>
<status status="PASS" endtime="20170728 18:10:07.157" starttime="20170728 18:10:07.116"></status>
</kw>
<kw name="输入拥有不同类型账户的用户user_id" library="myResource">
<arguments>
<arg>100000</arg>
<arg>100000</arg>
<arg>123456781</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_user_account_id}</arg>
</arguments>
<msg timestamp="20170728 18:10:07.163" level="INFO">${boss_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170728 18:10:07.164" starttime="20170728 18:10:07.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_user_account_id}</arg>
</arguments>
<msg timestamp="20170728 18:10:07.166" level="INFO">${app_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170728 18:10:07.167" starttime="20170728 18:10:07.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${no_user_account_id}</arg>
</arguments>
<msg timestamp="20170728 18:10:07.169" level="INFO">${no_user_account_id} = 123456781</msg>
<status status="PASS" endtime="20170728 18:10:07.169" starttime="20170728 18:10:07.168"></status>
</kw>
<status status="PASS" endtime="20170728 18:10:07.170" starttime="20170728 18:10:07.158"></status>
</kw>
<status status="PASS" endtime="20170728 18:10:07.171" starttime="20170728 18:10:07.115"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>${no_user_account_id}</arg>
<arg>1</arg>
<arg>2</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 18:10:07.175" level="INFO">${args11} = 123456781</msg>
<status status="PASS" endtime="20170728 18:10:07.176" starttime="20170728 18:10:07.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 18:10:07.178" level="INFO">${args22} = 1</msg>
<status status="PASS" endtime="20170728 18:10:07.179" starttime="20170728 18:10:07.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 18:10:07.181" level="INFO">${args33} = 2</msg>
<status status="PASS" endtime="20170728 18:10:07.182" starttime="20170728 18:10:07.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 18:10:07.184" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 18:10:07.185" starttime="20170728 18:10:07.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 18:10:07.187" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</msg>
<status status="PASS" endtime="20170728 18:10:07.188" starttime="20170728 18:10:07.186"></status>
</kw>
<status status="PASS" endtime="20170728 18:10:07.189" starttime="20170728 18:10:07.172"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id ='${args11}'</arg>
</arguments>
<assign>
<var>${no_user_id}</var>
</assign>
<msg timestamp="20170728 18:10:07.194" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id ='123456781' </msg>
<msg timestamp="20170728 18:10:07.204" level="INFO">${no_user_id} = ()</msg>
<status status="PASS" endtime="20170728 18:10:07.205" starttime="20170728 18:10:07.192"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${no_user_id}</arg>
</arguments>
<msg timestamp="20170728 18:10:07.207" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170728 18:10:07.208" starttime="20170728 18:10:07.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>此user_id不存在</arg>
</arguments>
<msg timestamp="20170728 18:10:07.210" level="INFO">此user_id不存在</msg>
<status status="PASS" endtime="20170728 18:10:07.210" starttime="20170728 18:10:07.209"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20170728 18:10:07.212" level="INFO">${value} = http://192.168.1.31:10003/ihome-api/settlement/ajbRecharge</msg>
<status status="PASS" endtime="20170728 18:10:07.213" starttime="20170728 18:10:07.211"></status>
</kw>
<kw name="Data" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data_no_user_id}</var>
</assign>
<msg timestamp="20170728 18:10:07.373" level="INFO">${data_no_user_id} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20170728 18:10:07.375" starttime="20170728 18:10:07.214"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data_no_user_id.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 18:10:07.381" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:10:07.382" starttime="20170728 18:10:07.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口的响应码正确</arg>
</arguments>
<msg timestamp="20170728 18:10:07.385" level="INFO">接口的响应码正确</msg>
<status status="PASS" endtime="20170728 18:10:07.386" starttime="20170728 18:10:07.384"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${data_no_user_id.text}</arg>
</arguments>
<assign>
<var>${toJson1}</var>
</assign>
<msg timestamp="20170728 18:10:07.390" level="INFO">To JSON using : content={"data":{"orderNum":"32102151361501231393"},"msg":"成功","code":1,"success":true} </msg>
<msg timestamp="20170728 18:10:07.392" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20170728 18:10:07.393" level="INFO">${toJson1} = {u'msg': u'\u6210\u529f', u'code': 1, u'data': {u'orderNum': u'32102151361501231393'}, u'success': True}</msg>
<status status="PASS" endtime="20170728 18:10:07.394" starttime="20170728 18:10:07.388"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson1['success']}</arg>
<arg>True</arg>
</arguments>
<msg timestamp="20170728 18:10:07.397" level="INFO">Argument types are:
&lt;type 'bool'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:10:07.398" starttime="20170728 18:10:07.396"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${toJson1['msg']}</arg>
<arg>成功</arg>
</arguments>
<status status="PASS" endtime="20170728 18:10:07.401" starttime="20170728 18:10:07.399"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${toJson1['data']}</arg>
<arg>orderNum</arg>
</arguments>
<assign>
<var>${no_user_id_orderNum}</var>
</assign>
<msg timestamp="20170728 18:10:07.404" level="INFO">${no_user_id_orderNum} = 32102151361501231393</msg>
<status status="PASS" endtime="20170728 18:10:07.405" starttime="20170728 18:10:07.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>接口中返回的值校验成功！</arg>
</arguments>
<msg timestamp="20170728 18:10:07.408" level="INFO">接口中返回的值校验成功！</msg>
<status status="PASS" endtime="20170728 18:10:07.409" starttime="20170728 18:10:07.406"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id ='${args11}'</arg>
</arguments>
<assign>
<var>${no_user_id_after}</var>
</assign>
<msg timestamp="20170728 18:10:07.412" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id ='123456781' </msg>
<msg timestamp="20170728 18:10:07.423" level="INFO">${no_user_id_after} = ((100000000098L, '32102151361501231392', 123456781, 6364, 1, 2, 0, datetime.datetime(2017, 7, 28, 18, 11, 12), datetime.datetime(2017, 7, 28, 18, 11, 12)),)</msg>
<status status="PASS" endtime="20170728 18:10:07.424" starttime="20170728 18:10:07.411"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${no_user_id_after}</arg>
</arguments>
<msg timestamp="20170728 18:10:07.427" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20170728 18:10:07.428" starttime="20170728 18:10:07.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>调用艾佳币充值接口自动生成boss的账号</arg>
</arguments>
<msg timestamp="20170728 18:10:07.431" level="INFO">调用艾佳币充值接口自动生成boss的账号</msg>
<status status="PASS" endtime="20170728 18:10:07.432" starttime="20170728 18:10:07.430"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${no_user_id_after[0][3]}</arg>
</arguments>
<assign>
<var>${no_user_id_account_id}</var>
</assign>
<msg timestamp="20170728 18:10:07.434" level="INFO">${no_user_id_account_id} = 6364</msg>
<status status="PASS" endtime="20170728 18:10:07.435" starttime="20170728 18:10:07.433"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_open_record where user_id ='${args11}'</arg>
</arguments>
<msg timestamp="20170728 18:10:07.438" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_open_record where user_id ='123456781' </msg>
<status status="PASS" endtime="20170728 18:10:07.503" starttime="20170728 18:10:07.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>已删除该账号！</arg>
</arguments>
<msg timestamp="20170728 18:10:07.506" level="INFO">已删除该账号！</msg>
<status status="PASS" endtime="20170728 18:10:07.507" starttime="20170728 18:10:07.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_unilateral_bill</arg>
</arguments>
<msg timestamp="20170728 18:10:07.510" level="INFO">现在开始校验表account_unilateral_bill</msg>
<status status="PASS" endtime="20170728 18:10:07.511" starttime="20170728 18:10:07.509"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time_no}</var>
</assign>
<msg timestamp="20170728 18:10:07.512" level="INFO">${current_time_no} = 2017-07-28 18:10:07.512</msg>
<status status="PASS" endtime="20170728 18:10:07.513" starttime="20170728 18:10:07.511"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_no}</arg>
<arg>5 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_301}</var>
</assign>
<msg timestamp="20170728 18:10:07.521" level="INFO">${current_time_before_301} = 2017-07-28 18:10:02.512</msg>
<status status="PASS" endtime="20170728 18:10:07.522" starttime="20170728 18:10:07.514"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_no}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_302}</var>
</assign>
<msg timestamp="20170728 18:10:07.525" level="INFO">${current_time_after_302} = 2017-07-28 18:11:47.512</msg>
<status status="PASS" endtime="20170728 18:10:07.526" starttime="20170728 18:10:07.523"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_unilateral_bill where account_id ='${no_user_id_account_id}'and update_time between' ${current_time_before_301}' and '${current_time_after_302}'</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170728 18:10:07.528" level="INFO">Executing : Query  |  select * from account_unilateral_bill where account_id ='6364'and update_time between' 2017-07-28 18:10:02.512' and '2017-07-28 18:11:47.512' </msg>
<msg timestamp="20170728 18:10:07.539" level="INFO">${user_id} = ((8174, '32102151361501231397', 123456781, 6364, '32102151361501231394', 1, 7, 3, Decimal('1.00'), None, datetime.datetime(2017, 7, 28, 18, 11, 12), datetime.datetime(2017, 7, 28, 18, 11, 12), 0),)</msg>
<status status="PASS" endtime="20170728 18:10:07.540" starttime="20170728 18:10:07.527"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][1]}</arg>
</arguments>
<assign>
<var>${bill_no_length}</var>
</assign>
<msg timestamp="20170728 18:10:07.545" level="INFO">Length is 20</msg>
<msg timestamp="20170728 18:10:07.546" level="INFO">${bill_no_length} = 20</msg>
<status status="PASS" endtime="20170728 18:10:07.547" starttime="20170728 18:10:07.543"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${bill_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 18:10:07.551" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:10:07.552" starttime="20170728 18:10:07.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>bill_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 18:10:07.555" level="INFO">bill_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 18:10:07.556" starttime="20170728 18:10:07.554"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][2]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 18:10:07.559" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:10:07.561" starttime="20170728 18:10:07.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 18:10:07.565" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 18:10:07.567" starttime="20170728 18:10:07.563"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id[0][4]}</arg>
</arguments>
<assign>
<var>${command_no_length}</var>
</assign>
<msg timestamp="20170728 18:10:07.571" level="INFO">Length is 20</msg>
<msg timestamp="20170728 18:10:07.572" level="INFO">${command_no_length} = 20</msg>
<status status="PASS" endtime="20170728 18:10:07.574" starttime="20170728 18:10:07.568"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${command_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 18:10:07.579" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:10:07.580" starttime="20170728 18:10:07.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>commandl_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 18:10:07.583" level="INFO">commandl_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 18:10:07.584" starttime="20170728 18:10:07.582"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][5]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 18:10:07.588" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:10:07.589" starttime="20170728 18:10:07.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 18:10:07.594" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 18:10:07.595" starttime="20170728 18:10:07.592"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][6]}</arg>
<arg>7</arg>
</arguments>
<msg timestamp="20170728 18:10:07.600" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:10:07.601" starttime="20170728 18:10:07.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 18:10:07.604" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 18:10:07.605" starttime="20170728 18:10:07.603"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][7]}</arg>
<arg>3</arg>
</arguments>
<msg timestamp="20170728 18:10:07.610" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:10:07.612" starttime="20170728 18:10:07.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>command_type值正确</arg>
</arguments>
<msg timestamp="20170728 18:10:07.616" level="INFO">command_type值正确</msg>
<status status="PASS" endtime="20170728 18:10:07.617" starttime="20170728 18:10:07.614"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][8]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 18:10:07.620" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:10:07.621" starttime="20170728 18:10:07.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>change_amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 18:10:07.623" level="INFO">change_amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 18:10:07.625" starttime="20170728 18:10:07.622"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${user_id[0][10]}</arg>
<arg>${user_id[0][11]}</arg>
</arguments>
<status status="PASS" endtime="20170728 18:10:07.629" starttime="20170728 18:10:07.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 18:10:07.631" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 18:10:07.632" starttime="20170728 18:10:07.630"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id[0][12]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 18:10:07.635" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:10:07.636" starttime="20170728 18:10:07.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 18:10:07.639" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 18:10:07.641" starttime="20170728 18:10:07.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_unilateral_bill校验成功</arg>
</arguments>
<msg timestamp="20170728 18:10:07.645" level="INFO">表account_unilateral_bill校验成功</msg>
<status status="PASS" endtime="20170728 18:10:07.646" starttime="20170728 18:10:07.644"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_unilateral}</var>
</assign>
<msg timestamp="20170728 18:10:07.648" level="INFO">${user_id[0][0]_unilateral} = 8174</msg>
<status status="PASS" endtime="20170728 18:10:07.649" starttime="20170728 18:10:07.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_unilateral}</arg>
</arguments>
<msg timestamp="20170728 18:10:07.652" level="INFO">${user_id[0][0]_unilateral} = 8174</msg>
<status status="PASS" endtime="20170728 18:10:07.653" starttime="20170728 18:10:07.650"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_unilateral_bill where id ='${user_id[0][0]_unilateral}'</arg>
</arguments>
<msg timestamp="20170728 18:10:07.656" level="INFO">Executing : Execute SQL String  |  delete from account_unilateral_bill where id ='8174' </msg>
<status status="PASS" endtime="20170728 18:10:07.691" starttime="20170728 18:10:07.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表ajb_account_transaction</arg>
</arguments>
<msg timestamp="20170728 18:10:07.693" level="INFO">现在开始校验表ajb_account_transaction</msg>
<status status="PASS" endtime="20170728 18:10:07.694" starttime="20170728 18:10:07.693"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${current_time_nouser}</var>
</assign>
<msg timestamp="20170728 18:10:07.696" level="INFO">${current_time_nouser} = 2017-07-28 18:10:07.696</msg>
<status status="PASS" endtime="20170728 18:10:07.697" starttime="20170728 18:10:07.695"></status>
</kw>
<kw name="Subtract Time From Date" library="DateTime">
<doc>Subtracts time from date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_nouser}</arg>
<arg>5 seconds</arg>
</arguments>
<assign>
<var>${current_time_before_3011}</var>
</assign>
<msg timestamp="20170728 18:10:07.699" level="INFO">${current_time_before_3011} = 2017-07-28 18:10:02.696</msg>
<status status="PASS" endtime="20170728 18:10:07.700" starttime="20170728 18:10:07.698"></status>
</kw>
<kw name="Add Time To Date" library="DateTime">
<doc>Adds time to date and returns the resulting date.</doc>
<arguments>
<arg>${current_time_nouser}</arg>
<arg>100 seconds</arg>
</arguments>
<assign>
<var>${current_time_after_3022}</var>
</assign>
<msg timestamp="20170728 18:10:07.703" level="INFO">${current_time_after_3022} = 2017-07-28 18:11:47.696</msg>
<status status="PASS" endtime="20170728 18:10:07.705" starttime="20170728 18:10:07.701"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_transaction where account_id ='${no_user_id_account_id}' and update_time between' ${current_time_before_3011}' and '${current_time_after_3022}'</arg>
</arguments>
<assign>
<var>${user_id_no}</var>
</assign>
<msg timestamp="20170728 18:10:07.709" level="INFO">Executing : Query  |  select * from ajb_account_transaction where account_id ='6364' and update_time between' 2017-07-28 18:10:02.696' and '2017-07-28 18:11:47.696' </msg>
<msg timestamp="20170728 18:10:07.725" level="INFO">${user_id_no} = ((88889980, '32102151361501231393', 123456781, 6364, 1, '32102151361501231393', '20170728181109KPS051949', Decimal('1.00'), 1, 7, 2, 0, datetime.datetime(2017, 7, 28, 18, 11, 12), datetime.datetime(20...</msg>
<status status="PASS" endtime="20170728 18:10:07.726" starttime="20170728 18:10:07.706"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${user_id_no[0][1]}</arg>
</arguments>
<assign>
<var>${business_no_length}</var>
</assign>
<msg timestamp="20170728 18:10:07.728" level="INFO">Length is 20</msg>
<msg timestamp="20170728 18:10:07.729" level="INFO">${business_no_length} = 20</msg>
<status status="PASS" endtime="20170728 18:10:07.729" starttime="20170728 18:10:07.727"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${business_no_length}</arg>
<arg>20</arg>
</arguments>
<msg timestamp="20170728 18:10:07.731" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:10:07.732" starttime="20170728 18:10:07.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>business_no的数据长度正确，校验成功</arg>
</arguments>
<msg timestamp="20170728 18:10:07.733" level="INFO">business_no的数据长度正确，校验成功</msg>
<status status="PASS" endtime="20170728 18:10:07.734" starttime="20170728 18:10:07.732"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][2]}</arg>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 18:10:07.737" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:10:07.738" starttime="20170728 18:10:07.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>当下user_id是正确的！</arg>
</arguments>
<msg timestamp="20170728 18:10:07.742" level="INFO">当下user_id是正确的！</msg>
<status status="PASS" endtime="20170728 18:10:07.743" starttime="20170728 18:10:07.740"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][4]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 18:10:07.745" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:10:07.746" starttime="20170728 18:10:07.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>channel_no的值正确</arg>
</arguments>
<msg timestamp="20170728 18:10:07.747" level="INFO">channel_no的值正确</msg>
<status status="PASS" endtime="20170728 18:10:07.748" starttime="20170728 18:10:07.746"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][5]}</arg>
<arg>${no_user_id_orderNum}</arg>
</arguments>
<msg timestamp="20170728 18:10:07.750" level="INFO">Argument types are:
&lt;type 'str'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:10:07.750" starttime="20170728 18:10:07.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>order_num显示正确！</arg>
</arguments>
<msg timestamp="20170728 18:10:07.752" level="INFO">order_num显示正确！</msg>
<status status="PASS" endtime="20170728 18:10:07.752" starttime="20170728 18:10:07.751"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${user_id_no[0][6]}</arg>
</arguments>
<assign>
<var>${pay_no_after}</var>
</assign>
<msg timestamp="20170728 18:10:07.755" level="INFO">${pay_no_after} = 20170728181109KPS051949</msg>
<status status="PASS" endtime="20170728 18:10:07.757" starttime="20170728 18:10:07.753"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${pay_no_after}</arg>
</arguments>
<assign>
<var>${pay_no_after_length}</var>
</assign>
<msg timestamp="20170728 18:10:07.760" level="INFO">Length is 23</msg>
<msg timestamp="20170728 18:10:07.761" level="INFO">${pay_no_after_length} = 23</msg>
<status status="PASS" endtime="20170728 18:10:07.761" starttime="20170728 18:10:07.759"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${pay_no_after_length}</arg>
<arg>23</arg>
</arguments>
<msg timestamp="20170728 18:10:07.763" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:10:07.764" starttime="20170728 18:10:07.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>pay_no表现正确</arg>
</arguments>
<msg timestamp="20170728 18:10:07.765" level="INFO">pay_no表现正确</msg>
<status status="PASS" endtime="20170728 18:10:07.766" starttime="20170728 18:10:07.765"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][7]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 18:10:07.768" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:10:07.770" starttime="20170728 18:10:07.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>amount的变化数值是正确的</arg>
</arguments>
<msg timestamp="20170728 18:10:07.772" level="INFO">amount的变化数值是正确的</msg>
<status status="PASS" endtime="20170728 18:10:07.773" starttime="20170728 18:10:07.771"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][8]}</arg>
<arg>1</arg>
</arguments>
<msg timestamp="20170728 18:10:07.776" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:10:07.777" starttime="20170728 18:10:07.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>product_code值是1，表示是艾佳币产品，表示正确</arg>
</arguments>
<msg timestamp="20170728 18:10:07.779" level="INFO">product_code值是1，表示是艾佳币产品，表示正确</msg>
<status status="PASS" endtime="20170728 18:10:07.779" starttime="20170728 18:10:07.778"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][9]}</arg>
<arg>7</arg>
</arguments>
<msg timestamp="20170728 18:10:07.781" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:10:07.782" starttime="20170728 18:10:07.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>event_code值正确</arg>
</arguments>
<msg timestamp="20170728 18:10:07.784" level="INFO">event_code值正确</msg>
<status status="PASS" endtime="20170728 18:10:07.784" starttime="20170728 18:10:07.783"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][10]}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20170728 18:10:07.787" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:10:07.788" starttime="20170728 18:10:07.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>trade_status表示执行成功</arg>
</arguments>
<msg timestamp="20170728 18:10:07.791" level="INFO">trade_status表示执行成功</msg>
<status status="PASS" endtime="20170728 18:10:07.791" starttime="20170728 18:10:07.789"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_no[0][11]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 18:10:07.794" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:10:07.794" starttime="20170728 18:10:07.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 18:10:07.796" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 18:10:07.797" starttime="20170728 18:10:07.795"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${user_id_no[0][12]}</arg>
<arg>${user_id_no[0][13]}</arg>
</arguments>
<status status="PASS" endtime="20170728 18:10:07.800" starttime="20170728 18:10:07.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>add_time和update_time时间保持一致</arg>
</arguments>
<msg timestamp="20170728 18:10:07.803" level="INFO">add_time和update_time时间保持一致</msg>
<status status="PASS" endtime="20170728 18:10:07.805" starttime="20170728 18:10:07.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表ajb_account_transaction校验成功</arg>
</arguments>
<msg timestamp="20170728 18:10:07.809" level="INFO">表ajb_account_transaction校验成功</msg>
<status status="PASS" endtime="20170728 18:10:07.809" starttime="20170728 18:10:07.807"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${user_id_no[0][0]}</arg>
</arguments>
<assign>
<var>${user_id[0][0]_transaction}</var>
</assign>
<msg timestamp="20170728 18:10:07.811" level="INFO">${user_id[0][0]_transaction} = 88889980</msg>
<status status="PASS" endtime="20170728 18:10:07.812" starttime="20170728 18:10:07.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${user_id[0][0]_transaction}</arg>
</arguments>
<msg timestamp="20170728 18:10:07.815" level="INFO">${user_id[0][0]_transaction} = 88889980</msg>
<status status="PASS" endtime="20170728 18:10:07.816" starttime="20170728 18:10:07.814"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from ajb_account_transaction where id ='${user_id_no[0][0]}'</arg>
</arguments>
<msg timestamp="20170728 18:10:07.818" level="INFO">Executing : Execute SQL String  |  delete from ajb_account_transaction where id ='88889980' </msg>
<status status="PASS" endtime="20170728 18:10:07.863" starttime="20170728 18:10:07.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>现在开始校验表account_amount</arg>
</arguments>
<msg timestamp="20170728 18:10:07.865" level="INFO">现在开始校验表account_amount</msg>
<status status="PASS" endtime="20170728 18:10:07.866" starttime="20170728 18:10:07.864"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from account_amount where account_id ='${no_user_id_account_id}'</arg>
</arguments>
<assign>
<var>${user_id_t}</var>
</assign>
<msg timestamp="20170728 18:10:07.868" level="INFO">Executing : Query  |  select * from account_amount where account_id ='6364' </msg>
<msg timestamp="20170728 18:10:07.873" level="INFO">${user_id_t} = ((12678, 6364, Decimal('1.00'), Decimal('1.00'), Decimal('0.00'), datetime.datetime(2017, 7, 28, 18, 11, 12), datetime.datetime(2017, 7, 28, 18, 11, 12), 0),)</msg>
<status status="PASS" endtime="20170728 18:10:07.875" starttime="20170728 18:10:07.867"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][2]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 18:10:07.878" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:10:07.879" starttime="20170728 18:10:07.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>total_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 18:10:07.881" level="INFO">total_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 18:10:07.881" starttime="20170728 18:10:07.880"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][3]}</arg>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 18:10:07.883" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:10:07.884" starttime="20170728 18:10:07.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>balance_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 18:10:07.885" level="INFO">balance_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 18:10:07.886" starttime="20170728 18:10:07.885"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][4]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 18:10:07.888" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:10:07.889" starttime="20170728 18:10:07.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>frozen_amount变化前后的数目正确</arg>
</arguments>
<msg timestamp="20170728 18:10:07.892" level="INFO">frozen_amount变化前后的数目正确</msg>
<status status="PASS" endtime="20170728 18:10:07.894" starttime="20170728 18:10:07.890"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${user_id_t[0][7]}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20170728 18:10:07.896" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20170728 18:10:07.897" starttime="20170728 18:10:07.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>del_flag的值是0是未删除，是正确状态</arg>
</arguments>
<msg timestamp="20170728 18:10:07.899" level="INFO">del_flag的值是0是未删除，是正确状态</msg>
<status status="PASS" endtime="20170728 18:10:07.899" starttime="20170728 18:10:07.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>表account_amount校验成功！</arg>
</arguments>
<msg timestamp="20170728 18:10:07.901" level="INFO">表account_amount校验成功！</msg>
<status status="PASS" endtime="20170728 18:10:07.902" starttime="20170728 18:10:07.900"></status>
</kw>
<kw name="Execute Sql String" library="DatabaseLibrary">
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to</doc>
<arguments>
<arg>delete from account_amount where account_id ='${no_user_id_account_id}'</arg>
</arguments>
<msg timestamp="20170728 18:10:07.903" level="INFO">Executing : Execute SQL String  |  delete from account_amount where account_id ='6364' </msg>
<status status="PASS" endtime="20170728 18:10:07.978" starttime="20170728 18:10:07.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>输入未有的user_id和正确的amount参数，会直接生成boss账户，然后表里的数据都入库成功！</arg>
</arguments>
<msg timestamp="20170728 18:10:07.982" level="INFO">输入未有的user_id和正确的amount参数，会直接生成boss账户，然后表里的数据都入库成功！</msg>
<status status="PASS" endtime="20170728 18:10:07.984" starttime="20170728 18:10:07.980"></status>
</kw>
<status status="PASS" endtime="20170728 18:10:07.987" critical="yes" starttime="20170728 18:10:07.110"></status>
</test>
<status status="PASS" endtime="20170728 18:10:07.992" starttime="20170728 18:10:06.822"></status>
</suite>
<suite source="F:\logs and reports\账户中心\艾佳币\艾佳币回收冻结.txt" id="s1-s1-s2" name="艾佳币回收冻结">
<test id="s1-s1-s2-t1" name="输入木有的user_id和正确的amount参数">
<kw name="参数配置" library="myResource">
<kw name="mysql数据库的连接" library="myResource">
<arguments>
<arg>192.168.1.32</arg>
</arguments>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>host='${mysql_host}',port=3306,user='root',passwd='aijia1234567',db='account'</arg>
</arguments>
<msg timestamp="20170728 18:10:08.039" level="INFO">Executing : Connect To Database Using Custom Params : pymysql.connect(db_api_2.connect(host='192.168.1.32',port=3306,user='root',passwd='aijia1234567',db='account')) </msg>
<status status="PASS" endtime="20170728 18:10:08.052" starttime="20170728 18:10:08.037"></status>
</kw>
<status status="PASS" endtime="20170728 18:10:08.053" starttime="20170728 18:10:08.035"></status>
</kw>
<kw name="输入拥有不同类型账户的用户user_id" library="myResource">
<arguments>
<arg>100000</arg>
<arg>100000</arg>
<arg>123456781</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${boss_user_account_id}</arg>
</arguments>
<msg timestamp="20170728 18:10:08.057" level="INFO">${boss_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170728 18:10:08.057" starttime="20170728 18:10:08.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${app_user_account_id}</arg>
</arguments>
<msg timestamp="20170728 18:10:08.059" level="INFO">${app_user_account_id} = 100000</msg>
<status status="PASS" endtime="20170728 18:10:08.060" starttime="20170728 18:10:08.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${no_user_account_id}</arg>
</arguments>
<msg timestamp="20170728 18:10:08.062" level="INFO">${no_user_account_id} = 123456781</msg>
<status status="PASS" endtime="20170728 18:10:08.196" starttime="20170728 18:10:08.061"></status>
</kw>
<status status="PASS" endtime="20170728 18:10:08.197" starttime="20170728 18:10:08.054"></status>
</kw>
<status status="PASS" endtime="20170728 18:10:08.198" starttime="20170728 18:10:08.033"></status>
</kw>
<kw name="输入入参值和接口地址" library="myResource">
<arguments>
<arg>${no_user_account_id}</arg>
<arg>1</arg>
<arg>2</arg>
<arg>http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</arg>
</arguments>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args11}</arg>
</arguments>
<msg timestamp="20170728 18:10:08.201" level="INFO">${args11} = 123456781</msg>
<status status="PASS" endtime="20170728 18:10:08.202" starttime="20170728 18:10:08.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args22}</arg>
</arguments>
<msg timestamp="20170728 18:10:08.204" level="INFO">${args22} = 1</msg>
<status status="PASS" endtime="20170728 18:10:08.205" starttime="20170728 18:10:08.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args33}</arg>
</arguments>
<msg timestamp="20170728 18:10:08.206" level="INFO">${args33} = 2</msg>
<status status="PASS" endtime="20170728 18:10:08.207" starttime="20170728 18:10:08.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args44}</arg>
</arguments>
<msg timestamp="20170728 18:10:08.211" level="INFO">${args44} = </msg>
<status status="PASS" endtime="20170728 18:10:08.211" starttime="20170728 18:10:08.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${args55}</arg>
</arguments>
<msg timestamp="20170728 18:10:08.213" level="INFO">${args55} = http://192.168.1.31:10003/ihome-api/settlement/ajbWithdrawFreeze</msg>
<status status="PASS" endtime="20170728 18:10:08.214" starttime="20170728 18:10:08.212"></status>
</kw>
<status status="PASS" endtime="20170728 18:10:08.214" starttime="20170728 18:10:08.199"></status>
</kw>
<kw name="Query" library="DatabaseLibrary">
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional</doc>
<arguments>
<arg>select * from ajb_account_open_record where user_id ='${args11}'</arg>
</arguments>
<assign>
<var>${no_user_id}</var>
</assign>
<msg timestamp="20170728 18:10:08.216" level="INFO">Executing : Query  |  select * from ajb_account_open_record where user_id ='123456781' </msg>
<msg timestamp="20170728 18:10:08.225" level="INFO">${no_user_id} = ()</msg>
<status status="PASS" endtime="20170728 18:10:08.226" starttime="20170728 18:10:08.215"></status>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<doc>Verifies that the given item is empty.</doc>
<arguments>
<arg>${no_user_id}</arg>
</arguments>
<msg timestamp="20170728 18:10:08.228" level="INFO">Length is 0</msg>
<status status="PASS" endtime="20170728 18:10:08.228" starttime="20170728 18:10:08.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>此user_id不存在</arg>
</arguments>
<msg timestamp="20170728 18:10:08.230" level="INFO">此user_id不存在</msg>
<status status="PASS" endtime="20170728 18:10:08.230" starttime="20170728 18:10:08.229"></status>
</kw>
<kw name="Data" library="wjwTestLibrary">
<arguments>
<arg>${args11}</arg>
<arg>${args22}</arg>
<arg>${args33}</arg>
<arg>${args55}</arg>
</arguments>
<assign>
<var>${data_no_user_id}</var>
</assign>
<msg timestamp="20170728 18:10:08.259" level="INFO">${data_no_user_id} = &lt;Response [500]&gt;</msg>
<status status="PASS" endtime="20170728 18:10:08.260" starttime="20170728 18:10:08.231"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data_no_user_id.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20170728 18:10:08.262" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20170728 18:10:08.263" level="FAIL">500 != 200</msg>
<status status="FAIL" endtime="20170728 18:10:08.264" starttime="20170728 18:10:08.261"></status>
</kw>
<status status="FAIL" endtime="20170728 18:10:08.265" critical="yes" starttime="20170728 18:10:08.029">500 != 200</status>
</test>
<status status="FAIL" endtime="20170728 18:10:08.266" starttime="20170728 18:10:08.005"></status>
</suite>
<status status="FAIL" endtime="20170728 18:10:08.271" starttime="20170728 18:10:06.816"></status>
</suite>
<status status="FAIL" endtime="20170728 18:10:08.276" starttime="20170728 18:10:06.617"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="1">Critical Tests</stat>
<stat fail="1" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="1" id="s1" name="账户中心" pass="1">账户中心</stat>
<stat fail="1" id="s1-s1" name="艾佳币" pass="1">账户中心.艾佳币</stat>
<stat fail="0" id="s1-s1-s1" name="艾佳币充值" pass="1">账户中心.艾佳币.艾佳币充值</stat>
<stat fail="1" id="s1-s1-s2" name="艾佳币回收冻结" pass="0">账户中心.艾佳币.艾佳币回收冻结</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20170728 18:10:07.105" level="ERROR">Error in file 'F:\logs and reports\账户中心\艾佳币\艾佳币充值.txt': Resource file '艾佳币需要的操作.txt' does not exist.</msg>
</errors>
</robot>
